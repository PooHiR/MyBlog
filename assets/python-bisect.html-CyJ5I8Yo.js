import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-DxOkGf6w.js";const e={},p=t(`<h2 id="二分查找模块-bisect" tabindex="-1"><a class="header-anchor" href="#二分查找模块-bisect"><span>二分查找模块 bisect</span></a></h2><p><code>bisect_left(a, x, lo=0, hi=len(a))</code></p><p>相当于 left_bound，返回目标值的左侧边界，其返回值的解读：</p><ul><li>解读 1：将 x 插入有序数组 a 中的最左侧索引</li><li>解读 2：a 中小于 x 的值的数量</li><li>解读 3：有序数组 a 中大于等于 x 的最小元素索引</li></ul><hr><p><code>bisect_right(a, x, lo=0, hi=len(a))</code></p><p><code>bisect(a, x, lo=0, hi=len(a))</code></p><p>⚠️ 不相当于 right_bound，返回目标值的右侧边界+1，其返回值的解读：</p><ul><li>解读 1：将 x 插入有序数组 a 中的最右侧索引</li><li>解读 2：a 中小于等于 x 的值的数量</li><li>解读 3：有序数组 a 中大于 x 的最小元素索引（返回的索引位置的值肯定不等于 x！！！</li></ul><hr><p><code>insort_left(a, x, lo=0, hi=len(a))</code></p><p>等价于 a.insert(bisect.bisect_left(a, x, lo, hi), x)</p><hr><p><code>insort_right(a, x, lo=0, hi=len(a))</code><code>insort(a, x, lo=0, hi=len(a))</code></p><p>等价于 a.insert(bisect.bisect_right(a, x, lo, hi), x)</p><hr><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#idx 0, 1, 2, 3, 4, 5, 6, 7, 8, 9</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token number">3</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># bisect(a, 3)</span>
<span class="token number">8</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token number">8</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python3-10-之后的版本新增参数-key" tabindex="-1"><a class="header-anchor" href="#python3-10-之后的版本新增参数-key"><span>python3.10 之后的版本新增参数 key</span></a></h2><p>类似 sort 的 key 参数，可以指定搜索时使用的具体的键</p><p>例子：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># leetcode #875</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">minEatingSpeed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> piles<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> h<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">canEatAll</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
            cost_time <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> pile <span class="token keyword">in</span> piles<span class="token punctuation">:</span>
                cost_time <span class="token operator">+=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>pile <span class="token operator">/</span> k<span class="token punctuation">)</span>
            <span class="token keyword">return</span> cost_time <span class="token operator">&lt;=</span> h
        <span class="token keyword">return</span> bisect_left<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>piles<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> key<span class="token operator">=</span>canEatAll<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>若使用这种方法解题，a 要包括所有的答案域，且如果使用 range，尽量使用 range(max_ans+1)的形式，若使用 range(min_ans, max_ans+1)，需要给返回的结果添加偏置 min_ans！</p></div><h2 id="在有序列表中搜索" tabindex="-1"><a class="header-anchor" href="#在有序列表中搜索"><span>在有序列表中搜索</span></a></h2><p>如何将 bisect 转换为一般的搜索方法：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Locate the leftmost value exactly equal to x&#39;</span>
    i <span class="token operator">=</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">and</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">:</span>
        <span class="token keyword">return</span> i
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_lt</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find rightmost value less than x&#39;</span>
    i <span class="token operator">=</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i<span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_le</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find rightmost value less than or equal to x&#39;</span>
    i <span class="token operator">=</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i<span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_gt</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find leftmost value greater than x&#39;</span>
    i <span class="token operator">=</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_ge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find leftmost item greater than or equal to x&#39;</span>
    i <span class="token operator">=</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[p];function i(c,l){return s(),a("div",null,o)}const k=n(e,[["render",i],["__file","python-bisect.html.vue"]]),d=JSON.parse('{"path":"/notes/language/python/python-bisect.html","title":"Python二分查找 - bisect","lang":"zh-CN","frontmatter":{"title":"Python二分查找 - bisect","order":8,"date":"2023-09-09T00:00:00.000Z","category":["笔记","API"],"tag":["Python","二分查找"],"description":"二分查找模块 bisect bisect_left(a, x, lo=0, hi=len(a)) 相当于 left_bound，返回目标值的左侧边界，其返回值的解读： 解读 1：将 x 插入有序数组 a 中的最左侧索引 解读 2：a 中小于 x 的值的数量 解读 3：有序数组 a 中大于等于 x 的最小元素索引 bisect_right(a, x, l...","head":[["meta",{"property":"og:url","content":"http://ek0wraith.top/notes/language/python/python-bisect.html"}],["meta",{"property":"og:site_name","content":"Ek0wraith"}],["meta",{"property":"og:title","content":"Python二分查找 - bisect"}],["meta",{"property":"og:description","content":"二分查找模块 bisect bisect_left(a, x, lo=0, hi=len(a)) 相当于 left_bound，返回目标值的左侧边界，其返回值的解读： 解读 1：将 x 插入有序数组 a 中的最左侧索引 解读 2：a 中小于 x 的值的数量 解读 3：有序数组 a 中大于等于 x 的最小元素索引 bisect_right(a, x, l..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Ek0wraith"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"二分查找"}],["meta",{"property":"article:published_time","content":"2023-09-09T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python二分查找 - bisect\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ek0wraith\\",\\"url\\":\\"http://ek0wraith.top/\\"}]}"]]},"headers":[{"level":2,"title":"二分查找模块 bisect","slug":"二分查找模块-bisect","link":"#二分查找模块-bisect","children":[]},{"level":2,"title":"python3.10 之后的版本新增参数 key","slug":"python3-10-之后的版本新增参数-key","link":"#python3-10-之后的版本新增参数-key","children":[]},{"level":2,"title":"在有序列表中搜索","slug":"在有序列表中搜索","link":"#在有序列表中搜索","children":[]}],"git":{},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"notes/language/python/python-bisect.md","localizedDate":"2023年9月9日","excerpt":"<h2>二分查找模块 bisect</h2>\\n<p><code>bisect_left(a, x, lo=0, hi=len(a))</code></p>\\n<p>相当于 left_bound，返回目标值的左侧边界，其返回值的解读：</p>\\n<ul>\\n<li>解读 1：将 x 插入有序数组 a 中的最左侧索引</li>\\n<li>解读 2：a 中小于 x 的值的数量</li>\\n<li>解读 3：有序数组 a 中大于等于 x 的最小元素索引</li>\\n</ul>\\n<hr>\\n<p><code>bisect_right(a, x, lo=0, hi=len(a))</code></p>\\n<p><code>bisect(a, x, lo=0, hi=len(a))</code></p>","autoDesc":true}');export{k as comp,d as data};
