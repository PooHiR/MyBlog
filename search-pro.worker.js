const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:n})=>n),bt=et(V(JSON.parse("{\"/\":{\"documentCount\":763,\"nextId\":763,\"documentIds\":{\"0\":\"1\",\"1\":\"1#关于我\",\"2\":\"1#关于博客\",\"3\":\"1#博客内容\",\"4\":\"1#最后\",\"5\":\"2\",\"6\":\"2#下载\",\"7\":\"2#版本说明\",\"8\":\"2#版本选择\",\"9\":\"2#安装\",\"10\":\"2#配置\",\"11\":\"2#java-home\",\"12\":\"2#配置方式\",\"13\":\"2#path\",\"14\":\"2#配置方式-1\",\"15\":\"2#classpath\",\"16\":\"2#配置方式-2\",\"17\":\"2#验证\",\"18\":\"3\",\"19\":\"3#一、-maven中的依赖、继承、聚合三大工程关系\",\"20\":\"3#_1、依赖\",\"21\":\"3#_2、继承\",\"22\":\"3#_3、聚合\",\"23\":\"3#二、-maven综合案例\",\"24\":\"3#_1-项目需求和结构分析\",\"25\":\"3#_2-项目搭建和统一构建\",\"26\":\"3#_1-父模块-micro-shop\",\"27\":\"3#-1\",\"28\":\"3#_2-通用模块-common-service\",\"29\":\"3#-2\",\"30\":\"3#-3\",\"31\":\"3#_3-用户模块-user-service\",\"32\":\"3#-4\",\"33\":\"3#-5\",\"34\":\"3#_4-订单模块-order-service\",\"35\":\"3#-6\",\"36\":\"4\",\"37\":\"4#项目实践-mybatis基本使用——crud综合练习\",\"38\":\"4#项目实现\",\"39\":\"4#一、数据库表创建及初始化\",\"40\":\"4#二、项目创建\",\"41\":\"4#三、编写测试类\",\"42\":\"5\",\"43\":\"5#什么是-docsify\",\"44\":\"5#概述\",\"45\":\"5#特性\",\"46\":\"5#快速开始\",\"47\":\"5#安装\",\"48\":\"5#初始化\",\"49\":\"5#本地预览\",\"50\":\"5#部署\",\"51\":\"5#多页文档\",\"52\":\"5#定制侧边栏\",\"53\":\"5#嵌套的侧边栏\",\"54\":\"5#页面标题\",\"55\":\"5#忽略副标题\",\"56\":\"5#导航栏\",\"57\":\"5#html-方式\",\"58\":\"5#markdown\",\"59\":\"5#嵌套\",\"60\":\"5#封面\",\"61\":\"5#自定义背景\",\"62\":\"5#多个封面\",\"63\":\"5#配置项\",\"64\":\"5#el\",\"65\":\"5#基本用法\",\"66\":\"5#name\",\"67\":\"5#基本用法-1\",\"68\":\"5#repo\",\"69\":\"5#基本用法-2\",\"70\":\"5#homepage\",\"71\":\"5#基本用法-3\",\"72\":\"5#auto2top\",\"73\":\"5#基本用法-4\",\"74\":\"5#coverpage\",\"75\":\"5#基本用法-5\",\"76\":\"5#其他用法\",\"77\":\"5#loadsidebar\",\"78\":\"5#基本用法-6\",\"79\":\"5#loadnavbar\",\"80\":\"5#基本用法-7\",\"81\":\"5#alias\",\"82\":\"5#基本用法-8\",\"83\":\"5#submaxlevel\",\"84\":\"5#基本用法-9\",\"85\":\"5#fallbacklanguages\",\"86\":\"5#基本用法-10\",\"87\":\"5#notfoundpage\",\"88\":\"5#基本用法-11\",\"89\":\"5#其他用法-1\",\"90\":\"5#主题\",\"91\":\"5#其他主题\",\"92\":\"5#插件\",\"93\":\"5#全文搜索-search\",\"94\":\"5#图片缩放-zoom-image\",\"95\":\"5#字数统计\",\"96\":\"5#分页导航\",\"97\":\"5#emoji\",\"98\":\"5#更多插件\",\"99\":\"5#自定义插件\",\"100\":\"5#markdown-配置\",\"101\":\"5#mermaid\",\"102\":\"5#代码高亮\",\"103\":\"5#更多支持\",\"104\":\"5#docsify-cli\",\"105\":\"5#初始化命令-init\",\"106\":\"5#运行命令-serve\",\"107\":\"5#生成命令-generate\",\"108\":\"5#其他命令\",\"109\":\"5#官方文档\",\"110\":\"6\",\"111\":\"6#项目实践-基于注解-配置类方式整合三层架构组件\",\"112\":\"6#项目实现\",\"113\":\"6#项目目录\",\"114\":\"6#一、数据库\",\"115\":\"6#_1、添加新的数据库-usermis\",\"116\":\"6#二、项目创建\",\"117\":\"6#_1、配置xml文件-导入spring相关依赖和需求相关技术的依赖\",\"118\":\"6#_2、构建三层架构-并编写相关代码-创建接口并重写方法-然后使用spring框架标签进行托管。\",\"119\":\"6#_3、ioc配置\",\"120\":\"6#_4、jdbc配置\",\"121\":\"6#_5、基于配置类方式管理组件bean-配置-注解\",\"122\":\"6#三、spring—test测试\",\"123\":\"6#_1、导入依赖组件\",\"124\":\"6#_2、构建元件\",\"125\":\"6#_3、编写测试类\",\"126\":\"6#四、执行测试-查看是否通过\",\"127\":\"7\",\"128\":\"7#博客相关\",\"129\":\"7#其它资源\",\"130\":\"8\",\"131\":\"8#coming-soon\",\"132\":\"9\",\"133\":\"9#coming-soon\",\"134\":\"10\",\"135\":\"10#maven-是什么\",\"136\":\"10#约定优于配置\",\"137\":\"10#pom-是什么\",\"138\":\"10#pom-基础知识\",\"139\":\"10#maven-坐标\",\"140\":\"10#maven-构件\",\"141\":\"10#pom-关系\",\"142\":\"10#依赖\",\"143\":\"10#依赖版本规范\",\"144\":\"10#依赖冲突\",\"145\":\"10#排除依赖\",\"146\":\"10#继承\",\"147\":\"10#super-pom\",\"148\":\"10#依赖管理\",\"149\":\"10#聚合-多模块\",\"150\":\"10#maven-插件\",\"151\":\"10#插件目标\",\"152\":\"10#通用写法\",\"153\":\"10#执行插件目标\",\"154\":\"10#插件绑定\",\"155\":\"10#内置绑定\",\"156\":\"10#自定义绑定\",\"157\":\"10#maven-仓库\",\"158\":\"10#仓库的分类\",\"159\":\"10#仓库的配置\",\"160\":\"10#依赖包的搜索顺序\",\"161\":\"10#maven-构建生命周期\",\"162\":\"10#特性\",\"163\":\"10#构建阶段的依赖性\",\"164\":\"10#生命周期的独立性\",\"165\":\"10#clean-生命周期\",\"166\":\"10#default-生命周期\",\"167\":\"10#site-生命周期\",\"168\":\"10#maven-profile\",\"169\":\"10#profile-的类型\",\"170\":\"10#profile-的声明\",\"171\":\"10#profile-的激活\",\"172\":\"11\",\"173\":\"11#工欲善其事-必先利其器\",\"174\":\"12\",\"175\":\"12#coming-soon\",\"176\":\"13\",\"177\":\"13#集合是什么\",\"178\":\"13#collection\",\"179\":\"13#list\",\"180\":\"13#list-的实现类\",\"181\":\"13#arraylist\",\"182\":\"13#linkedlist\",\"183\":\"13#arraylist-与-linkedlist-的区别\",\"184\":\"13#set\",\"185\":\"13#queue\",\"186\":\"13#map\",\"187\":\"13#hashmap\",\"188\":\"13#为什么-hashmap-的长的是-2-的幂次方\",\"189\":\"13#初始化-hashmap-时指定的大小等于它创建后的大小吗\",\"190\":\"13#hashmap-多线程操作导致死循环\",\"191\":\"13#hashmap-为什么多线程不安全\",\"192\":\"13#hashmap-的遍历方式\",\"193\":\"13#hashtable\",\"194\":\"14\",\"195\":\"14#基本概念\",\"196\":\"14#进程、线程、纤程-协程-虚拟线程\",\"197\":\"14#并发、并行、串行\",\"198\":\"14#上下文切换\",\"199\":\"14#java-中的线程\",\"200\":\"14#如何创建线程\",\"201\":\"14#线程的生命周期和状态\",\"202\":\"14#thread-类中的方法\",\"203\":\"14#start-和-run-方法\",\"204\":\"14#sleep-和-wait-的区别\",\"205\":\"14#jmm-内存模型\",\"206\":\"14#jmm-的原子操作\",\"207\":\"14#jmm-缓存不一致问题\",\"208\":\"14#volatile-缓存可见性实现原理\",\"209\":\"14#指令重排序与内存屏障\",\"210\":\"14#指令重排序\",\"211\":\"14#内存屏障\",\"212\":\"14#锁机制\",\"213\":\"14#锁的分类\",\"214\":\"14#悲观锁与乐观锁\",\"215\":\"14#自旋锁\",\"216\":\"14#可重入锁-递归锁\",\"217\":\"14#公平锁和非公平锁\",\"218\":\"14#synchronized-锁\",\"219\":\"14#synchronized-的实现原理\",\"220\":\"14#synchronized-的锁升级\",\"221\":\"14#cas-锁机制\",\"222\":\"14#cas-和-syncronized-的比较\",\"223\":\"14#cas-存在的问题\",\"224\":\"14#原子类\",\"225\":\"14#aqs\",\"226\":\"14#aqs-是什么\",\"227\":\"14#aqs-的两种功能\",\"228\":\"14#aqs-的相关方法\",\"229\":\"14#子类实现的方法-aqs-不做处理-模版方法\",\"230\":\"14#通用实现的方法-aqs-本身实现的方法\",\"231\":\"15\",\"232\":\"15#java-是什么\",\"233\":\"15#主要特性\",\"234\":\"16\",\"235\":\"16#jvm-是什么\",\"236\":\"16#类加载器\",\"237\":\"16#运行时数据区域\",\"238\":\"16#程序计数器\",\"239\":\"16#java-虚拟机栈\",\"240\":\"16#本地方法栈\",\"241\":\"16#jni-的适用场景\",\"242\":\"16#jni-的副作用\",\"243\":\"16#java-堆\",\"244\":\"16#方法区\",\"245\":\"16#常量池\",\"246\":\"16#class-常量池\",\"247\":\"16#运行时常量池\",\"248\":\"16#字符串常量池\",\"249\":\"16#不同-java-版本实现的字符串常量池\",\"250\":\"16#执行引擎\",\"251\":\"17\",\"252\":\"17#spi-是什么\",\"253\":\"17#与-api-的区别\",\"254\":\"17#实现原理\",\"255\":\"17#java-spi-的缺点\",\"256\":\"17#应用场景\",\"257\":\"18\",\"258\":\"18#java-是什么\",\"259\":\"18#主要特性\",\"260\":\"19\",\"261\":\"20\",\"262\":\"21\",\"263\":\"21#asyncio-—-异步-i-o-协程\",\"264\":\"21#协程与任务-1\",\"265\":\"21#协程\",\"266\":\"21#可等待对象-awaitable-objects\",\"267\":\"21#协程-1\",\"268\":\"21#任务\",\"269\":\"21#futures\",\"270\":\"21#运行-asyncio-程序\",\"271\":\"21#创建任务\",\"272\":\"21#休眠\",\"273\":\"21#并发运行任务\",\"274\":\"21#屏蔽取消操作\",\"275\":\"21#超时\",\"276\":\"21#简单等待\",\"277\":\"21#在线程中运行\",\"278\":\"21#跨线程调度\",\"279\":\"21#内省\",\"280\":\"21#task-对象\",\"281\":\"21#stream-流-2\",\"282\":\"21#stream-函数\",\"283\":\"21#unix-套接字-socket\",\"284\":\"21#streamreader-与-streamwriter\",\"285\":\"21#例子-echo-服务器与客户端\",\"286\":\"21#同步原语-3\",\"287\":\"21#lock\",\"288\":\"21#event\",\"289\":\"21#condition\",\"290\":\"21#semaphore\",\"291\":\"21#boundedsemaphore\",\"292\":\"21#队列集合-4\",\"293\":\"21#queue\",\"294\":\"21#优先级队列\",\"295\":\"21#后进先出队列\",\"296\":\"21#例子\",\"297\":\"21#事件循环-5\",\"298\":\"21#前言\",\"299\":\"21#高层级-api-索引-6\",\"300\":\"21#任务-1\",\"301\":\"21#队列集\",\"302\":\"21#子进程集\",\"303\":\"21#流\",\"304\":\"21#同步\",\"305\":\"21#异常\",\"306\":\"21#关于-never-awaited-协程\",\"307\":\"21@0\",\"308\":\"21@1\",\"309\":\"22\",\"310\":\"22#二分查找模块-bisect\",\"311\":\"22#python3-10-之后的版本新增参数-key\",\"312\":\"22#在有序列表中搜索\",\"313\":\"22@0\",\"314\":\"22@1\",\"315\":\"23\",\"316\":\"23#多进程程序例子\",\"317\":\"23#python-中的三种并发编程方式\",\"318\":\"23#三种方式-多线程-thread-、多进程-process-、协程-coroutine\",\"319\":\"23#什么是-cpu-密集型计算、io-密集型计算\",\"320\":\"23#多线程、多进程、协程的对比\",\"321\":\"23#怎样根据任务选择对应技术\",\"322\":\"23#全局解释器锁-gil-global-interpreter-lock\",\"323\":\"23#python-多线程代码\",\"324\":\"23#直接创建线程\",\"325\":\"23#使用线程池threadpoolexecutor\",\"326\":\"23#python-多进程代码\",\"327\":\"23#多进程优雅退出\",\"328\":\"23#线程池原理\",\"329\":\"23#线程池的原理\",\"330\":\"23#特点\",\"331\":\"23#优点\",\"332\":\"23#协程的原理以及代码\",\"333\":\"23#协程的原理\",\"334\":\"23#协程的使用以及异步-io\",\"335\":\"23#协程并发度的控制\",\"336\":\"23#信号量-semaphore\",\"337\":\"23@0\",\"338\":\"23@1\",\"339\":\"24\",\"340\":\"24#列表-list\",\"341\":\"24#列表方法\",\"342\":\"24#列表脚本操作符\",\"343\":\"24#列表截取\",\"344\":\"24#双向队列-deque\",\"345\":\"24#方法\",\"346\":\"24#recipes\",\"347\":\"24#_1-用于实现-tail-程序\",\"348\":\"24#_2-用于维持一个定长的近期添加元素序列\",\"349\":\"24#_3-实现一个-round-robin-scheduler\",\"350\":\"24#_4-删除第-n-个元素\",\"351\":\"24#最小堆-heapq\",\"352\":\"24#python-如何实现最大堆\",\"353\":\"24#计数器-counter\",\"354\":\"24#随机队列-randomizedqueue\",\"355\":\"24@0\",\"356\":\"24@1\",\"357\":\"25\",\"358\":\"25@0\",\"359\":\"25@1\",\"360\":\"26\",\"361\":\"26@0\",\"362\":\"26@1\",\"363\":\"27\",\"364\":\"27#基本排序\",\"365\":\"27#key-函数\",\"366\":\"27#operator-模块函数\",\"367\":\"27#升序和降序\",\"368\":\"27#排序稳定性和排序复杂度\",\"369\":\"27#使用装饰-排序-去装饰的旧方法\",\"370\":\"27#使用-cmp-参数的旧方法\",\"371\":\"27@0\",\"372\":\"27@1\",\"373\":\"28\",\"374\":\"28#python-资料汇总\",\"375\":\"29\",\"376\":\"29#容器介绍\",\"377\":\"29#什么是容器\",\"378\":\"29#先来看看容器较为官方的解释\",\"379\":\"29#再来看看容器较为通俗的解释\",\"380\":\"29#容器-vs-虚拟机\",\"381\":\"29#docker-介绍\",\"382\":\"29#什么是-docker\",\"383\":\"29#docker-容器的特点\",\"384\":\"29#为什么要用-docker\",\"385\":\"29#docker-基本概念\",\"386\":\"29#镜像-image-一个特殊的文件系统\",\"387\":\"29#容器-container-镜像运行时的实体\",\"388\":\"29#仓库-repository-集中存放镜像文件的地方\",\"389\":\"29#image、container-和-repository-的关系\",\"390\":\"29#build-ship-and-run\",\"391\":\"29#docker-常见命令\",\"392\":\"29#基本命令\",\"393\":\"29#拉取镜像\",\"394\":\"29#构建镜像\",\"395\":\"29#删除镜像\",\"396\":\"29#镜像推送\",\"397\":\"29#docker-数据管理\",\"398\":\"29#docker-compose\",\"399\":\"29#什么是-docker-compose-有什么用\",\"400\":\"29#docker-compose-文件基本结构\",\"401\":\"29#docker-compose-常见命令\",\"402\":\"29#启动\",\"403\":\"29#暂停\",\"404\":\"29#查看\",\"405\":\"29#其他\",\"406\":\"29#docker-底层原理\",\"407\":\"29#总结\",\"408\":\"29#参考\",\"409\":\"29@0\",\"410\":\"29@1\",\"411\":\"30\",\"412\":\"30#版本控制\",\"413\":\"30#什么是版本控制\",\"414\":\"30#为什么要版本控制\",\"415\":\"30#本地版本控制系统\",\"416\":\"30#集中化的版本控制系统\",\"417\":\"30#分布式版本控制系统\",\"418\":\"30#认识-git\",\"419\":\"30#git-简史\",\"420\":\"30#git-与其他版本管理系统的主要区别\",\"421\":\"30#git-的三种状态\",\"422\":\"30#git-使用快速入门\",\"423\":\"30#获取-git-仓库\",\"424\":\"30#记录每次更新到仓库\",\"425\":\"30#一个好的-git-提交消息\",\"426\":\"30#推送改动到远程仓库\",\"427\":\"30#远程仓库的移除与重命名\",\"428\":\"30#查看提交历史\",\"429\":\"30#撤销操作\",\"430\":\"30#分支\",\"431\":\"30#学习资料推荐\",\"432\":\"30@0\",\"433\":\"30@1\",\"434\":\"31\",\"435\":\"31#_1-简介\",\"436\":\"31#_2-命令\",\"437\":\"31#_2-1-top\",\"438\":\"31#_2-1-1-简介\",\"439\":\"31#_2-1-2-语法\",\"440\":\"31#_2-1-3-字段说明\",\"441\":\"31#_2-1-4-实例\",\"442\":\"31#_2-1-4-1-默认top\",\"443\":\"31#_2-2-mpstat\",\"444\":\"31#_2-2-1-简介\",\"445\":\"31#_2-2-2-语法\",\"446\":\"31#_2-2-3-示例\",\"447\":\"32\",\"448\":\"32#_1-简介\",\"449\":\"32#_2-监控命令\",\"450\":\"32#_2-1-df\",\"451\":\"32#_2-1-1-简介\",\"452\":\"32#_2-1-2-语法\",\"453\":\"32#_2-1-3-示例\",\"454\":\"32#_2-1-4-tldr-中的介绍\",\"455\":\"32#_2-2-iostat\",\"456\":\"32#_2-2-1-简介\",\"457\":\"32#_2-2-2-语法\",\"458\":\"32#_2-2-3-字段说明\",\"459\":\"32#_2-2-4-示例\",\"460\":\"32#_2-3-iotop\",\"461\":\"32#_2-3-1-简介\",\"462\":\"32#_2-3-2-语法\",\"463\":\"32#_2-3-3-iotop常用快捷键\",\"464\":\"33\",\"465\":\"33#_1-简介\",\"466\":\"33#_2-监控命令\",\"467\":\"33#_2-1-free\",\"468\":\"33#_2-1-1-语法\",\"469\":\"33#_2-1-2-字段说明\",\"470\":\"33#_2-1-3-实例\",\"471\":\"33#_2-1-3-1-显示内存使用情况\",\"472\":\"33#_2-1-3-2-以合适的单位显示内存使用情况\",\"473\":\"33#_2-1-3-3-以总和的形式显示内存的使用信息\",\"474\":\"33#_2-1-3-4-周期性的查询内存使用信息\",\"475\":\"33#_2-1-4-tldr-中的介绍\",\"476\":\"33#_2-2-vmstat\",\"477\":\"33#_2-2-1-简介\",\"478\":\"33#_2-2-2-语法\",\"479\":\"33#_2-2-3-字段说明\",\"480\":\"33#_2-2-4-实例\",\"481\":\"34\",\"482\":\"34#_1-简介\",\"483\":\"34#_2-监控命令\",\"484\":\"34#_2-1-netstat\",\"485\":\"34#_2-1-1-简介\",\"486\":\"34#_2-1-2-常用实例\",\"487\":\"34#_2-1-3-tldr-中的介绍\",\"488\":\"34#_2-1-4-示例\",\"489\":\"34#_2-1-4-1-列出所有端口-包含tcp和udp\",\"490\":\"34#_2-1-4-2-列出所有tcp端口\",\"491\":\"34#_2-1-4-3-列出所有udp端口\",\"492\":\"34#_2-1-4-4-找出程序运行的端口\",\"493\":\"34#_2-1-4-5-找出运行在指定端口的进程\",\"494\":\"34#_2-1-4-6-通过端口找进程id\",\"495\":\"34#_2-2-sar\",\"496\":\"34#_2-2-1-简介\",\"497\":\"34#_2-2-2-字段说明\",\"498\":\"34#_2-2-3-示例\",\"499\":\"34#参考文章\",\"500\":\"35\",\"501\":\"35#_1-简介\",\"502\":\"35#_2-命令\",\"503\":\"35#_2-1-ps\",\"504\":\"35#_2-1-1-简介\",\"505\":\"35#_2-1-2-语法\",\"506\":\"35#_2-1-3-字段含义\",\"507\":\"35#_2-1-4-tldr-文档\",\"508\":\"35#_2-1-5-常见用法\",\"509\":\"35#_2-1-5-1-显示所有运行的进程\",\"510\":\"35#_2-1-5-2-显示所有进程基本信息\",\"511\":\"35#_2-1-5-3-搜索与字符串匹配的进程\",\"512\":\"35#_2-1-5-4-查看cpu-资源的使用量对进程进行排序\",\"513\":\"35#_2-1-5-4-其他用法\",\"514\":\"36\",\"515\":\"36#_1-简介\",\"516\":\"36#_2-内存监控\",\"517\":\"36#_2-1-free\",\"518\":\"36#_2-1-1-语法\",\"519\":\"36#_2-1-2-字段说明\",\"520\":\"36#_2-1-3-实例\",\"521\":\"36#_2-1-3-1-显示内存使用情况\",\"522\":\"36#_2-1-3-2-以合适的单位显示内存使用情况\",\"523\":\"36#_2-1-3-3-以总和的形式显示内存的使用信息\",\"524\":\"36#_2-1-3-4-周期性的查询内存使用信息\",\"525\":\"36#_2-2-vmstat\",\"526\":\"36#_2-2-1-简介\",\"527\":\"36#_2-2-2-语法\",\"528\":\"36#_2-2-3-字段说明\",\"529\":\"36#_2-2-4-实例\",\"530\":\"36#_3-cpu-监控\",\"531\":\"36#_3-1-top\",\"532\":\"36#_3-1-1-简介\",\"533\":\"36#_3-1-2-语法\",\"534\":\"36#_3-1-3-字段说明\",\"535\":\"36#_3-1-4-实例\",\"536\":\"36#_3-1-4-1-默认top\",\"537\":\"36#_3-2-mpstat\",\"538\":\"36#_3-2-1-简介\",\"539\":\"36#_3-2-2-语法\",\"540\":\"36#_2-2-3-示例\",\"541\":\"36#_4-网络监控\",\"542\":\"36#_4-1-netstat\",\"543\":\"36#_4-1-1-简介\",\"544\":\"36#_4-1-2-常用实例\",\"545\":\"36#_4-2-sar\",\"546\":\"36#_4-2-1-简介\",\"547\":\"36#_4-2-2-字段说明\",\"548\":\"36#_4-2-3-示例\",\"549\":\"36#_5-磁盘监控\",\"550\":\"36#_5-1-df\",\"551\":\"36#_5-1-1-简介\",\"552\":\"36#_5-1-2-语法\",\"553\":\"36#_5-1-3-示例\",\"554\":\"36#_5-2-iostat\",\"555\":\"36#_5-2-1-简介\",\"556\":\"36#_5-2-2-语法\",\"557\":\"36#_5-2-3-字段说明\",\"558\":\"36#_5-2-4-示例\",\"559\":\"36#_5-3-iotop\",\"560\":\"36#_5-3-1-简介\",\"561\":\"36#_5-3-2-语法\",\"562\":\"36#_5-3-3-iotop常用快捷键\",\"563\":\"36#_6-进程\",\"564\":\"36#_6-1-ps\",\"565\":\"36#_7-系统监控全能工具\",\"566\":\"36#_7-1-glances\",\"567\":\"36#_7-2-dstat\",\"568\":\"36#参考文章\",\"569\":\"37\",\"570\":\"37#_1-简介\",\"571\":\"37#_2-shell-编程快速入门\",\"572\":\"37#_3-shell-变量\",\"573\":\"37#_3-1-定义\",\"574\":\"37#_3-2-基本语法\",\"575\":\"37#_3-3-将命令返回值赋给变量-重点\",\"576\":\"37#_4-shell-环境变量\",\"577\":\"37#_4-1-定义\",\"578\":\"37#_4-2-基本语法\",\"579\":\"37#_4-3-位置参数变量\",\"580\":\"37#_4-4-实例\",\"581\":\"37#_5-预定义变量\",\"582\":\"37#_5-1-定义\",\"583\":\"37#_5-2-基本语法\",\"584\":\"37#_5-3-实例\",\"585\":\"37#_6-运算符\",\"586\":\"37#_6-1-基本语法\",\"587\":\"37#_6-2-实例\",\"588\":\"37#_7-条件判断\",\"589\":\"37#_7-1-基本语法\",\"590\":\"37#_7-2-实例\",\"591\":\"37#_9-流程控制\",\"592\":\"37#_9-1-if-判断\",\"593\":\"37#_9-1-1-基本语法\",\"594\":\"37#_9-1-2-实例\",\"595\":\"37#_9-2-case-分支\",\"596\":\"37#_9-2-1-基本语法\",\"597\":\"37#_9-2-2-实例\",\"598\":\"37#_9-3-for-循环\",\"599\":\"37#_9-3-1-基本语法\",\"600\":\"37#_9-3-2-实例\",\"601\":\"37#_9-4-while-循环\",\"602\":\"37#_9-4-1基本语法\",\"603\":\"37#_9-4-2实例\",\"604\":\"37#_10-读取控制台输入\",\"605\":\"37#_10-1-基本语法\",\"606\":\"37#_10-2-实例\",\"607\":\"37#_11-函数\",\"608\":\"37#_11-1系统函数\",\"609\":\"37#_11-1-1-basename\",\"610\":\"37#_11-1-2-dirname\",\"611\":\"37#_11-2-自定义函数\",\"612\":\"37#_11-2-1-基本语法\",\"613\":\"37#_11-2-2-实例\",\"614\":\"37#参考文章\",\"615\":\"37@0\",\"616\":\"38\",\"617\":\"38#关系的三个范式是什么\",\"618\":\"38#mysql中varchar和char的区别是什么\",\"619\":\"38#join和left-join的区别\",\"620\":\"38#sql怎么实现模糊查询\",\"621\":\"38#select的执行过程\",\"622\":\"38#update的执行过程\",\"623\":\"38#count性能比较\",\"624\":\"38#drop、truncate和delete的区别\",\"625\":\"38#mysql会出现死锁吗-怎么检测死锁\",\"626\":\"39\",\"627\":\"39#mysql之事务的四大特性-acid\",\"628\":\"39#并发事务会出现什么问题\",\"629\":\"39#mysql的事务隔离级别\",\"630\":\"39#在不同事务隔离级别下会发生什么现象\",\"631\":\"39#mvvc实现原理\",\"632\":\"39#幻读是如何解决的\",\"633\":\"39#读提交怎么实现的\",\"634\":\"40\",\"635\":\"40#http和https的区别\",\"636\":\"40#https的加密与认证过程\",\"637\":\"40#clienthello\",\"638\":\"40#severhello\",\"639\":\"40#客户端回应\",\"640\":\"40#服务端回应\",\"641\":\"40#https一定安全可靠吗\",\"642\":\"40#http状态码的含义\",\"643\":\"40#http缓存有哪些实现方式\",\"644\":\"40#http1-0、http1-1、http2-0和http3-0的区别\",\"645\":\"40#http1-0\",\"646\":\"40#http1-1\",\"647\":\"40#http2-0\",\"648\":\"40#http3-0-quic\",\"649\":\"40#quic协议的概念和特点\",\"650\":\"40#概念\",\"651\":\"40#特点\",\"652\":\"40#quic如何保证可靠传输\",\"653\":\"40#http的get和post方法区别\",\"654\":\"40#get请求可以带body吗\",\"655\":\"40#既然有http协议-为什么还要有rpc\",\"656\":\"40#什么是xss攻击-有什么解决办法\",\"657\":\"40#分类\",\"658\":\"40#危害\",\"659\":\"40#防范\",\"660\":\"40#什么是csrf攻击-有什么解决办法\",\"661\":\"40#概念-1\",\"662\":\"40#防范-1\",\"663\":\"40#中间人攻击以及如何防范\",\"664\":\"40#概念-2\",\"665\":\"40#防范-2\",\"666\":\"41\",\"667\":\"41#dns查询服务器的基本流程\",\"668\":\"41#dns采用tcp还是udp-为什么\",\"669\":\"41#dns劫持是什么-解决办法\",\"670\":\"41#概念\",\"671\":\"41#解决方法\",\"672\":\"41#浏览器输入一个url到显示器显示的过程\",\"673\":\"41#ping是怎么工作的\",\"674\":\"41#cookie和session的关系和区别是什么\",\"675\":\"41#cookie\",\"676\":\"41#session\",\"677\":\"41#差别\",\"678\":\"41#ipv4和ipv6的区别\",\"679\":\"41#什么是跨域-什么情况下会发生跨域请求\",\"680\":\"41#概念-1\",\"681\":\"41#解决方法-1\",\"682\":\"42\",\"683\":\"42#osi的7层网络模型\",\"684\":\"42#tcp-ip的四层网络模型\",\"685\":\"42#五层因特网协议栈\",\"686\":\"43\",\"687\":\"43#tcp的头部结构\",\"688\":\"43#tcp如何保证可靠传输\",\"689\":\"43#校验和\",\"690\":\"43#序列号-确认应答\",\"691\":\"43#超时重传\",\"692\":\"43#连接管理\",\"693\":\"43#流量控制-滑动窗口控制\",\"694\":\"43#快速重传\",\"695\":\"43#拥塞控制\",\"696\":\"43#避免拥塞算法\",\"697\":\"43#拥塞发生\",\"698\":\"43#快速恢复\",\"699\":\"43#tcp的三次握手\",\"700\":\"43#tcp为什么要三次握手\",\"701\":\"43#tcp的三次握手丢了\",\"702\":\"43#tcp为什么不是两次握手\",\"703\":\"43#避免历史连接\",\"704\":\"43#同步双方初始序列号\",\"705\":\"43#tcp的四次挥手\",\"706\":\"43#tcp为什么要四次挥手\",\"707\":\"43#在fin-wait-2状态下-是如何处理收到的乱序到-fin-报文-然后tcp连接又是什么时候才进入到time-wait状态\",\"708\":\"43#tcp的四次挥手丢了\",\"709\":\"43#tcp的延迟应答和累计应答\",\"710\":\"43#tcp会有三次挥手出现吗\",\"711\":\"43#tcp的msl\",\"712\":\"43#已经建立了连接-客户端突然出现故障了会怎样\",\"713\":\"43#什么时候用长连接-短连接\",\"714\":\"43#tcp的半连接队列和全连接队列\",\"715\":\"43#什么是syn攻击-如何避免\",\"716\":\"43#概念\",\"717\":\"43#避免方法\",\"718\":\"43#time-wait作用-过多如何解决\",\"719\":\"43#作用\",\"720\":\"43#危害\",\"721\":\"43#避免方法-1\",\"722\":\"43#time-wait状态为什么需要经过2msl\",\"723\":\"43#close-wait状态过多如何解决\",\"724\":\"43#tcp和udp的区别\",\"725\":\"43#粘包和拆包问题的解决办法\",\"726\":\"43#概念-1\",\"727\":\"43#解决办法\",\"728\":\"43#tcp的keepalive和http的-keepalive-的区别\",\"729\":\"43#ip层会分片-为什么tcp层还需要mss呢\",\"730\":\"44\",\"731\":\"44#讲一讲什么是操作系统\",\"732\":\"44#讲一讲冯诺依曼结构\",\"733\":\"44#讲一讲外中断与异常\",\"734\":\"44#cpu地址翻译是怎样实现的\",\"735\":\"44#介绍一下现代cpu指令周期与指令类型\",\"736\":\"44#讲一讲tlb\",\"737\":\"44#什么是局部性原理\",\"738\":\"44#讲一讲用户态与内核态-他们之间怎么切换的\",\"739\":\"44#讲一讲cpu缓存\",\"740\":\"44#cpu-l1-l2-l3多级缓存的基本作用\",\"741\":\"44#讲一讲cpu的缓存一致性\",\"742\":\"44#讲一讲缓存一致性中的mesi协议\",\"743\":\"44#讲一讲伪共享问题\",\"744\":\"44#程序执行的基本过程\",\"745\":\"44#常用的linux命令\",\"746\":\"44#linux页大小是多少\",\"747\":\"44#linux下如何查看cpu荷载-正在运行的线程-某个端口对应的进程\",\"748\":\"44#linux下如何排查cpu以及内存占用过多\",\"749\":\"44#linux如何查看实时的滚动日志\",\"750\":\"44#traceroute命令的原理\",\"751\":\"44#ascii-unicode-utf-8的区别\",\"752\":\"45\",\"753\":\"46\",\"754\":\"47\",\"755\":\"48\",\"756\":\"49\",\"757\":\"50\",\"758\":\"51\",\"759\":\"52\",\"760\":\"53\",\"761\":\"54\",\"762\":\"55\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,12],\"2\":[1,25],\"3\":[1,10],\"4\":[1,2],\"5\":[1],\"6\":[1],\"7\":[1,34],\"8\":[1,89],\"9\":[1,28],\"10\":[1],\"11\":[2,9],\"12\":[1,25],\"13\":[1,7],\"14\":[1,66],\"15\":[1,31],\"16\":[1,36],\"17\":[1,48],\"18\":[1],\"19\":[4,16],\"20\":[2,42],\"21\":[2,24],\"22\":[2,25],\"23\":[2],\"24\":[2,35],\"25\":[2],\"26\":[1,2],\"27\":[1,119],\"28\":[1,2],\"29\":[1],\"30\":[1,108],\"31\":[1,3],\"32\":[1,73],\"33\":[1],\"34\":[1,3],\"35\":[1,78],\"36\":[2],\"37\":[2,9],\"38\":[1],\"39\":[2,90],\"40\":[2,234],\"41\":[2,232],\"42\":[1],\"43\":[2,1],\"44\":[1,15],\"45\":[1,14],\"46\":[1,2],\"47\":[1,6],\"48\":[1,23],\"49\":[1,12],\"50\":[1,49],\"51\":[1,20],\"52\":[1,13],\"53\":[1,31],\"54\":[1,16],\"55\":[1,17],\"56\":[1,7],\"57\":[2,28],\"58\":[1,9],\"59\":[1,34],\"60\":[1,6],\"61\":[1,32],\"62\":[1,16],\"63\":[1],\"64\":[1,14],\"65\":[1,10],\"66\":[1,8],\"67\":[1,31],\"68\":[1,13],\"69\":[1,34],\"70\":[1,9],\"71\":[1,39],\"72\":[1,6],\"73\":[1,25],\"74\":[1,10],\"75\":[1,52],\"76\":[1,19],\"77\":[1,9],\"78\":[1,42],\"79\":[1,6],\"80\":[1,33],\"81\":[1,12],\"82\":[1,22],\"83\":[1,7],\"84\":[1,14],\"85\":[1,20],\"86\":[1,7],\"87\":[1,8],\"88\":[1,9],\"89\":[1,16],\"90\":[1,29],\"91\":[1,6],\"92\":[1],\"93\":[2,104],\"94\":[3,25],\"95\":[1,33],\"96\":[1,15],\"97\":[1,36],\"98\":[1,3],\"99\":[1,2],\"100\":[2,20],\"101\":[1,57],\"102\":[1,43],\"103\":[1,9],\"104\":[2],\"105\":[2,50],\"106\":[2,26],\"107\":[2,19],\"108\":[1,10],\"109\":[1,2],\"110\":[1],\"111\":[2,42],\"112\":[1],\"113\":[1,3],\"114\":[2],\"115\":[4,90],\"116\":[2],\"117\":[3,119],\"118\":[6,86],\"119\":[2,5],\"120\":[2,14],\"121\":[4,90],\"122\":[3],\"123\":[2,17],\"124\":[2,82],\"125\":[2,65],\"126\":[3,64],\"127\":[1],\"128\":[1,9],\"129\":[1,2],\"130\":[1],\"131\":[2],\"132\":[2],\"133\":[2],\"134\":[2],\"135\":[2,69],\"136\":[1,14],\"137\":[2,100],\"138\":[2],\"139\":[2,46],\"140\":[2,40],\"141\":[2],\"142\":[1,128],\"143\":[1,44],\"144\":[1,43],\"145\":[1,34],\"146\":[1,94],\"147\":[2,24],\"148\":[1,6],\"149\":[3,109],\"150\":[2,36],\"151\":[1,12],\"152\":[1,11],\"153\":[1,17],\"154\":[1,4],\"155\":[1,47],\"156\":[1,101],\"157\":[2,15],\"158\":[1,51],\"159\":[1,66],\"160\":[1,12],\"161\":[2,28],\"162\":[1],\"163\":[1,7],\"164\":[1,8],\"165\":[2,26],\"166\":[2,90],\"167\":[2,16],\"168\":[2,19],\"169\":[2,29],\"170\":[2,73],\"171\":[2,101],\"172\":[1],\"173\":[2],\"174\":[3],\"175\":[2],\"176\":[2],\"177\":[1,51],\"178\":[1,174],\"179\":[1,67],\"180\":[2],\"181\":[1,233],\"182\":[1,76],\"183\":[4,48],\"184\":[1,4],\"185\":[1,2],\"186\":[1,83],\"187\":[1,322],\"188\":[5,46],\"189\":[4,265],\"190\":[2,46],\"191\":[2,27],\"192\":[2,14],\"193\":[1,101],\"194\":[2],\"195\":[1],\"196\":[6,35],\"197\":[3,27],\"198\":[1,53],\"199\":[2],\"200\":[1,33],\"201\":[1,35],\"202\":[2,94],\"203\":[4,15],\"204\":[4,46],\"205\":[2,79],\"206\":[2,27],\"207\":[2,20],\"208\":[2,22],\"209\":[1],\"210\":[1,32],\"211\":[1,61],\"212\":[1],\"213\":[1],\"214\":[1,40],\"215\":[1,21],\"216\":[3,20],\"217\":[1,21],\"218\":[2,31],\"219\":[2,61],\"220\":[2,23],\"221\":[2,52],\"222\":[4,15],\"223\":[2,52],\"224\":[1,60],\"225\":[1],\"226\":[2,119],\"227\":[2,32],\"228\":[2],\"229\":[5,17],\"230\":[3,23],\"231\":[2],\"232\":[2,56],\"233\":[1,153],\"234\":[2],\"235\":[2,30],\"236\":[1,55],\"237\":[1,90],\"238\":[1,36],\"239\":[2,321],\"240\":[1,34],\"241\":[2,19],\"242\":[2,14],\"243\":[2,46],\"244\":[1,93],\"245\":[1,33],\"246\":[2,32],\"247\":[1,19],\"248\":[1,5],\"249\":[3,81],\"250\":[1,45],\"251\":[3],\"252\":[2,49],\"253\":[3,32],\"254\":[1,64],\"255\":[3,23],\"256\":[1,24],\"257\":[2],\"258\":[2,56],\"259\":[1,152],\"260\":[1,4],\"261\":[1,4],\"262\":[2,5],\"263\":[5,58],\"264\":[1],\"265\":[1,73],\"266\":[3,18],\"267\":[1,67],\"268\":[1,42],\"269\":[1,47],\"270\":[3,32],\"271\":[1,70],\"272\":[1,46],\"273\":[1,101],\"274\":[1,28],\"275\":[1,64],\"276\":[1,57],\"277\":[1,70],\"278\":[1,75],\"279\":[1,21],\"280\":[2,100],\"281\":[4,10],\"282\":[2,4],\"283\":[4,5],\"284\":[3],\"285\":[3,60],\"286\":[1,19],\"287\":[1,58],\"288\":[1,67],\"289\":[1,13],\"290\":[1],\"291\":[1],\"292\":[1,22],\"293\":[1,49],\"294\":[1,13],\"295\":[1,3],\"296\":[1,92],\"297\":[1],\"298\":[1,17],\"299\":[5,11],\"300\":[1,53],\"301\":[1,18],\"302\":[1,17],\"303\":[1,33],\"304\":[1,15],\"305\":[1,22],\"306\":[4,34],\"307\":[null,null,2],\"308\":[null,null,4],\"309\":[2],\"310\":[2,46],\"311\":[4,57],\"312\":[1,39],\"313\":[null,null,2],\"314\":[null,null,2],\"315\":[1],\"316\":[1,68],\"317\":[2,1],\"318\":[8],\"319\":[4,11],\"320\":[3,39],\"321\":[1,1],\"322\":[6,48],\"323\":[2],\"324\":[1,35],\"325\":[1,41],\"326\":[2,10],\"327\":[1,46],\"328\":[1],\"329\":[1,1],\"330\":[1,2],\"331\":[1,10],\"332\":[1,10],\"333\":[1,25],\"334\":[2,65],\"335\":[1,40],\"336\":[2,46],\"337\":[null,null,2],\"338\":[null,null,2],\"339\":[1],\"340\":[2],\"341\":[1,18],\"342\":[1,23],\"343\":[1,12],\"344\":[2,15],\"345\":[1,26],\"346\":[1],\"347\":[4,23],\"348\":[2,42],\"349\":[5,33],\"350\":[4,11],\"351\":[2,52],\"352\":[1,39],\"353\":[2,127],\"354\":[2,36],\"355\":[null,null,2],\"356\":[null,null,2],\"357\":[2,64],\"358\":[null,null,2],\"359\":[null,null,2],\"360\":[1,45],\"361\":[null,null,2],\"362\":[null,null,1],\"363\":[2,53],\"364\":[1,11],\"365\":[2,30],\"366\":[2,36],\"367\":[1,16],\"368\":[1,52],\"369\":[1,63],\"370\":[3,90],\"371\":[null,null,2],\"372\":[null,null,2],\"373\":[1,10],\"374\":[2,3],\"375\":[1,7],\"376\":[1,5],\"377\":[2],\"378\":[1,24],\"379\":[1,8],\"380\":[3,58],\"381\":[2],\"382\":[3,55],\"383\":[2,28],\"384\":[3,28],\"385\":[2,12],\"386\":[3,56],\"387\":[3,51],\"388\":[3,134],\"389\":[5,32],\"390\":[4,31],\"391\":[2],\"392\":[1,21],\"393\":[1,22],\"394\":[1,30],\"395\":[1,61],\"396\":[1,24],\"397\":[2,44],\"398\":[2],\"399\":[5,40],\"400\":[3,123],\"401\":[3],\"402\":[1,34],\"403\":[1,29],\"404\":[1,13],\"405\":[1,28],\"406\":[2,117],\"407\":[1,13],\"408\":[1,15],\"409\":[null,null,1],\"410\":[null,null,1],\"411\":[1],\"412\":[1],\"413\":[1,5],\"414\":[1,7],\"415\":[1,10],\"416\":[1,29],\"417\":[1,37],\"418\":[2],\"419\":[2,21],\"420\":[2,39],\"421\":[2,36],\"422\":[2],\"423\":[3,16],\"424\":[1,43],\"425\":[3,18],\"426\":[1,23],\"427\":[1,9],\"428\":[1,13],\"429\":[1,21],\"430\":[1,43],\"431\":[1,31],\"432\":[null,null,1],\"433\":[null,null,1],\"434\":[2],\"435\":[2,2],\"436\":[2],\"437\":[3],\"438\":[3,3],\"439\":[4,24],\"440\":[4,54],\"441\":[4],\"442\":[4,2],\"443\":[2],\"444\":[3,4],\"445\":[3,11],\"446\":[3,5],\"447\":[1],\"448\":[2,4],\"449\":[2],\"450\":[3],\"451\":[3,8],\"452\":[4,20],\"453\":[4,2],\"454\":[5,54],\"455\":[2],\"456\":[3,3],\"457\":[3,26],\"458\":[4,36],\"459\":[3,2],\"460\":[3,1],\"461\":[4,14],\"462\":[4,22],\"463\":[4,16],\"464\":[1],\"465\":[2,3],\"466\":[2],\"467\":[3,8],\"468\":[3,38],\"469\":[4,16],\"470\":[4],\"471\":[4,3],\"472\":[4,2],\"473\":[4,4],\"474\":[5,7],\"475\":[5,36],\"476\":[2],\"477\":[3,10],\"478\":[2,25],\"479\":[3,103],\"480\":[3,3],\"481\":[1],\"482\":[2,2],\"483\":[2],\"484\":[3],\"485\":[3,5],\"486\":[4,25],\"487\":[5,29],\"488\":[4],\"489\":[3,4],\"490\":[3,5],\"491\":[4,4],\"492\":[3,8],\"493\":[4,7],\"494\":[5,13],\"495\":[2],\"496\":[3,4],\"497\":[2,11],\"498\":[3,2],\"499\":[1,1],\"500\":[1],\"501\":[2,1],\"502\":[2],\"503\":[3],\"504\":[3,7],\"505\":[3,16],\"506\":[3,76],\"507\":[5,68],\"508\":[4],\"509\":[4,8],\"510\":[3,4],\"511\":[5,8],\"512\":[4,10],\"513\":[4,30],\"514\":[1],\"515\":[2,138],\"516\":[2],\"517\":[3,8],\"518\":[3,38],\"519\":[4,16],\"520\":[4],\"521\":[4,3],\"522\":[4,2],\"523\":[4,4],\"524\":[5,7],\"525\":[2],\"526\":[3,10],\"527\":[2,25],\"528\":[3,103],\"529\":[3,3],\"530\":[3],\"531\":[3],\"532\":[3,3],\"533\":[5,24],\"534\":[3,54],\"535\":[4],\"536\":[4,2],\"537\":[3],\"538\":[4,4],\"539\":[4,11],\"540\":[3,5],\"541\":[2],\"542\":[3],\"543\":[3,5],\"544\":[5,22],\"545\":[3],\"546\":[4,4],\"547\":[3,11],\"548\":[4,2],\"549\":[2],\"550\":[3],\"551\":[3,8],\"552\":[5,20],\"553\":[4,2],\"554\":[3],\"555\":[4,3],\"556\":[4,26],\"557\":[5,36],\"558\":[4,2],\"559\":[3,1],\"560\":[4,14],\"561\":[5,22],\"562\":[4,16],\"563\":[2],\"564\":[3,35],\"565\":[2],\"566\":[3,29],\"567\":[3,15],\"568\":[1,2],\"569\":[1],\"570\":[2,11],\"571\":[2,31],\"572\":[2],\"573\":[2,13],\"574\":[2,12],\"575\":[1,7],\"576\":[2],\"577\":[2,2],\"578\":[2,11],\"579\":[2,16],\"580\":[1,23],\"581\":[2],\"582\":[2,5],\"583\":[2,10],\"584\":[2,20],\"585\":[2],\"586\":[2,12],\"587\":[2,17],\"588\":[2],\"589\":[2,8],\"590\":[2,30],\"591\":[2],\"592\":[2],\"593\":[2,9],\"594\":[3,20],\"595\":[2],\"596\":[3,14],\"597\":[2,14],\"598\":[2],\"599\":[3,15],\"600\":[3,34],\"601\":[2],\"602\":[3,6],\"603\":[3,18],\"604\":[2],\"605\":[2,12],\"606\":[2,21],\"607\":[2,5],\"608\":[2],\"609\":[3,19],\"610\":[4,19],\"611\":[2],\"612\":[3,9],\"613\":[2,20],\"614\":[1,2],\"615\":[null,null,1],\"616\":[1],\"617\":[2,26],\"618\":[2,16],\"619\":[3,10],\"620\":[2,6],\"621\":[2,88],\"622\":[2,68],\"623\":[2,17],\"624\":[3,60],\"625\":[3,55],\"626\":[1],\"627\":[3,29],\"628\":[2,29],\"629\":[2,24],\"630\":[2,22],\"631\":[2,70],\"632\":[2,53],\"633\":[2,9],\"634\":[1],\"635\":[2,36],\"636\":[2],\"637\":[1,10],\"638\":[1,14],\"639\":[1,21],\"640\":[1,22],\"641\":[2,21],\"642\":[2,110],\"643\":[2,9],\"644\":[7],\"645\":[2,55],\"646\":[2,24],\"647\":[2,30],\"648\":[4,54],\"649\":[2],\"650\":[1,13],\"651\":[1,83],\"652\":[2,61],\"653\":[2,24],\"654\":[2,14],\"655\":[3,63],\"656\":[3,6],\"657\":[1,11],\"658\":[1,14],\"659\":[1,26],\"660\":[3],\"661\":[1,11],\"662\":[1,15],\"663\":[2],\"664\":[1,30],\"665\":[1,19],\"666\":[1],\"667\":[2,25],\"668\":[3,15],\"669\":[3],\"670\":[1,17],\"671\":[1,14],\"672\":[2,61],\"673\":[2,47],\"674\":[2],\"675\":[1,21],\"676\":[1,14],\"677\":[1,27],\"678\":[2,33],\"679\":[3],\"680\":[1,12],\"681\":[1,16],\"682\":[1],\"683\":[2,69],\"684\":[3,4],\"685\":[2,6],\"686\":[1],\"687\":[2,100],\"688\":[2],\"689\":[1,7],\"690\":[2,8],\"691\":[1,9],\"692\":[1,2],\"693\":[3,11],\"694\":[1,7],\"695\":[1,35],\"696\":[1,10],\"697\":[1,25],\"698\":[1,27],\"699\":[2,26],\"700\":[2,14],\"701\":[2,31],\"702\":[2],\"703\":[1,24],\"704\":[1,11],\"705\":[2,59],\"706\":[2,14],\"707\":[9,14],\"708\":[2,49],\"709\":[2,20],\"710\":[2,5],\"711\":[2,7],\"712\":[3,11],\"713\":[3,21],\"714\":[2,19],\"715\":[3],\"716\":[1,12],\"717\":[1,55],\"718\":[4,8],\"719\":[1,25],\"720\":[1,17],\"721\":[1,54],\"722\":[3,41],\"723\":[3,8],\"724\":[2,71],\"725\":[2],\"726\":[1,9],\"727\":[1,4],\"728\":[4,52],\"729\":[3,40],\"730\":[1],\"731\":[2,66],\"732\":[2,73],\"733\":[2,57],\"734\":[2,79],\"735\":[2,80],\"736\":[2,55],\"737\":[2,83],\"738\":[3,75],\"739\":[2,82],\"740\":[5,47],\"741\":[2,62],\"742\":[2,42],\"743\":[2,74],\"744\":[2,59],\"745\":[2,18],\"746\":[2,9],\"747\":[4,24],\"748\":[2,37],\"749\":[2,14],\"750\":[2,59],\"751\":[5,61],\"752\":[1,3],\"753\":[1],\"754\":[1],\"755\":[1],\"756\":[1],\"757\":[1],\"758\":[1],\"759\":[2],\"760\":[1],\"761\":[1],\"762\":[2]},\"averageFieldLength\":[2.0135535478484914,34.23117198504409,0.09374208870054482],\"storedFields\":{\"0\":{\"h\":\"关于\"},\"1\":{\"h\":\"关于我\",\"t\":[\"来自南方沿海城市的男孩，2019年高考后守护祖国两年，2021年复员。现在是一名在校的计算机科班学生。喜欢了解科技前沿的事物，捣鼓各式各样的电子产品（啥都知道点，但是啥都不精通）。\",\"想整出点玩意儿的时候，那股劲上来可能连续肝好几个小时...（虽然这是一种属于自己的快乐方式）\"]},\"2\":{\"h\":\"关于博客\",\"t\":[\"原本不是博客的\",\"对于我这种学渣来说，学过的知识可太容易忘了, 没办法只能寄希望于电子大脑...\",\"站在科学研究的角度来看的话, 完美遵循了\\\"艾宾浩斯遗忘曲线\\\"\",\"站在历史经验的角度来看的话, 解决办法是\\\"好记心不如烂笔头\\\"\",\"最开始是想做一个学习笔记, 用来记录学过的知识, 方便以后遇到不清楚的时候可以查阅一下, 在此之前也在其他地方通过其他方式记录过一些, 为了防止出现找不到记录在哪里的情况, 所以把自己在其他地方记录的知识都搬过来放到一起, 这是它最开始的样子。（现在也是不齐全）\",\"然后在学习的过程中, 自己又有了一些理解, 形成了一些经验, 就顺便记录下来。\",\"再然后偶尔也想把自己的兴趣爱好记录一下\",\"久而久之, 就不是原来的味道了~\"]},\"3\":{\"h\":\"博客内容\",\"t\":[\"为了更像博客, 规划中包括以下内容:\",\"学习笔记\",\"经验分享\",\"常用工具分享\",\"...(没准以后还有新分类呢~)\",\"目前已经有的模块是烂笔头(学习笔记)、手把手系列(经验分享),哈哈哈~ 😂\"]},\"4\":{\"h\":\"最后\",\"t\":[\"很高兴认识你！\"]},\"5\":{\"h\":\"Java的安装与配置\"},\"6\":{\"h\":\"下载\"},\"7\":{\"h\":\"版本说明\",\"t\":[\"下载 Java 之前先简单了解下 Java 的版本\",\"JavaSE（Java Platform, Standard Edition）Java 标准版\",\"JavaME（Java Platform, Micro Edition）Java 微型版\",\"JavaEE（Java Platform, Enterprise Edition）Java 企业版\",\"Java 是面向对象的编程语言，一般来说 Java 这个单词其实指的是 Java 开发工具，也就是 JDK(Java Development Kit)。所以我们常常讨论到安装 Java8 \\\\ JDK8 \\\\ JDK1.8 \\\\ J2SE 8 \\\\ J2SE 1.8 \\\\ Java SE 1.8 \\\\ Java SE 8，其实这几个东西说的都是同一个概念，只是在 Java 的发展历程中不同阶段的不同叫法而已\"]},\"8\":{\"h\":\"版本选择\",\"t\":[\"这个其实不用考虑，首选标准版；再一个需要注意的就是LTS（Long Term Support）版本，也就是长期支持版本。就 Oracle 顶级支持而言，非 LTS 版本被视为最新 LTS 版本的一组累积实施增强功能。新功能版本发布后，任何以前的非 LTS 版本都将被视为被取代，查看 Oracle Java SE 支持路线图，这里选择 JDK 8\",\"首先打开 Oracle 的官网，这里不要点中间下载Java那个，这里下的应该是 JRE（Java Runtime Environment），看到页面下面的您是要寻找 JDK 下载的软件开发人员吗?，在这一行的最后有Java SE 开发工具包，点击这个去下载页面，然后根据平台选择对应的安装包下载即可\",\"可以在此处找到 Java 的历史版本，需要注意的是，Oracle 在 JDK 8u211 级以上版本修改了开源协议，使用 JDK 8u211 及以上版本进行商业性质（盈利目的）的应用或工具的开发要收费，这里可选择下载 JDK 8u201\",\"下载需要准备一个 Oracle 的账号，没有的话自己注册一下，超简单\",\"为什么不下载最新的版本 JDK 8u202?\",\"从 2014 年 10 月发布 Java SE 7 Update 71(Java SE 7u71)开始，Oracle 在发布 Oracle JDK 关键补丁更新(CPUs：Critical Patch Updates)的同时一般会发布相应的补丁集更新(PSUs：Patch Set Updates)。其中 Oracle JDK 关键补丁更新(CPUs)包含安全漏洞修复和重要漏洞修复，Oracle 强烈建议所有 Oracle JDK 用户及时升级到最新的 CPU 版本，Oracle JDK 关键补丁更新(CPUs)版本号采用奇数编号。Oracle JDK 补丁集更新(PSUs)包含相应 CPUs 中的所有修复以及其他非重要修复，仅当受到 Oracle JDK 关键补丁更新(CPUs)版本之外的其他漏洞的影响时才应当使用相应的补丁集更新 (PSUs)，Oracle JDK 补丁集更新(PSUs)版本号采用偶数编号。因此，一般情况下我们只要下载奇数编号的最新版本更新就行了\"]},\"9\":{\"h\":\"安装\",\"t\":[\"双击可执行文件（就是上一步下载的文件），如果 C 盘容量超大，那么一直点击下一步就好了；如果 C 盘容量不那么富裕，那么在下面这一步的时候选择更改，另选一个路径\",\"java-install\",\"在 JDK 安装完成后，安装程序会自动弹窗继续安装 JRE [^first]，此时可以选择取消安装，也可以选择安装，跟 JDK 一样的安装流程即可\",\"[^first]: 就我实机测试的结果是 JDK 11 之后的版本都没有弹框了，只需要一次安装即可（JDK 10 我下不下来不清楚还会不会）\"]},\"10\":{\"h\":\"配置\"},\"11\":{\"h\":\"JAVA_HOME\",\"t\":[\"JAVA_HOME 指向的是 Java 的安装路径，该路径下包含 bin、lib 等目录\"]},\"12\":{\"h\":\"配置方式\",\"t\":[\"在系统环境变量下新建一个变量，变量名为JAVA_HOME，变量值为本机安装 Java 的路径，如D:\\\\Program Files\\\\Java\\\\jdk1.8.0_201\",\"注\",\"一般来说这个环境变量在不与其他环境变量名称冲突的前提下随便叫什么都行，不一定要用 JAVA_HOME（甚至都可以不配置），但是为了方便识别以及后续升级版本，还是配置一下比较好。如果手动升级版本，只需要卸载旧版本，安装新版本，然后把 JAVA_HOME 的值指向新的安装路径即可\"]},\"13\":{\"h\":\"PATH\",\"t\":[\"PATH 在 Windows 的环境变量里面本来就有，只需要在其中添加 Java 相关的路径即可\"]},\"14\":{\"h\":\"配置方式\",\"t\":[\"如果之前配置了 JAVA_HOME 环境变量，那么编辑 PATH，在其末尾添加;%JAVA_HOME%\\\\bin（如果在最开始加的，那就把开头的;移到末尾即可[^second]）\",\"如果没有配置 JAVA_HOME 环境变量，那么编辑 PATH，在其末尾添加;D:\\\\Program Files\\\\Java\\\\jdk1.8.0_201\\\\bin（如果在最开始加的，那就把开头的;移到末尾即可[^second]）\",\"[^second]: 这里说明的是 Win 7 环境的配置方式，其他版本的 Windows 大同小异\",\"提示\",\"如果你在安装 JDK 时选择了继续安装 JRE，那么可以加上%JAVA_HOME%\\\\jre\\\\bin或者D:\\\\Program Files\\\\Java\\\\jdk1.8.0_201\\\\jre\\\\bin(如果是 Java11 以后的版本，这里就不需要再配置）\",\"如果你没有安装 JRE 或者因为高版本没有生成 JRE 时，可以尝试以下步骤\",\"以管理员权限打开 CMD，输入echo %JAVA_HOME%（配置了 JAVA_HOME 的前提下），输入回显的前两位（如果是C:\\\\xxx那就不用输入），然后再输入cd %JAVA_HOME%\",\"输入以下命令行，生成即可\",\"bin\\\\jlink.exe --module-path jmods --add-modules java.desktop --output jre \"]},\"15\":{\"h\":\"\",\"t\":[\"CLASSPATH 直译过来是类路径，是 Java 环境配置中要设置的一个环境变量，其实就是 *.class 文件的路径，表示 JVM 从哪里去寻找要运行的 class 文件\",\"注意\",\"如果是 Java5 以后的版本，这个环境变量可以不用配置了，因为在 Java5 中，Sun 公司改进了 JDK 设计，JRE 会自动搜索当前路径下的 jar 包，并自动加载 dt.jar 和 tools.jar\"]},\"16\":{\"h\":\"配置方式\",\"t\":[\"在系统环境变量下新建一个变量，变量名为CLASSPATH，变量值为.;%JAVA_HOME%\\\\lib\\\\dt.jar;%JAVA_HOME%\\\\lib\\\\tools.jar\",\"其中被;分成了 3 个部分\",\"第一部分是指当前目录，也就是告诉 JVM 在当前目录寻找 class 文件\",\"第二部分是 dt.jar ，是运行环境类库，主要是 Swing 的包（通过解压工具一看就知道了），如果过开发没有 Swing 的包，可以不用添加\",\"第三部分是 tool.jar，顾名思义是工具类库，但是它跟我们用到的基础类库没有关系。它是 bin 下各个 exe 执行文件的实现\"]},\"17\":{\"h\":\"验证\",\"t\":[\"使用 Windows 命令行工具，输入以下命令\",\"java -version \",\"如果没出意外的话应该能看到如下回显\",\"java version \\\"1.8.0_201\\\" Java(TM) SE Runtime Environment (build 1.8.0_201-b09) Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode) \",\"如果出了意外的话\",\"要么是配错了某个环境变量\",\"要么是本机安装了多个 Java 版本，且这里的回显并不是配置的 Java 版本，这说明回显上的版本配置的 PATH 的优先级（先后顺序）是高于手动配置的，那么去 PATH 里面找一下在配置的 JAVA_HOME 之前有没有类似xxx\\\\Common Files\\\\Oracle\\\\Java\\\\javapath这样的配置，有的话删掉再保存就可以了\",\"至此，完成\"]},\"18\":{\"h\":\"Maven综合案例\"},\"19\":{\"h\":\"一、 Maven中的依赖、继承、聚合三大工程关系\",\"t\":[\"Maven工具基于POM（Project Object Model）项目对象模型模式实现，在Maven中每个项目都相当于是一个对象，对象（项目）和对象（项目）之间是有关系的，关系包含了：依赖、继承和聚合。通过Maven可以更加方便的实现导包、拆分项目等效果。\"]},\"20\":{\"h\":\"1、依赖\",\"t\":[\"​ A工程在开发或运行的过程中需要B工程提供支持，这就叫A工程依赖B工程。在这种情况下，需要在A工程的pom.xml文件中增加配置定义依赖关系，通俗理解就是在A中导入B工程jar包。B工程既可以是自己的项目打的jar包，也可以是中央仓库的jar包。\",\"如何在项目中注入依赖？\",\"​ 在pom.xml文件：根元素project下的 dependencies标签中，配置依赖信息，标签内可以包含多个 dependence元素，以声明多个依赖。每个依赖dependence标签都应该包含以下元素：groupId, artifactId, version : 依赖的基本坐标， 对于任何一个依赖来说，基本坐标是最重要的， Maven根据坐标才能找到需要的依赖。\",\"依赖的传递性\",\"​ 传递性依赖是Maven2.0的新特性。假设你的项目依赖于一个库，而这个库又依赖于其他库。你不必自己去找出所有这些依赖，你只需要加上你直接依赖的库，Maven会隐式的把这些库间接依赖的库也加入到你的项目中。这个特性是靠解析从远程仓库中获取的依赖库的项目文件实现的。一般的，这些项目的所有依赖都会加入到项目中，或者从父项目继承，或者通过传递性依赖。也就是说如果A依赖了B，那么C依赖A时会自动把A和B都导入进来。\"]},\"21\":{\"h\":\"2、继承\",\"t\":[\"​ 如果projectB继承projectA，则代表projectB默认依赖projectA依赖的所有资源，且可以应用projectA中定义的所有资源信息，而被继承的工程（B工程）只能是POM工程。注意，在父项目中放在dependencyManagement中的内容时不被子项目继承，不可以直接使用。放在dependencyManagement中的内容主要目的是进行版本管理。里面的内容在子项目中依赖时坐标只需要填写group id和artifact id即可，如果子项目不希望使用父项目的版本，可以明确配置version。\",\"​ 子工程通过parent标签指向父工程，就可以直接将父工程中定义好的jar包的版本拿来使用。但是此时作为子工程来讲，jar包的版本可用可不用父工程中管理的。针对此情况，父工程可用使用import范围来强制指定子工程必须使用父工程中管理的版本，不可自作主张随意使用版本。\"]},\"22\":{\"h\":\"3、聚合\",\"t\":[\"​ 当我们开发的工程拥有2个以上模块的时候，每个模块都是一个独立的功能集合。比如某大学系统中拥有搜索平台，学习平台，考试平台等。开发的时候每个平台都可以独立编译，测试，运行。这个时候我们就需要一个聚合工程。在创建聚合工程的过程中，总的工程必须是一个POM工程（Maven Project）（聚合项目必须是一个pom类型的项目，jar项目war项目是没有办法做聚合工程的），各子模块可以是任意类型模块（Maven Module）。\",\"​ 聚合包含了继承的特性，聚合时多个项目的本质还是一个项目。这些项目被一个大的父项目包含。且这时父项目类型为pom类型。同时在父项目的pom.xml中出现modules表示包含的所有子模块。\"]},\"23\":{\"h\":\"二、 Maven综合案例\"},\"24\":{\"h\":\"1. 项目需求和结构分析\",\"t\":[\"需求案例：搭建一个电商平台项目，该平台包括用户服务、订单服务、通用工具模块等。\",\"项目架构：\",\"用户服务：负责处理用户相关的逻辑，例如用户信息的管理、用户注册、登录等。 \",\"spring-context 6.0.6\",\"spring-core 6.0.6\",\"spring-beans 6.0.6\",\"common-service\",\"订单服务：负责处理订单相关的逻辑，例如订单的创建、订单支付、退货、订单查看等。 \",\"spring-context 6.0.6\",\"spring-core 6.0.6\",\"spring-beans 6.0.6\",\"spring-security 6.0.6\",\"common-service\",\"通用模块：负责存储其他服务需要通用工具类，其他服务依赖此模块。 \",\"commons-io 2.11.0\",\"junit 5.9.2\"]},\"25\":{\"h\":\"2. 项目搭建和统一构建\"},\"26\":{\"h\":\"\",\"t\":[\"创建工程：\"]},\"27\":{\"h\":\"\",\"t\":[\"pom.xml配置：（打包方式 pom 包，properties 标签下前几个 xxx.version 用于控制版本）\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <groupId>org.Ek0wraith</groupId> <artifactId>micro-shop</artifactId> <version>1.0-SNAPSHOT</version> <!--知识点：父工程的打包方式为pom--> <packaging>pom</packaging> <modules> <module>common-service</module> </modules> <properties> <spring.version>6.0.6</spring.version> <jackson.version>2.15.0</jackson.version> <commons.version>2.11.0</commons.version> <junit.version>5.9.2</junit.version> <maven.compiler.source>8</maven.compiler.source> <maven.compiler.target>8</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <!-- 依赖管理 --> <dependencyManagement> <dependencies> <!-- spring-context会依赖传递core/beans --> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>${spring.version}</version> </dependency> <!-- jackson-databind会依赖传递core/annotations --> <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> <version>${jackson.version}</version> </dependency> <!-- commons-io --> <dependency> <groupId>commons-io</groupId> <artifactId>commons-io</artifactId> <version>${commons.version}</version> </dependency> <!-- junit-jupiter-api --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>${junit.version}</version> <scope>test</scope> </dependency> </dependencies> </dependencyManagement> </project> \"]},\"28\":{\"h\":\"\",\"t\":[\"创建工程：\"]},\"29\":{\"h\":\"\"},\"30\":{\"h\":\"\",\"t\":[\"pom.xml 配置：（打包为 jar 包，parent 标签为父工程的位置，dependencies 中各 jar 包版本继承父工程的）\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <parent> <groupId>org.Ek0wraith</groupId> <artifactId>micro-shop</artifactId> <version>1.0-SNAPSHOT</version> </parent> <artifactId>common-service</artifactId> <!--知识点：打包方式默认就是jar，因此可以省略--> <packaging>jar</packaging> <properties> <maven.compiler.source>8</maven.compiler.source> <maven.compiler.target>8</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <dependencies> <!-- 配置spring-context，继承父工程版本，自动传递 core / beans --> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> </dependency> <!-- 配置jackson-databind，继承父工程版本，自动传递 core / annotations --> <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> </dependency> <!-- 配置commons-io，继承父工程版本 --> <dependency> <groupId>commons-io</groupId> <artifactId>commons-io</artifactId> </dependency> <!-- 配置junit，继承父工程版本 --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <scope>test</scope> </dependency> </dependencies> </project> \"]},\"31\":{\"h\":\"\",\"t\":[\"创建工程（同上）：\"]},\"32\":{\"h\":\"\",\"t\":[\"pom.xml配置：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <parent> <groupId>org.Ek0wraith</groupId> <artifactId>micro-shop</artifactId> <version>1.0-SNAPSHOT</version> </parent> <artifactId>user-service</artifactId> <!-- web工程打包方式为war --> <packaging>war</packaging> <properties> <maven.compiler.source>8</maven.compiler.source> <maven.compiler.target>8</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <dependencies> <!-- 配置common-service，所需依赖会传递到当前工程（仅限compile范围） --> <dependency> <groupId>org.Ek0wraith</groupId> <artifactId>common-service</artifactId> <version>1.0-SNAPSHOT</version> </dependency> </dependencies> </project> \",\"依赖传递结果：\"]},\"33\":{\"h\":\"\"},\"34\":{\"h\":\"\",\"t\":[\"创建工程（同上）：\"]},\"35\":{\"h\":\"\",\"t\":[\"pom.xml 配置：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <parent> <groupId>org.Ek0wraith</groupId> <artifactId>micro-shop</artifactId> <version>1.0-SNAPSHOT</version> </parent> <artifactId>order-service</artifactId> <!-- web工程打包方式为war --> <packaging>war</packaging> <properties> <maven.compiler.source>8</maven.compiler.source> <maven.compiler.target>8</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <dependencies> <dependency> <groupId>org.Ek0wraith</groupId> <artifactId>common-service</artifactId> <version>1.0-SNAPSHOT</version> </dependency> </dependencies> </project> \",\"此时，查看父工程micro-shop的pom.xml，会发现其中已经自动聚合了子工程：\",\"<modules> <module>common-service</module> <module>user-service</module> <module>order-service</module> </modules> \"]},\"36\":{\"h\":\"MyBatis基本使用——CRUD综合练习\"},\"37\":{\"h\":\"项目实践：\",\"t\":[\"1．需求案例：完成MyBatis基本使用——CRUD综合练习实践练习。\",\"2．项目架构：\",\"image-MyBatis-CURD\"]},\"38\":{\"h\":\"项目实现\"},\"39\":{\"h\":\"一、数据库表创建及初始化\",\"t\":[\"SET NAMES utf8mb4; SET FOREIGN_KEY_CHECKS = 0; -- ---------------------------- -- Table structure for user -- ---------------------------- DROP TABLE IF EXISTS user; CREATE TABLE user ( id int NOT NULL AUTO_INCREMENT, username varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL, password varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL, PRIMARY KEY (id) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = Dynamic; -- ---------------------------- -- Records of user -- ---------------------------- INSERT INTO user VALUES (1, 'Peng Yuning', '8WvErMonB8'); INSERT INTO user VALUES (2, 'Takahashi Kasumi', 'YUEsievZJM'); INSERT INTO user VALUES (3, 'Bruce Rodriguez', 'oSKkZSv4wm'); INSERT INTO user VALUES (4, 'Lau Ching Wan', 'F0WfooyAy2'); INSERT INTO user VALUES (5, 'Lui Sze Kwan', 'Msou1bJ0vv'); INSERT INTO user VALUES (6, 'Ernest Crawford', '6BZpnzERaC'); INSERT INTO user VALUES (7, 'Juan Castillo', '8enHa9Ay1D'); INSERT INTO user VALUES (8, 'Fu Wing Kuen', 'kQbmCoKWxa'); INSERT INTO user VALUES (9, 'Valerie Harrison', 'MaIuoHAGHQ'); INSERT INTO user VALUES (10, 'Margaret Henderson', 'pBCv42yItl'); SET FOREIGN_KEY_CHECKS = 1; \"]},\"40\":{\"h\":\"二、项目创建\",\"t\":[\"1、导入相关技术依赖（pom.xml）\",\"<!-- https://mvnrepository.com/artifact/org.springframework/spring-context --> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>6.0.6</version> </dependency> <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>5.10.0</version> <scope>test</scope> </dependency> <!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api --> <dependency> <groupId>jakarta.annotation</groupId> <artifactId>jakarta.annotation-api</artifactId> <version>2.1.1</version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-aspects</artifactId> <version>6.0.6</version> </dependency> <!--数据库驱动--> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>8.0.33</version> </dependency> <!--数据库连接池--> <dependency> <groupId>com.alibaba</groupId> <artifactId>druid</artifactId> <version>1.2.8</version> </dependency> <!--Spring JDBC--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-jdbc</artifactId> <version>6.0.6</version> </dependency> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> <version>1.18.24</version> </dependency> <!--spring-test--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-test</artifactId> <version>6.0.6</version> </dependency> <!--声明式事务依赖--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-tx</artifactId> <version>6.0.6</version> </dependency> <!--MyBatis--> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis</artifactId> <version>3.5.10</version> </dependency> <!--Servlet Api--> <dependency> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> <version>2.5</version> </dependency> \",\"2、创建User实体类（User.java）\",\"package com.Ek0wraith.pojo; import lombok.Data; /** * ClassName: User * Package: com.Ek0wraith.pojo * Description：TODO * * @Author Ek0wraith * @Create 2024/5/9 11:24 * @Version 1.0 */ @Data public class User { private Integer id; private String username; private String password; } \",\"3、UserMapper接口（UserMapper.java）\",\"package com.Ek0wraith.mapper; import com.Ek0wraith.pojo.User; import java.util.List; /** * ClassName: UserMapper * Package: com.Ek0wraith.mapper * Description：TODO * * @Author Ek0wraith * @Create 2024/5/9 11:24 * @Version 1.0 */ public interface UserMapper { int insertUser (User user); int deleteUser(Integer id); int updateUser(User user); User selectUserById(Integer id); List<User> selectAllUser(); } \",\"4、mybatis配置文件（mybatis-config.xml）\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <!DOCTYPE configuration PUBLIC \\\"-//mybatis.org//DTD Config 3.0//EN\\\" \\\"http://mybatis.org/dtd/mybatis-3-config.dtd\\\"> <configuration> <settings> <setting name=\\\"logImpl\\\" value=\\\"STDOUT_LOGGING\\\"/> </settings> <typeAliases> <package name=\\\"com.Ek0wraith.pojo\\\"/> </typeAliases> <!--environments表示配置MyBatis的开发环境，可以配置多个环境，在众多具体环境中， 使用default属性指定实际运行时使用的环境。default属性的取值是environment标签的id属性的值。--> <environments default=\\\"development\\\"> <!--environment表示配置MyBatis的一个具体的环境--> <environment id=\\\"development\\\"> <!--MyBatis的内置的事务管理器--> <transactionManager type=\\\"JDBC\\\"/> <!--tx--> <!--配置数据源--> <dataSource type=\\\"POOLED\\\"> <!--建立数据库连接的具体信息--> <property name=\\\"driver\\\" value=\\\"com.mysql.cj.jdbc.Driver\\\"/> <property name=\\\"url\\\" value=\\\"jdbc:mysql://localhost:3306/usermis\\\"/> <property name=\\\"username\\\" value=\\\"root\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </dataSource> </environment> </environments> <mappers> <!--Mapper注册：指定MyBatis映射文件的具体位置--> <!--mapper标签：配置一个具体的Mapper映射文件--> <!--resource属性：指定Mapper映射文件的实际存储位置，这里需要使用一个以类路径根目录为基准的相对路径--> <!--对Maven工程的目录结构来说，resources目录下的内容会直接放入类路径，所以这里可以以resources目录为基准--> <mapper resource=\\\"mappers/UserMapper.xml\\\"/> </mappers> </configuration> \",\"5、MapperXML编写（UserMapper.xml）\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <!DOCTYPE mapper PUBLIC \\\"-//mybatis.org//DTD Mapper 3.0//EN\\\" \\\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\\" > <mapper namespace=\\\"com.Ek0wraith.mapper.UserMapper\\\"> <insert id=\\\"insertUser\\\" useGeneratedKeys=\\\"true\\\" keyProperty=\\\"id\\\"> insert into users(username, password) values(#{username}, #{password}) </insert> <delete id=\\\"deleteUser\\\"> delete from users where id = #{id} </delete> <update id=\\\"updateUser\\\"> update users set username=#{username}, password=#{password} where id = #{id} </update> <select id=\\\"selectUserById\\\" resultType=\\\"user\\\"> select * from users where id = #{id} </select> <select id=\\\"selectAllUser\\\" resultType=\\\"user\\\"> select * from users </select> </mapper> \"]},\"41\":{\"h\":\"三、编写测试类\",\"t\":[\"1、获取SqlSession连接\",\"private static SqlSessionFactory sqlSessionFactory; static { try { //绑定配置文件 String resource = \\\"mybatis-config.xml\\\"; InputStream inputStream = Resources.getResourceAsStream(resource); sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); } catch (IOException e) { e.printStackTrace(); } } //获取SqlSession连接 SqlSession session = sqlSessionFactory.openSession(); \",\"2、编写CURD测试类（TestUser.java完整代码）\",\"import com.Ek0wraith.mapper.UserMapper; import com.Ek0wraith.pojo.User; import org.apache.ibatis.io.Resources; import org.apache.ibatis.session.SqlSession; import org.apache.ibatis.session.SqlSessionFactory; import org.apache.ibatis.session.SqlSessionFactoryBuilder; import org.junit.jupiter.api.Test; import java.io.IOException; import java.io.InputStream; import java.util.List; /** * ClassName: TestUpdateUser * Package: PACKAGE_NAME * Description：TODO * * @Author Ek0wraith * @Create 2024/5/9 11:46 * @Version 1.0 */ public class TestUser { private static SqlSessionFactory sqlSessionFactory; static { try { //绑定配置文件 String resource = \\\"mybatis-config.xml\\\"; InputStream inputStream = Resources.getResourceAsStream(resource); sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); } catch (IOException e) { e.printStackTrace(); } } //获取SqlSession连接 SqlSession session = sqlSessionFactory.openSession(); @Test public void TestUpdateUser(){ UserMapper userMapper = session.getMapper(UserMapper.class); User user = userMapper.selectUserById(1); user.setUsername(\\\"admin\\\"); user.setPassword(\\\"123123\\\"); userMapper.updateUser(user); user = userMapper.selectUserById(1); System.out.println(\\\"user = \\\" + user); } @Test public void TestSelectById(){ UserMapper userMapper = session.getMapper(UserMapper.class); User user = userMapper.selectUserById(1); System.out.println(\\\"user = \\\" + user); } @Test public void TestAllUser(){ UserMapper userMapper = session.getMapper(UserMapper.class); List<User> users = userMapper.selectAllUser(); System.out.println(\\\"users = \\\" + users); } @Test public void TestInsertUser(){ User user = new User(); user.setUsername(\\\"admin\\\"); user.setPassword(\\\"123123\\\"); UserMapper userMapper = session.getMapper(UserMapper.class); userMapper.insertUser(user); System.out.println(\\\"user = \\\" + user); } @Test public void TestDeleteUser(){ UserMapper userMapper = session.getMapper(UserMapper.class); userMapper.deleteUser(2); User user = userMapper.selectUserById(2); System.out.println(\\\"User = \\\" + user); } } \",\"3、运行测试类\",\"Checking to see if class com.Ek0wraith.pojo.User matches criteria [is assignable to Object] PooledDataSource forcefully closed/removed all connections. PooledDataSource forcefully closed/removed all connections. PooledDataSource forcefully closed/removed all connections. PooledDataSource forcefully closed/removed all connections. Opening JDBC Connection Created connection 2013768748. Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7807ac2c] ==> Preparing: select * from users where id = ? ==> Parameters: 1(Integer) <== Columns: id, username, password <== Row: 1, Peng Yuning, 8WvErMonB8 <== Total: 1 ==> Preparing: update users set username=?, password=? where id = ? ==> Parameters: admin(String), 123123(String), 1(Integer) <== Updates: 1 ==> Preparing: select * from users where id = ? ==> Parameters: 1(Integer) <== Columns: id, username, password <== Row: 1, admin, 123123 <== Total: 1 user = User(id=1, username=admin, password=123123) Opening JDBC Connection Created connection 1894698434. Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@70eecdc2] ==> Preparing: insert into users(username, password) values(?, ?) ==> Parameters: admin(String), 123123(String) <== Updates: 1 user = User(id=11, username=admin, password=123123) Opening JDBC Connection Created connection 876962272. Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@344561e0] ==> Preparing: delete from users where id = ? ==> Parameters: 2(Integer) <== Updates: 1 ==> Preparing: select * from users where id = ? ==> Parameters: 2(Integer) <== Total: 0 User = null Opening JDBC Connection Created connection 1388849499. Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52c8295b] ==> Preparing: select * from users ==> Parameters: <== Columns: id, username, password <== Row: 1, Peng Yuning, 8WvErMonB8 <== Row: 2, Takahashi Kasumi, YUEsievZJM <== Row: 3, Bruce Rodriguez, oSKkZSv4wm <== Row: 4, Lau Ching Wan, F0WfooyAy2 <== Row: 5, Lui Sze Kwan, Msou1bJ0vv <== Row: 6, Ernest Crawford, 6BZpnzERaC <== Row: 7, Juan Castillo, 8enHa9Ay1D <== Row: 8, Fu Wing Kuen, kQbmCoKWxa <== Row: 9, Valerie Harrison, MaIuoHAGHQ <== Row: 10, Margaret Henderson, pBCv42yItl <== Total: 10 users = [User(id=1, username=Peng Yuning, password=8WvErMonB8), User(id=2, username=Takahashi Kasumi, password=YUEsievZJM), User(id=3, username=Bruce Rodriguez, password=oSKkZSv4wm), User(id=4, username=Lau Ching Wan, password=F0WfooyAy2), User(id=5, username=Lui Sze Kwan, password=Msou1bJ0vv), User(id=6, username=Ernest Crawford, password=6BZpnzERaC), User(id=7, username=Juan Castillo, password=8enHa9Ay1D), User(id=8, username=Fu Wing Kuen, password=kQbmCoKWxa), User(id=9, username=Valerie Harrison, password=MaIuoHAGHQ), User(id=10, username=Margaret Henderson, password=pBCv42yItl)] Opening JDBC Connection Created connection 1389432760. Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52d10fb8] ==> Preparing: select * from users where id = ? ==> Parameters: 1(Integer) <== Columns: id, username, password <== Row: 1, Peng Yuning, 8WvErMonB8 <== Total: 1 user = User(id=1, username=Peng Yuning, password=8WvErMonB8) Process finished with exit code 0 \",\"测试通过\"]},\"42\":{\"h\":\"快速搭建个人文档网站\"},\"43\":{\"h\":\"什么是 docsify\",\"t\":[\"一个神奇的文档生成器\"]},\"44\":{\"h\":\"概述\",\"t\":[\"docsify 可以快速帮你生成文档网站。不同于 Gitbook、Hexo 的地方是它不会生成静态的 .html 文件, 所有的转换工作都是在运行时。如果你想要开始使用它, 只需要创建一个 index.html 就可以开始编写文档并直接部署在 GitHub Pages\"]},\"45\":{\"h\":\"特性\",\"t\":[\"无需构建, 写完文档直接发布\",\"容易使用并且轻量（压缩后~21kB）\",\"智能的全文搜索\",\"提供多套主题\",\"丰富的 API\",\"支持 Emoji\",\"兼容 IE11\",\"支持服务器渲染 SSR\"]},\"46\":{\"h\":\"快速开始\",\"t\":[\"开始之前需要安装 NodeJS\"]},\"47\":{\"h\":\"安装\",\"t\":[\"安装官方提供的工具 docsify-cli, 可以方便地创建及在本地预览生成的文档\",\"参考 docsify-cli 的使用\"]},\"48\":{\"h\":\"初始化\",\"t\":[\"新建一个项目（文件夹） demo, 然后执行如下命令\",\"docsify i docs \",\"初始化成功后, 可以看到生成了一个新的目录 /docs, 里面有 3 个文件: .nojekyll、index.html、README.md\",\"index.html: 入口文件\",\"README.md: 会做为主页内容渲染\",\".nojekyll: 用于阻止 GitHub Pages 忽略掉下划线开头的文件\"]},\"49\":{\"h\":\"本地预览\",\"t\":[\"通过 docsify serve 启动一个本地服务器, 可以方便的实时预览效果. 默认的访问地址是 http://localhost:3000\",\"docsify s docs \"]},\"50\":{\"h\":\"部署\",\"t\":[\"现在, 我们可以直接把文档网站部署到 GitHub Pages 上\",\"GitHub Pages\",\"GitHub Pages 支持从三个地方读取文件\",\"docs/ 目录\",\"master 分支\",\"gh-pages 分支\",\"docsify 官方推荐使用直接放在 docs/ 目录下的方式\",\"首先将项目上传到 GitHub, 然后进入 GitHub Pages 页面: Setting -> Pages\",\"Source: 选择 Deploy from a branch\",\"Branch: select branch 选主分支（一般是 master 或者 main）, select folder 选择 /docs\",\"关于部署后的访问地址\",\"如果你在 GitHub 上创建的仓库名字是叫 {username}.github.io, username 是 github 用户名, 那么直接访问 https://{username}.github.io\",\"如果不是上面的名字, 那么访问的地址就是 https://{username}.github.io/{your_repository_name}, your_repository_name 就是仓库名字\"]},\"51\":{\"h\":\"多页文档\",\"t\":[\"文档网站不能只有一个页面吧\",\"docsify 实现多个页面, 或者需要多级路由的网站都是很容易实现的\",\"如果文档目录结构是这样\",\". └── docs ├── README.md ├── page1.md └── pages ├── README.md └── page2.md \",\"那么对应的访问路径将是\",\"docs/README.md => http://localhost:3000 docs/page1.md => http://localhost:3000/pages1 docs/pages/README.md => http://localhost:3000/pages/ docs/pages/page2.md => http://localhost:3000/pages/page2 \"]},\"52\":{\"h\":\"定制侧边栏\",\"t\":[\"随着页面的增多, 需要创建 _sidebar.md 文件来定义侧边栏, 默认情况下侧边栏会通过 Markdown 文件自动生成. 通过配置 loadSidebar 选项, 具体配置见 配置项#loadSidebar\"]},\"53\":{\"h\":\"嵌套的侧边栏\",\"t\":[\"有时浏览到一个目录时, 想只显示这个目录自己的侧边栏, 此时可以通过在每个文件夹中添加一个 _sidebar.md 来实现\",\"_sidebar.md 的加载逻辑是从每层目录下获取文件, 如果当前目录不存在该文件则回退到上一级目录. 例如当前路径为 /zh-cn/more-pages 则从 /zh-cn/_sidebar.md 获取文件, 如果不存在则从 /_sidebar.md 获取\",\"如果希望避免不必要的回退过程, 那么就需要配置 alias , 更多用法见 配置项#alias\",\"<script> window.$docsify = { loadSidebar: true, alias: { '/.*/_sidebar.md': '/_sidebar.md', }, }; </script> \"]},\"54\":{\"h\":\"页面标题\",\"t\":[\"一个页面的 title 标签是由侧边栏中选中条目的名称所生成的. 为了更好的 SEO , 可以在指定文件后面指定页面标题.\",\"<!-- docs/_sidebar.md --> - [Home](/) - [page1](page1.md 'Page 1') \"]},\"55\":{\"h\":\"忽略副标题\",\"t\":[\"当设置了 subMaxLevel 时, 默认情况下每个标题都会自动添加到目录中. 如果需要忽略特定的标题, 可以添加 <!-- {docsify-ignore} -->\",\"# 一级标题 ## 二级标题 <!-- {docsify-ignore} --> \",\"如果需要忽略整个页面上所有的标题, 在页面的第一个标题上使用 <!-- {docsify-ignore-all} -->\",\"# 一级标题 <!-- {docsify-ignore-all} --> ## 二级标题 \",\"<!-- {docsify-ignore} --> 和 <!-- {docsify-ignore-all} --> 都不会在页面上呈现\"]},\"56\":{\"h\":\"导航栏\",\"t\":[\"docsify 也支持自定义导航栏, 可以通过 HTML 和 Markdown 两种方式\"]},\"57\":{\"h\":\"HTML 方式\",\"t\":[\"通过用 HTML 创建一个导航栏\",\"<!-- index.html --> <body> <nav> <a href=\\\"#/en-us/\\\">EN</a> <a href=\\\"#/zh-cn/\\\">中文</a> </nav> <div id=\\\"app\\\"></div> </body> \",\"注意\",\"文档的链接必须要以 #/ 开头\"]},\"58\":{\"h\":\"Markdown\",\"t\":[\"通过 Markdown 的方式需要配置 loadNavbar, 通过 _navbar.md 文件来定义 navbar, 具体配置见 配置项#loadNavbar\"]},\"59\":{\"h\":\"嵌套\",\"t\":[\"如果导航内容比较多, 可以写成嵌套的列表, docsify 会将其渲染成下拉列表的样式\",\"<!-- _navbar.md --> - 导航一 - [页面 1](page1.md) - [页面 2](page2.md) - [页面 3](page3.md) - 导航二 - [页面 4](pages/page4.md) - [页面 5](pages/page5.md) - [页面 6](pages/page6.md) \",\"_navbar.md 加载逻辑和 sidebar 文件一致, 从每层目录下获取. 例如当前路由为 /zh-cn/custom-navbar 那么是从 /zh-cn/_navbar.md 获取导航栏\"]},\"60\":{\"h\":\"封面\",\"t\":[\"通过设置 coverpage 参数, 可以开启渲染封面的功能. 具体配置见 配置项#coverpage\"]},\"61\":{\"h\":\"自定义背景\",\"t\":[\"docsify 默认的背景是随机生成的渐变色, 可以通过在 _coverpage.md 末尾添加图片的 Markdown 语法来设置背景, 支持图片和颜色\",\"<!-- _coverpage.md --> [GitHub](https://github.com/whiteChen233/whitechen233.github.io) [Get Started](#Headline) <!-- 背景图片 --> ![](https://blog.white233.top/Lucy-David.png) <!-- 背景色 --> ![color](#f0f0f0) \"]},\"62\":{\"h\":\"多个封面\",\"t\":[\"可以对不同的目录设置不同的封面\",\"如果你的目录结构是这样\",\". └── docs ├── README.md ├── page1.md ├── _coverpage.md └── pages ├── README.md └── page2.md └── _coverpage.md \",\"那么对应配置是\",\"window.$docsify = { coverpage: ['/', '/pages/'], }; \"]},\"63\":{\"h\":\"配置项\"},\"64\":{\"h\":\"el\",\"t\":[\"描述: docsify 初始化的挂载元素，可以是一个 CSS 选择器，默认为 #app 如果不存在就直接绑定在 body 上\",\"类型: String\",\"默认值: #app\"]},\"65\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"window.$docsify = { el: '#app', }; \"]},\"66\":{\"h\":\"name\",\"t\":[\"描述: 在侧边栏中显示的（网站）名字\",\"类型: String\",\"默认值: 无\"]},\"67\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { name: '我的文档网站', }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \",\"同时 name 还支持自定义 HTML 元素\",\"window.$docsify = { name: '<span>Name</span>', }; \"]},\"68\":{\"h\":\"repo\",\"t\":[\"描述: 配置存储库 URL 或用户名/存储库字符串, 在网站右上角添加一个 Github Corner 组件\",\"类型: String\",\"默认值: 无\"]},\"69\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { // 使用用户名/存储库字符串 repo: 'whiteChen233/whitechen233.github.io', // 或者使用仓库 URL // repo: 'https://github.com/whiteChen233/whitechen233.github.io', }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \"]},\"70\":{\"h\":\"homepage\",\"t\":[\"描述: 默认情况下 README.md 会被作为网站的首页, 也可以通过此项自定义\",\"类型: String\",\"默认值: README.md\"]},\"71\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { // 使用别的文件 homepage: 'home.md', // 或者指向仓库的 README // homepage: 'https://raw.githubusercontent.com/whiteChen233/whitechen233.github.io/main/README.adoc', }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \"]},\"72\":{\"h\":\"auto2top\",\"t\":[\"描述: 在路由变化的时候自动跳转至页面顶部\",\"类型: Boolean\",\"默认值: false\"]},\"73\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { auto2top: true, }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \"]},\"74\":{\"h\":\"coverpage\",\"t\":[\"描述: 通过设置 coverpage 参数, 可以开启渲染封面功能\",\"类型: Boolean|String|String[]|Object\",\"默认值: false\"]},\"75\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { coverpage: true, }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \",\"然后需要创建一个 _coverpage.md\",\"<!-- _coverpage.md --> ![logo](_media/icon.svg) # docsify <small>3.5</small> > 一个神奇的文档网站生成器。 - 简单、轻便 (压缩后 ~21kB) - 无需生成 html 文件 - 众多主题 [GitHub](https://github.com/whiteChen233/whitechen233.github.io) [Get Started](#Headline) \"]},\"76\":{\"h\":\"其他用法\",\"t\":[\"如果不想封面叫这个名字, 你也可以自定义名字, 比如 my-cover\",\"window.$docsify = { coverpage: 'my-cover.md', }; \",\"如果有多个目录需要各自设置封面, 比如多语言的时候\",\"window.$docsify = { coverpage: ['/en-us', 'zh-cn'], }; \",\"如果有多个封面, 又想自定义名字\",\"window.$docsify = { coverpage: { '/en-us': 'cover-en.md', 'zh-cn': 'cover-zh.md', }, }; \"]},\"77\":{\"h\":\"loadSidebar\",\"t\":[\"描述: 通过设置 loadSidebar 参数, 可以定制侧边栏\",\"类型: Boolean|String\",\"默认值: false\"]},\"78\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { loadSidebar: true, }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \",\"在初始化的基础上添加一个 page1.md, pages\\\\README.md, 然后需要创建一个 _sidebar.md, 内容如下\",\"- 目录 - [pages](pages/) - [index](README.md) - [Page 1](page1.md) \",\"提示\",\"子目录中的 README.md 文件可以作为路由的默认网页\",\"也可以通过指定文件名来自定义文件名, 像这样\",\"window.$docsify = { loadSidebar: 'my_sidebar.md', }; \"]},\"79\":{\"h\":\"loadNavbar\",\"t\":[\"描述: 自定义导航栏\",\"类型: Boolean|String\",\"默认值: false\"]},\"80\":{\"h\":\"基本用法\",\"t\":[\"修改 index.html 中的配置\",\"<!-- index.html --> <script> window.$docsify = { loadNavbar: true, }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> \",\"创建 _navbar.md 文件\",\"<!-- _navbar.md --> - [En](/) - [简体中文](/zh-cn/) \"]},\"81\":{\"h\":\"alias\",\"t\":[\"描述: 设置别名\",\"类型: Object\",\"默认值: 无\",\"可以自由管理路由规则, 且支持正则表达式\",\"请注意, 顺序很重要！\",\"如果路由可以由多个别名匹配, 那么首先声明的别名优先级更高\"]},\"82\":{\"h\":\"基本用法\",\"t\":[\"window.$docsify = { alias: { '/pages/(.*)': '/test/$1', // 正则 '/pages/changelog': '/changelog', '/changelog': 'https://raw.githubusercontent.com/docsifyjs/docsify/master/CHANGELOG', '/.*/_sidebar.md': '/_sidebar.md', // 配置 sidebar 别名 }, }; \"]},\"83\":{\"h\":\"subMaxLevel\",\"t\":[\"描述: 在自定义边栏中添加目录（TOC）\",\"类型: Number\",\"默认值: 0\"]},\"84\":{\"h\":\"基本用法\",\"t\":[\"window.$docsify = { subMaxLevel: 2, }; \",\"如果在侧边栏中有指向主页的链接, 并希望它在访问根网址时显示为活动状态, 请确保相应地更新侧边栏\",\"- Sidebar - [Home](/) - [Another page](page.md) \"]},\"85\":{\"h\":\"fallbackLanguages\",\"t\":[\"描述: 提供配置语言列表的可能性, 当请求的语言中缺少页面时, 会回退成默认语言文件\",\"类型: Array<string>\",\"默认值: 无\",\"Example:\",\"尝试访问 /de/overview, 如果存在则显示\",\"如果不存在则尝试 /overview（取决于默认语言）, 如果存在即显示\",\"如果也不存在, 显示 404 页面\"]},\"86\":{\"h\":\"基本用法\",\"t\":[\"window.$docsify = { fallbackLanguages: ['en', 'zh'], }; \"]},\"87\":{\"h\":\"notFoundPage\",\"t\":[\"描述: 配置 404 页面\",\"类型: Boolean|String|Object\",\"默认值: 无\"]},\"88\":{\"h\":\"基本用法\",\"t\":[\"在找不到指定页面时加载 _404.md\",\"window.$docsify = { notFoundPage: true, }; \"]},\"89\":{\"h\":\"其他用法\",\"t\":[\"加载自定义的 404 页面\",\"window.$docsify = { notFoundPage: 'my404.md', }; \",\"加载本地化过的 404 页面\",\"window.$docsify = { notFoundPage: { '/': '_404.md', '/en': 'en_404.md', }, }; \",\"注意\",\"配置过 fallbackLanguages 这个选项的页面与这个选项 notFoundPage 冲突\"]},\"90\":{\"h\":\"主题\",\"t\":[\"目前可以使用的有官方和社区制作的. 模仿 Vue 和 buble 官网定制的主题样式等\",\"<link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/themes/vue.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/themes/buble.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/themes/dark.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/themes/pure.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/themes/dolphin.css\\\" /> \",\"提示\",\"CSS 的压缩文件位于 /lib/themes/\",\"<!-- compressed --> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/lib/themes/vue.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/lib/themes/buble.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/lib/themes/dark.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/lib/themes/pure.css\\\" /> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/docsify/lib/themes/dolphin.css\\\" /> \"]},\"91\":{\"h\":\"其他主题\",\"t\":[\"docsify-themeable 一个用于 docsify 的, 简单到令人愉悦的主题系统\",\"可选配置\"]},\"92\":{\"h\":\"插件\"},\"93\":{\"h\":\"全文搜索 - Search\",\"t\":[\"全文搜索插件会根据当前页面上的超链接获取文档内容, 在 localStorage 内建立文档索引. 默认过期时间为一天, 可以指定需要缓存的文件列表或者配置过期时间\",\"简单使用\",\"<script> window.$docsify = { // 默认值 search: 'auto', }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js\\\"></script> \",\"当然也可以指定搜索的路径\",\"<script> window.$docsify = { search: [ '/', // => /README.md '/guide', // => /guide.md '/get-started', // => /get-started.md '/zh-cn/', // => /zh-cn/README.md ], }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js\\\"></script> \",\"完整配置\",\"<script> window.$docsify = { // 完整配置参数 search: { maxAge: 86400000, // 过期时间，单位毫秒，默认一天 paths: [], // or 'auto' /* * placeholder 也支持本地化 * placeholder: { * '/zh-cn/': '搜索', * '/': 'Type to search' * }, */ placeholder: 'Type to search', /* * noData 也支持本地化 * noData: { * '/zh-cn/': '找不到结果', * '/': 'No Results' * }, */ noData: 'No Results!', // 搜索标题的最大层级, 1 - 6 depth: 2, // 是否隐藏其他侧边栏内容 hideOtherSidebarContent: false, // 避免搜索索引冲突 // 同一域下的多个网站之间 namespace: 'website-1', // 使用不同的索引作为路径前缀（namespaces） // 注意：仅适用于 paths: 'auto' 模式 // // 初始化索引时，我们从侧边栏查找第一个路径, 如果它与列表中的前缀匹配，将切换到相应的索引 /* * pathNamespaces 也可以提供一个正则表达式来匹配前缀. 在这种情况下, 匹配到的字符串将被用来识别索引 * pathNamespaces: /^(\\\\/(zh-cn|ru-ru))?(\\\\/(v1|v2))?/ */ pathNamespaces: ['/zh-cn', '/ru-ru', '/ru-ru/v1'], }, }; </script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\\\"></script> <script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js\\\"></script> \",\"提示\",\"当执行全文搜索时, 该插件会忽略双音符（例如, \\\"cafe\\\" 也会匹配 \\\"café\\\"）. 像 IE11 这样的旧版浏览器需要使用以下 String.normalize() polyfill 来忽略双音符\",\"<script src=\\\"//polyfill.io/v3/polyfill.min.js?features=String.prototype.normalize\\\"></script> \"]},\"94\":{\"h\":\"图片缩放 - Zoom image\",\"t\":[\"基于 medium-zoom 的 Medium's 风格的图片缩放插件\",\"<script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/zoom-image.min.js\\\"></script> \",\"如果需要忽略某张图片\",\"![](image.png ':no-zoom') \"]},\"95\":{\"h\":\"字数统计\",\"t\":[\"这是一款为 docsify 提供文字统计的插件. 它提供了统计中文汉字和英文单词的功能，并且排除了一些 markdown 语法的特殊字符例如*、-等\",\"<script> window.$docsify = { count: { countable: true, fontsize: '0.9em', color: 'rgb(90,90,90)', language: 'chinese', }, }; </script> <script src=\\\"//unpkg.com/docsify-count/dist/countable.js\\\"></script> \"]},\"96\":{\"h\":\"分页导航\",\"t\":[\"docsify 的分页导航插件\",\"<script src=\\\"//cdn.jsdelivr.net/npm/docsify-pagination/dist/docsify-pagination.min.js\\\"></script> \"]},\"97\":{\"h\":\"emoji\",\"t\":[\"默认是提供 emoji 解析的, 能将类似 :100: 解析成 💯, 但是它不是精准的, 因为没有处理非 emoji 的字符串. 如果需要正确解析 emoji 字符串, 可以引入这个插件\",\"<script src=\\\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/emoji.min.js\\\"></script> \",\"提示\",\"如果你不想解析成表情符号, 可以使用 __colon__ 或 &#58;, 如果你需要在标题中使用, 我们建议使用 &#58;, 例如: &#58;100:\"]},\"98\":{\"h\":\"更多插件\",\"t\":[\"参考 awesome-docsify\"]},\"99\":{\"h\":\"自定义插件\",\"t\":[\"参考 自定义插件\"]},\"100\":{\"h\":\"Markdown 配置\",\"t\":[\"docsify 内置的 Markdown 解析器是 marked, 可以修改它的配置来实现自定义, 也可以直接配置 renderer\",\"window.$docsify = { markdown: { smartypants: true, renderer: { link: function () { // ... }, }, }, }; \",\"当然也可以完全定制 Markdown 的解析规则\",\"window.$docsify = { markdown: function (marked, renderer) { // ... return marked; }, }; \"]},\"101\":{\"h\":\"mermaid\",\"t\":[\"docsify 也是支持 mermaid 的, mermaid 是什么\",\"导入脚本和样式\",\"<!-- css --> <link rel=\\\"stylesheet\\\" href=\\\"//cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.css\\\" /> <!-- js 注意这个导入要在声明 mermaid 之前 --> <script src=\\\"//cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\\\"></script> \",\"配置\",\"<script> var num = 0; mermaid.initialize({ startOnLoad: false }); window.$docsify = { markdown: { renderer: { code: function (code, lang) { if (lang === 'mermaid') { return '<div class=\\\"mermaid\\\">' + mermaid.render('mermaid-svg-' + num++, code) + '</div>'; } return this.origin.code.apply(this, arguments); }, }, }, }; </script> \"]},\"102\":{\"h\":\"代码高亮\",\"t\":[\"docsify 有内置的代码高亮工具, 由 Prism 实现, 默认支持以下语言\",\"Markup - markup, html, xml, svg, mathml, ssml, atom, rss\",\"CSS - css\",\"C-like - clike\",\"JavaScript - javascript, js\",\"添加额外的语法支持需要只通过 CDN 添加不同的语法文件, 比如\",\"<script src=\\\"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-bash.min.js\\\"></script> <script src=\\\"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-php.min.js\\\"></script> \",\"查看支持的语言列表\"]},\"103\":{\"h\":\"更多支持\",\"t\":[\"文档助手\",\"兼容 Vue\",\"CDN\",\"离线模式（PWA）\",\"服务端渲染（SSR）\",\"文件嵌入\"]},\"104\":{\"h\":\"docsify-cli\"},\"105\":{\"h\":\"初始化命令: init\",\"t\":[\"使用 init 来初始化文档\",\"# 完整 docsify init <path> [--local false] [--theme vue] [--plugins false] # 简写 docsify i <path> [-l false] [-t vue] [-p false] \",\"<path>: 初始化的路径, 默认是当前目录. 可以使用相对路径, 类似 ./docs 或者 docs\",\"--local\",\"简写: -l\",\"类型: boolean\",\"默认值: false\",\"说明: 将 docsify 文件复制到文档路径, 默认为 false, 使用 cdn.jsdelivr.net 作为内容分发网络 （CDN）. 使用 --no-local 将此选项显式设置为 false\",\"--theme\",\"简写: -t\",\"类型: string\",\"默认值: vue\",\"说明: 设置一个主题, 默认是 vue, 其他的选择还有 buble、dark 和 pure\",\"--plugins\",\"简写: -p\",\"类型: boolean\",\"默认值: false\",\"说明: 提供要作为 <script> 标签插入到 index.html 中的插件列表\"]},\"106\":{\"h\":\"运行命令: serve\",\"t\":[\"在本地运行服务, 预览页面\",\"# 完整 docsify serve <path> [--open false] [--port 3000] # 简写 docsify s <path> [-o false] [-p 3000] \",\"--open\",\"简写: -o\",\"类型: boolean\",\"默认值: false\",\"说明: 使用默认的浏览器打开文档, 默认为 false. 使用 --no-open 将此选项显示设置为 false\",\"--port\",\"简写: -p\",\"类型: number\",\"默认值: 3000\",\"说明: 选定一个监听端口, 默认设置为 3000\"]},\"107\":{\"h\":\"生成命令: generate\",\"t\":[\"# 完整 docsify generate <path> [--sidebar _sidebar.md] # 简写 docsify g <path> [-s _sidebar.md] \",\"生成指定目录下的 \\\\_sidebar.md 文件\",\"<path>: 生成的路径\",\"--sidebar\",\"简写: -s\",\"类型: string\",\"默认值: \\\\_sidebar.md\",\"说明: 生成 sidebar 文件, 默认生成文件 _sidebar.md\"]},\"108\":{\"h\":\"其他命令\",\"t\":[\"帮助\",\"# 完整 docsify --help # 简写 docsify -h \",\"查看版本\",\"# 完整 docsify --version # 简写 docsify -v \"]},\"109\":{\"h\":\"官方文档\",\"t\":[\"docsify\",\"docsify-cli\"]},\"110\":{\"h\":\"基于注解+配置类方式整合三层架构组件\"},\"111\":{\"h\":\"项目实践：\",\"t\":[\"1．需求案例：搭建一个三层架构案例，模拟查询全部用户（用户表）信息，持久层使用JdbcTemplate和Druid技术，使用注解方式进行组件管理，使用Java配置类代替XML配置文件。\",\"2．项目架构：参考借鉴《Spring项目实践——IoC/DI案例》\",\"3．数据模型：\",\"CREATE TABLE user (\",\"id INT(11) NOT NULL AUTO_INCREMENT,\",\"username VARCHAR(50) NOT NULL,\",\"password VARCHAR(50) NOT NULL,\",\"PRIMARY KEY (id)\",\") ENGINE=INNODB AUTO_INCREMENT=1\",\"DEFAULT CHARSET=utf8\",\"4．实践要求：\",\"(1) 参考借鉴《Spring项目实践——IoC/DI案例》实现\",\"(2) 使用Junit5以上版本完成测试。\"]},\"112\":{\"h\":\"项目实现\"},\"113\":{\"h\":\"项目目录\",\"t\":[\"image-Spring-practice1\"]},\"114\":{\"h\":\"一、数据库\"},\"115\":{\"h\":\"1、添加新的数据库（usermis）:\",\"t\":[\"SET NAMES utf8mb4; SET FOREIGN_KEY_CHECKS = 0; -- ---------------------------- -- Table structure for user -- ---------------------------- DROP TABLE IF EXISTS user; CREATE TABLE user ( id int NOT NULL AUTO_INCREMENT, username varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL, password varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL, PRIMARY KEY (id) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = Dynamic; -- ---------------------------- -- Records of user -- ---------------------------- INSERT INTO user VALUES (1, 'Peng Yuning', '8WvErMonB8'); INSERT INTO user VALUES (2, 'Takahashi Kasumi', 'YUEsievZJM'); INSERT INTO user VALUES (3, 'Bruce Rodriguez', 'oSKkZSv4wm'); INSERT INTO user VALUES (4, 'Lau Ching Wan', 'F0WfooyAy2'); INSERT INTO user VALUES (5, 'Lui Sze Kwan', 'Msou1bJ0vv'); INSERT INTO user VALUES (6, 'Ernest Crawford', '6BZpnzERaC'); INSERT INTO user VALUES (7, 'Juan Castillo', '8enHa9Ay1D'); INSERT INTO user VALUES (8, 'Fu Wing Kuen', 'kQbmCoKWxa'); INSERT INTO user VALUES (9, 'Valerie Harrison', 'MaIuoHAGHQ'); INSERT INTO user VALUES (10, 'Margaret Henderson', 'pBCv42yItl'); SET FOREIGN_KEY_CHECKS = 1; \"]},\"116\":{\"h\":\"二、项目创建\"},\"117\":{\"h\":\"1、配置xml文件，导入Spring相关依赖和需求相关技术的依赖\",\"t\":[\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <groupId>org.example</groupId> <artifactId>WebLesson</artifactId> <version>1.0-SNAPSHOT</version> <packaging>pom</packaging> <modules> <module>Spring-Practice-01</module> </modules> <properties> <maven.compiler.source>19</maven.compiler.source> <maven.compiler.target>19</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-context --> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>6.0.6</version> </dependency> <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>5.10.0</version> <scope>test</scope> </dependency> <!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api --> <dependency> <groupId>jakarta.annotation</groupId> <artifactId>jakarta.annotation-api</artifactId> <version>2.1.1</version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-aspects</artifactId> <version>6.0.6</version> </dependency> <!--数据库驱动--> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>8.0.33</version> </dependency> <!--数据库连接池--> <dependency> <groupId>com.alibaba</groupId> <artifactId>druid</artifactId> <version>1.2.8</version> </dependency> <!--Spring JDBC--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-jdbc</artifactId> <version>6.0.6</version> </dependency> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> <version>1.18.24</version> </dependency> <!--spring-test--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-test</artifactId> <version>6.0.6</version> </dependency> <!--声明式事务依赖--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-tx</artifactId> <version>6.0.6</version> </dependency> </dependencies> </project> \"]},\"118\":{\"h\":\"2、构建三层架构，并编写相关代码，创建接口并重写方法，然后使用Spring框架标签进行托管。\",\"t\":[\"User.java 实体类\",\"package com.Ek0wraith.dao.pojo; import lombok.Data; /** * ClassName: User * Package: com.Ek0wraith.dao.pojo * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 15:56 * @Version 1.0 */ @Data public class User { private Integer id; private String username; private String password; } \",\"UserDao.java 接口\",\"package com.Ek0wraith.dao; import com.Ek0wraith.dao.pojo.User; import java.util.List; /** * ClassName: UserDao * Package: com.Ek0wraith.dao * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 15:58 * @Version 1.0 */ public interface UserDao { List<User> queryAll(); } \",\"UserDaoImpl.java\",\"package com.Ek0wraith.dao; import com.Ek0wraith.dao.pojo.User; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.jdbc.core.BeanPropertyRowMapper; import org.springframework.jdbc.core.JdbcTemplate; import org.springframework.stereotype.Repository; import java.util.List; /** * ClassName: UserDaoImpl * Package: com.Ek0wraith.dao * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 15:56 * @Version 1.0 */ @Repository public class UserDaoImpl implements UserDao{ @Autowired private JdbcTemplate jdbcTemplate; @Override public List<User> queryAll() { String sql = \\\"select * from users;\\\"; List<User> userList = jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(User.class)); return userList; } } \",\"UserService.java\",\"package com.Ek0wraith.service; import com.Ek0wraith.dao.pojo.User; import java.util.List; /** * ClassName: UserService * Package: com.Ek0wraith.service * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:13 * @Version 1.0 */ public interface UserService { List<User> findAll(); } \",\"UserServiceImpl.java\",\"package com.Ek0wraith.service; import com.Ek0wraith.dao.UserDao; import com.Ek0wraith.dao.pojo.User; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Service; import java.util.List; /** * ClassName: UserServiceImpl * Package: com.Ek0wraith.service * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:13 * @Version 1.0 */ @Service public class UserServiceImpl implements UserService{ @Autowired private UserDao userDao; @Override public List<User> findAll() { List<User> userList = userDao.queryAll(); return userList; } } \",\"UserController.java\",\"package com.Ek0wraith.controller; import com.Ek0wraith.dao.pojo.User; import com.Ek0wraith.service.UserService; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Controller; import java.util.List; /** * ClassName: UserController * Package: com.Ek0wraith.controller * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:12 * @Version 1.0 */ @Controller public class UserController { @Autowired private UserService userService; public void findAll(){ List<User> userList = userService.findAll(); System.out.println(\\\"userList = \\\" + userList); } } \"]},\"119\":{\"h\":\"3、IoC配置\",\"t\":[\"application.properties\",\"college.name=usth \"]},\"120\":{\"h\":\"4、jdbc配置\",\"t\":[\"jdbc.properties\",\"Ek0wraith.url=jdbc:mysql://localhost:3306/usermis Ek0wraith.driver=com.mysql.cj.jdbc.Driver Ek0wraith.username=root Ek0wraith.password=123456 \"]},\"121\":{\"h\":\"5、基于配置类方式管理组件Bean（配置+注解）\",\"t\":[\"CollegeConfiguration.java\",\"package config; import org.springframework.context.annotation.ComponentScan; import org.springframework.context.annotation.PropertySource; import org.springframework.context.annotation.Configuration; /** * ClassName: Configuration * Package: com.Ek0wraith.config * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:30 * @Version 1.0 */ @Configuration @PropertySource(\\\"classpath:application.properties\\\") @ComponentScan(\\\"demo\\\") public class CollegeConfiguration { } \",\"将Druid连接池对象存储到IoC容器\",\"JavaConfiguration.java\",\"package config; import com.alibaba.druid.pool.DruidDataSource; import org.springframework.beans.factory.annotation.Value; import org.springframework.beans.factory.config.ConfigurableBeanFactory; import org.springframework.context.annotation.*; import org.springframework.jdbc.core.JdbcTemplate; import javax.sql.DataSource; /** * ClassName: JavaConfiguration * Package: com.Ek0wraith.config * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:37 * @Version 1.0 */ /** * 第三方类进行IoC管理，无法直接使用@Component相关注解。 * 解决方案1：XML方式可以使用<bean>标签 * 解决方案2：配置类方式，可以使用方法返回值+@Bean注解 * @Bean注解用于指示方法实例化、配置和初始化要由Spring IoC容器管理的新对象。@Bean注解==<bean/> */ @Configuration @PropertySource(\\\"classpath:jdbc.properties\\\") @ComponentScan(basePackages = {\\\"com.Ek0wraith\\\"}) public class JavaConfiguration { @Value(\\\"${Ek0wraith.url}\\\") private String url; @Value(\\\"${Ek0wraith.driver}\\\") private String driverClassName; @Value(\\\"${Ek0wraith.username}\\\") private String username; @Value(\\\"${Ek0wraith.password}\\\") private String password; @Bean public DataSource dataSource() { //Java代码实例化 DruidDataSource dataSource = new DruidDataSource(); dataSource.setUrl(url); dataSource.setDriverClassName(driverClassName); dataSource.setUsername(username); dataSource.setPassword(password); return dataSource; } @Bean //@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE) public JdbcTemplate jdbcTemplate(DataSource dataSource){ JdbcTemplate jdbcTemplate = new JdbcTemplate(); jdbcTemplate.setDataSource(dataSource); return jdbcTemplate; } } \"]},\"122\":{\"h\":\"三、Spring—Test测试\"},\"123\":{\"h\":\"1、导入依赖组件\",\"t\":[\"<!--spring-test--> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-test</artifactId> <version>6.0.6</version> </dependency> \"]},\"124\":{\"h\":\"2、构建元件\",\"t\":[\"College.java\",\"package demo; import org.springframework.beans.factory.annotation.Value; import org.springframework.stereotype.Component; /** * ClassName: College * Package: com.Ek0wraith.demo * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:25 * @Version 1.0 */ @Component public class College { @Value(\\\"${college.name:黑科技}\\\") private String collegeName; public String getCollegeName() { return collegeName; } public void setCollegeName(String collegeName) { this.collegeName = collegeName; } } \",\"spring-01.xml\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <beans xmlns=\\\"http://www.springframework.org/schema/beans\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:context=\\\"http://www.springframework.org/schema/context\\\" xsi:schemaLocation=\\\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\\\"> <context:property-placeholder location=\\\"classpath:application.properties\\\"/> <context:component-scan base-package=\\\"demo\\\"/> </beans> \"]},\"125\":{\"h\":\"3、编写测试类\",\"t\":[\"IntegrationTest1.java\",\"package demo; import org.junit.jupiter.api.Test; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.test.context.junit.jupiter.SpringJUnitConfig; /** * ClassName: IntergrationTest1 * Package: demo * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:52 * @Version 1.0 */ @SpringJUnitConfig(locations = {\\\"classpath:spring-01.xml\\\"}) public class IntegrationTest1 { @Autowired private College college; @Test public void test1(){ System.out.println(\\\"college.getCollegeName() = \\\" + college.getCollegeName()); } } \",\"IntegrationTest2.java\",\"package demo; import com.Ek0wraith.controller.UserController; import config.JavaConfiguration; import org.junit.jupiter.api.Test; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.test.context.junit.jupiter.SpringJUnitConfig; /** * ClassName: IntergrationTest2 * Package: demo * Description：TODO * * @Author Ek0wraith * @Create 2024/5/8 16:55 * @Version 1.0 */ @SpringJUnitConfig(value = {JavaConfiguration.class}) public class IntegrationTest2 { @Autowired private UserController userController; @Test public void test2() {userController.findAll();} } \"]},\"126\":{\"h\":\"四、执行测试，查看是否通过\",\"t\":[\"1、IntegrationTest1运行结果\",\"college.getCollegeName() = usth Process finished with exit code 0 \",\"2、IntegrationTest2运行结果\",\"信息: {dataSource-1} inited userList = [User(id=1, username=Peng Yuning, password=8WvErMonB8), User(id=2, username=Takahashi Kasumi, password=YUEsievZJM), User(id=3, username=Bruce Rodriguez, password=oSKkZSv4wm), User(id=4, username=Lau Ching Wan, password=F0WfooyAy2), User(id=5, username=Lui Sze Kwan, password=Msou1bJ0vv), User(id=6, username=Ernest Crawford, password=6BZpnzERaC), User(id=7, username=Juan Castillo, password=8enHa9Ay1D), User(id=8, username=Fu Wing Kuen, password=kQbmCoKWxa), User(id=9, username=Valerie Harrison, password=MaIuoHAGHQ), User(id=10, username=Margaret Henderson, password=pBCv42yItl)] Process finished with exit code 0 \",\"测试通过。\"]},\"127\":{\"h\":\"常用链接\"},\"128\":{\"h\":\"博客相关\",\"t\":[\"VuePress\",\"vuepress-theme-hope\",\"Markdown语法\",\"Markdown扩展\",\"Markdown增强\",\"Iconfont精选图标\",\"中文排版规范\"]},\"129\":{\"h\":\"其它资源\",\"t\":[\"EBook - 免费编程书籍\"]},\"130\":{\"h\":\"Gradle\"},\"131\":{\"h\":\"coming soon\"},\"132\":{\"h\":\"IntelliJ IDEA\"},\"133\":{\"h\":\"coming soon\"},\"134\":{\"h\":\"Apache Maven\"},\"135\":{\"h\":\"Maven 是什么\",\"t\":[\"Maven\",\"What is Maven ?\",\"Maven, a Yiddish word meaning accumulator of knowledge, began as an attempt to simplify the build processes in the Jakarta Turbine project. There were several projects, each with their own Ant build files, that were all slightly different. JARs were checked into CVS. We wanted a standard way to build the projects, a clear definition of what the project consisted of, an easy way to publish project information, and a way to share JARs across several projects.\",\"—— Maven 官网是这么 介绍 自己的\",\"Apache Maven 是一个软件项目管理和理解工具. 基于项目对象模型的概念（POM）, Maven 可以从一个中心信息中管理项目的构建, 报告和文档\",\"Maven 只需要做一些简单的配置, Maven 就可以自动完成项目的编译、测试、打包、发布以及部署等工作\"]},\"136\":{\"h\":\"约定优于配置\",\"t\":[\"约定优于配置（Convention Over Configuration）其是 Maven 最核心的设计理念之一, Maven 对项目的目录结构、测试用例命名方式等内容都做了规定, 凡是使用 Maven 管理的项目都必须遵守这些规则\",\"Maven 项目构建过程中, 会自动创建默认项目结构, 开发人员仅需要在相应目录结构下放置相应的文件即可\"]},\"137\":{\"h\":\"POM 是什么\",\"t\":[\"POM 全称是 Project Object Model, 即项目对象模型, 它是保存在名为 pom.xml 文件中的 Maven 项目的表现形式\",\"POM 中定义了项目的基本信息, 用于描述项目如何构建、声明项目依赖等等, pom.xml 文件一般长这样:\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <!-- modelVersion包含4.0.0. 这是当前唯一受支持的POM版本, 并且始终是必需的 --> <groupId>com.example</groupId> <artifactId>demo</artifactId> <version>0.0.1-SNAPSHOT</version> <name>demo</name> <description>Demo project</description> <properties> <java.version>1.8</java.version> </properties> <dependencies> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.11</version> <scope>test</scope> </dependency> </dependencies> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <version>3.8.1</version> <configuration> <source>1.8</source> <target>1.8</target> <encoding>UTF-8</encoding> </configuration> </plugin> </plugins> </build> </project> \"]},\"138\":{\"h\":\"POM 基础知识\"},\"139\":{\"h\":\"Maven 坐标\",\"t\":[\"说到坐标, 最熟悉的定义应该是来自平面几何, 即在一个平面坐标系中, 坐标（x, y）表示距离 x 轴为 y, 距离 y 轴距离为 x 的点, 任何一个坐标都能够唯一标识该平面上的一个点\",\"在现实的生活中同样存在着很多坐标, 例如地址, 就可以通过国家、省、市、县、乡镇、村、门牌号等一些列信息唯一地标识一个地址\",\"Maven 规定: groupId:artifactId:version 都是必填字段（尽管如果 groupId 和 version 是从父级继承的, 则不需要显式定义它们）, 只要用户提供了正确的坐标元素, Maven 就能找到对应的构件\",\"groupId: Maven 项目隶属的组织或公司, 通常是唯一的. 它的取值一般是项目所属公司或组织的网址或 URL 的反写, 例如 io.github.whitechen233\",\"artifactId: Maven 项目的名称, 项目的唯一的标识符, 对应项目根目录的名称\",\"version: Maven 项目的版本\"]},\"140\":{\"h\":\"Maven 构件\",\"t\":[\"在 Maven 中, 任何一个依赖、插件或者项目构建的输出, 都可以称为 构件\",\"每个构件都有自己的唯一标识(唯一坐标), 由 groupId, artifactId, 和 version 等信息构成, 由此, Maven 就可以对构件进行版本控制、管理\",\"可以通过以下网站搜索可用的构件:\",\"Maven Repository\",\"Maven Central Repository\",\"Package Search\",\"Maven 的一个强大方面是它对项目关系的处理: 这包括依赖关系（和传递依赖关系）、继承和聚合（多模块项目）\",\"依赖关系管理有着悠久的传统, 除了最琐碎的项目之外, 任何事情都是一团糟。随着依赖树变得庞大而复杂, 其中一个系统上的依赖项版本不等同于开发的版本, 要么是给定的错误版本, 要么是名称相似的 jar 之间的版本冲突\",\"Maven 通过一个通用的本地存储库解决了这两个问题, 从中可以正确链接项目, 版本和所有内容\"]},\"141\":{\"h\":\"POM 关系\"},\"142\":{\"h\":\"依赖\",\"t\":[\"POM 的基石是其依赖关系列表, 大多数项目依赖于其他项目来正确构建和运行.Maven 下载并链接编译的依赖关系, 以及其他需要它们的目标, Maven 引入了这些依赖关系（传递依赖关系）的依赖关系, 开发人员仅需要关注项目所需的依赖关系\",\"POM 中通过 <dependencies/> 的子标签 <dependency/> 来声明依赖\",\"比如, 下面这段 junit 的依赖配置\",\"<dependencies> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.12</version> <type>jar</type> <scope>test</scope> <optional>true</optional> </dependency> </dependencies> \",\"以上配置中的各个标签的含义:\",\"groupId, artifactId, version: Maven 坐标 \",\"groupId, artifactId: 直接对应依赖项的坐标\",\"version: 依赖版本需求规范, 用于计算依赖项的有效版本\",\"classifier: 分类器区分从同一 POM 构建但内容不同的工件. 它是一些可选的任意字符串（如果存在）, 将附加到版本号之后的项目名称中. 举个栗子: 一个构件提供了一个针对 jdk11 的版本, 同时也提了一个 jdk8 的版本, 那么第一个就可以配置 <classifier>jdk11</classifier>, 第二个可以配置<classifier>jdk8</classifier>, 以便区分使用哪个\",\"type: 所选的依赖项类型, 默认为 jar. 通常表示依赖项文件名上的扩展名\",\"scope: 此元素指的是手头任务的类路径（编译和运行时、测试等）以及如何限制依赖项的可传递性 \",\"compile: 这是默认范围, 如果未指定则使用, 编译依赖项在所有类路径中都可用. 此外, 这些依赖项会传播到依赖项目\",\"provided: 如果希望 JDK 或容器在运行时提供它. 它仅在编译和测试类路径上可用, 并且不是可传递的\",\"runtime: 此范围表示编译不需要依赖项, 而是执行需要依赖项. 它在运行时和测试类路径中, 但不在编译类路径中\",\"test: 此范围表示应用程序的正常使用不需要依赖项, 并且仅适用于测试编译和执行阶段. 它不是可传递的\",\"system: 与 provided 的作用域类似, 但必须提供显式包含它的 JAR. 构件始终可用, 不会在存储库中查找\",\"systemPath: 用来指定依赖的绝对路径. 仅当依赖项范围为 system 时才使用, 否则即便设置也不会生效\",\"optional: 当此项目本身是依赖项时, 将依赖项标记为可选. 其实就是告诉其他项目, 在使用该项目时, 不需要此依赖项即可正常工作\",\"依赖作用范围\",\"classpath 用于指定 .class 文件存放的位置, 类加载器会从该路径中加载所需要的 .class 文件到内存中\",\"Maven 在编译、执行测试、实际运行有不同的 classpath:\",\"编译 classpath: 编译代码有效\",\"测试 classpath: 编译、运行测试有效\",\"运行 classpath: 项目运行时有效\"]},\"143\":{\"h\":\"依赖版本规范\",\"t\":[\"<dependency/> 的 <version/> 标签定义版本要求, 支持的语法:\",\"1.0: 对 1.0 的软需求, 如果依赖树的前面没有其他版本出现, 请使用 1.0\",\"[1.0]: 对 1.0 的硬性要求, 使用 1.0 并且只使用 1.0\",\"(,1.0]: 任何版本<=1.0 的硬要求\",\"[1.2,1.3]: 对包含 1.2 和 1.3 之间的任何版本的硬要求\",\"[1.0,2.0): 1.0<=x<2.0；对 1.0（包括）和 2.0（不包括）之间的任何版本的硬要求\",\"[1.5,): 任何大于或等于 1.5 的版本的硬要求\",\"(,1.0],[1.2,): 任何版本小于或等于 1.0 大于或等于 1.2, 但不是 1.1 的硬要求, 多个要求用逗号分隔\",\"(,1.1),(1.1,): 对除 1.1 之外的任何版本的硬要求；例如, 因为 1.1 存在严重漏洞\",\"Maven 选择满足该项目依赖项的所有硬要求的每个项目的最高版本. 如果没有版本满足所有硬要求, 则构建失败\",\"提示\",\"依赖版本制定是有规范的, 详情请参考官网说明\"]},\"144\":{\"h\":\"依赖冲突\",\"t\":[\"项目使用同一个 groupId:artifactId 时, 只能使用一个 version\",\"<dependencies> <dependency> <groupId>io.github.whitechen233</groupId> <artifactId>flyway-dm-support</artifactId> <version>1.0-RELEASE</version> </dependency> <!-- 最终使用的是这个版本的依赖 --> <dependency> <groupId>io.github.whitechen233</groupId> <artifactId>flyway-dm-support</artifactId> <version>1.0.1-RELEASE</version> </dependency> </dependencies> \",\"若相同类型但版本不同的依赖存在于同一个 pom 文件, 只会引入后一个声明的依赖\",\"项目的两个依赖同时引入了某个依赖\",\"Maven 在遇到这种问题的时候, 会遵循 路径最短优先 和 声明顺序优先 两大原则. 解决这个问题的过程也被称为 Maven 依赖调解\",\"路径最短优先: 依赖的层次路径越短的优先\",\"声明顺序优先: 如果路径长度一样, 那么先声明的优先\"]},\"145\":{\"h\":\"排除依赖\",\"t\":[\"可以使用 exclusions 排除包含一个或多个 exclusion 元素, 每个元素都包含一个 groupId 和 artifactId, 表示要排除的依赖. 与可能安装或不安装和使用的可选不同, 排除主动将自己从依赖树中删除\",\"<dependencies> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter</artifactId> <version>xxx</version> <exclusions> <exclusion> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-logging</artifactId> <version>xxx</version> </exclusion> </exclusions> </dependency> </dependencies> \"]},\"146\":{\"h\":\"继承\",\"t\":[\"Maven 为构建管理带来的一个强大补充是项目继承的概念, 尽管在构建系统中可以模拟 Ant 继承, 但 Maven 在项目对象模型中显式地执行了项目继承\",\"<project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <groupId>io.github.whitechen233</groupId> <artifactId>demo-parent</artifactId> <version>1.0.0</version> <packaging>pom</packaging> </project> \",\"对于 父项目 和 聚合（多模块） 项目, packaging 类型需要是 pom. 这些类型定义了绑定到一组生命周期阶段的目标。例如, 如果打包是 jar, 那么 package 阶段将执行 jar:jar 目标。现在我们可以向父 POM 添加值, 它将由其子级继承\",\"来自父 POM 的大多数元素都由其子级继承:\",\"groupId\",\"version\",\"description\",\"url\",\"inceptionYear\",\"organization\",\"licenses\",\"developers\",\"contributors\",\"mailingLists\",\"scm\",\"issueManagement\",\"ciManagement\",\"properties\",\"dependencyManagement\",\"dependencies\",\"repositories\",\"pluginRepositories\",\"build \",\"plugin executions with matching ids\",\"plugin configuration\",\"etc.\",\"reporting\",\"profiles\"]},\"147\":{\"h\":\"Super POM\",\"t\":[\"与面向对象程序设计中的对象继承类似, 扩展父 POM 的 POM 从该父 POM 继承某些值. 此外, 正如 Java 对象最终继承自 java.lang.Object 一样, 所有项目对象模型都继承自基本的 Super POM\",\"可以通过创建一个最小的 pom.xml 并在命令行上执行来查看 Super POM 如何影响项目对象模型: mvn help:effective-pom\"]},\"148\":{\"h\":\"依赖管理\",\"t\":[\"除了继承某些顶级元素之外, 父级元素还可以配置子 POM 和传递依赖项的值, dependencyManagement 就是其中之一\"]},\"149\":{\"h\":\"聚合（多模块）\",\"t\":[\"有模块的项目称为多模块或聚合项目, 模块是此 POM 列出并作为一个组执行的项目, pom 打包项目可以通过将一组项目列为模块来聚合它们的构建, 模块是这些项目的目录或 POM 文件的相对路径\",\"多模块管理简单地来说就是将一个项目分为多个模块, 每个模块只负责单一的功能实现, 多模块项目由管理一组子模块的聚合器 POM 构建\",\"一个多模块的父类 pom.xml 如下（注意高亮部分）:\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <groupId>com.example</groupId> <artifactId>demo</artifactId> <version>0.0.1-SNAPSHOT</version> <packaging>pom</packaging> <name>demo</name> <description>Demo project for Spring Boot</description> <properties> <java.version>1.8</java.version> </properties> <modules> <module>demo-api</module> <module>demo-dao</module> <module>demo-manager</module> <module>demo-service</module> <module>demo-web</module> <module>start</module> </modules> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <version>3.8.1</version> <configuration> <source>1.8</source> <target>1.8</target> <encoding>UTF-8</encoding> </configuration> </plugin> </plugins> </build> </project> \",\"其子模块的 pom.xml 如下:\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\\\"> <modelVersion>4.0.0</modelVersion> <parent> <groupId>com.example</groupId> <artifactId>demo</artifactId> <version>0.0.1-SNAPSHOT</version> <relativePath>../pom.xml</relativePath> </parent> <artifactId>demo-api</artifactId> <version>0.0.1-SNAPSHOT</version> </project> \"]},\"150\":{\"h\":\"Maven 插件\",\"t\":[\"Maven 实际上是一个依赖插件执行的框架, 它执行的每个任务实际上都由插件完成的. Maven 的核心发布包中并不包含任何 Maven 插件, 它们以独立构件的形式存在, 只有在 Maven 需要使用某个插件时, 才会去仓库中下载\",\"Maven 提供了如下 2 种类型的插件:\",\"Build plugins: 在项目构建过程中执行, 在 pom.xml 中的 <build/> 元素中配置\",\"Reporting plugins: 在网站生成过程中执行, 在 pom.xml 中的 <reporting/> 元素中配置\",\"除了 Maven 自带的插件之外, 还有一些三方提供的插件比如:\",\"jacoco-maven-plugin: 单测覆盖率插件\",\"maven-checkstyle-plugin: 帮助开发检测代码中不合规范的地方的插件\",\"sonar-maven-plugin: 分析代码质量的\"]},\"151\":{\"h\":\"插件目标\",\"t\":[\"对于 Maven 插件而言, 为了提高代码的复用性, 通常一个 Maven 插件能够实现多个功能, 每一个功能都是一个插件目标, 即 Maven 插件是插件目标的集合. 我们可以把插件理解为一个类, 而插件目标是类中的方法, 调用插件目标就能实现对应的功能\"]},\"152\":{\"h\":\"通用写法\",\"t\":[\"插件目标的通用写法如下\",\"[插件名]:[插件目标] \",\"例如, maven-compiler-plugin 插件的 compile 目标的通用写法如下\",\"maven-compiler-plugin:compiler \"]},\"153\":{\"h\":\"执行插件目标\",\"t\":[\"使用 Maven 命令执行插件的目标, 语法如下\",\"mvn [插件名]:[目标名] \",\"例如, 调用 maven-compiler-plugin 插件的 compile 目标, 命令如下\",\"mvn compiler:compile \"]},\"154\":{\"h\":\"插件绑定\",\"t\":[\"为了完成某个具体的构建任务, Maven 生命周期的阶段需要和 Maven 插件的目标相互绑定\"]},\"155\":{\"h\":\"内置绑定\",\"t\":[\"Maven 默认为一些核心的生命周期阶段绑定了插件目标, 当用户调用这些阶段时, 对应的插件目标就会自动执行相应的任务\",\"生命周期\",\"阶段\",\"插件目标\",\"执行的任务\",\"clean\",\"pre-clean\",\"clean\",\"maven-clean-plugin:clean\",\"清理 Maven 的输出目录\",\"post-clean\",\"default\",\"process-resources\",\"maven-resources-plugin:resources\",\"复制资源文件到输出目录\",\"compile\",\"maven-compiler-plugin:compile\",\"编译代码到输出目录\",\"process-test-resources\",\"maven-resources-plugin:testResources\",\"复制测试资源文件到测试输出目录\",\"test-compile\",\"maven-compiler-plugin:testCompile\",\"编译测试代码到测试输出目录\",\"test\",\"maven-surefire-plugin:test\",\"执行测试用例\",\"package\",\"maven-jar-plugin:jar/maven-jar-plugin:war\",\"创建项目 jar/war 包\",\"install\",\"maven-install-plugin:install\",\"将项目输出的包文件安装到本地仓库\",\"deploy\",\"maven-deploy-plugin:deploy\",\"将项目输出的包文件部署到到远程仓库\",\"site\",\"pre-site\",\"site\",\"maven-site-plugin:site\",\"生成项目站点\",\"post-site\",\"site-deploy\",\"maven-site-plugin:deploy\",\"部署项目站点\",\"提示\",\"上表中, default 生命周期中只列出了绑定了插件目标的阶段, 它还有很多其他的阶段, 但这些阶段默认没有绑定任何插件目标, 因此它们也没有任何实际的行为\"]},\"156\":{\"h\":\"自定义绑定\",\"t\":[\"除了内置绑定之外, 用户也可以自己选择将某个插件目标绑定到 Maven 生命周期的某个阶段上, 这种绑定方式就是自定义绑定\",\"自定义绑定能够让 Maven 在构建过程中执行更多更丰富的任务\",\"例如, 有一个第三方的 jar 包不能通过 maven 仓库导入, 那么可以通过本地安装的方式导入本地库. 通过 build 元素的子元素 plugins, 将 maven-install-plugin:install-file 目标绑定到 clean 阶段上\",\"<build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId> <version>2.5.2</version> <executions> <execution> <id>install-third-party-package</id> <phase>clean</phase> <goals> <goal>install-file</goal> </goals> <configuration> <file>${project.basedir}/lib/third-party-1.0.0.jar</file> <repositoryLayout>default</repositoryLayout> <groupId>third-party.groupId</groupId> <artifactId>third-party.artifactId</artifactId> <version>1.0.0</version> <packaging>jar</packaging> <generatePom>true</generatePom> </configuration> </execution> </executions> </plugin> </plugins> </build> \",\"execution 的说明:\",\"id: 任务的唯一标识\",\"phase: 插件目标需要绑定的生命周期阶段\",\"goals: 用于指定一组插件目标, 其子元素 goal 用于指定单个插件目标\",\"configuration: 该任务的配置\",\"提示\",\"当插件目标绑定到生命周期的不同阶段时, 其执行顺序由生命周期阶段的先后顺序决定. 如果多个目标绑定到同一个生命周期阶段, 其执行顺序与插件声明顺序一致, 先声明的先执行, 后声明的后执行\"]},\"157\":{\"h\":\"Maven 仓库\",\"t\":[\"Maven 在某个统一的位置存储所有项目的构件, 这个统一的位置, 我们就称之为仓库. 任何的构件都有唯一的坐标, 该坐标定义了构件在仓库中的唯一存储路径. 当 Maven 项目需要某些构件时, 只要其 POM 文件中声明了这些构件的坐标, Maven 就会根据这些坐标找自动到仓库中找到并使用它们\",\"项目构建完成生成的构件, 也可以安装或者部署到仓库中, 供其他项目使用\"]},\"158\":{\"h\":\"仓库的分类\",\"t\":[\"graph TD A(Maven仓库)-->B(本地仓库) A-->C(远程仓库) C-->D(中央仓库) C-->E(私服) C-->F(其他公共仓库) \",\"本地仓库: 运行 Maven 的计算机上的一个目录, 它缓存远程下载的构件并包含尚未发布的临时构件. settings.xml 文件中可以看到 Maven 的本地仓库路径配置, 默认本地仓库路径是在 ${user.home}/.m2/repository\",\"远程仓库: 官方或者其他组织维护的 Maven 仓库\",\"Maven 远程仓库又可以分为:\",\"中央仓库: 这个仓库是由 Maven 社区来维护的, 里面存放了绝大多数开源软件的包, 并且是作为 Maven 的默认配置, 不需要开发者额外配置. 另外为了方便查询, 还提供了一个查询地址, 开发者可以通过这个地址更快的搜索需要构件的坐标\",\"私服: 私服是一种特殊的远程 Maven 仓库, 它是架设在局域网内的仓库服务, 私服一般被配置为互联网远程仓库的镜像, 供局域网内的 Maven 用户使用\",\"其他的公共仓库: 有一些公共仓库是为了加速访问（比如阿里云 Maven 镜像仓库）或者部分构件不存在于中央仓库中\"]},\"159\":{\"h\":\"仓库的配置\",\"t\":[\"修改 Maven 安装目录下的 setting.xml 文件\",\"<settings xmlns=\\\"http://maven.apache.org/SETTINGS/1.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\\\"> <!-- 通过 localRepository 指定本地仓库地址 --> <localRepository>D:/Maven/repository</localRepository> <!-- 通过 mirrors 下的 mirror 标签配置远程仓库（镜像）地址 --> <mirrors> <!-- 阿里云镜像地址 --> <mirror> <id>aliyun</id> <mirrorOf>central</mirrorOf> <name>aliyun</name> <url>https://maven.aliyun.com/repository/public</url> </mirror> <!-- 华为云镜像地址 --> <mirror> <id>huaweicloud</id> <name>mirror from maven huaweicloud</name> <mirrorOf>central</mirrorOf> <url>https://repo.huaweicloud.com/repository/maven/</url> </mirror> </mirrors> </settings> \"]},\"160\":{\"h\":\"依赖包的搜索顺序\",\"t\":[\"当通过 Maven 构建项目时, Maven 按照如下顺序查找依赖的构件:\",\"先去本地仓库找寻, 有的话, 直接使用\",\"本地仓库没有找到的话, 会去远程仓库找寻, 下载包到本地仓库\",\"远程仓库没有找到的话, 会报错\"]},\"161\":{\"h\":\"Maven 构建生命周期\",\"t\":[\"在 Maven 出现之前, 项目构建的生命周期就已经存在, 开发人员每天都在对项目进行清理, 编译, 测试及部署, 但由于没有统一的规范, 不同公司甚至不同项目之间的构建的方式都不尽相同\",\"Maven 从大量项目和构建工具中学习和反思, 最后总结了一套高度完美的, 易扩展的生命周期. 这个生命周期将项目的清理、初始化、编译、测试、打包、集成测试、验证、部署和站点生成等几乎所有构建过程进行了抽象和统一\",\"Maven 有以下三个标准的生命周期:\",\"clean: 项目清理的处理\",\"default(或 build): 项目部署的处理\",\"site: 项目站点文档创建的处理\"]},\"162\":{\"h\":\"特性\"},\"163\":{\"h\":\"构建阶段的依赖性\",\"t\":[\"每个生命周期包含一系列的构建阶段（phase）, 这些阶段是有顺序的, 且后面的阶段依赖于前面的阶段\",\"用户与 Maven 最直接的交互方式就是调用这些生命周期阶段\"]},\"164\":{\"h\":\"生命周期的独立性\",\"t\":[\"与构建阶段的前后依赖关系不同, 三套生命周期本身是相互独立的, 用户可以只调用 clean 生命周期的某个阶段, 也可以只调用 default 生命周期的某个阶段, 而不会对其他生命周期造成任何影响\"]},\"165\":{\"h\":\"clean 生命周期\",\"t\":[\"clean 生命周期包含以下 3 个阶段\",\"阶段\",\"描述\",\"pre-clean\",\"执行一些需要在 clean 之前完成的工作\",\"clean\",\"移除所有上一次构建生成的文件\",\"post-clean\",\"执行一些需要在 clean 之后立刻完成的工作\",\"如何理解阶段的依赖关系理论\",\"以 clean 生命周期为例, 在上述 3 个阶段中\",\"当用户调用 pre-clean 阶段时, 则只有 pre-clean 阶段执行\",\"当用户调用 clean 阶段时, pre-clean 和 clean 阶段都会执行\",\"当用户调用 post-clean 阶段时, 则 pre-clean、clean 以及 post-clean 三个阶段都会执行\"]},\"166\":{\"h\":\"default 生命周期\",\"t\":[\"default 生命周期定义了项目真正构建时所需要的所有步骤, 它是所有生命周期中最核心, 最重要的部分\",\"default 生命周期包含以下 23 个阶段\",\"阶段\",\"描述\",\"validate\",\"校验: 校验项目是否正确并且所有必要的信息可以完成项目的构建过程\",\"initialize\",\"初始化: 初始化构建状态, 比如设置属性值\",\"generate-sources\",\"生成源代码: 生成包含在编译阶段中的任何源代码\",\"process-sources\",\"处理源代码: 处理源代码, 比如说, 过滤任意值\",\"generate-resources\",\"生成资源文件: 生成将会包含在项目包中的资源文件\",\"process-resources\",\"处理资源文件: 复制和处理资源到目标目录, 为打包阶段最好准备\",\"compile\",\"编译: 编译项目的源代码\",\"process-classes\",\"处理类文件: 处理编译生成的文件, 比如说对 Java class 文件做字节码改善优化\",\"generate-test-sources\",\"生成测试源代码: 生成包含在编译阶段中的任何测试源代码\",\"process-test-sources\",\"处理测试源代码: 处理测试源代码, 比如说, 过滤任意值\",\"generate-test-resources\",\"生成测试资源文件: 为测试创建资源文件\",\"process-test-resources\",\"处理测试资源文件: 复制和处理测试资源到目标目录\",\"test-compile\",\"编译测试源码: 编译测试源代码到测试目标目录.\",\"process-test-classes\",\"处理测试类文件: 处理测试源码编译生成的文件\",\"test\",\"测试: 使用合适的单元测试框架运行测试（Juint 是其中之一）\",\"prepare-package\",\"准备打包: 在实际打包之前, 执行任何的必要的操作为打包做准备\",\"package\",\"打包: 将编译后的代码打包成可分发格式的文件, 比如 JAR、WAR 或者 EAR 文件\",\"pre-integration-test\",\"集成测试前: 在执行集成测试前进行必要的动作比如说, 搭建需要的环境\",\"integration-test\",\"集成测试: 处理和部署项目到可以运行集成测试环境中\",\"post-integration-test\",\"集成测试后: 在执行集成测试完成后进行必要的动作比如说, 清理集成测试环境\",\"verify\",\"验证: 运行任意的检查来验证项目包有效且达到质量标准\",\"install\",\"安装: 安装项目包到本地仓库, 这样项目包可以用作其他本地项目的依赖\",\"deploy\",\"部署: 将最终的项目包复制到远程仓库中与其他开发者和项目共享\"]},\"167\":{\"h\":\"site 生命周期\",\"t\":[\"site 一般用来创建新的报告文档、部署站点等\",\"site 生命周期包含以下 4 个阶段\",\"阶段\",\"描述\",\"pre-site\",\"执行一些需要在生成站点文档之前完成的工作\",\"site\",\"生成项目的站点文档\",\"post-site\",\"执行一些需要在生成站点文档之后完成的工作, 并且为部署做准备\",\"site-deploy\",\"将生成的站点文档部署到特定的服务器上\"]},\"168\":{\"h\":\"Maven Profile\",\"t\":[\"一个项目通常都会有多个不同的运行环境, 例如开发环境、测试环境、生产环境等。而不同环境的构建过程很可能是不同的, 例如数据源配置、插件、以及依赖的版本等, 每次将项目部署到不同的环境时, 都需要修改相应的配置, 这样重复的工作, 不仅浪费劳动力, 还容易出错. 为了解决这一问题, Maven 引入了 Profile 的概念, 通过它可以为不同的环境定制不同的构建过程\"]},\"169\":{\"h\":\"Profile 的类型\",\"t\":[\"Profile 可以分为 3 个类型, 它们的作用范围也各不相同\",\"类型\",\"位置\",\"有效范围\",\"Per Profile\",\"Maven 项目的 pom.xml 中\",\"只对当前 Maven 项目有效\",\"Per User\",\"用户目录下（%USER_HOME%）的 /.m2/setting.xml 中\",\"对该用户所有 Maven 项目有效\",\"Global\",\"Maven 安装目录的（%MAVEN_HOME%）的 \\\\conf\\\\setting.xml 中\",\"对本机所有 Maven 项目有效\"]},\"170\":{\"h\":\"Profile 的声明\",\"t\":[\"Maven 通过 profiles 标签来声明一组 Profile 配置, 每一个 profile 对应一个 Profile 配置\",\"比如常用的多环境 profile 配置:\",\"<profiles> <profile> <!-- id 标识必填 --> <id>env-develop</id> <!-- 定义自定义的属性值 --> <properties> <!-- 这里的属性名标签（property.env）是支持自定义的 --> <property.env>dev</property.env> </properties> </profile> <profile> <id>env-test</id> <properties> <property.env>test</property.env> </properties> </profile> </profiles> \",\"在 Profile 中常用的 POM 元素如下表:\",\"一级\",\"二级\",\"三级\",\"project\",\"repositories\",\"pluginRepositories\",\"dependencies\",\"plugins\",\"dependencyManagement\",\"distributionManagement\",\"modules\",\"properties\",\"reporting\",\"build\",\"plugins\",\"defaultGoal\",\"resources\",\"testResources\",\"directory\",\"filters\",\"finalName\",\"pluginManagement\",\"在 setting.xml 中声明的 Profile 是无法保证能够随着 pom.xml 一起被分发的, 因此 Maven 不允许用户在该类型的 Profile 修改或增加依赖或插件等配置信息, 它只能声明以下范围较为宽泛的元素\",\"repositories: 仓库配置\",\"pluginRepositories: 插件仓库配置\",\"properties: 键值对, 该键值对可以在 pom.xml 中使用\"]},\"171\":{\"h\":\"Profile 的激活\",\"t\":[\"Profile 能够在项目构建时, 修改 POM 中配置或者添加一些额外的配置元素. 用户可以通过多种方式激活 Profile, 以实现不同环境使用不同的配置, 执行不同的构建过程\",\"Profile 可以通过以下 6 种方式激活:\",\"命令行激活\",\"在命令行中使用 mvn 命令行参数 -P 加上 Profile 的 id 来激活 Profile, 多个 id 之间使用逗号隔开\",\"# 在 pom.xml 启动 test1, test2 两个 Profile mvn clean install -Ptest1,test2 \",\"settings.xml 文件显示激活\",\"在本地仓库的 settings.xml 文件中添加如下配置, 激活指定的 Profile\",\"<activeProfiles> <activeProfile>test</activeProfile> </activeProfiles> \",\"系统属性激活\",\"用户可以配置当某个系统属性存在时, 激活指定的 Profile, 在 profile 标签添加如下配置:\",\"<activation> <property> <name>user</name> <value>prod</value> </property> </activation> \",\"执行命令 mvn clean test -Duser=prod, 就会自动激活这个 Profile\",\"操作系统环境激活\",\"Maven 还可以根据操作系统环境自动激活指定的 Profile, 在 profile 标签添加如下配置:\",\"<activation> <os> <name>Windows 10</name> <family>Windows</family> <arch>amd64</arch> <version>10.0</version> </os> </activation> \",\"文件存在与否激活\",\"Maven 可以根据某些文件存在与否, 来决定是否激活 Profile, 在 profile 标签添加如下配置:\",\"<!-- 当存在 env.prod.properties 存在且 env.test.properties 不存在时, 该 Profile 会激活 --> <activation> <file> <exists>./src/main/resources/env.prod.properties</exists> <missing>./src/main/resources/env.test.properties</missing> </file> </activation> \",\"默认激活\",\"可以在声明 Profile 时, 指定其默认激活, 在 profile 标签添加如下配置:\",\"<activation> <activeByDefault>true</activeByDefault> </activation> \"]},\"172\":{\"h\":\"软件工具\"},\"173\":{\"h\":\"工欲善其事, 必先利其器\"},\"174\":{\"h\":\"Visual Studio Code\"},\"175\":{\"h\":\"coming soon\"},\"176\":{\"h\":\"Java 集合\"},\"177\":{\"h\":\"集合是什么\",\"t\":[\"计算机科学中, 集合的定义是一组可变数量的数据项（也可能为 0 个）的组合, 这些数据项可能共享某些特征, 需要以某种操作方式一起进行操作\",\"Java 集合框架是一个用来代表和操纵集合的统一架构, 它提供了一套性能优良, 使用方便的接口和类, Java 集合框架位于 java.util 包中\",\"Java 集合也可以称为容器, 主要由两大接口派生而来: java.util.Collection 以及 java.util.Map, 其中 Collection 主要存放单个的数据对象, 而 Map 主要存放 key-value 的键值对对象\",\"集合应用场景:\",\"无法预测存储数据的数量: 由于数组容量是确定的, 因此集合存储不定量的数据更合适\",\"存储具有关系的数据: 比如<打工人-工资>的关系, 就可以使用 Map 来处理\",\"数据去重: 使用数组来实现去重的效率低, 而 Set 集合本身就具有元素不可重复的性质\",\"数据的操作: 数组不能方便的处理元素增删、移动等操作\",\"提示\",\"如果没有特殊说明, 给出的代码均来自 JDK 1.8 版本\"]},\"178\":{\"h\":\"Collection\",\"t\":[\"java.util.Collection 定义了一些集合的基本操作:\",\"public interface Collection<E> extends Iterable<E> { // 添加一个类型为E的元素 boolean add(E e); // 添加一个类型为E的元素集合 boolean addAll(Collection<? extends E> c); // 清空集合 boolean void clear(); // 判断集合是否包含给定的元素 boolean contains(Object o); // 判断集合是否包含给定集合里的所有元素 boolean containsAll(Collection<E> c); // 判断集合是否为空 boolean isEmpty(); // 从集合移除给定的元素 boolean remove(Object o); // 从集合移除给定集合的所有元素 boolean removeAll(Collection<?> c); // 集合的元素数量 int size(); // 转换为数组对象 Object[] toArray(); // 转换为指定类型的数组对象 <T> T[] toArray(T[] a); // 重写父类方法 @Override default Spliterator<E> spliterator() { return Spliterators.spliterator(this, 0); } // 创建一个流 default Stream<E> stream() { return StreamSupport.stream(spliterator(), false); } // 创建一个并行流 default Stream<E> parallelStream() { return StreamSupport.stream(spliterator(), true); } } \",\"上面代码可以看到 java.util.Collection 继承自 java.util.Iterable, 它提供了标准的迭代器模型, 定义了如下方法:\",\"public interface Iterable<E> { // 返回一个对象类型为E的迭代器 Iterator<E> iterator(); // 为每个元素都执行给定的操作 default void forEach(Consumer<? super E> action) { Object.requireNonNull(action); for (E e : this) { action.accept(e); } } // 返回用于遍历和划分源元素的对象（可用于创建 Stream 对象） default Spliterator<E> spliterator() { return Spliterators.spliteratorUnknowSize(iterator(), 0); } } \",\"Java 迭代器\",\"Java 迭代器是 Java 集合框架中的一种机制, 是一种用于遍历集合的接口, 它提供了一种统一的方式来访问集合中的元素, 而不需要了解底层集合的具体实现细节\",\"Java Iterator 比较常用的方法有如下几个:\",\"publi interface Iterator<E> { // 判断是否有后续元素 boolean hasNext(); // 获取后续元素 E next(); // 删除迭代器返回的最后一个元素 default void remove() { throw new UnsupportedOperationException(\\\"remove\\\"); } } \",\"Java 迭代器不是集合, 而是一种访问集合的方法, 并且是单向遍历的机制, 只能从前往后遍历集合中的元素, 不能往回遍历\",\"在使用迭代器遍历集合时, 不能直接修改集合中的元素, 而是需要使用迭代器的 remove() 方法来删除当前元素\",\"在 Collection 的基础上又定义了 3 种接口类, 分别是:\",\"List: 序列, 按照一定的顺序保存元素且可以重复\",\"Set: 集, 元素不能重复\",\"Queue: 队列, 按照排队规则来确定元素的顺序, 可以重复\",\"它们以不同的方式操作集合对象, 而在它们的基础上还有不同的实现类: ArrayList、LinkedList、HashSet、TreeSet 等\",\"以下是 Collection 的类图关系:\",\"classDiagram class Iterable~E~ { <<interface>> } class Collection~E~ { <<interface>> } class List~E~ { <<interface>> } class Set~E~ { <<interface>> } class Queue~E~ { <<interface>> } class ArrayDeque~E~ { ~elements: Object[] } class ArrayList~E~ { ~elementData: Object[] } class LinkedList~E~ { ~first: LinkedList.Node~E~ ~last: LinkedList.Node~E~ } class Vector~E~ { #elementData: Object[] } class SortedSet~E~ { <<interface>> } class NavigableSet~E~ { <<interface>> } class TreeSet~E~ { -m: NavigableMap&lt;E,Object&gt; } class HashSet~E~ { -map: HashMap&lt;E,Object&gt; } class LinkedHashSet~E~ { -map: LinkedHashMap&lt;E,Object&gt; } Iterable <|-- Collection Collection <|-- Queue Collection <|-- List Collection <|-- Set Queue <|-- BlockingQueue~E~ Queue <|-- Deque~E~ Deque <|.. ArrayDeque Deque <|.. LinkedList List <|.. LinkedList List <|.. ArrayList List <|.. Vector Vector <|-- Stack~E~ Set <|-- SortedSet~E~ Set <|.. HashSet SortedSet <|-- NavigableSet NavigableSet <|.. TreeSet HashSet <|-- LinkedHashSet \"]},\"179\":{\"h\":\"List\",\"t\":[\"List 接口是一个有序的集合, 它允许使用者像数组一样添加和删除元素\",\"List 在 Collection 的基础上拓展了一些方法:\",\"public interface List<E> extends Collection<E> { // 添加元素到指定索引位置 void add(int index, E e); // 添加整个集合的元素到指定索引位置 boolean addAll(int index, Collection<? extends E> c); // 获取指定索引位置的元素 E get(int index); // 获取元素的索引 int indexOf(Object o); // 获取元素的最后一个索引位置（倒数的第一个索引） int lastIndexOf(Object o); // 返回类型为E的元素迭代器 ListIterator<E> listIterator(); // 返回类型为E的包含指定索引位置之后元素的的迭代器 ListIterator<E> listIterator(int index); // 移除指定索引位置的元素 E remove(int index); // 将集合的所有元素都替换成给定操作执行的结果 void replaceAll(UnaryOperator<E> operator); // 将元素放至指定索引处 E set(int index, E e); // 对集合的元素进行排序 default void sort(Comparator<? super E> c) { Object[] a = this.toArray(); Arrays.sort(a, (Comparator) c); ListIterator<E> li = this.listIterator(); for (Object e : a) { i.next(); i.set((E) e); } } // 截取从 from 到 to 的子列表 List<E> subList(int from, int to); } \"]},\"180\":{\"h\":\"List 的实现类\"},\"181\":{\"h\":\"ArrayList\",\"t\":[\"ArrayList 的底层是数组队列, 相当于动态数组（与数组相比, 它的长度能动态增长）. 在添加大量元素前, 其底层实现使用 ensureCapacity 操作来增加 ArrayList 对象的容量, 这样可以减少递增式再分配的数量\",\"// 部分源码 public class ArrayList<E> extends AbstractList<E> implements List<E>, RandomAccess, Cloneable, java.io.Serializable { /** * 默认初始容量大小 */ private static final int DEFAULT_CAPACITY = 10; /** * 空数组（用于空实例） */ private static final Object[] EMPTY_ELEMENTDATA = {}; /** * 用于默认大小空实例的共享空数组实例 * 我们把它从EMPTY_ELEMENTDATA数组中区分出来, 以知道在添加第一个元素时容量需要增加多少 */ private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {}; /** * 保存ArrayList数据的数组 */ transient Object[] elementData; // 非私有, 以简化嵌套类访问 /** * ArrayList 所包含的元素个数 */ private int size; } \",\"ArrayList 的族谱:\",\"List: 说明它是一个列表, 支持添加、删除、查找等操作, 并且支持通过下标访问\",\"RandomAccess: 这是一个标记接口, 说明实现这个接口的子类是支持 快速随机访问 的\",\"Cloneable: 说明它支持拷贝操作\",\"Serializable: 说明它可以进行序列化操作\",\"ArrayList 有三种方式来初始化:\",\"无参构造函数: 创建一个默认容量为0的空列表\",\"带初始容量参数的构造函数: 创建一个指定容量的列表\",\"使用集合创建的构造函数: 使用给定的集合创建一个列表\",\"提示\",\"ArrayList 的底层是 Object[], 也就是说它是可以存储任意对象的, 包括 null 值. 但实际开发中一般避免这种情况以免代码发生 NPE\",\"使用无参构造函数创建 ArrayList 时, 实际上是一个空数组, 在第一次调用 add(E) 方法时才会真正的分配容量, 分配后的容量为 10\",\"ArrayList 是线程不安全的, 所以它适用于频繁的查找工作. 而 Vector 是古早的实现类, 底层同样适用 Object[], 但是线程安全\",\"ArrayList 的扩容机制\",\"/** * 要分配的最大数组大小 */ private static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8; // 根据给定的最小容量和当前数组元素来计算所需容量 private static int calculateCapacity(Object[] elementData, int minCapacity) { // 如果当前数组元素为空数组（初始情况）, 返回默认容量和最小容量中的较大值作为所需容量 if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) { return Math.max(DEFAULT_CAPACITY, minCapacity); } // 否则直接返回最小容量 return minCapacity; } // 确保内部容量达到指定的最小容量 private void ensureCapacityInternal(int minCapacity) { ensureExplicitCapacity(calculateCapacity(elementData, minCapacity)); } // 判断是否需要扩容 private void ensureExplicitCapacity(int minCapacity) { modCount++; // 判断当前数组容量是否足以存储minCapacity个元素 if (minCapacity - elementData.length > 0) // 调用grow方法进行扩容 grow(minCapacity); } // 扩容的核心方法 private void grow(int minCapacity) { // oldCapacity 为旧容量, newCapacity 为新容量 int oldCapacity = elementData.length; // 将 oldCapacity 右移一位, 其效果相当于 oldCapacity / 2, // 我们知道位运算的速度远远快于整除运算, 整句运算式的结果就是将新容量更新为旧容量的1.5倍 int newCapacity = oldCapacity + (oldCapacity >> 1); // 然后检查新容量是否大于最小需要容量, 若还是小于最小需要容量, 那么就把最小需要容量当作数组的新容量 if (newCapacity - minCapacity < 0) newCapacity = minCapacity; // 如果新容量大于 MAX_ARRAY_SIZE, 执行 `hugeCapacity()` 方法来比较 minCapacity 和 MAX_ARRAY_SIZE, // 如果 minCapacity 大于最大容量, 则新容量则为 `Integer.MAX_VALUE`, 否则, 新容量大小则为 MAX_ARRAY_SIZE 即为 `Integer.MAX_VALUE - 8` if (newCapacity - MAX_ARRAY_SIZE > 0) newCapacity = hugeCapacity(minCapacity); // minCapacity is usually close to size, so this is a win: elementData = Arrays.copyOf(elementData, newCapacity); } // 添加元素的方法 public boolean add(E e) { ensureCapacityInternal(size + 1); // Increments modCount!! //这里看到ArrayList添加元素的实质就相当于为数组赋值 elementData[size++] = e; return true; } \",\"假设现在通过无参构造函数创建一个列表, 它初始的 elementData.length 为 0\",\"向列表中添加一个元素, 因为第一次调用 calculateCapacity(), 此时函数返回默认容量大小 10, 在函数 ensureExplicitCapacity() 中, minCapacity - elementData.length > 0 成立, 所以会调用 grow() 方法, 函数调用链: add(E) -> ensureCapacityInternal() -> calculateCapacity() -> ensureExplicitCapacity() -> grow()\",\"再次向列表中添加一个元素, 此时 minCapacity 为 2, 而 elementData.length 已经变成了 10, minCapacity - elementData.length > 0 不成立, 所以不会执行 grow() 方法\",\"依次向列表中添加第3、第4...第10个元素, 都不会执行 grow() 方法\",\"直到第11个元素, minCapacity 为 11, 而 elementData.length 为 10, 此时又会进入 grow() 方法进行扩容\",\"新的容量是通过 oldCapacity + (oldCapacity >> 1) 计算得出的, 这个值可以近似看成原本值的 1.5 倍, 因为 >> 的右移计算相当于数值原本的 1/2, 在奇数的情况下会丢掉小数(11 + 11/2 = 16)\",\"ensureCapacity 方法\",\"理论上来说, 在向 ArrayList 中添加大量元素之前最好使用 ensureCapacity() 方法, 来减少扩容的分配次数\",\"public void ensureCapacity(int minCapacity) { int minExpand = (elementData != DEFAULTCAPACITY_EMPTY_ELEMENTDATA) // any size if not default element table ? 0 // larger than default for default empty table. It's already // supposed to be at default size. : DEFAULT_CAPACITY; if (minCapacity > minExpand) { ensureExplicitCapacity(minCapacity); } } \"]},\"182\":{\"h\":\"LinkedList\",\"t\":[\"LinkedList 是一个基于双向链表实现的集合类\",\"// 部分源码 public class LinkedList<E> extends AbstractSequentialList<E> implements List<E>, Deque<E>, Cloneable, java.io.Serializable { } \",\"LinkedList 的族谱:\",\"List: 说明它是一个列表, 支持添加、删除、查找等操作, 并且支持通过下标访问\",\"Deque: 继承自 Queue 接口, 具有双端队列的特性, 支持从两端插入和删除元素, 方便实现栈和队列等数据结构\",\"Cloneable: 说明它支持拷贝操作\",\"Serializable: 说明它可以进行序列化操作\",\"LinkedList 中的元素是其内部类定义的\",\"private static class Node<E> { E item;// 节点值 Node<E> next; // 指向的下一个节点（后继节点） Node<E> prev; // 指向的前一个节点（前驱结点） // 初始化参数顺序分别是: 前驱结点、本身节点值、后继节点 Node(Node<E> prev, E element, Node<E> next) { this.item = element; this.next = next; this.prev = prev; } } \",\"提示\",\"LinkedList 插入和删除的时间复杂度?\",\"头部插入/删除、尾部插入/删除: 只需要修改头、尾结点即可完成插入/删除操作, 时间复杂度为 $\\\\mathcal{O}(1)$\",\"指定位置插入/删除: 需要移动到指定位置, 再修改指定结点的指针完成插入/删除操作, 因此需要移动平均 n/2 个元素, 时间复杂度为 $\\\\mathcal{O}(n)$\",\"LinkedList 为什么不能实现 RandomAccess 接口?\",\"LinkedList 底层数据结构是链表, 内存地址不连续, 只能通过指针来定位, 不支持随机快速访问, 所以不能实现 RandomAccess 接口\"]},\"183\":{\"h\":\"ArrayList 与 LinkedList 的区别\",\"t\":[\"线程安全: ArrayList 和 LinkedList 都不能保证线程安全\",\"底层数据结构: \",\"ArrayList 底层使用的是 Object 数组\",\"LinkedList 底层使用的是 双向链表[^first]\",\"插入/删除是否受元素位置影响: \",\"ArrayList 采用数组存储, 插入和删除元素的时间复杂度受元素位置的影响, 在执行 add(E e) 时的时间复杂度是 $\\\\mathcal{O}(1)$; 而在指定位置插入和删除的话, 因为第i个元素和第i-1个元素都要执行移位的操作, 所以时间复杂度为 $\\\\mathcal{O}(n)$\",\"LinkedList 采用链表存储, 在头尾插入和删除元素的时间复杂度不受元素位置的影响, 时间复杂度都为 $\\\\mathcal{O}(1)$; 而在指定位置插入和删除的话, 因为需要先移动到指定位置再执行插入和删除, 所以时间复杂度为 $\\\\mathcal{O}(n)$\",\"是否支持快速随机访问: \",\"ArrayList 实现了 RandomAccess 接口说明其支持快速随机访问\",\"LinkedList 不支持随机元素访问\",\"内存空间占用: \",\"ArrayList 的空间浪费主要体现在列表的结尾会预留一定的容量空间\",\"LinkedList 的空间花费主要体现在它每一个元素都要存放前驱和后继对象, 所以它比 ArrayList 要消耗更多的空间\",\"[^first]: JDK1.6 之前为循环链表, JDK1.7 取消了循环\"]},\"184\":{\"h\":\"Set\",\"t\":[\"Set 接口允许使用者将元素存储在不同的集合中, 类似于数学中的集合, 且它不能有重复的元素\"]},\"185\":{\"h\":\"Queue\",\"t\":[\"Queue 接口支持以先进先出的方式存储和访问元素\"]},\"186\":{\"h\":\"Map\",\"t\":[\"Map 是一个接口, 它定义了一种特定的数据结构, 即键值对（key-value pairs）的集合. 在Map中, 每个键都映射到一个值, 且键是唯一的. 这意味着在一个Map中, 你不能有两个相同的键, 但可以有多个相同的值\",\"Map 的特点:\",\"无序性: 与 List 或 Set 等集合不同, Map 中的元素（键值对）是无序的, 即它们的存储和迭代顺序可能与插入顺序不同\",\"键的唯一性: Map 中的键必须是唯一的, 不能有两个相同的键. 如果尝试插入具有相同键的新值, 那么旧的值将被新值覆盖\",\"值的可重复性: 与键不同, Map 中的值可以是重复. 也就是说, 可以有多个键值对具有相同的值\",\"Map 对于 null 值的处理\",\"Map 本身是支持 null 键以及 null 值的\",\"对与 null 建: HashMap、LinkedHashMap 和 TreeMap 都是支持 null 键的, 但使用 null 键时必须确保其在 Map 中是唯一的, 因为 Map 的键必须是唯一的\",\"对于 null 值: 所有的 Map 实现类都允许使用 null 值, 且一个 Map 中可以有多个 null 值\",\"以下是 Map 的类图关系:\",\"classDiagram class Map ~K,V~ { <<interface>> } class ConcurrentMap ~K,V~ { <<interface>> } class SortedMap ~K,V~ { <<interface>> } class NavigableMap ~K,V~ { <<interface>> } class HashMap ~K,V~ { ~table: HashMap.Node&lt;K,V&gt;[] } class Hashtable ~K,V~ { ~table: Hashtable.Entry&lt;K,V&gt;[] } class LinkedHashMap ~K,V~ { ~head: LinkedHashMap.Entry&lt;K,V&gt; ~tail: LinkedHashMap.Entry&lt;K,V&gt; } class ConcurrentHashMap ~K,V~ { ~table: ConcurrentHashMap.Entry&lt;K,V&gt;[] } class TreeMap ~K,V~ { -root: TreeMap.Entry&lt;K,V&gt; } Map <|-- SortedMap Map <|.. HashMap Map <|.. Hashtable Map <|-- ConcurrentMap HashMap <|-- LinkedHashMap SortedMap <|-- NavigableMap NavigableMap <|.. TreeMap ConcurrentMap <|.. ConcurrentHashMap \"]},\"187\":{\"h\":\"HashMap\",\"t\":[\"HashMap 主要用来存放键值对, 它基于哈希表的 Map 接口实现, 是常用的 Java 集合之一, 是非线程安全的\",\"在 JDK1.8 之前, HashMap 的底层存储是数据加链表实现的, 数组是 HashMap 的主体, 链表则是为了解决哈希冲突而存在的（拉链法[^second]）; 而在 JDK1.8 之后, 当链表长度大于阈值（默认值为 8）时, 链表将会转化为红黑树(将链表转换成红黑树前会判断, 如果当前数组的长度小于 64, 那么会选择先进行数组扩容, 而不是转换为红黑树), 以减少搜索时间\",\"[^second]: 拉链法: 将链表和数组相结合. 也就是说创建一个链表数组, 数组中每一格就是一个链表, 若遇到哈希冲突, 则将冲突的值加到链表中即可\",\"HashMap 默认的初始化大小为 16, 之后每次扩充, 容量变为原来的 2 倍, 并且 HashMap 总是使用 2 的幂作为哈希表的大小\",\"提示\",\"loadFactor: 负载因子 负载因子是控制数组存放数据的疏密程度, loadFactor 越趋近于 1, 那么数组中的数据机会越多、越密集, 也就是会让链表的长度增加; 而 loadFactor 越趋近于 0, 数组中存放的数据就越少、越稀疏\",\"loadFactor 太大会导致查找元素的效率低, 太小导致数组的利用率低, 存放的数据会很分散. 官方给的 0.75f 是一个比较好的临界值\",\"threshold: 扩容阈值 threshold = capacity × loadFactor, 当 size > threshold 的时候, 就要考虑对数组的扩容了, 说白了它就是衡量数组需不需要扩容的一个标准\",\"默认容量为 16, 负载因子为 0.75, 不断的向 HashMap 中存放数据, 当数量超过了 16 * 0.75 = 12 时, 就需要对当前容量进行扩容\",\"HashMap 通过 key 的 hashCode 经过扰动函数处理后得到的 hash 值, 然后通过 (n-1) & hash 确定当前元素存放的位置（n是数组长度）, 如果当前位置存在元素的话, 就判断该元素与要存入的元素的 hash 值以及 key 是否相同, 如果相同就直接覆盖, 不相同就通过拉链法解决冲突\",\"所谓的扰动函数就是 HashMap 的 hash 方法. 使用扰动函数是为了防止一些实现比较差的 hashCode() 方法, 其实就是为了减少碰撞\",\"JDK 1.7 和 JDK 1.8 的 hash 方法对比:\",\"// ^: 按位异或 // >>> : 无符号右移, 忽略符号位, 空位都以 0 补齐 // JDK 1.8 static final int hash(Object key) { int h; // key.hashCode(): 返回散列值也就是hashcode return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16); } // JDK 1.7 static int hash(int h) { // 此函数确保在每个位位置仅相差恒定倍数的hashCode具有有限数量的冲突（在默认负载因子下约为8） h ^= (h >>> 20) ^ (h >>> 12); return h ^ (h >>> 7) ^ (h >>> 4); } \",\"JDK 1.8 的 hash 方法相比于 JDK 1.7 的方法更加简化, 而且性能也更好, 但是它们的原理都不变\",\"红黑树\",\"红黑树(Red Black Tree)是一颗自平衡(self-balancing)的二叉排序树(BST), 树上的每一个结点都遵循下面的规则:\",\"每一个结点都有一个颜色, 要么红色, 要么黑色\",\"树的根结点为黑色\",\"每个叶子结点(NULL)都是黑色的\",\"树中不存在两个相邻的红色结点（即红色结点的父子结点都不能是红色）\",\"从任意一个结点（包括根结点）到其任何后代叶子结点(NULL, 默认是黑色)的每条路径都具有相同数量的黑色结点\",\"因为最后一条规则的限制, 插入的数据总是红色的, 然后通过旋转(左旋\\\\右旋)和变色来保证树平衡, 那么会有下面几种情况:\",\"父结点是黑色, 不用调整\",\"父结点是红色: \",\"叔结点是空的, 旋转+变色\",\"叔结点是红色, 父结点、叔结点变黑色, 祖父结点变红色\",\"叔结点是黑色, 旋转+变色\",\"JDK 1.8 中 HashMap 的红黑树怎么声明的呢?\",\"static final class TreeNode<K,V> extends LinkedHashMap.Entry<K,V> { TreeNode<K,V> parent; // red-black tree links TreeNode<K,V> left; TreeNode<K,V> right; TreeNode<K,V> prev; // needed to unlink next upon deletion boolean red; } \",\"注意到红黑树继承了 LinkedHashMap.Entry<K, V>, 而 Entry<K, V> 又是继承自 HashMap.Node<K, V> 的:\",\"// LinkedHashMap.Entry<K, V> static class Entry<K,V> extends HashMap.Node<K,V> { Entry<K,V> before, after; } // HashMap.Node<K, V> static class Node<K,V> implements Map.Entry<K,V> { final int hash; final K key; V value; Node<K,V> next; } \",\"注意两个属性: TreeNode<K, V>.prev 和 HashMap.Node<K, V>.next, 这说明 HashMap 中的红黑树同时也是一个双向链表\",\"TreeMap、TreeSet 以及 JDK1.8 之后的 HashMap 底层都用到了红黑树, 而红黑树就是为了解决二叉查找树的缺陷, 因为二叉查找树在某些情况下会退化成一个线性结构\",\"看一下 put() 方法的源码, 了解底层是如何处理链表到红黑树的转换的\",\"// 使用列表而不是树的计数阈值 static final int TREEIFY_THRESHOLD = 8; // 对列表进行树化的最小阈值 static final int MIN_TREEIFY_CAPACITY = 64; public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) { Node<K,V>[] tab; Node<K,V> p; int n, i; if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; // 如果计算出的数组位置上没有元素 if ((p = tab[i = (n - 1) & hash]) == null) // 创建一个新的结点并存入 tab[i] = newNode(hash, key, value, null); // 如果计算出的数组位置上有元素 else { Node<K,V> e; K k; // 且 hash 和 key 都相同, 那么就覆盖 if (p.hash == hash && ((k = p.key) == key || (key != null && key.equals(k)))) e = p; else if (p instanceof TreeNode) // 插入红黑树 e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value); else { // for 循环遍历链表 for (int binCount = 0; ; ++binCount) { // 遍历到最后一个结点 if ((e = p.next) == null) { // 尾插法插入数据 p.next = newNode(hash, key, value, null); // 当链表元素个数大于等于8个的时候 if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st // 转换红黑树（并不是执行了方法就会变成红黑树） treeifyBin(tab, hash); break; } if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) break; p = e; } } // 找到一个已经存在的 key 然后替换原本的 value 并返回 if (e != null) { // existing mapping for key V oldValue = e.value; if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); return oldValue; } } ++modCount; // 添加元素后的数组长度大于扩容阈值了会触发 resize() 进行扩容 if (++size > threshold) resize(); afterNodeInsertion(evict); return null; } final void treeifyBin(Node<K,V>[] tab, int hash) { int n, index; Node<K,V> e; // 判断当前列表的长度是否达到了转换成树的阈值(64) if (tab == null || (n = tab.length) < MIN_TREEIFY_CAPACITY) /* * 如果长度小于 64, 那么只是对数组进行扩容. resize 会重新 hash, * 原本的链表的元素有可能变少, 也可以说一定程度上优化了存取性能 */ resize(); else if ((e = tab[index = (n - 1) & hash]) != null) { // 数组长度大于 64, 转换成红黑树 TreeNode<K,V> hd = null, tl = null; do { // 转换成 TreeNode TreeNode<K,V> p = replacementTreeNode(e, null); if (tl == null) // TreeNode 的第一个元素(双向链表的第一个结点) hd = p; else { // 这里的 TreeNode 变成了双向链表 p.prev = tl; tl.next = p; } tl = p; } while ((e = e.next) != null); if ((tab[index] = hd) != null) /* * 真正转换的逻辑 * 首先通过遍历链表, 依次通过 hashcode、compareTo(实现 Comparable<?> 接口)、 * getClass().getName()、System.identityHashCode() 来比较各个结点的 key 值大小, * 构建出红黑树 * 然后将 TreeNode 中变成了红黑树根结点的元素移动到链表的最前面 * 最后验证一下红黑树是不是满足规范 */ hd.treeify(tab); } } \"]},\"188\":{\"h\":\"为什么 HashMap 的长的是 2 的幂次方\",\"t\":[\"为了能让 HashMap 存取高效, 应当减少碰撞, 也就是要尽量把数据分配均匀. Hash 值的范围值是 -2147483648 到 2147483647, 大概有 40 亿的映射空间, 只要哈希函数映射得比较均匀松散, 一般应用是很难出现碰撞的. 但是问题是一个 40 亿长度的数组, 内存也是放不下的. 所以这个散列值不能拿来直接用, 一般都会对数组的长度取模运算, 得到的余数才是用来存放对应的数组下标. 而这个计算下标的方法是 (n - 1) & hash (n是数组长度)\",\"在取余(%)操作中, 如果除数是 2 的幂次则等价于与其除数减一的与(&)操作（也就是说 hash % length == hash & (lenght - 1), 前提是 length 是 2 的 n 次方）, 并且由于采用的是二进制位操作 &, 相对于 % 取余运算能够提高运算效率, 这就解释了为什么 HashMap 的长度是 2 的幂次方\"]},\"189\":{\"h\":\"初始化 HashMap 时指定的大小等于它创建后的大小吗?\",\"t\":[\"先说结论, 不等于\",\"在使用带有 initialCapacity 参数的构造方法创建 HashMap 时, 会执行一个 tableSizeFor() 的方法, 这个方法的计算结果会被赋值给 threshold(扩容时的阈值), 在第一次 put 元素的时候, 触发 resize(), 这里的逻辑会将 threshold 赋值给 newCap(新的容量), 然后再重新计算 threshold, 然后再创建 HashMap. 而 tableSizeFor() 计算的结果并不等于 initialCapacity, 所以初始化 HashMap 时指定的大小不等于它创建后的大小\",\"下面看下源码的实现:\",\"public HashMap(int initialCapacity, float loadFactor) { if (initialCapacity < 0) throw new IllegalArgumentException(\\\"Illegal initial capacity: \\\" + initialCapacity); if (initialCapacity > MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; if (loadFactor <= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException(\\\"Illegal load factor: \\\" + loadFactor); this.loadFactor = loadFactor; this.threshold = tableSizeFor(initialCapacity); } /** * 这里是很牛逼的操作哦 * * 简单来说这个算法是将给定的值的二进制的最高位通过不断右移使其后面的值全部为 1, * 再通过 +1 使其进位, 来得到一个大于 cap 的最小的 2 的幂次方的数 * * n |= n >>> x; 为什么执行5次, 因为 2^5 = 32, 也就是一个 int 的长度, * 也就是说不管这个数是多少, 经过这些操作都能使 cap 的二进制值经转换后全变为 1 */ static final int tableSizeFor(int cap) { // 先减一是为了保证 8 16 这种本就是 2 的幂次方的值不被扩大 int n = cap - 1; // 将元素据右移x位并进行或操作 n |= n >>> 1; n |= n >>> 2; n |= n >>> 4; n |= n >>> 8; n |= n >>> 16; // 最后保证值不会超过 MAXIMUM_CAPACITY, 然后 +1 来使其变成大于 cap 的最小的 2 的幂次方 return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1; } final Node<K,V>[] resize() { Node<K,V>[] oldTab = table; int oldCap = (oldTab == null) ? 0 : oldTab.length; int oldThr = threshold; int newCap, newThr = 0; // 旧容量大于 0 if (oldCap > 0) { if (oldCap >= MAXIMUM_CAPACITY) { threshold = Integer.MAX_VALUE; return oldTab; } // newCap = oldCap << 1 新容量为旧容量的两倍 else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY && oldCap >= DEFAULT_INITIAL_CAPACITY) newThr = oldThr << 1; // double threshold } // 旧容量为 0 但扩容阈值大于 0 else if (oldThr > 0) // initial capacity was placed in threshold // 使用带有初始化大小的构造函数创建 HashMap 第一次扩容就是这里初始化容量的 // 把旧扩容阈值赋值给新容量 newCap = oldThr; else { // zero initial threshold signifies using defaults // 无参构造函数创建的 HashMap 第一次扩容就是这里初始化容量的 newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); } // 新扩容阈值为 0 则通过新容量计算 if (newThr == 0) { float ft = (float)newCap * loadFactor; newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); } threshold = newThr; // 使用新容量创建一个新的数组 @SuppressWarnings({\\\"rawtypes\\\",\\\"unchecked\\\"}) Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap]; table = newTab; // 如果原本的数组不为空, 需要将原数据转移至新数组 if (oldTab != null) { for (int j = 0; j < oldCap; ++j) { Node<K,V> e; if ((e = oldTab[j]) != null) { oldTab[j] = null; // 原本只有一个结点 if (e.next == null) // 重新计算数组索引 newTab[e.hash & (newCap - 1)] = e; // 处理红黑树 else if (e instanceof TreeNode) /* * 遍历树的元素将它们重新计算 hash 放入新的数组中 * 按照和处理链表类似的处理逻辑变成两个链表, * 当新的链表长度小于 6 时, 重新转换为链表, * 否则将其索引指向相应的位置(index 或者 index + oldCap) */ ((TreeNode<K,V>)e).split(this, newTab, j, oldCap); // 处理链表 else { // preserve order // 拆分链表 一个low 一个 high Node<K,V> loHead = null, loTail = null; Node<K,V> hiHead = null, hiTail = null; Node<K,V> next; // 遍历链表 do { next = e.next; // 拆分的标准 if ((e.hash & oldCap) == 0) { if (loTail == null) loHead = e; else loTail.next = e; loTail = e; } else { if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; } } while ((e = next) != null); if (loTail != null) { loTail.next = null; // low 的链表直接在原位置 newTab[j] = loHead; } if (hiTail != null) { hiTail.next = null; // high 的链表在原位置+ oldCap 的位置 newTab[j + oldCap] = hiHead; } } } } } return newTab; } \",\"关于拆分标准 (e.hash & oldCap) == 0 和数组下标 j、j+oldCap\",\"首先要知道的是:\",\"oldCap 一定是 2 的整数次幂, 假设是 $2^m$\",\"newCap 是 oldCap 的 2 倍, 值是 $2^{m+1}$\",\"hash 对数组大小取模 (n - 1) & hash 其实就是取 hash 的低 $m$ 位\",\"举个栗子, 假设 oldCap = 8, 即 $2^3$, (8 - 1 = 7) 的二进制为 0000 0000 0000 0000 0000 0000 0000 0111, 那么 (8 - 1) & hash 其实就是取 hash 值的低 3 位, 这里假设为 abc, 依次类推, 扩容后的大小为 16, 那么 (16 - 1) & hash 其实就是取 hash 的低 4 位, 也就两种情况:\",\"0abc 1abc\",\"0abc 跟原来的 index 值一致, 而 1abc = 0abc + 1000 = 0abc + oldCap, 重点来了, 虽然数组大小扩大了一倍, 但是同一个 key 在新旧 table 中对应的数组下标 index 却存在一定的联系: 要么跟以前一致, 要么相差一个 oldCap\",\"而新旧 index 是否跟原本一致就体现在 hash 的第 3 位(最低位是第0位), 怎么拿到这一位的值呢?\",\"hash & 0000 0000 0000 0000 0000 0000 0000 1000\",\"上面的式子不就是 hash & 8, 而 8 不就是原本的数组长度吗, 所以:\",\"如果 (e.hash & oldCap) == 0 则该节点在新数组的下标与原数组一致都为 j 如果 (e.hash & oldCap) == 1 则该节点在新数组的下标为原数组下标 j + oldCap\",\"根据这个条件将原始的链表拆分为两个链表, 然后一次性将整个链表存入到新的数组中\",\"有个特殊情况需要注意下, 若指定初始容量为 0 或者 1 来创建 HashMap 时, 第一次调用 put() 方法时会触发两次 resize(), 因为不管指定容量为 0 还是 1 , 经 tableSizeFor() 方法计算出来的初始容量都为 1, 也就是说第一次执行 resize() 方法后数组的容量为 1 而 threshold 为 0, 在 putVal() 方法最后会判断一次 ++size > threshold, 而此时条件成立(size=1,threshold=0)会再次执行 resize() 方法, 完成后数组的容量变为 2\"]},\"190\":{\"h\":\"HashMap 多线程操作导致死循环\",\"t\":[\"JDK 1.7 及之前版本的 HashMap 在多线程环境下扩容操作可能存在死循环问题. 首先需要知道的是 JDK 1.7 链表采用的是头插法添加元素, 而在一个位置上有多个元素需要进行扩容时, 多个线程同时对链表进行操作, 头插法可能会导致链表中的结点指向错误的位置, 从而形成一个环形链表, 使得查询元素的操作陷入死循环. 可以在搜索引擎上查询关键字 HashMap Infinite Loop 了解更多\",\"为了解决这个问题, JDK 1.8 的 HashMap 采用了尾插法来避免链表倒置, 避免变成环型结构. 但是依旧不建议在多线程中使用 HashMap, 会存在数据覆盖、不准确的问题\",\"提示\",\"头插法: 将元素插在链表头部\",\"做法是直接将新元素作为头结点, next 指向旧的头结点, 所以插入速度快\",\"因为头结点每次都会变化, 也就是最新的, 所以遍历是按照插入的相反顺序进行的\",\"因为头结点不断变化, 所以需要额外的维护头结点的引用\",\"尾插法: 将元素插在链表尾部\",\"做法是将新元素插入到原本链表的尾部, 需要遍历链表直到某个结点的 next 为 null, 然后将其指向新添加的元素即可\",\"头结点固定不变\",\"遍历顺序就是插入顺序\"]},\"191\":{\"h\":\"HashMap 为什么多线程不安全\",\"t\":[\"前面也提到了, JDK 1.7 的 HashMap 在多线程下扩容可能会造成死循环和数据丢失问题, 虽然 JDK 1.8 做了改进, 但是依旧不能解决数据丢失的问题\",\"数据丢失是怎么产生的呢?\",\"在插入元素的时候, 如果两个线程同时进行 put, 并且发生了哈希冲突\",\"不同的线程可能在不同的时间片获得CPU执行的机会, 当前线程1执行完哈希冲突判断后, 由于时间片耗尽挂起, 而线程2先完成了插入操作\",\"随后, 线程1获得时间片, 由于之前已经进行过 hash 碰撞的判断, 所以此时会直接进行插入, 这就导致线程2插入的数据被线程1覆盖了\"]},\"192\":{\"h\":\"HashMap 的遍历方式\",\"t\":[\"使用迭代器的方式遍历 \",\"迭代器的 EntrySet\",\"迭代器的 KeySet\",\"ForEach方式遍历 \",\"ForEach EntrySet\",\"ForEach KeySet\",\"使用 Lambda 表达式遍历\",\"使用 Stream API 遍历 \",\"Stream API 单线程遍历\",\"Stream API 多线程遍历\"]},\"193\":{\"h\":\"Hashtable\",\"t\":[\"Hashtable类也是实现Map接口的一个类, 它提供了线程安全的哈希表实现. 与HashMap相比, Hashtable的主要区别在于它的线程安全性\",\"Hashtable的一些特点和使用方法:\",\"线程安全性: Hashtable是线程安全的, 因为它的大多数方法（如put、get、remove等）都是同步的. 这意味着在多线程环境中, 多个线程可以安全地同时访问和修改Hashtable, 而不需要额外的同步措施\",\"性能: 由于Hashtable的同步机制, 它在单线程环境下的性能通常不如HashMap. 因为每次只有一个线程能够执行Hashtable的方法, 这会导致线程之间的竞争和阻塞, 从而降低程序的执行效率\",\"不允许null键和值: 与HashMap不同, Hashtable不允许使用null作为键（key）或值（value）. 如果尝试插入null键或值, Hashtable会抛出NullPointerException\",\"失败率: Hashtable使用了一种称为“失败率”的机制来处理哈希冲突. 当两个不同的键具有相同的哈希码时, Hashtable会将这些键存储在不同的桶（bucket）中, 以确保每个键都能被唯一地定位\",\"下面是一个Hashtable的简单使用示例:\",\"import java.util.Hashtable; public class HashtableExample { public static void main(String[] args) { // 创建一个Hashtable实例 Hashtable<String, Integer> table = new Hashtable<>(); // 向Hashtable中添加键值对 table.put(\\\"apple\\\", 1); table.put(\\\"banana\\\", 2); table.put(\\\"orange\\\", 3); // 获取键对应的值 int appleCount = table.get(\\\"apple\\\"); System.out.println(\\\"Apple count: \\\" + appleCount); // 输出: Apple count: 1 // 检查Hashtable中是否包含某个键 boolean hasBanana = table.containsKey(\\\"banana\\\"); System.out.println(\\\"Has banana: \\\" + hasBanana); // 输出: Has banana: true // 遍历Hashtable for (Map.Entry<String, Integer> entry : table.entrySet()) { System.out.println(\\\"Key: \\\" + entry.getKey() + \\\", Value: \\\" + entry.getValue()); } } } \",\"虽然 Hashtable 是线程安全的, 但 Java 5 及更高版本引入了 ConcurrentHashMap 类, 它提供了更高的并发性能, 是处理并发哈希表操作的推荐选择\"]},\"194\":{\"h\":\"Java 并发\"},\"195\":{\"h\":\"基本概念\"},\"196\":{\"h\":\"进程、线程、纤程(协程/虚拟线程)\",\"t\":[\"进程: \",\"在操作系统中, 进程是基本的资源分配单位, 操作系统通过进程来管理计算机的资源, 如 CPU、内存、磁盘等\",\"每个进程在操作系统中都有一个唯一的进程标识符: PID, 用于区分不同的进程\",\"线程: \",\"线程是操作系统中的基本执行单元, 它是进程中的一个实体, 是 CPU 调度和分派的基本单位\",\"一个进程可以包含多个线程, 每个线程都可以独立执行不同的任务, 但它们共享进程的资源\",\"纤程: \",\"纤程可以在一个线程内创建多个纤程, 这些纤程之间共享同一个线程的资源\",\"纤程是在同一个进程内部运行的, 不需要操作系统的介入, 可以在用户空间内实现写作式多任务助理. 因此纤程的创建和开销很小, 可以高效的利用系统资源\",\"可以想象一下, 把进程当成一个饭店, 把线程当成饭店里面的饭桌, 每个饭桌可以点不一样的菜, 但是都可以共享饭店的服务员、厨师, 饭桌的多少决定客户的处理效率, 而纤程就可以理解为座椅\"]},\"197\":{\"h\":\"并发、并行、串行\",\"t\":[\"并发(Concurrent), 在操作系统中, 是指一个时间段中有几个程序都处于已启动运行到运行完毕之间, 且这几个程序都是在同一个处理机上运行\",\"并行(Parallel), 当系统有一个以上 CPU 时, 当一个 CPU 执行一个进程时, 另一个 CPU 可以执行另一个进程, 两个进程互不抢占 CPU 资源, 可以同时进行, 这种方式我们称之为并行(Parallel)\",\"串行(serial), 系统中的几个程序按照顺序一个一个执行\",\"再来想象一下, 并发就是饭店里面一个厨师给很多桌做菜(雨露均沾), 并行就是饭店里面的3个厨师分别给3桌做菜, 串行就是饭店只有一个服务员, 只能一桌一桌点菜\"]},\"198\":{\"h\":\"上下文切换\",\"t\":[\"多线程往往会比单线程更快, 更能提高并发, 但是提高并发并不意味着启动更多的线程来执行, 因为更多的线程意味着线程创建的开销更大、上下文切换更频繁, 程序反而不能支持更多的 TPS\",\"多任务系统往往需要同时执行多道作业, 作业数往往大于机器 CPU 数, 然而一颗 CPU 同时只能执行一项任务, 如何让用户感觉这些任务正在同时运行呢? 操作系统的设计者巧妙地利用了 时间片轮转 的方式来解决这个问题\",\"时间片: 时间片是 CPU 分配给各个任务(线程)的时间\",\"单核 CPU 为何支持多线程? 给每个进程分配时间片以及上下文切换来达到雨露均沾的效果, 从宏观上给用户感觉就是在多线程同时执行的错觉\",\"线程上下文是指某一时间点 CPU 寄存器和程序计数器的内容, CPU 通过时间片分配算法来循环执行线程任务, 因为时间片非常短, 所以 CPU 通过不停地切换线程执行, 所以多核 CPU 一定程度上可以减少上下文切换频率的\",\"主动让出 CPU, 比如调用了 sleep(), wait() 等\",\"时间片用完, 因为操作系统要防止一个线程或者进程长时间占用 CPU 导致其他线程或者进程饿死\",\"调用了阻塞类型的系统中断, 比如请求 IO, 线程被阻塞\",\"上面三种情况都会发生线程切换, 线程切换意味着需要保存当前线程的上下文, 以便等到下次得到 CPU 的时候能恢复现场, 并加载下一个将要占用 CPU 的线程上下文, 这就是上下文切换\"]},\"199\":{\"h\":\"Java 中的线程\"},\"200\":{\"h\":\"如何创建线程\",\"t\":[\"创建线程的方式有很多种, 比如实现 Runnable、Callable 接口、继承 Thread 类、创建线程池、使用 CompletableFuture 类等等, 不过这些方式并没有真正创建出线程, 准确来说这些都是使用线程的方法, 而非创建\",\"严格来说, Java 创建线程的方式只有一种, 就是通过 new Thread().start() 创建的, 因为不管基于那种方式, 最终还是依赖于 new Thread().start()\",\"这里其实涉及到一个 线程体 的概念, 它指在线程里面运行的那一段代码逻辑, 也就是 run() 方法体里面的逻辑, 可以认为 Runnable、Callable 这些对象其实就是线程体\"]},\"201\":{\"h\":\"线程的生命周期和状态\",\"t\":[\"java.lang.Thread 类中定义了一个枚举类 State, 里面定义了 Java 线程拥有的状态:\",\"public enum State { // 初始状态, 线程被创建出来但没有立马被调用 `start()` 方法 NEW, // 运行状态, 线程调用了 `start()` 方法等待运行的状态 RUNNABLE, // 阻塞状态, 需要等待锁释放 BLOCKED, // 等待状态, 表示该线程需要等待其他线程做出一些特定动作(通知或者中断) WAITING, // 超时等待状态, 可以在指定的时间后自行返回而不是像 WAITING 那样一直等待 TIMED_WAITING, // 终止状态, 表示该线程已经运行完毕 TERMINATED; } \"]},\"202\":{\"h\":\"Thread 类中的方法\",\"t\":[\"方法\",\"功能\",\"说明\",\"start()\",\"启动一个新线程; JVM 调用这个线程的 run 方法\",\"调用 start() 方法让线程进入就绪状态, 里面的代码不一定立刻运行(CPU 的时间片还没分到该线程) 该方法只能调用一次\",\"run()\",\"线程启动后调用该方法\",\"如果构造线程时传递了 Runnable 参数, 那么线程启动后会执行 Runnable 中的 run 方法, 否则默认不执行如何操作, 但是可以通过创建 Thread 的子类来覆盖默认行为\",\"setName(String)\",\"给当前线程设定名字\",\"默认是 \\\"Thread-n\\\", 主线程是 \\\"main\\\"\",\"getName()\",\"获取当前线程的名字\",\"currentThread()\",\"获取当前线程对象, 代码在哪个线程中执行\",\"静态方法 本地方法\",\"sleep(long)\",\"让当前线程休眠多少秒再继续执行\",\"静态方法 本地方法 Thread.sleep(0) 让操作系统立刻重新进行一次 CPU 竞争\",\"yeild()\",\"提示当前线程调度器尽量让出当前线程对 CPU 的占用\",\"静态方法 本地方法 调用该方法并不能保证一定会让出 CPU 资源\",\"setPriority(int)\",\"设置当前线程优先级\",\"Java 中的优先级是 1 ~ 10 的整数, 越大优先级越高, 常用的是1, 5, 10\",\"getPriority()\",\"获取当前线程优先级\",\"interrupt()\",\"中断当前线程\",\"该方法只是给线程设置中断标记, 并不是停止线程\",\"interrupted()\",\"判断当前线程是否被中断, 并清除中断标记\",\"静态方法\",\"isInterrupted()\",\"判断当前线程是否被中断, 不清除中断标记\",\"join()\",\"等待当前线程终止\",\"join() 实际上是调用 join(0)\",\"isAlive()\",\"线程是否存活(还没有运行完成)\",\"本地方法\",\"setDaemon(boolean)\",\"将此线程标记为守护线程或用户线程\",\"true: 守护线程, false: 用户线程 通过 Thread.isDaemon() 来判断是否是守护线程\",\"getId()\",\"获取线程 id\",\"id 唯一\",\"getState()\",\"获取线程状态\"]},\"203\":{\"h\":\"start 和 run 方法\",\"t\":[\"先 new Thread() 然后调用 start() 方法会启动一个线程并使线程进入就绪状态, 当分配到时间片后就可以开始运行了, 然后执行 run() 方法里面的逻辑, 这样才是多线程工作\",\"如果直接调用 run() 只是相当于在主线程中调用普通方法, 并不会在新的线程中执行, 这样就不是多线程工作\"]},\"204\":{\"h\":\"sleep 和 wait 的区别\",\"t\":[\"两者的相同点: 都可以暂停线程的执行\",\"两者的不同点:\",\"sleep() 方法没有释放锁; wait() 方法释放了锁\",\"sleep() 通常用于暂停执行, 执行方法会使线程会变成 TIMED_WAITING 状态; wait() 通常用于线程交互/通信, 需要配合 synchronized 使用, 执行方法会使线程会变成 WAITING 状态\",\"sleep() 方法执行完成后, 线程会自动苏醒; wait() 方法被调用后, 线程不会自动苏醒, 需要别的线程用同一个对象上的 notify() 或者 notifyAll() 方法, 不过可以使用 wait(long) 设置超时后自动苏醒\",\"sleep() 是 Thread 类的静态本地方法; wait() 是 Object 类的本地方法\",\"为什么 wait() 方法不定义在 Thread 类中?\",\"wait() 的目的是要让获得对象锁的线程实现等待, 会自动释放当前线程占有的对象锁. 每个对象都有对象锁, 既然要释放当前线程占有的对象锁并让其进入 WAITING 状态, 自然是要操作对象(Object)而非当前线程(Thread)了 \",\"为什么 sleep() 方法不定义在 Object 类中?\",\"sleep() 是要暂停当前线程, 跟对象是没有关系\"]},\"205\":{\"h\":\"JMM 内存模型\",\"t\":[\"CPU的多核并发缓存架构\",\"block-beta columns 2 block:A:1 columns 1 a[\\\"CPU\\\"] b[\\\"CPU寄存器\\\"] end block:B:1 columns 1 c[\\\"CPU\\\"] d[\\\"CPU寄存器\\\"] end space space e[\\\"CPU缓存\\\"]:1 f[\\\"CPU缓存\\\"]:1 space space block:C:2 主内存RAM end A --> e e --> A e --> C C --> e B --> f f --> B f --> C C --> f \",\"JMM 全称为 Java Memory Model, Java 多线程内存模型跟 CPU 缓存模型类似, 是基于 CPU 缓存模型来建立的, Java 线程内存模型是标准化的, 屏蔽了底层不同计算机的区别\",\"可以先看一个简单的 demo:\",\"public static boolean flag = false; public static void main(String[] args) throws InterruptedException { new Thread(() -> { System.out.println(\\\"waiting data...\\\"); while (!flag) { } System.out.println(\\\"===== success\\\"); }).start(); Thread.sleep(2000); new Tread(() -> prepareData()); } public void prepareData() { System.out.println(\\\"prepare data...\\\"); flag = true; System.out.println(\\\"prepare data end...\\\"); } \",\"运行上面的代码后, 会发现第 9 行的代码并没有输出且程序没有退出, 说明 19 行的代码虽然执行了但是并没有影响到第 6 行的判断; 当将变量 flag 用 volatile 修饰后再运行代码, 程序最终会停止且第 9 行代码也会被执行\"]},\"206\":{\"h\":\"JMM 的原子操作\",\"t\":[\"read: 读取, 从主内存读取数据\",\"load: 载入, 将主内存读取到的数据写入工作内存\",\"use: 使用, 从工作内存读取数据来计算\",\"assign: 赋值, 将计算好的值重新赋值到工作内存中\",\"store: 存储, 将工作内存数据写入主内存\",\"write: 写入, 将 store 过去的变量赋值给主内存中的变量\",\"lock: 锁定, 将主内存变量加锁, 标识为线程独占状态\",\"unlock: 解锁, 将主内存变量解锁, 解锁后其他线程可以锁定该变量\"]},\"207\":{\"h\":\"JMM 缓存不一致问题\",\"t\":[\"缓存一致性协议(MESI): 多个 CPU 从主内存读取一个数据到各自的高速缓存, 当其中某个 CPU 修改了缓存里的数据, 该数据会马上同步回主内存, 其他 CPU 通过总线嗅探机制可以感知到数据的变化而将自己缓存里的数据失效\",\"缓存加锁: 缓存锁的核心机制是基于缓存一致性协议来实现的, 一个处理器的缓存回写到内存会导致其他处理器的缓存无效, IA-32 和 Intel 64 处理器使用 MESI 实现缓存一致性协议\"]},\"208\":{\"h\":\"volatile 缓存可见性实现原理\",\"t\":[\"底层实现主要通过汇编 lock 前缀指令, 它会锁定这块内存区域的缓存(缓存行锁定)并写回到主内存\",\"IA-32 和 Intel 64 架构软件开发手册对 lock 指令的解释:\",\"会将当前处理缓存行的数据立即写回到系统内存\",\"这个协会内存的操作会引起在其他 CPU 里缓存了该内存地址的数据无效(MESI 协议)\",\"提供内存屏障功能, 使 lock 前后指令不能重排序\"]},\"209\":{\"h\":\"指令重排序与内存屏障\"},\"210\":{\"h\":\"指令重排序\",\"t\":[\"并发编程的三大特性:\",\"原子性: 一个或多个操作要么全部执行成功, 要么全部执行失败\",\"可见性: 当一个线程对共享变量进行修改后, 其他线程可以立刻看到\",\"有序性: 程序的执行顺序会按照代码的先后顺序执行\",\"volatile 保证可见性与有序性, 但是不保证原子性, 保证原子性需要借助 synchronized 这样的锁机制\",\"指令重排序: 在不影响单线程程序执行结果的前提下, 计算机为了最大限度的发挥机器性能, 会对机器指令重排序优化\",\"源代码->编译器优化重排序->指令级并行重排序->内存系统重排序->最终执行的指令序列\",\"重排序会遵循 as-if-serial 与 happens-before 原则\"]},\"211\":{\"h\":\"内存屏障\",\"t\":[\"Java 规范定义的内存屏障:\",\"屏障类型\",\"指令示例\",\"说明\",\"LoadLoad\",\"Load1;LoadLoad;Load2\",\"保证 Load1 的读取操作在 Load2 及后续读取操作之前执行\",\"StoreStore\",\"Store1;StoreStore;Store2\",\"在 Store2 及其后的写操作执行前, 保证 Store1 的写操作已经刷新到主内存\",\"LoadStore\",\"Load1;LoadStore;Store2\",\"在 Store2 及其后的写操作执行前, 保证 Load1 的读取操作已经结束\",\"StoreLoad\",\"Store1;StoreLoad;Load2\",\"保证 Store1 的写操作已经刷新到主内存之后, Load2 及其后的读操作才能执行\",\"Java 规定 volatile 需要实现的内存屏障:\",\"// StoreStore 屏障 a = 1; // volatile 写, a 为 volatile 变量 // StoreLoad 屏障 b = a; // volatile 读 // LoadLoad 屏障 // LoadStore 屏障 \",\"不同 CPU 硬件对于 JVM 的内存屏障规范实现指令不一样\",\"Intel CPU 硬件级内存屏障指令 \",\"lfence: 是一种 Load Barrier 读屏障, 实现 LoadLoad 屏障\",\"sfence: 是一种 Store Barrier 写屏障, 实现 StoreStore 屏障\",\"mfence: 是一种全能型的屏障, 具备 lfence 和 sfence 的能力, 具有所有屏障能力\",\"JVM 底层简化了内存屏障硬件指令的实现 \",\"lock 前缀: lock 指令不是一种内存屏障, 但是它能完成类似内存屏障的功能\"]},\"212\":{\"h\":\"锁机制\"},\"213\":{\"h\":\"锁的分类\"},\"214\":{\"h\":\"悲观锁与乐观锁\",\"t\":[\"锁的一种宏观分类方式是悲观锁和乐观锁. 悲观锁与乐观锁并不是特指某个锁（Java 中没有哪个 Lock 实现类就叫PessimisticLock 或 OptimisticLock）, 只是在并发情况下的两种不同策略\",\"悲观锁（Pessimistic Lock）, 就是很悲观, 每次去拿数据的时候都认为别人会修改. 所以每次在拿数据的时候都会上锁, 这样别人想拿数据就被挡住, 直到悲观锁被释放\",\"乐观锁（Optimistic Lock）, 就是很乐观, 每次去拿数据的时候都认为别人不会修改. 所以不会上锁, 不会上锁！但是如果想要更新数据, 会在更新前检查在读取至更新这段时间别人有没有修改过这个数据. 如果修改过就重新读取, 再次尝试更新, 循环上述步骤直到更新成功（当然也允许更新失败的线程放弃操作）\",\"悲观锁阻塞事务, 乐观锁回滚重试. 它们各有优缺点, 不能认为一种一定好于另一种. 像乐观锁适用于写比较少的情况下, 即冲突真的很少发生的时候, 这样可以省去锁的开销, 加大了系统的整个吞吐量. 如果经常产生冲突, 上层应用会不断的进行重试, 这样反倒是降低了性能, 这种情况下用悲观锁就比较合适\"]},\"215\":{\"h\":\"自旋锁\",\"t\":[\"当一个线程尝试去获取某一把锁的时候, 如果这个锁此时已经被别人获取(占用), 那么此线程就无法获取到这把锁, 该线程将会等待, 间隔一段时间后会再次尝试获取. 这种采用循环加锁 -> 等待的机制被称为自旋锁(spinlock)\",\"刚刚的乐观锁就有类似的无限循环操作, 那它是自旋锁吗？\",\"不是. 尽管自旋与 while(true) 的操作是一样的, 但还是应该将这两个术语分开. \\\"自旋\\\"这两个字, 特指自旋锁的自旋\"]},\"216\":{\"h\":\"可重入锁(递归锁)\",\"t\":[\"可重入锁的字面意思是“可以重新进入的锁”, 即允许同一个线程多次获取同一把锁. 比如一个递归函数里有加锁操作, 递归过程中这个锁会阻塞自己吗？如果不会, 那这个锁就是可重入锁（因为这个原因可重入锁也叫做递归锁）\",\"Java 里只要以 Reentrant 开头命名的锁都是可重入锁, 而且 JDK 提供的所有现成的 Lock 实现类, 包括 synchronized 关键字锁都是可重入的\"]},\"217\":{\"h\":\"公平锁和非公平锁\",\"t\":[\"如果多个线程申请一把公平锁, 当锁释放的时候, 先申请的先得到, 非常公平. 如果是非公平锁, 后申请的线程可能先获取到锁, 是随机或者按照其他优先级排序的\",\"对 ReentrantLock 类而言, 通过构造函数传参可以指定该锁是否是公平锁, 默认是非公平锁. 一般情况下, 非公平锁的吞吐量比公平锁大, 如果没有特殊要求, 优先使用非公平锁\",\"对于 synchronized 而言, 它也是一种非公平锁, 但是并没有任何办法使其变成公平锁\"]},\"218\":{\"h\":\"synchronized 锁\",\"t\":[\"在多线程的环境下, 多个线程同时访问共享资源会出现一些问题, 而 synchronized 关键字就是用来保证线程同步的\",\"synchronized 可以保证原子性、可见性、有序性, 而 volatile 只能保证可见性和有序性\",\"synchronized 主要有三种使用方式: 修饰普通同步方法、修饰静态同步方法、修饰同步代码块\",\"public class Test1 { private int num = 0; // 修饰普通同步方法 public synchronized void add1() { num++; } public void add2() { // 修饰同步代码块 synchronized(this) { num++; } } } public class Test2 { private static int num = 0; // 修饰静态同步方法 public static synchronized void add() { num++; } } \"]},\"219\":{\"h\":\"synchronized 的实现原理\",\"t\":[\"通过对象锁(Monitor)机制, 如果是同步代码块, 在进入 synchronized 同步块时, 需要通过 monitorenter 指令获取到当前对象的 monitor (也就是对象锁), 执行完同步块的逻辑后, 通过 monitorexit 指令来释放所持有的 monitor; 如果是同步方法, 那么方法的 flag 上会被加上 synchronized 标记, 因为整个方法都是同步的, 处理逻辑跟代码块是一样的\",\"如何查看字节码指令?\",\"可以使用 javap -v 来查看下面代码的字节码指令\",\"public class Test { int i = 0; public void test1() { synchronized(this) { i ++; } } public synchronized void test2() { i ++; } } \",\"monitorenter 和 monitorexit 操作的对象都是 monitor(对象监视器), 在 Java 虚拟机中, Monitor 是基于 C++ 实现的, 由 ObjectMonitor 实现的. 每个对象中都内置了一个 ObjectMonitor 对象 wait/notify 等方法也都依赖 monitor 对象, 这就是为什么只有在同步块或者方法中才能调用 wait/notify 等方法, 否则会抛出 IllegalMonitorStateException 异常的原因\"]},\"220\":{\"h\":\"synchronized 的锁升级\",\"t\":[\"在 Java 6 之后, synchronized 引入了大量的优化如自旋锁、适应性自旋锁、锁消除、锁粗化、偏向锁、轻量级锁等技术来减少锁操作的开销, 这些优化让 synchronized 锁的效率提升了很多\",\"升级过程: 无锁状态 -> 偏向锁状态 -> 轻量级锁状态 -> 重量级锁状态, 它们会随着竞争的激烈而逐渐升级, 升级是单向的, 也就是只能升级不能降级, 这样做是为了提高获得锁和释放锁的效率\"]},\"221\":{\"h\":\"CAS 锁机制\",\"t\":[\"CAS 即 Compare And Swap, 翻译成中文就是\\\"比较并替换\\\", Java 中可以通过 CAS 操作来保证原子性\",\"CAS 主要包含三个参数(V, expect, update), V 表示要更新的变量(内存值)、expect 表示预期值(旧值)、update 表示新值\",\"CAS 的原理:\",\"先比较 V 和 expect 的值, 如果相等则将 update 的值赋值给 V\",\"如果不相等说明其他线程对该变量做了更新, 放弃本次操作, 然后循环上面的操作直到更新成功\",\"一段用 AtomicInteger 实现的 CAS 锁:\",\"while(true) { int oldvalue = atomicInteger.get(); int newValue = oldValue + 1; if (atomicInteger.compareAndSet(oldValue, newvalue)) { break; } } \",\"AtomicInteger 中的 CAS 的底层是通过汇编语言的 lock cmpxchgq 指令来实现原子性操作的\"]},\"222\":{\"h\":\"CAS 和 syncronized 的比较\",\"t\":[\"syncronized 会阻塞线程, 会进行线程的上下文切换, 会由用户态切换到内核态, 切换前需要保存用户态的上下文, 而内核态恢复到用户态, 又需要恢复保存的上下文, 非常消耗资源\",\"CAS 能很大程度提高并发程序的执行效率, 因为线程没有被阻塞, 也就没有其他开销(上下文切换、用户态切换到内核态)\"]},\"223\":{\"h\":\"CAS 存在的问题\",\"t\":[\"ABA问题\",\"循环时间过长导致开销太大: CAS 自旋时间过长会给 CPU 带来非常大的开销\",\"只能保证一个共享变量的原子操作: 对多个共享变量进行操作时, CAS 无法保证操作的原子性, 这个时候就需要用锁了\",\"ABA 问题\",\"什么是ABA问题呢?\",\"假设有两个线程A、B,同时对一个共享变量 M 进行操作, 线程 A 将 M 的值从 1 改为 2, 线程 B 将 M 的值从 1 改为 3, 然后又改为 1, 两个线程同时获取到 M 的值, 但是线程 B 执行的更快, 在线程 A 将 1 改为 2 之前执行完成了, 此时线程 A 判断原本的值和内存的值一致, 执行修改. 这就是 ABA 问题\",\"如何解决 ABA 问题呢?\",\"很简单, 对共享变量添加 version 标记就可以了. 在原本的 ABA 问题中:\",\"线程 A 获取到 M 的值为(1, 1), 线程 B 获取到 M 的值为 (1, 1)\",\"线程 B 将 M 的值做修改: (1, 1) -> (3, 2) -> (1, 3)\",\"线程 A 判断值是否相等: (1, 1) != (1, 3), 放弃本次操作\"]},\"224\":{\"h\":\"原子类\",\"t\":[\"原子操作类是 CAS 在 Java 中的应用, 从 JDK 1.5 开始提供了 java.util.concurrent.atomic 包, 这个包中的原子操作提供了一种用法简单、性能高效、线程安全地更新变量的方式\",\"Atomic 包里的类基本都是使用 Unsafe 实现的包装类\",\"JUC包中的4种原子类\",\"基本类型: 使用原子的方式更新基本类型 \",\"AtomicInteger: 整形原子类\",\"AtomicLong: 长整型原子类\",\"AtomicBoolean: 布尔型原子类\",\"数组类型: 使用原子的方式更新数组里的某个元素 \",\"AtomicIntegerArray: 整形数组原子类\",\"AtomicLongArray: 长整形数组原子类\",\"AtomicReferenceArray: 引用类型数组原子类\",\"引用类型: \",\"AtomicReference: 引用类型原子类, 存在ABA问题\",\"AtomicStampedReference: 原子更新带有版本号的引用类型. 该类将整数值与引用关联起来, 可以于原子的更新数据和数据的版本号, 可以解决使用 CAS 进行原子更新时可能出现的 ABA 问题\",\"AtomicMarkableReference: 原子更新带有标记位的引用类型\",\"原子更新字段类 \",\"AtomicIntegerFieldUpdater: 原子更新整型的字段的更新器\",\"AtomicLongFieldUpdater: 原子更新长整型字段的更新器\",\"AtomicReferenceFieldUpdater: 引用类型更新器原子类\"]},\"225\":{\"h\":\"AQS\"},\"226\":{\"h\":\"AQS 是什么\",\"t\":[\"AQS 就是抽象类 AbstractQueuedSynchronizer 的缩写, 翻译的意思是\\\"抽象队列同步器\\\", 它是 JUC 下的面的一个基类, JUC 中的很多类都是基于 AQS 实现了的一些功能, 比如 ReentrantLock、ThreadPoolExecuter、阻塞队列、CountDownLatch、Semaphore、CycleBarrier 等等\",\"AQS 使用成员变量 state 表示同步状态, 通过内置的 线程等待队列 来完成获取资源线程的排队工作\",\"public abstract class AbstractQueuedSynchronizer extends AbstractOwnableSynchronizer implements java.io.Serializable { private volatile int state; private transient volatile Node head; private transient volatile Node tail; } \",\"AQS 核心思想是, 如果被请求的共享资源空闲, 则将当前请求资源的线程设置为有效的工作线程, 并且将共享资源设置为锁定状态。如果被请求的共享资源被占用, 那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制, 这个机制 AQS 是用 CLH 队列锁 实现的, 即将暂时获取不到锁的线程加入到队列中\",\"CLH(Craig, Landin, and Hagersten) 队列是一个虚拟的双向队列（虚拟的双向队列即不存在队列实例, 仅存在结点之间的关联关系）, 它是一个 FIFO 队列\",\"AQS 是将每条请求共享资源的线程封装成一个 CLH 锁队列的一个结点（Node）来实现锁的分配. 在 CLH 同步队列中, 一个节点表示一个线程, 它保存着线程的引用（thread）、当前节点在队列中的状态（waitStatus）、前驱节点（prev）、后继节点（next）\",\"static final class Node { /** 指示节点在共享模式下等待的标记 */ static final Node SHARED = new Node(); /** 指示节点在独占模式下等待的标记 */ static final Node EXCLUSIVE = null; /** 表示线程已取消 */ static final int CANCELLED = 1; /** 表示线程已经准备好了, 只等资源释放 */ static final int SIGNAL = -1; /** 表示节点在等待队列中, 节点线程等待唤醒 */ static final int CONDITION = -2; /** 当前线程处在共享模式下, 该字段才会使用 */ static final int PROPAGATE = -3; // 结点状态, 取值范围是 [CANCELLED, SIGNAL, CONDITION, PROPAGATE] volatile int waitStatus; // 前一个节点(线程) volatile Node prev; // 后一个节点(线程) volatile Node next; // 线程引用 volatile Thread thread; Node nextWaiter; } public class ConditionObject implements Condition, java.io.Serializable { /** First node of condition queue. */ private transient Node firstWaiter; /** Last node of condition queue. */ private transient Node lastWaiter; } \"]},\"227\":{\"h\":\"AQS 的两种功能\",\"t\":[\"从使用层面来说, AQS 功能分为两种: 独占 和 共享\",\"独占锁: 每次只能一个线程持有锁, 比如 ReentrantLock 就是独占锁\",\"共享锁: 允许多个线程持有锁, 并发访问共享资源, 比如 ReentrantReadWriteLock\",\"共享锁和独占锁的释放有一定区别, 前面部分是一致的, 先判断头结点是不是 signal 状态, 如果是则唤醒头节点的下一个节点, 并将该节点设置为头结点, 而共享锁不一样, 某个节点被设置为 head 之后, 如果它的后继节点是 shared 状态, 那么会尝试使用 doReleaseShared 方法尝试唤醒节点, 实现共享状态的传播\"]},\"228\":{\"h\":\"AQS 的相关方法\"},\"229\":{\"h\":\"子类实现的方法, AQS 不做处理(模版方法)\",\"t\":[\"tryAcquire(int arg): 独占获取同步状态, 获取同步状态成功后, 其他线程需要等待该线程释放同步状态才能获取同步状态\",\"tryRelease(int arg): 独占式释放同步状态\",\"tryAcquireShared(int arg): 共享式获取同步状态, 返回值大于等于0则表示获取成功, 否则获取失败\",\"tryReleaseShared(int arg): 共享式释放同步状态\",\"isHeldExclusively(): 当前同步器是否在独占模式下被线程占用, 一般该方法表示同步器是否被当前线程独占\"]},\"230\":{\"h\":\"通用实现的方法, AQS 本身实现的方法\",\"t\":[\"aquire(int arg): 独占式的获取锁的操作, 独占式获取同步状态都调用者方法, 通过子类的 tryAquire 方法判断是否获取到锁\",\"acquireShared(int arg): 共享式的获取锁的操作, 在读写锁中用到, 通过 tryAquireShared 方法判断是否获取同步状态\",\"release(int args): 独占式的释放同步状态, 通过 tryRelease 方法判断是否释放了独占式同步状态\",\"releaseShared(int arg): 共享式的释放同步状态, 通过 tryReleaseShared 方法判断是否已经释放了共享同步状态\"]},\"231\":{\"h\":\"Java 语言\"},\"232\":{\"h\":\"Java 是什么\",\"t\":[\"Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的 Java 面向对象程序设计语言和 Java 平台的总称. 由 James Gosling 和同事们共同研发, 并在 1995 年正式推出\",\"后来 Sun 公司被 Oracle （甲骨文）公司收购, Java 也随之成为 Oracle 公司的产品\",\"Java 分为三个体系:\",\"JavaSE(J2SE)(Java2 Platform Standard Edition, java 平台标准版)\",\"JavaEE(J2EE)(Java 2 Platform Enterprise Edition, java 平台企业版)\",\"JavaME(J2ME)(Java 2 Platform Micro Edition, java 平台微型版)\",\"2005 年 6 月, JavaOne 大会召开, SUN 公司公开 Java SE 6. 此时, Java 的各种版本已经更名, 以取消其中的数字 \\\"2\\\": J2EE 更名为 Java EE, J2SE 更名为 Java SE, J2ME 更名为 Java ME\"]},\"233\":{\"h\":\"主要特性\",\"t\":[\"Java 语言是简单的:\",\"Java 语言的语法与 C 语言和 C++ 语言很接近, 使得大多数程序员很容易学习和使用. 另一方面, Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性, 如操作符重载、多继承、自动的强制类型转换. 特别地, Java 语言不使用指针, 而是引用. 并提供了自动分配和回收内存空间, 使得程序员不必为内存管理而担忧\",\"Java 语言是面向对象的:\",\"Java 语言提供类、接口和继承等面向对象的特性, 为了简单起见, 只支持类之间的单继承, 但支持接口之间的多继承, 并支持类与接口之间的实现机制（关键字为 implements）. Java 语言全面支持动态绑定, 而 C++语言只对虚函数使用动态绑定. 总之, Java 语言是一个纯的面向对象程序设计语言\",\"Java 语言是分布式的:\",\"Java 语言支持 Internet 应用的开发, 在基本的 Java 应用编程接口中有一个网络应用编程接口（java net）, 它提供了用于网络应用编程的类库, 包括 URL、URLConnection、Socket、ServerSocket 等. Java 的 RMI（远程方法激活）机制也是开发分布式应用的重要手段\",\"Java 语言是健壮的:\",\"Java 的强类型机制、异常处理、垃圾的自动收集等是 Java 程序健壮性的重要保证. 对指针的丢弃是 Java 的明智选择. Java 的安全检查机制使得 Java 更具健壮性\",\"Java 语言是安全的:\",\"Java 通常被用在网络环境中, 为此, Java 提供了一个安全机制以防恶意代码的攻击. 除了 Java 语言具有的许多安全特性以外, Java 对通过网络下载的类具有一个安全防范机制（类 ClassLoader）, 如分配不同的名字空间以防替代本地的同名类、字节代码检查, 并提供安全管理机制（类 SecurityManager）让 Java 应用设置安全哨兵\",\"Java 语言是体系结构中立的:\",\"Java 程序（后缀为 java 的文件）在 Java 平台上被编译为体系结构中立的字节码格式（后缀为 class 的文件）, 然后可以在实现这个 Java 平台的任何系统中运行. 这种途径适合于异构的网络环境和软件的分发\",\"Java 语言是可移植的:\",\"这种可移植性来源于体系结构中立性, 另外, Java 还严格规定了各个基本数据类型的长度. Java 系统本身也具有很强的可移植性, Java 编译器是用 Java 实现的, Java 的运行环境是用 ANSI C 实现的\",\"Java 语言是解释型的:\",\"如前所述, Java 程序在 Java 平台上被编译为字节码格式, 然后可以在实现这个 Java 平台的任何系统中运行. 在运行时, Java 平台中的 Java 解释器对这些字节码进行解释执行, 执行过程中需要的类在联接阶段被载入到运行环境中\",\"Java 是高性能的:\",\"与那些解释型的高级脚本语言相比, Java 的确是高性能的. 事实上, Java 的运行速度随着 JIT(Just-In-Time）编译器技术的发展越来越接近于 C++\",\"Java 语言是多线程的:\",\"在 Java 语言中, 线程是一种特殊的对象, 它必须由 Thread 类或其子（孙）类来创建. 通常有两种方法来创建线程:其一, 使用型构为 Thread(Runnable) 的构造子类将一个实现了 Runnable 接口的对象包装成一个线程, 其二, 从 Thread 类派生出子类并重写 run 方法, 使用该子类创建的对象即为线程. 值得注意的是 Thread 类已经实现了 Runnable 接口, 因此, 任何一个线程均有它的 run 方法, 而 run 方法中包含了线程所要运行的代码. 线程的活动由一组方法来控制. Java 语言支持多个线程的同时执行, 并提供多线程之间的同步机制（关键字为 synchronized）\",\"Java 语言是动态的:\",\"Java 语言的设计目标之一是适应于动态变化的环境. Java 程序需要的类能够动态地被载入到运行环境, 也可以通过网络来载入所需要的类. 这也有利于软件的升级. 另外, Java 中的类有一个运行时刻的表示, 能进行运行时刻的类型检查。\"]},\"234\":{\"h\":\"Java 虚拟机\"},\"235\":{\"h\":\"JVM 是什么\",\"t\":[\"JVM（Java Virtual Machine）是 Java 虚拟机的简称, 是用于在各种硬件和操作系统平台上执行 Java 字节码的虚拟机. JVM 是 Java 语言的核心, 也是其跨平台特性的关键支持\",\"在 Java 程序中, 代码是先经过编译器编译成字节码文件, 然后由虚拟机执行这些字节码. 虚拟机会将字节码依次解释执行, 或通过即时编译技术（JIT）将字节码编译成本地代码执行, 从而实现高效的运行\",\"JVM 是一个非常强大的虚拟机, 它有自己的内存管理机制（例如垃圾回收器）、线程模型、类加载机制等等. 这些机制与底层的硬件和操作系统无关, 使得 Java 程序能够实现跨平台的特性\",\"JVM 的基本组成结构包括: 类加载器、运行时数据区域和执行引擎\"]},\"236\":{\"h\":\"类加载器\",\"t\":[\"类加载器是 Java 虚拟机（JVM）的一个重要组成部分, 它的主要职责是将编译后的 Java 类文件加载到 JVM 内存中运行. 类加载器还会对类进行校验、解析和初始化\",\"Java 类加载器主要分为以下三种类型:\",\"启动类加载器（Bootstrap ClassLoader）: 是 JVM 内置的类加载器, 用于加载 Java 平台核心库, 例如 java.lang 包中的类等. 启动类加载器是由 JVM 实现的, 它不是 Java 类, 因此没有对应的 Java 对象\",\"扩展类加载器（Extension ClassLoader）: 这个类加载器负责加载 Java 的扩展库, 例如 javax 包中的类等. 扩展类加载器是由 JVM 实现的, 它是 Java 类, 但它没有父类\",\"应用程序类加载器（Application ClassLoader）: 也叫系统类加载器, 用于加载应用程序的类. 这个类加载器是由用户自己编写的, 它通过 CLASSPATH 或其他自定义的类加载路径搜索 class 文件, 并加载到 JVM 内存中\",\"除了这三种基本类加载器之外, 还有用户自定义的类加载器, 可以根据需要编写额外的类加载器来完成特定的加载任务\",\"Java 的类加载器机制使得程序的架构更加灵活, 可以动态地加载类, 并且可以提供热部署和插件化等机制, 增强了程序的可维护性和可扩展性\"]},\"237\":{\"h\":\"运行时数据区域\",\"t\":[\"运行时数据区域是 Java 虚拟机（JVM）在程序运行期间用于存储数据的区域. 在 Java 虚拟机规范中, 将运行时内存划分为以下五个区域:\",\"程序计数器\",\"Java 虚拟机栈\",\"本地方法栈\",\"Java 堆\",\"方法区\",\"这些区域有各自的用途, 以及创建和销毁的时间, 有的区域随着虚拟机进程的启动而存在, 有些区域则依赖用户线程的启动和结束而建立和销毁. 其中程序计数器、Java 虚拟机、本地方法栈是线程私有的, 而 Java 堆, 方法区（以及 Java 8 之后的直接内存）是线程共享的\",\"JDK 1.8 以后 JVM 的结构与之前版本有一些区别, 下面是 JDK 1.7 的图示:\",\"flowchart TD subgraph one [运行时数据区域 Runtime Date Area] direction TB subgraph two [线程共享] direction LR subgraph A [堆 Heap] b[字符串常量池\\\\nString Constant Pool] end subgraph seven [方法区 Method Area] a[运行时常量池\\\\nRuntime Constant Pool] end A ~~~ seven end subgraph three [线程私有] direction LR subgraph four [线程 Thread] direction TB B[虚拟机栈\\\\nVM Stack] C[本地方法栈\\\\nNative Method Stack] D[程序计数器\\\\nProgram Counter Register] B ~~~ C ~~~ D end subgraph five [线程 Thread] direction TB E[虚拟机栈\\\\nVM Stack] F[本地方法栈\\\\nNative Method Stack] G[程序计数器\\\\nProgram Counter Register] E ~~~ F ~~~ G end four ~~~ five end two ~~~ three end subgraph six [本地内存] I[直接内存\\\\nDirect Memory] end one~~~three one~~~six four~~~five \",\"下面是 JDK 1.8 的图示:\",\"flowchart TD subgraph one [运行时数据区域 Runtime Date Area] subgraph two [线程共享] subgraph A [堆 Heap] b[字符串常量池\\\\nString Constant Pool] end end subgraph three [线程私有] direction LR subgraph four [线程 Thread] direction TB B[虚拟机栈\\\\nVM Stack] C[本地方法栈\\\\nNative Method Stack] D[程序计数器\\\\nProgram Counter Register] B ~~~ C ~~~ D end subgraph five [线程 Thread] direction TB E[虚拟机栈\\\\nVM Stack] F[本地方法栈\\\\nNative Method Stack] G[程序计数器\\\\nProgram Counter Register] E ~~~ F ~~~ G end four ~~~ five end end subgraph six [本地内存] subgraph H [元空间 MetaSpace] a[运行时常量池\\\\nRuntime Constant Pool] end I[直接内存\\\\nDirect Memory] end one~~~six two~~~three \"]},\"238\":{\"h\":\"程序计数器\",\"t\":[\"程序计数器（Program Counter Register）是一块较小的内存空间, 它可以看做是当前线程所执行的字节码的行号指示器. 分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖计数器来完成\",\"由于 Java 虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的, 在任何一个确定的时刻, 一个处理器（多核处理器就是一个内核）都只会执行一条线程的指令. 因此为了线程切换后能恢复到正确的执行位置, 每条线程都需要有一个独立的程序计数器, 各条线程之间计数器互不影响, 独立存储, 这类内存区域被称为\\\"线程私有\\\"的内存\",\"如果线程执行的是一个 Java 方法, 那么计数器中记录的是执行的虚拟机字节码指令的地址；如果执行的是一个 Native 方法, 那么计数器中记录则是空（Undefined）, 此内存区域是唯一一个在 Java 虚拟机规范中没有规定任何 OutOfMemoryError 情况的区域\"]},\"239\":{\"h\":\"Java 虚拟机栈\",\"t\":[\"也称为 Java 方法栈, 用于存储方法调用时的局部变量、操作数栈和返回值. 每个线程有自己的 Java 虚拟机栈, 所以它是线程私有的, 它的生命周期与线程一致, 而且栈的大小可以动态调整\",\"栈内创建的基本类型数据在超出其作用域后, 会被自动释放掉, 它不由 JVM GC 管理, 而在栈内创建的引用类型实例, 则还是由 JVM GC 管理\",\"虚拟机栈描述的是 Java 方法执行的内存模型: 每个方法在执行的同时都会创建一个栈帧（Stack Frame）用于存储局部变量表、操作数栈、动态链接、方法出口信息等. 每一个方法从调用直至执行完成的过程, 就对应这一个栈帧在虚拟机中入栈到出栈的过程\",\"虚拟机栈中的栈帧包括以下几个要素:\",\"局部变量表: 用于存储方法执行时的方法参数和局部变量（基本类型的数据存放在栈中的特性主要适用于局部变量和方法参数）\",\"操作数栈: 用于存储方法执行过程中的操作数\",\"动态链接: 用于指向运行时常量池中该方法所对应的常量\",\"方法返回地址: 用于保存方法执行完毕后的返回地址\",\"在 Java 虚拟机规范中, 对这个区域定义了两种异常:\",\"StackOverflowError: 如果线程请求的栈深度大于虚拟机所允许的深度, 将抛出此异常\",\"OutOfMemoryError: 在虚拟机栈可以动态扩展的前提下, 如果在扩展时无法申请到足够的内存, 就会抛出此异常\",\"OutOfMemoryError 不同的表现形式\",\"错误\",\"原因分析\",\"场景列举与解决办法\",\"Java heap space\",\"堆内存没有足够的空间存放新创建的对象\",\"通常只需要通过 -Xmx 参数调高 JVM 堆内存空间即可, 如果仍不能解决, 可以参考一下情况:1. 超大对象, 列表或数组: 检查合理性. 比如数据库查询分页等2. 超出预期的访问量: 如果是业务峰值压力, 可以考虑添加机器资源或者限流降级3. 过度使用终接器（Finalizer）, 该对象没有立即被 GC4. 内存泄露: 需要找到持有的对象, 找到问题并修改代码\",\"GC overhead limit exceeded\",\"当 Java 进程花费 98% 以上的时间执行 GC, 但只恢复了不到 2% 的内存, 且该动作连续重复了 5 次\",\"类似 java heap space\",\"Permgen space\",\"（≤ JDK 1.7）永久代已用满, 通常是因为加载的 class 数目太多或体积太大\",\"根据报错时机, 可以采用以下方案:1. 程序启动报错, 修改 -XX:MaxPermSize, 调大永久代空间应用重新部署时报错, 很可能应用没有正常停止, 导致加载了多份 class 信息, 重启 JVM 即可运行时报错, 应用程序可能会动态创建大量 class, 而这些 class 生命周期很短暂, 但是 JVM 默认不会卸载 class , 可以设置 -XX:CMSClassUnloadingEnabled 和 -XX:UseConcMarkSweepGC 这两个参数允许 JVM 卸载 class\",\"Metaspace\",\"（＞ JDK 1.8）Metaspace 已被用满, 通常是因为加载的 class 数目太多或体积太大\",\"类似 Permgen space, 调整 Metaspace 的空间大小的参数为 -XX:MaxMetaspaceSize\",\"Unable to create new native thread^1\",\"每个 Java 线程都需要占用一定的内存空间, 当 JVM 向底层操作系统请求创建一个新的 native 线程时没有足够的资源分配.\",\"常见的原因包括以下几类:1. 线程数超过操作系统最大线程数 ulimit 限制2. 线程数超过 kernel.pid_max（只能重启）3. native 内存不足解决方案:1. 升级配置2. 降低 Java Heap Space 大小3. 修复应用程序的线程泄露问题4. 使用 -Xss 参数减少线程栈大小5. 调高 SO 层面的线程最大数\",\"Out of swap space?\",\"所有可用的虚拟内存已被耗尽\",\"常见原因包括以下几类:1. 地址空间不足2. 物理内存已经耗光3. 应用程序的本地内存泄露（native leak）, 例如不断申请本地内存, 却不释放4. 执行 jamp -histo:live <pid> 命令, 强制执行 Full GC; 如果执行了几次后内存明显下降, 则基本确认为 Direct Byte Buffer 问题\",\"Kill process or sacrifice child[^2]\",\"不同于其他的 OOM 错误, Kill process or sacrifice child 错误不是由 JVM 层面触发的, 而是由操作系统层面触发的\",\"默认情况下, Linux 内核允许进程申请的内存总量大于系统可用内存, 通过这种\\\"错峰复用\\\"的方式可以更有效的利用系统资源然而, 这种方式也会无可避免地带来一定的\\\"超卖”风险. 例如某些进程持续占用系统内存, 然后导致其他进程没有可用内存. 此时, 系统将自动激活 OOM Killer, 寻找评分低的进程, 并将其\\\"杀死”, 释放内存资源解决方案:1. 升级配置\\\\隔离部署, 避免争用2. OOM Killer 调优\",\"Requested array size exceeds VM limit\",\"JVM 限制了数组的最大长度[^3], 该错误表示程序请求创建的数组超过最大长度限制\",\"此类问题比较罕见, 通常需要检查代码, 确认业务是否需要创建如此大的数组, 是否可以拆分为多个块, 分批执行\",\"Direct buffer memory[^4]\",\"Direct ByteBuffer 的默认大小为 64 MB, 一旦使用超出限制, 就会抛出 Direct buffer memory 错误\",\"1. Java 只能通过 ByteBuffer.allocateDirect 方法使用 Direct ByteBuffer, 需要通过 arthas 等工具拦截该方法进行排查2. 检查是否直接或间接使用了 NIO, 如 Jetty、Netty 等3. 通过 -XX:MaxDirectMemorySize 调整 Direct ByteBuffer 的上限值4. 检查 JVM 参数是否有 -XX:DisableExplicitGC 选项, 如果有就去掉, 该参数会使 System.gc() 失效5. 检查堆外内存使用代码, 确认是否存在内存泄露；或者通过放射调用 sun.misc.CLeaner#clean() 方法来主动释放被 Direct ByteBuffer 持有的内存空间6. 升级配置\",\"a. JVM 内部的应用程序请求创建一个新的 Java 线程 b. JVM native 方法代理了该次请求, 并向操作系统请求创建一个 native 线程 c. 操作系统尝试创建一个新的 native 线程, 并为其分配内存 d. 如果操作系统的虚拟内存已耗尽, 或是受到 32 位进程的地址空间限制, 操作系统就会拒绝本次 native 内存分配 e. JVM 将抛出 java.lang.OutOfMemoryError: Unable to create new native thread 错误 \",\"[^2]: 有一种内核作业（Kernel Job）名为 Out of Memory Killer, 它会在可用内存极低的情况下\\\"杀死\\\"（kill）某些进程. OOM Killer 会对所有进程进行打分, 然后将评分较低的进程\\\"杀死\\\", 具体的评分规则可以参考 Surviving the Linux OOM Killer [^3]: JVM 在为数组分配内存前, 会检查要分配的数据结构在系统中是否可寻址, 通常为 Integer.MAX_VALUE - 2 [^4]: Java 允许应用程序通过 Direct ByteBuffer 直接访问堆外内存, 许多高性能程序通过 Direct ByteBuffer 结合内存映射文件（Memory Mapped File）实现高速 IO\"]},\"240\":{\"h\":\"本地方法栈\",\"t\":[\"主要用于执行 JNI（Java Native Interface）方法, 它在程序调用或 JVM 调用本地方法接口时候启用\",\"本地方法栈与虚拟机栈所发挥的作用非常的相似, 他们之间的区别不过是虚拟机栈为虚拟机执行 Java 方法, 而本地方法栈为虚拟机使用的 Native 方法服务\",\"本地方法栈都不是 Java 语言编写的, 它可能由 C 或者其他语言编写, 本地方法也不由 JVM 去运行, 所以本地方法的运行不受 JVM 管理. 栈内的数据在超出其作用域后, 会被自动释放掉, 它不由 JVM GC 管理\",\"与虚拟机栈一样, 也会抛出 StackOverflowError 和 OutOfMemoryError 异常\",\"本地方法接口(JNI)\"]},\"241\":{\"h\":\"JNI 的适用场景\",\"t\":[\"已经存在一些库（用 C 语言编写的）, 要移植到 Java 上来非常浪费时间, 而 JNI 可以支持 Java 程序与 C 语言编写的库进行交互, 免去移植的工作\",\"为了与硬件、操作系统进行交互、提高程序的性能等都可以使用 JNI\",\"需要注意的是, 需要保证本地代码能工作在任何 Java 虚拟机环境\"]},\"242\":{\"h\":\"JNI 的副作用\",\"t\":[\"一旦使用了 JNI, Java 程序将失去 Java 平台的两个优点:\",\"程序不再跨平台, 要想跨平台, 必须在不同的系统环境下重新编译配置本地语言部分\",\"程序不再是绝对安全的, 本地代码的使用不当会导致整个程序的崩溃. 一个通用规则是, 调用本地方法应该集中在少数几个类中, 来降低 Java 和其他语言之间的耦合\"]},\"243\":{\"h\":\"Java 堆\",\"t\":[\"Java 堆是被所有线程共享的一块内存区域, 在虚拟机启动时创建. 此区域的唯一目的就是存放对象实例, 几乎所有的对象实例都在这里分配内存\",\"虚拟机中只有一个堆, 程序中所有的线程都共享它\",\"通常情况下, 堆占用的内存空间是最多的\",\"堆的存取方式为管道类型, 先进先出\",\"Java 堆是垃圾收集管理器管理的主要区域, 因此也被称为\\\"GC 堆\\\"（Garbage Collected Heap, 垃圾收集堆!!!😂）. Java 堆可以分为新生代和老年代, 再细致一点又可以分为 Eden、From Survivor、To Survivor 等\",\"根据 Java 虚拟机规范的规定, Java 堆可以处于物理上不连续的内存空间中, 只要逻辑上是连续的即可, 就像磁盘空间一样. 在实现时, 既可以实现成固定大小的, 也可以是可扩展的, 不过当前主流的虚拟机都是按照可扩展来实现的（通过-Xmx 和-Xms 控制）. 如果在堆中没有内存完成实例分配, 并且堆也无法在扩展时, 将会抛出 OutOfMemoryError 异常\"]},\"244\":{\"h\":\"方法区\",\"t\":[\"用于存储已被虚拟机加载的类信息、字段信息、常量、静态变量、即时编译器编译后的代码等数据. 方法区是所有线程共享的, 也可以动态地分配和回收\",\"在 JDK 8 以前, 使用永久代的方式来实现方法区, JDK 8 之后, 永久代的概念就被废弃了, 方法区改用和 JRockit、J9 一样在本地内存中实现的元空间（Meta Space）来代替, 好处是元空间会在运行时根据需要动态调整, 只要没有超过当前进程可用的内存上限（32位和64位系统各不相同）, 就不会出现溢出的问题. 当要扩展时空间不足, 会出现 OutOfMemoryError 异常\",\"方法区也可以被垃圾回收, 但条件非常严苛, 必须在该类没有任何引用的情况下\",\"类型信息包括什么\",\"The fully name of the type: 类型的全名\",\"The fully qualified name of the typeís direct superclass: 类型的父类全名（除非没有父类或者父类是 java.lang.Object）\",\"Whether or not the type is a class: 是不是一个 Class（还是一个接口）\",\"The typeís modifiers: 类型的修饰符\",\"An ordered list of the fully qualified names of any direct superinterfaces: 所有父接口的列表\",\"Field information: 类型的字段信息\",\"Method information: 类型的方法信息\",\"All class (static) variables declared in the type, except constants: 所有静态变量（非变量）信息\",\"A reference to class ClassLoader: 一个指向类加载器的引用\",\"A reference to class Class: 一个指向 Class 类的引用\",\"The constant pool for the type: 常量池\"]},\"245\":{\"h\":\"常量池\",\"t\":[\"Java 虚拟机中有几种不同的常量池, 它们分别是: Class 常量池、运行时常量池、字符串常量池\",\"基本类型包装类的\\\"常量池\\\"\",\"这里说的常量池跟 JVM 中的常量池不是一个概念, 它只是包装类里面实现的一个内部类（一般是名为 XXXCache 的内部类或者单个的静态常量）\",\"Java 中基本类型的包装类的大部分类型: Byte、Short、Integer、Long、Character、Boolean 都有实现, 其中前面 4 个包装类的范围都是 [-128, 127], Character 的范围是 [0, 127], Boolean 是 [True|False], 另外两种浮点类型的包装类则没有实现\"]},\"246\":{\"h\":\"Class 常量池\",\"t\":[\"每个类文件都包含一个常量池表（Constant Pool Table）, 它是一种用于存储常量（字面量（Literal）和符号引用（Symbolic Reference））的表格结构\",\"字面量包括:\",\"文本字符串\",\"八种基本类型的值\",\"被声明为 final 的常量\",\"符号引用包括:\",\"类和方法的全限定名\",\"字段的名称和描述符\",\"方法的名称和描述符\",\"在 JDK 1.8 环境中, Class 常量池在类加载过程中被加载到元空间中（JDK 1.7 是加载到方法区中）, 它提供了运行时所需的一些与类有关的信息, 并且在整个生命周期中都存在\"]},\"247\":{\"h\":\"运行时常量池\",\"t\":[\"Class 常量池是静态信息, 只有运行时被加载到内存后, 这些符号才有对应的内存地址信息, 这些常量池一旦被装入内存就变成运行时常量, 对应的符号引用在程序加载或运行时会被转变为被加载到内存区域的代码直接引用, 也就是常说的动态链接\",\"运行时常量池在 JDK 1.8 之前存储在永久代（方法区）, JDK 1.8 之后存储在元空间\",\"运行时常量池相对于 Class 常量池的另一个重要特征是具有动态性, 运行时常量池的内容并不全部来自 Class 常量池, 在运行时可以通过代码生成常量并将其放入运行时常量池中\"]},\"248\":{\"h\":\"字符串常量池\",\"t\":[\"字符串常量池是一块特殊的内存区域, 用于存储字符串常量的引用, 属于 Java 运行时数据区的一部分\"]},\"249\":{\"h\":\"不同 Java 版本实现的字符串常量池\",\"t\":[\"JDK 1.6 及之前的版本: 字符串常量池位于永久代（PemGen）内存区中, 其大小受到 PemGen 的内存空间的大小限制, 此时常量池存储的是对象\",\"JDK 1.7 : 字符串常量池从永久代移到了堆内存中, 以便更好的进行内存管理, 此时存储的是对象引用\",\"JDK 1.8 : 引入了 String Deduplication 的特性. 这个特性可以分析常量池中的字符串对象并去重, 降低内存消耗\",\"在使用字面量创建字符串对象时, 编译器会首先检查字符串常量池中是否存在相同的字符串, 如果存在则直接返回该字符串的引用, 反之则在字符串池中创建新的字符串对象, 并将其引用返回\",\"字符串常量池的本质\",\"字符串常量池是 JVM 维护的一个字符串实例的引用表, 在 HotSpot VM 中, 它是一个叫做 String Table 的全局表, 底层是 C++ 实现的一个 hashtable[^hashtable]. 这些被维护的引用所指的字符串实例, 称作\\\"被驻留的字符串(nterned string)\\\"或者说\\\"进入了字符串池的字符串\\\", 这个 StringTable 在每个 HotSpot VM 的实例里只有一份, 被所有类共享\",\"在 JDK 1.6 中, StringTable 的长度是固定的, 为 1009; 在 JDK 1.7 中, StringTable 的长度可以通过参数指定: -XX:StringTableSize\",\"[^hashtable]: hashtable 底层是用数组+链表实现的, 通过 hash 算法计算出其存放在数组中的 index, 如果发生了 hash 碰撞（index 的位置上存在元素）, 那么就把元素插入到节点链表的尾部, 以此类推. 但随着链表长度增加, 元素的查询效率变低, 于是出现了数组+红黑树, 后面又发展出了数组+链表+红黑树结构, 逐步优化. Java 中的 HashMap 与 Hashtable 就是这么实现的\"]},\"250\":{\"h\":\"执行引擎\",\"t\":[\"JVM 执行引擎是 JVM 的核心组成部分之一, 它可以执行 Java 字节码文件中的指令\",\"JVM 执行引擎包含两个主要组件:\",\"解释器: 当 JVM 加载 Java 字节码文件时, 解释器会逐行解释执行字节码文件中的指令, 然后将执行结果返回. 解释器的优点是可以快速启动和执行代码, 但是执行效率相对较低\",\"即时编译器: 在运行 Java 程序时, 即时编译器将字节码文件中的热点代码（即经常执行的代码）编译成本地机器代码, 以提高程序的执行效率. 即时编译器的优点是可以将执行效率提高到接近本地应用程序的水平, 但是编译过程会增加启动时间和内存消耗\",\"JVM 执行引擎也有许多优化措施, 例如: 即时编译器支持的触发机制、JIT 的预热过程、指针的内存对齐等. 这些优化措施将有助于提高程序的执行效率和减少内存占用\",\"JVM 规范中制定了虚拟机字节码执行引擎的概念模型, 这个模型称之为 JVM 执行引擎的统一外观, 各个 Java 虚拟机的发行厂商都需要按照这个规范来实现. 在不同的虚拟机实现中, 可能会有解释执行和编译执行两种执行方式, 虚拟机可以按照自身的需求, 采用一种或者同时采用多种组合的方式来实现引擎. 但无论内部怎么实现, 都要遵循输入是字节码文件, 处理过程是等效字节码解析过程, 输出是执行结果这个 JVM 规范要求\"]},\"251\":{\"h\":\"Java SPI 机制\"},\"252\":{\"h\":\"SPI 是什么\",\"t\":[\"面向的对象的设计里, 一般推荐模块之间基于接口编程, 模块之间不对实现类进行硬编码, 一旦代码里涉及具体的实现类, 就违反了可拔插的原则, 如果需要替换一种实现, 就需要修改代码. 为了实现在模块装配的时候不用在程序里动态指明, 这就需要一种服务发现机制\",\"Java SPI 就是提供这样的一个机制: 为某个接口寻找服务实现的机制（这有点类似 IOC 的思想, 将装配的控制权移到了程序之外）\",\"SPI 的全称是 Services Provider Interface, 翻译过来就是 服务提供者接口, 它所实现的是一种服务的发现机制, 可以用来启用框架扩展和替换组件\",\"SPI 的整体机制如下:\",\"flowchart LR subgraph 调用方 服务调用者 -- 定义&调用 --> A[服务标准接口] end subgraph 服务方 B[实现类1] C[实现类2] D[实现类3] end A <-- 服务发现 \\\\n 实现 --> B A <-- 服务发现 \\\\n 实现 --> C A <-- 服务发现 \\\\n 实现 --> D \"]},\"253\":{\"h\":\"与 API 的区别\",\"t\":[\"API: Application Programming Interface\",\"flowchart LR subgraph 调用方 B[服务调用者] end B -- 调用 --> A[服务接口] subgraph 服务方 A <-- 实现 --o 实现类1 A <-- 实现 --o 实现类2 A <-- 实现 --o 实现类3 end \",\"从上图就看出端倪:\",\"API 概念上更接近实现方, SPI 概念上更接近调用方\",\"API 组织上位于实现方所在的包中, SPI 组织上位于调用方所在的包中\",\"API 实现和接口在同一个包中, API 实现在独立的包中（也可认为在提供方中）\"]},\"254\":{\"h\":\"实现原理\",\"t\":[\"确切来说, SPI 并不是 Java 独有的, 它是一种设计思想, SPI 的本质是通过事先定义的接口来找其所有的接口实现类（服务）, 而后通过反射逐个实例化对象. 其实现原理:\",\"服务调用方定义接口, 并在主干服务中设置接入点\",\"服务提供方实现接口, 并按照约定将实现类放在调用方可达的位置\",\"调用方基于约定找到对应位置, 将对应接口的实现类加载到内存并连接至接入点\",\"后续服务提供方发生变更、替换时, 只要仍然按照约定提供实现类到对应位置, 调用方无需任何更改\",\"在 JDK6 里面引进的一个新的特性 ServiceLoader, 从 JDK 层面实现了一种服务提供发现机制. Java 的 SPI 机制包含了两类角色, 首先是服务定义者, 涉及的概念有:\",\"Service Provider Interface(SPI): 服务提供者接口, 通常是一组接口或者抽象类, 统一定义了服务的消费形式\",\"ServiceLoader: 服务在运行时的加载机制, 根据定义的 SPI 找到具体的实现\",\"然后是服务实现类, 涉及的概念有:\",\"Service Provider: 服务的具体实现, 是服务提供者对 SPI 的实现\",\"ServiceLoader 主要是用来装载一系列的 service provider, 而且它可以通过 service provider 的配置文件来装载指定的 service provider. 当服务的提供者提供了服务接口的一种实现之后, 我们只需要在 jar 包的 META-INF/services/ 目录里同时创建一个以服务接口命名的文件, 该文件内容就是实现该服务接口的具体实现类. 而当外部程序装配这个模块的时候, 就能通过该 jar 包META-INF/services/ 里的配置文件找到具体的实现类名, 并装载实例化, 完成模块的注入\"]},\"255\":{\"h\":\"Java SPI 的缺点\",\"t\":[\"注意这里说的是 Java SPI 的缺点, SPI 是一种机制, 而 Java SPI 只是它的其中一种实现\",\"不能按需加载且获取某个实现类的方式不够灵活 \",\"虽然 ServiceLoader 做了延迟载入, 但是实例化的时候是通过遍历将接口的实现类得全部载入, 造成资源浪费\",\"只支持通过 Iterator 形式迭代获取, 不能根据某个参数来获取对应的实现类\",\"多线程并发使用 ServiceLoader 类的实例存在安全隐患\",\"实现类不能通过有参构造器实例化（源码注释里面说明了, 因为通过反射实例化对象调用的是无参构造函数）\"]},\"256\":{\"h\":\"应用场景\",\"t\":[\"Spring 自动装配: 通过 SpringFactoriesLoader.loadFactoryName() 加载配置在 META-INF/spring.factories 中的类\",\"JDBC 驱动加载: 基于 SPI 机制实现不同驱动的加载（JDBC 4.0 之前都是用 Class.forName() 的硬编码方式）\",\"slf4j 日志门面\"]},\"257\":{\"h\":\"Java 语言\"},\"258\":{\"h\":\"Java 是什么\",\"t\":[\"Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的 Java 面向对象程序设计语言和 Java 平台的总称. 由 James Gosling 和同事们共同研发, 并在 1995 年正式推出\",\"后来 Sun 公司被 Oracle （甲骨文）公司收购, Java 也随之成为 Oracle 公司的产品\",\"Java 分为三个体系:\",\"JavaSE(J2SE)(Java2 Platform Standard Edition, java 平台标准版)\",\"JavaEE(J2EE)(Java 2 Platform Enterprise Edition, java 平台企业版)\",\"JavaME(J2ME)(Java 2 Platform Micro Edition, java 平台微型版)\",\"2005 年 6 月, JavaOne 大会召开, SUN 公司公开 Java SE 6. 此时, Java 的各种版本已经更名, 以取消其中的数字 \\\"2\\\": J2EE 更名为 Java EE, J2SE 更名为 Java SE, J2ME 更名为 Java ME\"]},\"259\":{\"h\":\"主要特性\",\"t\":[\"Java 语言是简单的:\",\"Java 语言的语法与 C 语言和 C++ 语言很接近, 使得大多数程序员很容易学习和使用. 另一方面, Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性, 如操作符重载、多继承、自动的强制类型转换. 特别地, Java 语言不使用指针, 而是引用. 并提供了自动分配和回收内存空间, 使得程序员不必为内存管理而担忧\",\"Java 语言是面向对象的:\",\"Java 语言提供类、接口和继承等面向对象的特性, 为了简单起见, 只支持类之间的单继承, 但支持接口之间的多继承, 并支持类与接口之间的实现机制（关键字为 implements）. Java 语言全面支持动态绑定, 而 C++语言只对虚函数使用动态绑定. 总之, Java 语言是一个纯的面向对象程序设计语言\",\"Java 语言是分布式的:\",\"Java 语言支持 Internet 应用的开发, 在基本的 Java 应用编程接口中有一个网络应用编程接口（java net）, 它提供了用于网络应用编程的类库, 包括 URL、URLConnection、Socket、ServerSocket 等. Java 的 RMI（远程方法激活）机制也是开发分布式应用的重要手段\",\"Java 语言是健壮的:\",\"Java 的强类型机制、异常处理、垃圾的自动收集等是 Java 程序健壮性的重要保证. 对指针的丢弃是 Java 的明智选择. Java 的安全检查机制使得 Java 更具健壮性\",\"Java 语言是安全的:\",\"Java 通常被用在网络环境中, 为此, Java 提供了一个安全机制以防恶意代码的攻击. 除了 Java 语言具有的许多安全特性以外, Java 对通过网络下载的类具有一个安全防范机制（类 ClassLoader）, 如分配不同的名字空间以防替代本地的同名类、字节代码检查, 并提供安全管理机制（类 SecurityManager）让 Java 应用设置安全哨兵\",\"Java 语言是体系结构中立的:\",\"Java 程序（后缀为 java 的文件）在 Java 平台上被编译为体系结构中立的字节码格式（后缀为 class 的文件）, 然后可以在实现这个 Java 平台的任何系统中运行. 这种途径适合于异构的网络环境和软件的分发\",\"Java 语言是可移植的:\",\"这种可移植性来源于体系结构中立性, 另外, Java 还严格规定了各个基本数据类型的长度. Java 系统本身也具有很强的可移植性, Java 编译器是用 Java 实现的, Java 的运行环境是用 ANSI C 实现的\",\"Java 语言是解释型的:\",\"如前所述, Java 程序在 Java 平台上被编译为字节码格式, 然后可以在实现这个 Java 平台的任何系统中运行. 在运行时, Java 平台中的 Java 解释器对这些字节码进行解释执行, 执行过程中需要的类在联接阶段被载入到运行环境中\",\"Java 是高性能的:\",\"与那些解释型的高级脚本语言相比, Java 的确是高性能的. 事实上, Java 的运行速度随着 JIT(Just-In-Time）编译器技术的发展越来越接近于 C++\",\"Java 语言是多线程的:\",\"在 Java 语言中, 线程是一种特殊的对象, 它必须由 Thread 类或其子（孙）类来创建. 通常有两种方法来创建线程:其一, 使用型构为 Thread(Runnable) 的构造子类将一个实现了 Runnable 接口的对象包装成一个线程, 其二, 从 Thread 类派生出子类并重写 run 方法, 使用该子类创建的对象即为线程. 值得注意的是 Thread 类已经实现了 Runnable 接口, 因此, 任何一个线程均有它的 run 方法, 而 run 方法中包含了线程所要运行的代码. 线程的活动由一组方法来控制. Java 语言支持多个线程的同时执行, 并提供多线程之间的同步机制（关键字为 synchronized）\",\"Java 语言是动态的:\",\"Java 语言的设计目标之一是适应于动态变化的环境. Java 程序需要的类能够动态地被载入到运行环境, 也可以通过网络来载入所需要的类. 这也有利于软件的升级. 另外, Java 中的类有一个运行时刻的表示, 能进行运行时刻的类型检查\"]},\"260\":{\"h\":\"Java\",\"t\":[\"此处存放 Java 相关笔记。\"]},\"261\":{\"h\":\"JavaScript\",\"t\":[\"此处存放 JavaScript 相关笔记。\"]},\"262\":{\"h\":\"Python异步I/O与协程\",\"t\":[\"注意\",\"这里实际上就是官方文档的搬运，非常不完整，建议直接看官方文档。\"]},\"263\":{\"h\":\"asyncio — 异步 I/O & 协程\",\"t\":[\"协程运行的原理见： \",\"asyncio 是用来编写 并发 代码的库，使用 async/await 语法。\",\"asyncio 被用作多个提供高性能 Python 异步框架的基础，包括网络和网站服务，数据库连接库，分布式任务队列等等。\",\"asyncio 往往是构建 IO 密集型和高层级 结构化 网络代码的最佳选择。\",\"asyncio 提供一组 高层级 API 用于:\",\"并发地 运行 Python 协程 并对其执行过程实现完全控制;\",\"执行 网络 IO 和 IPC;\",\"控制 子进程;\",\"通过 队列 实现分布式任务;\",\"同步 并发代码;\",\"此外，还有一些 低层级 API 以支持 库和框架的开发者 实现:\",\"创建和管理 事件循环，以提供异步 API 用于 网络化, 运行 子进程，处理 OS 信号 等等;\",\"使用 transports 实现高效率协议;\",\"通过 async/await 语法 桥接 基于回调的库和代码。\"]},\"264\":{\"h\":\"\"},\"265\":{\"h\":\"协程\",\"t\":[\"通过 async/await 关键字来定义的协程是一种被推荐的编写异步程序的方式。\",\"下面的代码定义并运行了一个协程：\",\">>> import asyncio >>> async def main(): ... print('hello') ... await asyncio.sleep(1) ... print('world') >>> asyncio.run(main()) hello world \",\"注意：简单地调用一个协程并不会使其被调度执行。\",\">>> main() <coroutine object main at 0x1053bb7c8> \",\"要正在运行一个协程，asyncio 提供了三种主要机制：\",\"asyncio.run() 函数用来运行最高层级的入口点 “main()” 函数\",\"await 一个协程。以下代码会在等待 1 秒后打印“hello”，然后等待 2 秒后打印“world”。（await 一个协程会让其开始运行，并等待其完成）\",\"import asyncio import time async def say_after(delay, what): await asyncio.sleep(delay) print(what) async def main(): print(f\\\"started at {time.strftime('%X')}\\\") await say_after(1, 'hello') await say_after(2, 'world') print(f\\\"finished at {time.strftime('%X')}\\\") asyncio.run(main()) # started at 17:13:52 # hello # world # finished at 17:13:55 \",\"asyncio.create_task() 函数用来并发运行作为 asyncio 任务的多个协程。（create_task()之后会使任务出于就绪状态随时准备运行，而 await task 则是等待这个任务运行完成）\",\"async def main(): task1 = asyncio.create_task( say_after(1, 'hello')) task2 = asyncio.create_task( say_after(2, 'world')) print(f\\\"started at {time.strftime('%X')}\\\") # Wait until both tasks are completed (should take # around 2 seconds.) await task1 await task2 print(f\\\"finished at {time.strftime('%X')}\\\") # 比上面的要快1秒，因为两个task是同时运行的 # started at 17:14:32 # hello # world # finished at 17:14:34 \"]},\"266\":{\"h\":\"可等待对象 awaitable objects\",\"t\":[\"如果一个对象可以在 await 语句中使用，那么它就是 awaitable 对象。许多 asyncio API 都被设计为接受 awaitable 对象。\",\"可等待 对象有三种主要类型：协程（Coroutine）、任务（Task）、Future。\"]},\"267\":{\"h\":\"协程\",\"t\":[\"Python 协程属于可等待对象，因此可以在其他协程中被等待：\",\"import asyncio async def nested(): return 42 async def main(): # Nothing happens if we just call \\\"nested()\\\". # A coroutine object is created but not awaited, # so it *won't run at all*. nested() # 这个不会运行，只是单纯返回了一个coroutine对象 # Let's do it differently now and await it: print(await nested()) # will print \\\"42\\\". # 这里会运行，因为有await asyncio.run(main()) \",\"重要\",\"在本文档中 \\\"协程\\\" 可用来表示两个紧密关联的概念:\",\"协程函数: 定义形式为 [async def](https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-def) 的函数;\",\"协程对象: 调用 协程函数 所返回的对象。\"]},\"268\":{\"h\":\"任务\",\"t\":[\"Task 被用来 “并行地” 调度协程。\",\"当一个协程通过 asyncio.create_task() 等函数被封装为了一个 Task，该协程会被自动调度执行：\",\"import asyncio async def nested(): return 42 async def main(): # Schedule nested() to run soon concurrently # with \\\"main()\\\". task = asyncio.create_task(nested()) # 这里 task 就开始运行了 # \\\"task\\\" can now be used to cancel \\\"nested()\\\", or # can simply be awaited to wait until it is complete: await task # 这里只是单纯地等待其运行完 asyncio.run(main()) \"]},\"269\":{\"h\":\"Futures\",\"t\":[\"Future 是一种特殊的 低层级 可等待对象，表示一个异步操作的 最终结果。\",\"当一个 Future 对象 被等待，这意味着协程将保持等待直到该 Future 对象在其他地方操作完毕。\",\"在 asyncio 中需要 Future 对象以便允许 async/await 使用基于回调的代码。\",\"通常情况下 没有必要 在应用层级的代码中创建 Future 对象。\",\"Future 对象有时会由库和某些 asyncio API 暴露给用户，用作可等待对象：\",\"async def main(): await function_that_returns_a_future_object() # this is also valid: await asyncio.gather( function_that_returns_a_future_object(), some_python_coroutine() ) \",\"一个很好的返回对象的低层级函数的示例是：loop.run_in_executor()\"]},\"270\":{\"h\":\"运行 asyncio 程序\",\"t\":[\"asyncio.run(coro, *, debug=False)\",\"执行 coro 并返回结果。\",\"吃函数会运行传入的协程，负责管理 asyncio 事件循环，终结异步生成器，并关闭线程池。\",\"但有其他 asyncio 事件循环在同一线程中运行时，此函数不能被调用。\",\"如果 debug 为 True，事件循环将以调试模式运行。\",\"此函数总是会创建一个新的事件循环并在结束时关闭之。它应当用作 asyncio 程序的主入口点，理想情况下应当只被调用一次。\",\"async def main(): await asyncio.sleep(1) print('hello') asyncio.run(main()) \"]},\"271\":{\"h\":\"创建任务\",\"t\":[\"asyncio.create_task(coro, *, name=None)\",\"将 coro 封装为一个 Task 并调度其执行。返回 Task 对象。\",\"name 不为 None 时，它将使用 Task.set_name() 来设为任务的名称。\",\"该任务会在 get_running_loop() 返回的循环中执行，如果当前线程没有在运行的循环则会引发 RuntimeError。\",\"相关信息\",\"需要保存这个方法返回值 Task 的引用，因为 event_loop 中只会保存一个弱引用，如果不保存引用，可能这个协程没有被执行完毕就被垃圾回收给清理了。\",\"background_tasks = set() for i in range(10): task = asyncio.create_task(some_coro(param=i)) # Add task to the set. This creates a strong reference. background_tasks.add(task) # To prevent keeping references to finished tasks forever, # make each task remove its own reference from the set after # completion: task.add_done_callback(background_tasks.discard) \"]},\"272\":{\"h\":\"休眠\",\"t\":[\"coroutine asyncio.sleep(delay, result=None)\",\"阻塞 delay 指定的秒数。\",\"如果指定了 result，则当协程完成时 result 其返回给调用者。\",\"sleep() 总是会挂起当前任务，以允许其他任务运行。\",\"将 delay 设为 0 将提供一个经优化的路径以允许其他任务运行。 这可供长期间运行的函数使用以避免在函数调用的全过程中阻塞事件循环。\",\"以下协程示例运行 5 秒，每秒显示一次当前日期:\",\"import asyncio import datetime async def display_date(): loop = asyncio.get_running_loop() end_time = loop.time() + 5.0 while True: print(datetime.datetime.now()) if (loop.time() + 1.0) >= end_time: break await asyncio.sleep(1) asyncio.run(display_date()) \"]},\"273\":{\"h\":\"并发运行任务\",\"t\":[\"awaitable asyncio.gather(*aws, return_exceptions=False)\",\"并发 运行 aws 序列中的 可等待对象。\",\"如果 aws 中的某个可等待对象为协程，它将自动被作为一个任务调度。\",\"如果所有可等待对象都成功完成，结果将是一个由所有返回值聚合而层的列表。结果值的顺序与 aws 中可等待对象的顺序一致。\",\"如果 return_exceptions 为 False，所引发的首个异常会立即传播给等待 gather() 的任务。aws 序列中的其他可等待对象 不会被取消 并继续运行。\",\"如果 return_exceptions 为 True，异常会和成功的结果一样处理，并聚合至结果列表。\",\"如果 gather() 被取消，所有被提交（尚未完成）的可等待对象也会 被取消。\",\"如果 aws 序列中的任一 Task 或 Future 对象 被取消，它将被当作引发了 CancelledError 一样处理 — 在此情况下 gather() 调用 不会 被取消。这是为了防止一个已提交的 Task/Future 被取消导致其他 Tasks/Future 也被取消。\",\"import asyncio async def factorial(name, number): f = 1 for i in range(2, number + 1): print(f\\\"Task {name}: Compute factorial({number}), currently i={i}...\\\") await asyncio.sleep(1) f *= i print(f\\\"Task {name}: factorial({number}) = {f}\\\") return f async def main(): # Schedule three calls *concurrently*: L = await asyncio.gather( factorial(\\\"A\\\", 2), factorial(\\\"B\\\", 3), factorial(\\\"C\\\", 4), ) print(L) asyncio.run(main()) # Expected output: # # Task A: Compute factorial(2), currently i=2... # Task B: Compute factorial(3), currently i=2... # Task C: Compute factorial(4), currently i=2... # Task A: factorial(2) = 2 # Task B: Compute factorial(3), currently i=3... # Task C: Compute factorial(4), currently i=3... # Task B: factorial(3) = 6 # Task C: Compute factorial(4), currently i=4... # Task C: factorial(4) = 24 # [2, 6, 24] \",\"相关信息\",\"如果 return_exceptions 为 False，则在 gather() 被标记为已完成后取消它将不会取消任何已提交的可等待对象。 例如，在将一个异常传播给调用者之后，gather 可被标记为已完成，因此，在从 gather 捕获一个（由可等待对象所引发的）异常之后调用 gather.cancel() 将不会取消任何其他可等待对象。\"]},\"274\":{\"h\":\"屏蔽取消操作\",\"t\":[\"awaitable asyncio.shield(aw)\",\"保护一个 可等待对象 防止其被 取消。\",\"如果 aw 是一个协程，它将自动被作为任务调度。\",\"以下语句:\",\"res = **await** shield(something())\",\"相当于:\",\"res = **await** something()\",\"不同之处 在于如果包含它的协程被取消，在 something() 中运行的任务不会被取消。从 something() 的角度看来，取消操作并没有发生。然而其调用者已被取消，因此 \\\"await\\\" 表达式仍然会引发CancelledError。\"]},\"275\":{\"h\":\"超时\",\"t\":[\"coroutine asyncio.wait_for(aw, timeout)\",\"等待 aw可等待对象 完成，指定 timeout 秒数后超时。\",\"如果 aw 是一个协程，它将自动被作为任务调度。\",\"timeout 可以为 None，也可以为 float 或 int 型数值表示的等待秒数。如果 timeout 为 None，则等待直到完成。\",\"如果发生超时，任务将取消并引发 asyncio.TimeoutError.\",\"要避免任务 取消，可以加上 shield()。\",\"此函数将等待直到 Future 确实被取消，所以总等待时间可能超过 timeout。 如果在取消期间发生了异常，异常将会被传播。\",\"如果等待被取消，则 aw 指定的对象也会被取消。\",\"async def eternity(): # Sleep for one hour await asyncio.sleep(3600) print('yay!') async def main(): # Wait for at most 1 second try: await asyncio.wait_for(eternity(), timeout=1.0) except asyncio.TimeoutError: print('timeout!') asyncio.run(main()) # Expected output: # # timeout! \"]},\"276\":{\"h\":\"简单等待\",\"t\":[\"并发地运行 aws 可迭代对象中的 可等待对象 并进入阻塞状态直到满足 return_when 所指定的条件。\",\"aws 可迭代对象必须不为空。\",\"返回两个 Task/Future 集合: (done, pending)。\",\"用法：\",\"done, pending = **await** asyncio.wait(aws)\",\"如指定 timeout (float 或 int 类型) 则它将被用于控制返回之前等待的最长秒数。\",\"请注意此函数不会引发 asyncio.TimeoutError。当超时发生时，未完成的 Future 或 Task 将在指定秒数后被返回。\",\"return_when 指定此函数应在何时返回。它必须为以下常数之一:\",\"常量\",\"描述\",\"FIRST_COMPLETED\",\"函数将在任意可等待对象结束或取消时返回。\",\"FIRST_EXCEPTION\",\"函数将在任意可等待对象因引发异常而结束时返回。当没有引发任何异常时它就相当于 ALL_COMPLETED。\",\"ALL_COMPLETED\",\"函数将在所有可等待对象结束或取消时返回。\",\"asyncio.as_completed(aws, *, timeout=None)\",\"并发地运行 aws 可迭代对象中的 可等待对象。 返回一个协程的迭代器。 所返回的每个协程可被等待以从剩余的可等待对象的可迭代对象中获得最早的下一个结果。\",\"如果在所有 Future 对象完成前发生超时则将引发 asyncio.TimeoutError。\",\"for coro in as_completed(aws): earliest_result = await coro # ... \"]},\"277\":{\"h\":\"在线程中运行\",\"t\":[\"coroutine asyncio.to_thread(func, /, *args, **kwargs)\",\"在不同的线程中异步地运行函数 func。\",\"向此函数提供的任何 *args 和 **kwargs 会被直接传给 *func*。 并且，当前 contextvars.Context 会被传播，允许在不同的线程中访问来自事件循环的上下文变量。\",\"返回一个可被等待以获取 func 的最终结果的协程。\",\"这个协程函数主要是用于执行在其他情况下会阻塞事件循环的 IO 密集型函数/方法。 例如:\",\"def blocking_io(): print(f\\\"start blocking_io at {time.strftime('%X')}\\\") # Note that time.sleep() can be replaced with any blocking # IO-bound operation, such as file operations. time.sleep(1) print(f\\\"blocking_io complete at {time.strftime('%X')}\\\") async def main(): print(f\\\"started main at {time.strftime('%X')}\\\") await asyncio.gather( asyncio.to_thread(blocking_io), asyncio.sleep(1)) print(f\\\"finished main at {time.strftime('%X')}\\\") asyncio.run(main()) # Expected output: # # started main at 19:50:53 # start blocking_io at 19:50:53 # blocking_io complete at 19:50:54 # finished main at 19:50:54 \",\"在任何协程中直接调用 blocking_io() 将会在调用期间阻塞事件循环，导致额外的 1 秒运行时间。 而通过改用 asyncio.to_thread()，我们可以在不同的线程中运行它从而不会阻塞事件循环。\"]},\"278\":{\"h\":\"跨线程调度\",\"t\":[\"asyncio.run_coroutine_threadsafe(coro, loop)\",\"向指定事件循环提交一个协程。（线程安全）\",\"返回一个 concurrent.futures.Future 以等待来自其他 OS 线程的结果。\",\"此函数应该从另一个 OS 线程中调用，而非事件循环运行所在线程。示例:\",\"# Create a coroutine coro = asyncio.sleep(1, result=3) # Submit the coroutine to a given loop future = asyncio.run_coroutine_threadsafe(coro, loop) # Wait for the result with an optional timeout argument assert future.result(timeout) == 3 \",\"如果在协程内产生了异常，将会通知返回的 Future 对象。它也可被用来取消事件循环中的任务:\",\"try: result = future.result(timeout) except concurrent.futures.TimeoutError: print('The coroutine took too long, cancelling the task...') future.cancel() except Exception as exc: print(f'The coroutine raised an exception: {exc!r}') else: print(f'The coroutine returned: {result!r}') \",\"参见 concurrency and multithreading 部分的文档。\",\"不同与其他 asyncio 函数，此函数要求显式地传入 loop 参数。\"]},\"279\":{\"h\":\"内省\",\"t\":[\"asyncio.**current_task**(*loop=None*)\",\"返回当前运行的 Task 实例，如果没有正在运行的任务则返回 None。 如果 loop 为 None 则会使用 get_running_loop() 获取当前事件循环。\",\"asyncio.**all_tasks**(*loop=None*)\",\"返回事件循环所运行的未完成的 Task 对象的集合。 如果 loop 为 None，则会使用 get_running_loop() 获取当前事件循环。\"]},\"280\":{\"h\":\"Task 对象\",\"t\":[\"class asyncio.Task(coro, *, loop=None, name=None)\",\"一个与 [Future 类似](https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio.Future) 的对象，可运行 Python 协程。非线程安全。\",\"Task 对象被用来在事件循环中运行协程。如果一个协程在等待一个 Future 对象，Task 对象会挂起该协程的执行并等待该 Future 对象完成。当该 Future 对象 完成，被打包的协程将恢复执行。\",\"事件循环使用协同日程调度: 一个事件循环每次运行一个 Task 对象。而一个 Task 对象会等待一个 Future 对象完成，该事件循环会运行其他 Task、回调或执行 IO 操作。\",\"使用高层级的 asyncio.create_task() 函数来创建 Task 对象，也可用低层级的 loop.create_task() 或 ensure_future() 函数。不建议手动实例化 Task 对象。\",\"要取消一个正在运行的 Task 对象可使用 cancel() 方法。调用此方法将使该 Task 对象抛出一个 CancelledError 异常给打包的协程。如果取消期间一个协程正在等待一个 Future 对象，该 Future 对象也将被取消。\",\"cancelled() 可被用来检测 Task 对象是否被取消。如果打包的协程没有抑制 CancelledError 异常并且确实被取消，该方法将返回 True。\",\"asyncio.Task 从 Future 继承了其除 Future.set_result() 和 Future.set_exception() 以外的所有 API。\",\"Task 对象支持 contextvars 模块。当一个 Task 对象被创建，它将复制当前上下文，然后在复制的上下文中运行其协程。\",\"cancel(msg=None)：取消任务，这将抛出 CancelledError\",\"done()：如果 Task 对象已完成，则返回 true\",\"result()：返回 Task 的结果\",\"add_done_callback(callback, *, context=None)：添加一个回调，在 Task 完成时调用。\"]},\"281\":{\"h\":\"Stream 流 [^2]\",\"t\":[\"[^2]: Stream 流\",\"流是用于处理网络连接的支持 async/await 的高层级原语。 流允许发送和接收数据，而不需要使用回调或低级协议和传输。\"]},\"282\":{\"h\":\"Stream 函数\",\"t\":[\"open_connection\",\"start_server\"]},\"283\":{\"h\":\"Unix 套接字（Socket）\",\"t\":[\"open_unix_connection\",\"start_unix_server\"]},\"284\":{\"h\":\"StreamReader 与 StreamWriter\"},\"285\":{\"h\":\"例子：echo 服务器与客户端\",\"t\":[\"import asyncio async def handle_echo(reader, writer): data = await reader.read(100) message = data.decode() addr = writer.get_extra_info('peername') print(f\\\"Received {message!r} from {addr!r}\\\") print(f\\\"Send: {message!r}\\\") writer.write(data) await writer.drain() print(\\\"Close the connection\\\") writer.close() async def main(): server = await asyncio.start_server( handle_echo, '127.0.0.1', 8888) addrs = ', '.join(str(sock.getsockname()) for sock in server.sockets) print(f'Serving on {addrs}') async with server: await server.serve_forever() asyncio.run(main()) \",\"import asyncio async def tcp_echo_client(message): reader, writer = await asyncio.open_connection( '127.0.0.1', 8888) print(f'Send: {message!r}') writer.write(message.encode()) data = await reader.read(100) print(f'Received: {data.decode()!r}') print('Close the connection') writer.close() asyncio.run(tcp_echo_client('Hello World!')) \"]},\"286\":{\"h\":\"\",\"t\":[\"asyncio 同步原语被设计为与 threading 模块的类似，但有两个关键注意事项:\",\"asyncio 原语不是线程安全的，因此它们不应被用于 OS 线程同步 (而应当使用 threading)；\",\"这些同步原语的方法不接受 timeout 参数；请使用 asyncio.wait_for() 函数来执行带有超时的操作。\",\"asyncio 具有下列基本同步原语:\"]},\"287\":{\"h\":\"Lock\",\"t\":[\"class asyncio.Lock\",\"实现一个用于 asyncio 任务的互斥锁。 非线程安全。\",\"asyncio 锁可被用来保证对共享资源的独占访问。\",\"使用 Lock 的推荐方式是通过 [async with](https://docs.python.org/zh-cn/3.10/reference/compound_stmts.html#async-with) 语句:\",\"lock = asyncio.Lock() # ... later async with lock: # access shared state \",\"这等价于：\",\"lock = asyncio.Lock() # ... later await lock.acquire() try: # access shared state finally: lock.release() \",\"coroutine acquire()\",\"获取锁。 此方法会等待直至锁为 unlocked，将其设为 locked 并返回 True。 当有一个以上的协程在 acquire() 中被阻塞则会等待解锁，最终只有一个协程会被执行。 锁的获取是 公平的: 被执行的协程将是第一个开始等待锁的协程。\",\"release()\",\"释放锁。\",\"当锁为 locked 时，将其设为 unlocked 并返回。\",\"如果锁为 unlocked，则会引发 RuntimeError。\",\"locked()\",\"如果锁为 locked 则返回 True。\"]},\"288\":{\"h\":\"Event\",\"t\":[\"class asyncio.Event\",\"事件对象。 该对象不是线程安全的。\",\"asyncio 事件可被用来通知多个 asyncio 任务已经有事件发生。\",\"Event 对象会管理一个内部旗标，可通过 set() 方法将其设为 true 并通过 clear() 方法将其重设为 false。 wait() 方法会阻塞直至该旗标被设为 true。 该旗标初始时会被设为 false。\",\"async def waiter(event): print('waiting for it ...') await event.wait() print('... got it!') async def main(): # Create an Event object. event = asyncio.Event() # Spawn a Task to wait until 'event' is set. waiter_task = asyncio.create_task(waiter(event)) # Sleep for 1 second and set the event. await asyncio.sleep(1) event.set() # Wait until the waiter task is finished. await waiter_task asyncio.run(main()) \",\"coroutine wait()\",\"等待直至事件被设置。\",\"如果事件已被设置，则立即返回 True。 否则将阻塞直至另一个任务调用 set()。\",\"set()\",\"设置事件。\",\"所有等待事件被设置的任务将被立即唤醒。\",\"clear()\",\"清空（取消设置）事件。\",\"通过 wait() 进行等待的任务现在将会阻塞直至 set() 方法被再次调用。\",\"is_set()\",\"如果事件已被设置则返回 True。\"]},\"289\":{\"h\":\"Condition\",\"t\":[\"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#condition\"]},\"290\":{\"h\":\"Semaphore\"},\"291\":{\"h\":\"BoundedSemaphore\"},\"292\":{\"h\":\"\",\"t\":[\"asyncio 队列被设计成与 queue 模块类似。尽管 asyncio 队列不是线程安全的，但是他们是被设计专用于 async/await 代码。\",\"注意 asyncio 的队列没有 timeout 形参；请使用 asyncio.wait_for() 函数为队列添加超时操作。\",\"参见下面的 Examples 部分。\"]},\"293\":{\"h\":\"Queue\",\"t\":[\"class asyncio.Queue(maxsize=0)\",\"FIFO 队列\",\"如果 maxsize 小于等于零，则队列尺寸是无限的。如果是大于 0 的整数，则当队列达到 maxsize 时， await put() 将阻塞至某个元素被 get() 取出。\",\"不像标准库中的并发型 queue ，队列的尺寸一直是已知的，可以通过调用 qsize() 方法返回。\",\"maxsize\",\"empty()\",\"full()\",\"coroutine join()\",\"get_nowait() 不阻塞的出队\",\"coroutine join() 阻塞至队列中所有的元素都被接收和处理完毕。 \",\"当条目添加到队列的时候，未完成任务的计数就会增加。每当消费协程调用 task_done()表示这个条目已经被回收，该条目所有工作已经完成，未完成计数就会减少。当未完成计数降到零的时候， join()阻塞被解除。\",\"coroutine put(item)\",\"put_nowait(item) 不阻塞的入队\",\"qsize()\",\"task_done() 表明前面排队的任务已经完成，即 get 出来的元素相关操作已经完成。\"]},\"294\":{\"h\":\"优先级队列\",\"t\":[\"class asyncio.PriorityQueue\",\"Queue 的变体；按优先级顺序取出条目 (最小的先取出)。\",\"条目通常是 (priority_number, data) 形式的元组。\"]},\"295\":{\"h\":\"\",\"t\":[\"class asyncio.LifoQueue\"]},\"296\":{\"h\":\"例子\",\"t\":[\"import asyncio import random import time async def worker(name, queue): while True: # Get a \\\"work item\\\" out of the queue. sleep_for = await queue.get() # Sleep for the \\\"sleep_for\\\" seconds. await asyncio.sleep(sleep_for) # Notify the queue that the \\\"work item\\\" has been processed. queue.task_done() print(f'{name} has slept for {sleep_for:.2f} seconds') async def main(): # Create a queue that we will use to store our \\\"workload\\\". queue = asyncio.Queue() # Generate random timings and put them into the queue. total_sleep_time = 0 for _ in range(20): sleep_for = random.uniform(0.05, 1.0) total_sleep_time += sleep_for queue.put_nowait(sleep_for) # Create three worker tasks to process the queue concurrently. tasks = [] for i in range(3): task = asyncio.create_task(worker(f'worker-{i}', queue)) tasks.append(task) # Wait until the queue is fully processed. started_at = time.monotonic() await queue.join() total_slept_for = time.monotonic() - started_at # Cancel our worker tasks. for task in tasks: task.cancel() # Wait until all worker tasks are cancelled. await asyncio.gather(*tasks, return_exceptions=True) print('====') print(f'3 workers slept in parallel for {total_slept_for:.2f} seconds') print(f'total expected sleep time: {total_sleep_time:.2f} seconds') asyncio.run(main()) \"]},\"297\":{\"h\":\"\"},\"298\":{\"h\":\"\",\"t\":[\"事件循环是每个 asyncio 应用的核心。 事件循环会运行异步任务和回调，执行网络 IO 操作，以及运行子进程。\",\"应用开发者通常应当使用高层级的 asyncio 函数，例如 asyncio.run()，应当很少有必要引用循环对象或调用其方法。 本节所针对的主要是低层级代码、库和框架的编写者，他们需要更细致地控制事件循环行为。\"]},\"299\":{\"h\":\"高层级 API 索引 [^6]\",\"t\":[\"[^6]: 高层级 API 索引\",\"这个页面列举了所有能用于 async/wait 的高层级 asyncio API 集。\"]},\"300\":{\"h\":\"任务\",\"t\":[\"运行异步程序，创建 Task 对象，等待多件事运行超时的公共集。\",\"run()\",\"创建事件循环，运行一个协程，关闭事件循环。\",\"create_task()\",\"启动一个 asyncio 的 Task 对象。\",\"await sleep()\",\"休眠几秒。\",\"await gather()\",\"并发执行所有事件的调度和等待。\",\"await wait_for()\",\"有超时控制的运行。\",\"await shield()\",\"屏蔽取消操作\",\"await wait()\",\"完成情况的监控器\",\"current_task()\",\"返回当前 Task 对象\",\"all_tasks()\",\"返回事件循环中所有的 task 对象。\",\"Task\",\"Task 对象\",\"to_thread()\",\"在不同的 OS 线程中异步地运行一个函数。\",\"run_coroutine_threadsafe()\",\"从其他 OS 线程中调度一个协程。\",\"for in as_completed()\",\"用 for 循环监控完成情况。\",\"例子\",\"使用 asyncio.gather() 并行运行.\",\"使用 asyncio.wait_for() 强制超时.\",\"撤销协程.\",\"asyncio.sleep() 的用法.\",\"请主要参阅 协程与任务文档.\"]},\"301\":{\"h\":\"\",\"t\":[\"队列集被用于多个异步 Task 对象的运行调度，实现连接池以及发布/订阅模式。\",\"Queue\",\"先进先出队列\",\"PriorityQueue\",\"优先级队列。\",\"LifoQueue\",\"后进先出队列。\",\"例子\",\"使用 asyncio.Queue 在多个并发任务间分配工作量.\",\"请参阅 队列集文档.\"]},\"302\":{\"h\":\"子进程集\",\"t\":[\"用于生成子进程和运行 shell 命令的工具包。\",\"await create_subprocess_exec()\",\"创建一个子进程。\",\"await create_subprocess_shell()\",\"运行一个 shell 命令。\",\"例子\",\"执行一个 shell 命令.\",\"请参阅 子进程 APIs 相关文档.\"]},\"303\":{\"h\":\"流\",\"t\":[\"用于网络 IO 处理的高级 API 集。\",\"await open_connection()\",\"建立一个 TCP 连接。\",\"await open_unix_connection()\",\"建立一个 Unix socket 连接。\",\"await start_server()\",\"启动 TCP 服务。\",\"await start_unix_server()\",\"启动一个 Unix 套接字服务。\",\"StreamReader\",\"接收网络数据的高级 async/await 对象。\",\"StreamWriter\",\"发送网络数据的高级 async/await 对象。\",\"例子\",\"TCP 客户端样例.\",\"请参阅 streams APIs 文档。\"]},\"304\":{\"h\":\"\",\"t\":[\"能被用于 Task 对象集的，类似线程的同步基元组件。\",\"Lock\",\"互斥锁。\",\"Event\",\"事件对象。\",\"Condition\",\"条件对象\",\"Semaphore\",\"信号量\",\"BoundedSemaphore\",\"有界的信号量。\"]},\"305\":{\"h\":\"\",\"t\":[\"asyncio.TimeoutError\",\"类似 wait_for() 等函数在超时时候被引发。请注意 asyncio.TimeoutError 与内建异常 TimeoutError 无关。\",\"asyncio.CancelledError\",\"当一个 Task 对象被取消的时候被引发。请参阅 Task.cancel()。\",\"例子\",\"在取消请求发生的运行代码中如何处理 CancelledError 异常.\",\"请参阅完整的 asyncio 专用异常 列表.\"]},\"306\":{\"h\":\"关于 never-awaited 协程\",\"t\":[\"当协程函数被调用而不是被等待时 (即执行 coro() 而不是 await coro()) 或者协程没有通过 asyncio.create_task() 被排入计划日程，asyncio 将会发出一条 RuntimeWarning:\",\"import asyncio async def test(): print(\\\"never scheduled\\\") async def main(): test() asyncio.run(main()) # test.py:7: RuntimeWarning: coroutine 'test' was never awaited # test() \",\"通常的修复方法是 await 协程或者调用 asyncio.create_task() 函数:\",\"async def main(): await test() # 开始运行并等待完成 async def main(): task = asyncio.create_task(test()) # 开始运行 await task # 等待完成 \"]},\"307\":{\"c\":[\"笔记\",\"API\"]},\"308\":{\"c\":[\"Python\",\"并发\",\"异步IO\",\"协程\"]},\"309\":{\"h\":\"Python二分查找 - bisect\"},\"310\":{\"h\":\"二分查找模块 bisect\",\"t\":[\"bisect_left(a, x, lo=0, hi=len(a))\",\"相当于 left_bound，返回目标值的左侧边界，其返回值的解读：\",\"解读 1：将 x 插入有序数组 a 中的最左侧索引\",\"解读 2：a 中小于 x 的值的数量\",\"解读 3：有序数组 a 中大于等于 x 的最小元素索引\",\"bisect_right(a, x, lo=0, hi=len(a))\",\"bisect(a, x, lo=0, hi=len(a))\",\"⚠️ 不相当于 right_bound，返回目标值的右侧边界+1，其返回值的解读：\",\"解读 1：将 x 插入有序数组 a 中的最右侧索引\",\"解读 2：a 中小于等于 x 的值的数量\",\"解读 3：有序数组 a 中大于 x 的最小元素索引（返回的索引位置的值肯定不等于 x！！！\",\"insort_left(a, x, lo=0, hi=len(a))\",\"等价于 a.insert(bisect.bisect_left(a, x, lo, hi), x)\",\"insort_right(a, x, lo=0, hi=len(a))insort(a, x, lo=0, hi=len(a))\",\"等价于 a.insert(bisect.bisect_right(a, x, lo, hi), x)\",\"#idx 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 a = [0, 1, 2, 3, 3, 3, 3, 3, 5, 8] >>> bisect_left(a, 3) 3 >>> bisect_right(a, 3) # bisect(a, 3) 8 >>> bisect_left(a, 4) 8 >>> bisect_right(a, 4) 8 \"]},\"311\":{\"h\":\"python3.10 之后的版本新增参数 key\",\"t\":[\"类似 sort 的 key 参数，可以指定搜索时使用的具体的键\",\"例子：\",\"# leetcode #875 class Solution: def minEatingSpeed(self, piles: List[int], h: int) -> int: def canEatAll(k): if k == 0: return False cost_time = 0 for pile in piles: cost_time += math.ceil(pile / k) return cost_time <= h return bisect_left(range(max(piles) + 1), True, key=canEatAll) \",\"注意\",\"若使用这种方法解题，a 要包括所有的答案域，且如果使用 range，尽量使用 range(max_ans+1)的形式，若使用 range(min_ans, max_ans+1)，需要给返回的结果添加偏置 min_ans！\"]},\"312\":{\"h\":\"在有序列表中搜索\",\"t\":[\"如何将 bisect 转换为一般的搜索方法：\",\"def index(a, x): 'Locate the leftmost value exactly equal to x' i = bisect_left(a, x) if i != len(a) and a[i] == x: return i raise ValueError def find_lt(a, x): 'Find rightmost value less than x' i = bisect_left(a, x) if i: return a[i-1] raise ValueError def find_le(a, x): 'Find rightmost value less than or equal to x' i = bisect_right(a, x) if i: return a[i-1] raise ValueError def find_gt(a, x): 'Find leftmost value greater than x' i = bisect_right(a, x) if i != len(a): return a[i] raise ValueError def find_ge(a, x): 'Find leftmost item greater than or equal to x' i = bisect_left(a, x) if i != len(a): return a[i] raise ValueError \"]},\"313\":{\"c\":[\"笔记\",\"API\"]},\"314\":{\"c\":[\"Python\",\"二分查找\"]},\"315\":{\"h\":\"Python并发编程\"},\"316\":{\"h\":\"多进程程序例子\",\"t\":[\"import argparse import redis from tqdm import tqdm from multiprocessing import Pool, Process parser = argparse.ArgumentParser(description='PyTorch MM Training') parser.add_argument('--port', default=6379, type=str, help=\\\"port id\\\") parser.add_argument('--file', default=None, type=str, help=\\\"paths for train instances\\\") args = parser.parse_args() host = '127.0.0.1' port = args.port # r = redis.Redis(host=host, port=port) train_file = args.file def worker_i(train_file, i, nums=16): r = redis.Redis(host=host, port=port) k = 0 if i == 0: iter_ = tqdm(open(train_file, 'r')) else: iter_ = open(train_file, 'r') for info in iter_: if k % nums == i: # 将多个任务分成nums份 r.set(k, info.strip()) k += 1 process_list = [] nums = 8 for i in range(nums): p = Process(target=worker_i, args=(train_file, i, nums)) p.start() process_list.append(p) for i in process_list: p.join() print('写入完成') \"]},\"317\":{\"h\":\"Python 中的三种并发编程方式\",\"t\":[\"tch30Z\"]},\"318\":{\"h\":\"三种方式：多线程（Thread）、多进程（Process）、协程（Coroutine）\"},\"319\":{\"h\":\"什么是 CPU 密集型计算、IO 密集型计算\",\"t\":[\"CPU 密集型计算（CPU-bound）： \",\"例如：压缩解压缩、加密解密\",\"IO 密集型计算（I/O bound）： \",\"爬虫、文件处理等\"]},\"320\":{\"h\":\"多线程、多进程、协程的对比\",\"t\":[\"多进程 Process（multiprocessing） \",\"优点：可以利用多核 CPU 并行运算\",\"缺点：占用资源最多、可启动数目比线程少\",\"适用于：CPU 密集型计算\",\"多线程 Thread（threading） \",\"优点：相比进程，更轻量级、占用资源少\",\"缺点： \",\"相比进程：多线程只能并发执行，不能利用多 CPU（GIL）\",\"相比协程：启动数目有限制，占用内存资源，有线程切换开销\",\"适用于：IO 密集型计算、同时允许的任务数目要求不多\",\"协程 Coroutine（asyncio） \",\"优点：内存开销最少、启动协程数量最多\",\"缺点：支持的库有限制（aiohttp vs requests）、代码实现复杂\",\"适用于：IO 密集型计算、需要超多任务运行、但有现成库支持的场景\"]},\"321\":{\"h\":\"怎样根据任务选择对应技术\",\"t\":[\"UsvTjR\"]},\"322\":{\"h\":\"全局解释器锁 GIL（Global Interpreter Lock）\",\"t\":[\"Python 速度慢的两大原因：\",\"动态类型语言，边解释边执行\",\"GIL，无法利用多核 CPU 并发执行\",\"全局解释器锁：\",\"是计算机程序设计语言解释器用于同步线程的一种机制，它使得任何时刻仅有一个线程在执行。\",\"即便在多核处理器上，使用 GIL 的解释器也只能允许同一时间执行一个线程。相比并发加速的 C++/JAVA 会慢很多。\",\"原因详解 \",\"为了解决多线程之间数据完整性和状态同步问题。\",\"Python 中对象的管理，维护了每个对象的引用计数，在多线程时，为了保证引用计数的一致性，使用了锁的机制。\",\"怎样规避 GIL 带来的限制：\",\"那 Python 中的线程无法同时运行，为什么还要使用多线程机制呢？多线程机制在 Python 中依然是有用的，由于IO 密集型计算，因为 IO 期间，线程会释放 GIL，实现 CPU 和 IO 的并行，因此多线程用于 IO 密集型计算依然可以大幅提升速度。\",\"使用 multiprocessing 的多进程机制实现并行计算、利用多核 CPU 优势。\"]},\"323\":{\"h\":\"Python 多线程代码\"},\"324\":{\"h\":\"直接创建线程\",\"t\":[\"import threading def craw(url): # 1. 准备一个函数 r = requests.get(url) print(len(r.text)) def multi_thread(): threads = [] # 2. 准备一个线程list for url in urls: threads.append( # 3. 创建线程 threading.Thread(target=craw, args=(url,)) ) for thread in threads: thread.start() # 4. 启动线程 for thread in threads: thread.join() # 5. 等待结束 \"]},\"325\":{\"h\":\"使用线程池\",\"t\":[\"用法 1：使用 map 函数（所有任务一起提交）\",\"from concurrent.futures import ThreadPoolExecutor with ThreadPoolExecutor() as pool: result = pool.map(craw, urls) # map的结果和入参的顺序对应的 for result in results: print(result) \",\"用法 2：future 模式，更强大（一个任务一个任务提交）\",\"from concurrent.futures import ThreadPoolExecutor, as_completed with ThreadPoolExecutor() as pool: # 使用 dict 可以知道future对应的入参 futures = {pool.submit(craw, url): url for url in urls} # 方式1: 结果仍然按顺序 for future, url in futures.items(): print(url, future.result()) # 方式2: 使用 as_completed 顺序是不定的 for future in as_completed(futures): # 注：字典的遍历是遍历key url = futures[future] print(url, future.result()) \",\"线程池原理\"]},\"326\":{\"h\":\"Python 多进程代码\",\"t\":[\"多线程 threading 与多进程 multiprocessing 的代码对比\",\"oMERIi\",\"直接改个类名就能运行！\",\"所以代码去看 Python 多线程代码\"]},\"327\":{\"h\":\"多进程优雅退出\",\"t\":[\"import ctypes import time from multiprocessing import Process, RawValue class CountdownTask: def __init__(self): self._running = RawValue(ctypes.c_bool, True) def terminate(self): self._running.value = False def run(self, n): while self._running.value and n > 0: print('T-minus', n) n -= 1 time.sleep(5) c = CountdownTask() t = Process(target=c.run, args=(10,)) t.start() c.terminate() # Signal termination t.join() # Wait for actual termination (if needed) \"]},\"328\":{\"h\":\"线程池原理\"},\"329\":{\"h\":\"线程池的原理\",\"t\":[\"YPT9vT\"]},\"330\":{\"h\":\"特点\",\"t\":[\"使用任务队列\",\"可重用线程\"]},\"331\":{\"h\":\"优点\",\"t\":[\"提升性能：减少创建终止线程开销，重用线程资源\",\"适用场景：突发性大量请求、但任务处理时间较短\",\"防御功能：避免系统因为创建线程过多导致负荷过大\",\"代码优势：简洁方便\"]},\"332\":{\"h\":\"协程的原理以及代码\",\"t\":[\"【2021 最新版】Python 并发编程实战，用多线程、多进程、多协程加速程序运行_哔哩哔哩_bilibili\"]},\"333\":{\"h\":\"协程的原理\",\"t\":[\"协程：在单线程内实现并发\",\"核心原理：用一个超级循环（其实就是 while true）循环，配合 IO 多路复用原理（IO 时 CPU 可以干其他事情）\",\"于是在等待 IO 时，CPU 会同时开始计算下一个循环的 IO 前的部分，并开启多轮循环同时进行的局面\",\"等待 IO 结束，CPU 将剩余部分的代码再一并执行\",\"单线程爬虫执行路径\",\"dFUEmJ\",\"协程爬虫执行路径\",\"OSigeS\"]},\"334\":{\"h\":\"协程的使用以及异步 IO\",\"t\":[\"import asyncio # 获取事件循环（超级循环） loop = asyncio.get_event_loop() # 定义协程 async def myfunc(url): await get_url(url) # 创建task列表 tasks = [loop.create_task(myfunc(url)) for url in urls] # 执行爬虫事件列表 loop.run_until_complete(asyncio.wait(tasks)) \",\"关键字async：表示定义一个协程。\",\"关键字await：表示后面的函数是一个异步 IO，并且不进行阻塞，而是直接在超级循环直接进入下一个任务的执行（当前任务放弃 CPU，下一个任务获得 CPU）。\",\"注意\",\"异步 IO 中依赖的库必须支持异步 IO 特性（这要求库在 IO 时不能阻塞，否则切换不到下一个任务了）\",\"注意\",\"requests 库不支持异步 IO，需要使用 aiohttp 库\",\"例子：\",\"import asyncio, aiohtttp async def async_craw(url): async with aiohttp.ClientSession() as sess: async with sess.get(url) as resp: result = await resp.text() print(url, len(result)) loop = asyncio.get_event_loop() tasks = [loop.create_task(async_craw(url)) for url in urls] loop.run_until_complete(asyncio.wait(tasks)) \",\"所有的异步对象也需要使用 async 关键字来标注。\",\"相关信息\",\"协程与普通函数运行的不同点在于协程需要使用超级循环来进行调度。\"]},\"335\":{\"h\":\"协程并发度的控制\",\"t\":[\"可以使用 信号量 Semaphore 来进行控制：\",\"import asyncio, aiohtttp semaphore = asyncio.Semaphore(10) async def async_craw(url): async with semaphore: # here async with aiohttp.ClientSession() as sess: async with sess.get(url) as resp: result = await resp.text() print(url, len(result)) loop = asyncio.get_event_loop() tasks = [loop.create_task(async_craw(url)) for url in urls] loop.run_until_complete(asyncio.wait(tasks)) \"]},\"336\":{\"h\":\"信号量 Semaphore\",\"t\":[\"相关信息\",\"信号量一般用于访问有限数量的共享资源。\",\"信号量是一个同步对象，用于保持在 0 至指定最大值之间的一个计数器。\",\"当线程完成一次对改 semaphore 对象的等待（wait）时，该计数器减一\",\"当线程完成一次对改 semaphore 对象的释放（release）时，该计数器加一\",\"当计数器为 0 时，线程等待该 semaphore 对象不再能成功直到该 semaphore 对象变成 signaled 状态（阻塞） \",\"计数器大于 0，为 signaled 状态\",\"计数器等于 0，为 nonsignaled 状态\",\"# 方法一：使用with sem = asyncio.Semaphore(10) # ...later async with sem: # work with shared resource \",\"# 方法二：手动acquire、release sem = asyncio.Semaphore(10) # ...later await sem.acquire() try: # work with shared resource finally: sem.release() \"]},\"337\":{\"c\":[\"笔记\",\"API\"]},\"338\":{\"c\":[\"Python\",\"并发\"]},\"339\":{\"h\":\"Python常用数据结构\"},\"340\":{\"h\":\"列表 list\"},\"341\":{\"h\":\"列表方法\",\"t\":[\"list.append(obj)\",\"list.count(obj)\",\"list.extend(seq)\",\"list.index(obj)\",\"list.insert(index, obj)\",\"list.pop([index=-1])\",\"list.remove(obj)\",\"list.reverse()\",\"list.sort(cmp=None, key=None, reverse=False)\"]},\"342\":{\"h\":\"列表脚本操作符\",\"t\":[\"Python 表达式\",\"结果\",\"描述\",\"len([1, 2, 3])\",\"3\",\"长度\",\"[1, 2, 3] + [4, 5, 6]\",\"[1, 2, 3, 4, 5, 6]\",\"组合\",\"['Hi!'] * 4\",\"['Hi!', 'Hi!', 'Hi!', 'Hi!']\",\"重复\",\"3 in [1, 2, 3]\",\"True\",\"元素是否存在于列表中\",\"for x in [1, 2, 3]: print x,\",\"1 2 3\",\"迭代\"]},\"343\":{\"h\":\"列表截取\",\"t\":[\"Python 表达式\",\"结果\",\"描述\",\"L[2]\",\"'Taobao'\",\"读取列表中第三个元素\",\"L[-2]\",\"'Runoob'\",\"读取列表中倒数第二个元素\",\"L[1:]\",\"['Runoob', 'Taobao']\",\"从第二个元素开始截取列表\"]},\"344\":{\"h\":\"双向队列 deque\",\"t\":[\"class collections.deque([iterable[, maxlen]]) \",\"注意\",\"若当作一个单向队列，append(x) 与 popleft() 才是一对。。。\",\"若当作一个栈，append(x)与 pop()就是一对\"]},\"345\":{\"h\":\"方法\",\"t\":[\"append(x) 添加到右侧\",\"appendleft(x) 添加到左侧\",\"pop() 从右侧出队\",\"popleft() 从左侧出队\",\"clear()\",\"copy()\",\"count(x)\",\"extend(iter)\",\"extendleft(iter)\",\"index(x[, start[, stop]])\",\"insert(i, x)\",\"remove(x) 删除从左到右的第一个 x\",\"reverse()\",\"rotate(n=1)\",\"maxlen\"]},\"346\":{\"h\":\"Recipes\"},\"347\":{\"h\":\"1. 用于实现 tail 程序\",\"t\":[\"def tail(filename, n=10): 'Return the last n lines of a file' with open(filename) as f: return deque(f, n) \",\"设置 maxlen=n，可以实现保留文本最后 n 行的功能。\"]},\"348\":{\"h\":\"2. 用于维持一个定长的近期添加元素序列\",\"t\":[\"def moving_average(iterable, n=3): # moving_average([40, 30, 50, 46, 39, 44]) --> 40.0 42.0 45.0 43.0 # http://en.wikipedia.org/wiki/Moving_average it = iter(iterable) d = deque(itertools.islice(it, n-1)) d.appendleft(0) s = sum(d) for elem in it: s += elem - d.popleft() d.append(elem) yield s / n \"]},\"349\":{\"h\":\"3. 实现一个 round-robin scheduler\",\"t\":[\"def roundrobin(*iterables): \\\"roundrobin('ABC', 'D', 'EF') --> A D E B F C\\\" iterators = deque(map(iter, iterables)) while iterators: try: while True: yield next(iterators[0]) iterators.rotate(-1) except StopIteration: # Remove an exhausted iterator. iterators.popleft() \"]},\"350\":{\"h\":\"4. 删除第 n 个元素\",\"t\":[\"可以使用 rotate(n)来轻松删除第 n 个元素\",\"def delete_nth(d, n): d.rotate(-n) d.popleft() d.rotate(n) \"]},\"351\":{\"h\":\"最小堆 heapq\",\"t\":[\"函 数描 述\",\"heappush(heap, x) 将 x 压入堆中\",\"heappop(heap) 从堆中弹出最小的元素\",\"heapify(heap) 让列表具备堆特征\",\"heapreplace(heap, x) 弹出最小的元素，并将 x 压入堆中\",\"nlargest(n, iter, key=None) 返回 iter 中 n 个最大的元素\",\"nsmallest(n, iter, key=None) 返回 iter 中 n 个最小的元素\",\"merge(*iters, key=None, reverse=False) 合并多个有序列表形成单独一个有序列表\",\">>> from heapq import * >>> from random import shuffle >>> data = list(range(10)) >>> shuffle(data) >>> heap = [] >>> for n in data: ... heappush(heap, n) ... >>> heap [0, 1, 3, 6, 2, 8, 4, 7, 9, 5] >>> heappush(heap, 0.5) >>> heap [0, 0.5, 3, 6, 1, 8, 4, 7, 9, 5, 2] \"]},\"352\":{\"h\":\"\",\"t\":[\"# 最简单的方案就是，给你的堆的元素加一个值，使值逆序排列。以下是示例代码。 import heapq sss = 'abecgfidhjk' ll = list(sss) heapq.heapify(ll) print(ll) # ['a', 'b', 'e', 'c', 'g', 'f', 'i', 'd', 'h', 'j', 'k'] # 此时若想得到大顶堆 newl = [(-i, ll[i]) for i in range(len(ll))] #print(newl) heapq.heapify(newl) # 此时已经按照第一个值变成了小顶堆，即变成了逆序 max_heap = list() while newl: _, s = heapq.heappop(newl) max_heap.append(s) \"]},\"353\":{\"h\":\"计数器 Counter\",\"t\":[\"class collections.Counter([iterable-or-mapping]) \",\"Counter 是一个 dict 的子类，存着每个元素出现的次数，若访问不存在的元素会返回 0。\",\"c = Counter() # a new, empty counter c = Counter('gallahad') # a new counter from an iterable c = Counter({'red': 4, 'blue': 2}) # a new counter from a mapping c = Counter(cats=4, dogs=8) # a new counter from keyword args \",\"直接以字典的方式去访问 Counter\",\"c['cats'] # return 4 c['cats'] += 1 # add one more cat c['pigs'] # missing value will return 0 \",\"elements() 返回一个 iterator 根据每个元素的数量来访问所有元素（会忽略数量为 0 或负的元素）\",\">>> c = Counter(a=4, b=2, c=0, d=-2) >>> sorted(c.elements()) ['a', 'a', 'a', 'a', 'b', 'b'] \",\"**most_common**([n]) 返回一个 tuple 列表，包含按元素数量排序的最常见的元素列表\",\">>> Counter('abracadabra').most_common(3) [('a', 5), ('b', 2), ('r', 2)] \",\"**subtract**([iterable-or-mapping]) 两个 Counter 可以相减\",\">>> c = Counter(a=4, b=2, c=0, d=-2) >>> d = Counter(a=1, b=2, c=3, d=4) >>> c.subtract(d) >>> c Counter({'a': 3, 'b': 0, 'c': -3, 'd': -6}) \",\"**fromkeys**(iterable) 没有对 Counter 实现该方法（dict 的类方法，用于根据 dict 的键生成一个新的 dict）\",\"**update**([iterable-or-mapping]) 与 dict 的 update 一样\",\"其他的一些操作：\",\"sum(c.values()) # total of all counts c.clear() # reset all counts list(c) # list unique elements set(c) # convert to a set dict(c) # convert to a regular dictionary c.items() # convert to a list of (elem, cnt) pairs Counter(dict(list_of_pairs)) # convert from a list of (elem, cnt) pairs c.most_common()[:-n-1:-1] # n least common elements +c # remove zero and negative counts >>> c = Counter(a=3, b=1) >>> d = Counter(a=1, b=2) >>> c + d # add two counters together: c[x] + d[x] Counter({'a': 4, 'b': 3}) >>> c - d # subtract (keeping only positive counts) Counter({'a': 2}) >>> c & d # intersection: min(c[x], d[x]) Counter({'a': 1, 'b': 1}) >>> c | d # union: max(c[x], d[x]) Counter({'a': 3, 'b': 2}) >>> c = Counter(a=2, b=-4) >>> +c Counter({'a': 2}) >>> -c Counter({'b': 4}) \"]},\"354\":{\"h\":\"随机队列 RandomizedQueue\",\"t\":[\"相关信息\",\"自创数据结构，在工作中使用\",\"class RandomizedQueue: def __init__(self, _iter=[]): self.arr = [*_iter] def append(self, val): self.arr.append(val) def remove(self, idx): if idx >= len(self.arr): return r = self.arr[idx] self.arr[idx] = self.arr[-1] # 将最后一个元素移动到删除的元素位置 self.arr.pop() return r def getRandom(self): if len(self.arr) == 0: return return self.arr[int(random.random() * len(self.arr))] def popRandom(self): if len(self.arr) == 0: return idx = int(random.random() * len(self.arr)) return self.remove(idx) def __len__(self): return len(self.arr) \",\"入队：O(1)\",\"获取随机元素：O(1)\",\"随机出队：O(1)\",\"删除指定位置的元素：O(1)\"]},\"355\":{\"c\":[\"笔记\",\"API\"]},\"356\":{\"c\":[\"Python\",\"数据结构\"]},\"357\":{\"h\":\"Python日志 - logging\",\"t\":[\"import logging # 引入logging模块 import os.path import time # 第一步，创建一个logger logger = logging.getLogger() logger.setLevel(logging.INFO) # Log等级总开关 # 第二步，创建一个handler，用于写入日志文件 rq = time.strftime('%Y%m%d%H%M', time.localtime(time.time())) log_path = os.path.dirname(os.getcwd()) + '/Logs/' log_name = log_path + rq + '.log' logfile = log_name fh = logging.FileHandler(logfile, mode='w') fh.setLevel(logging.DEBUG) # 输出到file的log等级的开关 # 第三步，定义handler的输出格式 formatter = logging.Formatter(\\\"%(asctime)s - %(filename)s[line:%(lineno)d] - %(levelname)s: %(message)s\\\") fh.setFormatter(formatter) # 第四步，将logger添加到handler里面 logger.addHandler(fh) \",\"记录日志：\",\"# 日志 logger.debug('this is a logger debug message') logger.info('this is a logger info message') logger.warning('this is a logger warning message') logger.error('this is a logger error message') logger.critical('this is a logger critical message') \"]},\"358\":{\"c\":[\"笔记\",\"API\"]},\"359\":{\"c\":[\"Python\",\"日志\"]},\"360\":{\"h\":\"Python字符数字之间的转换函数\",\"t\":[\"函数\",\"说明\",\"int(x [,base ])\",\"将 x 转换为一个整数\",\"long(x [,base ])\",\"将 x 转换为一个长整数\",\"float(x )\",\"将 x 转换到一个浮点数\",\"complex(real [,imag ])\",\"创建一个复数\",\"str(x )\",\"将对象 x 转换为字符串\",\"repr(x )\",\"将对象 x 转换为表达式字符串\",\"eval(str )\",\"用来计算在字符串中的有效 Python 表达式,并返回一个对象\",\"tuple(s )\",\"将序列 s 转换为一个元组\",\"list(s )\",\"将序列 s 转换为一个列表\",\"chr(x )\",\"将一个整数转换为一个字符\",\"unichr(x )\",\"将一个整数转换为 Unicode 字符\",\"bin(x)\",\"将数字转换为二进制字符串\",\"chr(65) = 'A' ord('A') = 65 int('2') = 2 str(2) = '2' \"]},\"361\":{\"c\":[\"笔记\",\"API\"]},\"362\":{\"c\":[\"Python\"]},\"363\":{\"h\":\"Python排序 - sort\",\"t\":[\"原文链接：Sorting HOW TO - Python 3.10.4 documentation\",\"Python 列表内置的 list.sort()方法可以直接修改列表。另外 sorted()内置函数，可以传入迭代对象构建一个新的排序列表。\",\"sorted(iterable, ***, key=None, *reverse=False*)\",\"根据 iterable 中的项返回一个新的已排序列表。 具有两个可选参数，它们都必须指定为关键字参数。 key 指定带有单个参数的函数，用于从 iterable 的每个元素中提取用于比较的键 (例如 key=str.lower)。 默认值为 None (直接比较元素)。 reverse 为一个布尔值。 如果设为 True，则每个列表元素将按反向顺序比较进行排序。 使用 functools.cmp_to_key() 可将老式的 cmp 函数转换为 key 函数。 内置的 sorted() 确保是稳定的。 如果一个排序确保不会改变比较结果相等的元素的相对顺序就称其为稳定的 — 这有利于进行多重排序（例如先按部门、再按薪级排序）。\"]},\"364\":{\"h\":\"基本排序\",\"t\":[\">>> sorted([5, 2, 3, 1, 4]) [1, 2, 3, 4, 5] >>> a = [5, 2, 3, 1, 4] >>> a.sort() >>> a [1, 2, 3, 4, 5] \"]},\"365\":{\"h\":\"key 函数\",\"t\":[\"可以使用一个函数来指定排序使用的键\",\">>> sorted(\\\"This is a test string from Andrew\\\".split(), key=str.lower) ['a', 'Andrew', 'from', 'is', 'string', 'test', 'This'] >>> student_tuples = [ ... ('john', 'A', 15), ... ('jane', 'B', 12), ... ('dave', 'B', 10), ... ] >>> sorted(student_tuples, key=lambda student: student[2]) # sort by age [('dave', 'B', 10), ('jane', 'B', 12), ('john', 'A', 15)] \"]},\"366\":{\"h\":\"Operator 模块函数\",\"t\":[\"上面显示的键函数模式非常常见，因此 Python 提供了便利功能，使访问器功能更容易，更快捷。 operator 模块有 itemgetter() 、 attrgetter() 和 methodcaller() 函数。\",\">>> from operator import itemgetter, attrgetter >>> sorted(student_tuples, key=itemgetter(2)) [('dave', 'B', 10), ('jane', 'B', 12), ('john', 'A', 15)] >>> sorted(student_objects, key=attrgetter('age')) [('dave', 'B', 10), ('jane', 'B', 12), ('john', 'A', 15)] # 也支持多级排序！ >>> sorted(student_tuples, key=itemgetter(1,2)) [('john', 'A', 15), ('dave', 'B', 10), ('jane', 'B', 12)] >>> sorted(student_objects, key=attrgetter('grade', 'age')) [('john', 'A', 15), ('dave', 'B', 10), ('jane', 'B', 12)] \"]},\"367\":{\"h\":\"\",\"t\":[\">>> sorted(student_tuples, key=itemgetter(2), reverse=True) [('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)] \"]},\"368\":{\"h\":\"\",\"t\":[\"排序保证是 稳定 的。 这意味着当多个记录具有相同的键值时，将保留其原始顺序。\",\"注意 blue 的两个记录如何保留它们的原始顺序，以便 ('blue', 1) 保证在 ('blue', 2) 之前。\",\"这个美妙的属性允许你在一系列排序步骤中构建复杂的排序。例如，要按 grade 降序然后 age 升序对学生数据进行排序，请先 age 排序，然后再使用 grade 排序：\",\">>> s = sorted(student_objects, key=attrgetter('age')) # sort on secondary key >>> sorted(s, key=attrgetter('grade'), reverse=True) # now sort on primary key, descending [('dave', 'B', 10), ('jane', 'B', 12), ('john', 'A', 15)] \",\"Python 中使用的 Timsort 算法可以有效地进行多种排序，因为它可以利用数据集中已存在的任何排序。\"]},\"369\":{\"h\":\"\",\"t\":[\"这个三个步骤被称为 Decorate-Sort-Undecorate ：\",\"首先，初始列表使用控制排序顺序的新值进行修饰。\",\"然后，装饰列表已排序。\",\"最后，删除装饰，创建一个仅包含新排序中初始值的列表。\",\"例如，要使用 DSU 方法按 grade 对学生数据进行排序：\",\">>> decorated = [(student.grade, i, student) for i, student in enumerate(student_objects)] >>> decorated.sort() >>> [student for grade, i, student in decorated] # undecorate [('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)] \",\"这方法语有效是因为元组按字典顺序进行比较，先比较第一项；如果它们相同则比较第二个项目，依此类推。\",\"不一定在所有情况下都要在装饰列表中包含索引 i ，但包含它有两个好处：\",\"排序是稳定的——如果两个项具有相同的键，它们的顺序将保留在排序列表中。\",\"原始项目不必具有可比性，因为装饰元组的排序最多由前两项决定。 因此，例如原始列表可能包含无法直接排序的复数。\",\"这个方法的另一个名字是 Randal L. Schwartz 在 Perl 程序员中推广的 Schwartzian transform。\",\"既然 Python 排序提供了键函数，那么通常不需要这种技术。\"]},\"370\":{\"h\":\"使用 cmp 参数的旧方法\",\"t\":[\"本 HOWTO 中给出的许多结构都假定为 Python 2.4 或更高版本。在此之前，没有内置 sorted() ， list.sort() 也没有关键字参数。相反，所有 Py2.x 版本都支持 cmp 参数来处理用户指定的比较函数。\",\"在 Py3.0 中， cmp 参数被完全删除（作为简化和统一语言努力的一部分，消除了丰富的比较与 __cmp__() 魔术方法之间的冲突）。\",\"在 Py2.x 中， sort 允许一个可选函数，可以调用它来进行比较。该函数应该采用两个参数进行比较，然后返回负值为小于，如果它们相等则返回零，或者返回大于大于的正值。例如，我们可以这样做：\",\">>> def numeric_compare(x, y): ... return x - y >>> sorted([5, 2, 4, 1, 3], cmp=numeric_compare) [1, 2, 3, 4, 5] \",\"或者你可反转比较的顺序：\",\">>> def reverse_numeric(x, y): ... return y - x >>> sorted([5, 2, 4, 1, 3], cmp=reverse_numeric) [5, 4, 3, 2, 1] \",\"将代码从 Python 2.x 移植到 3.x 时，如果用户提供比较功能并且需要将其转换为键函数，则会出现这种情况。 以下包装器使这很容易：\",\"def cmp_to_key(mycmp): 'Convert a cmp= function into a key= function' class K: def __init__(self, obj, *args): self.obj = obj def __lt__(self, other): return mycmp(self.obj, other.obj) < 0 def __gt__(self, other): return mycmp(self.obj, other.obj) > 0 def __eq__(self, other): return mycmp(self.obj, other.obj) == 0 def __le__(self, other): return mycmp(self.obj, other.obj) <= 0 def __ge__(self, other): return mycmp(self.obj, other.obj) >= 0 def __ne__(self, other): return mycmp(self.obj, other.obj) != 0 return K \",\"要转换为键函数，只需包装旧的比较函数：\",\">>> sorted([5, 2, 4, 1, 3], key=cmp_to_key(reverse_numeric)) [5, 4, 3, 2, 1] \",\"在 Python 3.2 中， functools.cmp_to_key()  函数被添加到标准库中的  functools  模块中。\"]},\"371\":{\"c\":[\"笔记\",\"API\"]},\"372\":{\"c\":[\"Python\",\"排序\"]},\"373\":{\"h\":\"Python\",\"t\":[\"此处存放 Python 相关笔记。\",\"注意\",\"此处并非系统的 Python 教程，只是我零碎的笔记，如果要学习 Python 的话建议查阅官方文档。\"]},\"374\":{\"h\":\"Python 资料汇总\",\"t\":[\"python3 官方文档\",\"python3-cookbook\"]},\"375\":{\"h\":\"Docker核心概念总结\",\"t\":[\"本文只是对 Docker 的概念做了较为详细的介绍，并不涉及一些像 Docker 环境的安装以及 Docker 的一些常见操作和命令。\"]},\"376\":{\"h\":\"容器介绍\",\"t\":[\"Docker 是世界领先的软件容器平台，所以想要搞懂 Docker 的概念我们必须先从容器开始说起。\"]},\"377\":{\"h\":\"什么是容器?\"},\"378\":{\"h\":\"先来看看容器较为官方的解释\",\"t\":[\"一句话概括容器：容器就是将软件打包成标准化单元，以用于开发、交付和部署。\",\"容器镜像是轻量的、可执行的独立软件包 ，包含软件运行所需的所有内容：代码、运行时环境、系统工具、系统库和设置。\",\"容器化软件适用于基于 Linux 和 Windows 的应用，在任何环境中都能够始终如一地运行。\",\"容器赋予了软件独立性，使其免受外在环境差异（例如，开发和预演环境的差异）的影响，从而有助于减少团队间在相同基础设施上运行不同软件时的冲突。\"]},\"379\":{\"h\":\"再来看看容器较为通俗的解释\",\"t\":[\"如果需要通俗地描述容器的话，我觉得容器就是一个存放东西的地方，就像书包可以装各种文具、衣柜可以放各种衣服、鞋架可以放各种鞋子一样。我们现在所说的容器存放的东西可能更偏向于应用比如网站、程序甚至是系统环境。\"]},\"380\":{\"h\":\"容器 VS 虚拟机\",\"t\":[\"每当说起容器，我们不得不将其与虚拟机做一个比较。就我而言，对于两者无所谓谁会取代谁，而是两者可以和谐共存。\",\"简单来说：容器和虚拟机具有相似的资源隔离和分配优势，但功能有所不同，因为容器虚拟化的是操作系统，而不是硬件，因此容器更容易移植，效率也更高。\",\"传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。\",\"容器和虚拟机的对比：\",\"容器是一个应用层抽象，用于将代码和依赖资源打包在一起。 多个容器可以在同一台机器上运行，共享操作系统内核，但各自作为独立的进程在用户空间中运行 。与虚拟机相比， 容器占用的空间较少（容器镜像大小通常只有几十兆），瞬间就能完成启动 。\",\"虚拟机 (VM) 是一个物理硬件层抽象，用于将一台服务器变成多台服务器。管理程序允许多个 VM 在一台机器上运行。每个 VM 都包含一整套操作系统、一个或多个应用、必要的二进制文件和库资源，因此 占用大量空间 。而且 VM 启动也十分缓慢 。\",\"通过 Docker 官网，我们知道了这么多 Docker 的优势，但是大家也没有必要完全否定虚拟机技术，因为两者有不同的使用场景。虚拟机更擅长于彻底隔离整个运行环境。例如，云服务提供商通常采用虚拟机技术隔离不同的用户。而 Docker 通常用于隔离不同的应用 ，例如前端，后端以及数据库。\",\"就我而言，对于两者无所谓谁会取代谁，而是两者可以和谐共存。\"]},\"381\":{\"h\":\"Docker 介绍\"},\"382\":{\"h\":\"什么是 Docker?\",\"t\":[\"说实话关于 Docker 是什么并不太好说，下面我通过四点向你说明 Docker 到底是个什么东西。\",\"Docker 是世界领先的软件容器平台。\",\"Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核 提供的 CGroup 功能和 namespace 来实现的，以及 AUFS 类的 UnionFS 等技术，对进程进行封装隔离，属于操作系统层面的虚拟化技术。 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。\",\"Docker 能够自动执行重复性任务，例如搭建和配置开发环境，从而解放了开发人员以便他们专注在真正重要的事情上：构建杰出的软件。\",\"用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。\",\"Docker 思想：\",\"集装箱：就像海运中的集装箱一样，Docker 容器包含了应用程序及其所有依赖项，确保在任何环境中都能以相同的方式运行。\",\"**标准化：**运输方式、存储方式、API 接口。\",\"隔离：每个 Docker 容器都在自己的隔离环境中运行，与宿主机和其他容器隔离。\"]},\"383\":{\"h\":\"Docker 容器的特点\",\"t\":[\"轻量 : 在一台机器上运行的多个 Docker 容器可以共享这台机器的操作系统内核；它们能够迅速启动，只需占用很少的计算和内存资源。镜像是通过文件系统层进行构造的，并共享一些公共文件。这样就能尽量降低磁盘用量，并能更快地下载镜像。\",\"标准 : Docker 容器基于开放式标准，能够在所有主流 Linux 版本、Microsoft Windows 以及包括 VM、裸机服务器和云在内的任何基础设施上运行。\",\"安全 : Docker 赋予应用的隔离性不仅限于彼此隔离，还独立于底层的基础设施。Docker 默认提供最强的隔离，因此应用出现问题，也只是单个容器的问题，而不会波及到整台机器。\"]},\"384\":{\"h\":\"为什么要用 Docker ?\",\"t\":[\"Docker 的镜像提供了除内核外完整的运行时环境，确保了应用运行环境一致性，从而不会再出现 “这段代码在我机器上没问题啊” 这类问题；——一致的运行环境\",\"可以做到秒级、甚至毫秒级的启动时间。大大的节约了开发、测试、部署的时间。——更快速的启动时间\",\"避免公用的服务器，资源会容易受到其他用户的影响。——隔离性\",\"善于处理集中爆发的服务器使用压力；——弹性伸缩，快速扩展\",\"可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环境的变化导致应用无法正常运行的情况。——迁移方便\",\"使用 Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。——持续交付和部署\"]},\"385\":{\"h\":\"Docker 基本概念\",\"t\":[\"Docker 中有非常重要的三个基本概念：镜像（Image）、容器（Container）和仓库（Repository）。\",\"理解了这三个概念，就理解了 Docker 的整个生命周期。\"]},\"386\":{\"h\":\"镜像(Image):一个特殊的文件系统\",\"t\":[\"操作系统分为内核和用户空间。对于 Linux 而言，内核启动后，会挂载 root 文件系统为其提供用户空间支持。而 Docker 镜像（Image），就相当于是一个 root 文件系统。\",\"Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。 镜像不包含任何动态数据，其内容在构建之后也不会被改变。\",\"Docker 设计时，就充分利用 Union FS 的技术，将其设计为分层存储的架构 。镜像实际是由多层文件系统联合组成。\",\"镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。 比如，删除前一层文件的操作，实际不是真的删除前一层的文件，而是仅在当前层标记为该文件已删除。在最终容器运行的时候，虽然不会看到这个文件，但是实际上该文件会一直跟随镜像。因此，在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。\",\"分层存储的特征还使得镜像的复用、定制变的更为容易。甚至可以用之前构建好的镜像作为基础层，然后进一步添加新的层，以定制自己所需的内容，构建新的镜像。\"]},\"387\":{\"h\":\"容器(Container):镜像运行时的实体\",\"t\":[\"镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的 类 和 实例 一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等 。\",\"容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。前面讲过镜像使用的是分层存储，容器也是如此。\",\"容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。\",\"按照 Docker 最佳实践的要求，容器不应该向其存储层内写入任何数据 ，容器存储层要保持无状态化。所有的文件写入操作，都应该使用数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，直接对宿主(或网络存储)发生读写，其性能和稳定性更高。数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此， 使用数据卷后，容器可以随意删除、重新 run ，数据却不会丢失。\"]},\"388\":{\"h\":\"仓库(Repository):集中存放镜像文件的地方\",\"t\":[\"镜像构建完成后，可以很容易的在当前宿主上运行，但是， 如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。\",\"一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。所以说：镜像仓库是 Docker 用来集中存放镜像文件的地方类似于我们之前常用的代码仓库。\",\"通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本 。我们可以通过<仓库名>:<标签>的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签.。\",\"这里补充一下 Docker Registry 公开服务和私有 Docker Registry 的概念：\",\"Docker Registry 公开服务 是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。\",\"最常使用的 Registry 公开服务是官方的 Docker Hub ，这也是默认的 Registry，并拥有大量的高质量的官方镜像，网址为：https://hub.docker.com/ 。官方是这样介绍 Docker Hub 的：\",\"Docker Hub 是 Docker 官方提供的一项服务，用于与您的团队查找和共享容器镜像。\",\"在 Docker Hub 的搜索结果中，有几项关键的信息有助于我们选择合适的镜像：\",\"OFFICIAL Image：代表镜像为 Docker 官方提供和维护，相对来说稳定性和安全性较高。\",\"Stars：和点赞差不多的意思，类似 GitHub 的 Star。\",\"Downloads：代表镜像被拉取的次数，基本上能够表示镜像被使用的频度。\",\"当然，除了直接通过 Docker Hub 网站搜索镜像这种方式外，我们还可以通过 docker search 这个命令搜索 Docker Hub 中的镜像，搜索的结果是一致的。\",\"➜ ~ docker search mysql NAME DESCRIPTION STARS OFFICIAL AUTOMATED mysql MySQL is a widely used, open-source relation… 8763 [OK] mariadb MariaDB is a community-developed fork of MyS… 3073 [OK] mysql/mysql-server Optimized MySQL Server Docker images. Create… 650 [OK] \",\"在国内访问 Docker Hub 可能会比较慢国内也有一些云服务商提供类似于 Docker Hub 的公开服务。比如 时速云镜像库、网易云镜像服务、DaoCloud 镜像市场、阿里云镜像库等。\",\"除了使用公开服务外，用户还可以在 本地搭建私有 Docker Registry 。Docker 官方提供了 Docker Registry 镜像，可以直接使用做为私有 Registry 服务。开源的 Docker Registry 镜像只提供了 Docker Registry API 的服务端实现，足以支持 Docker 命令，不影响使用。但不包含图形界面，以及镜像维护、用户管理、访问控制等高级功能。\"]},\"389\":{\"h\":\"Image、Container 和 Repository 的关系\",\"t\":[\"Dockerfile 是一个文本文件，包含了一系列的指令和参数，用于定义如何构建一个 Docker 镜像。运行 docker build命令并指定一个 Dockerfile 时，Docker 会读取 Dockerfile 中的指令，逐步构建一个新的镜像，并将其保存在本地。\",\"docker pull 命令可以从指定的 Registry/Hub 下载一个镜像到本地，默认使用 Docker Hub。\",\"docker run 命令可以从本地镜像创建一个新的容器并启动它。如果本地没有镜像，Docker 会先尝试从 Registry/Hub 拉取镜像。\",\"docker push 命令可以将本地的 Docker 镜像上传到指定的 Registry/Hub。\",\"上面涉及到了一些 Docker 的基本命令，后面会详细介绍大。\"]},\"390\":{\"h\":\"Build Ship and Run\",\"t\":[\"Docker 的概念基本上已经讲完，我们再来谈谈：Build, Ship, and Run。\",\"如果你搜索 Docker 官网，会发现如下的字样：“Docker - Build, Ship, and Run Any App, Anywhere”。那么 Build, Ship, and Run 到底是在干什么呢？\",\"Build（构建镜像）：镜像就像是集装箱包括文件以及运行环境等等资源。\",\"Ship（运输镜像）：主机和仓库间运输，这里的仓库就像是超级码头一样。\",\"Run （运行镜像）：运行的镜像就是一个容器，容器就是运行程序的地方。\",\"Docker 运行过程也就是去仓库把镜像拉到本地，然后用一条命令把镜像运行起来变成容器。所以，我们也常常将 Docker 称为码头工人或码头装卸工，这和 Docker 的中文翻译搬运工人如出一辙。\"]},\"391\":{\"h\":\"Docker 常见命令\"},\"392\":{\"h\":\"基本命令\",\"t\":[\"docker version # 查看docker版本 docker images # 查看所有已下载镜像，等价于：docker image ls 命令 docker container ls # 查看所有容器 docker ps #查看正在运行的容器 docker image prune # 清理临时的、没有被使用的镜像文件。-a, --all: 删除所有没有用的镜像，而不仅仅是临时文件； \"]},\"393\":{\"h\":\"拉取镜像\",\"t\":[\"docker pull 命令默认使用的 Registry/Hub 是 Docker Hub。当你执行 docker pull 命令而没有指定任何 Registry/Hub 的地址时，Docker 会从 Docker Hub 拉取镜像。\",\"docker search mysql # 查看mysql相关镜像 docker pull mysql:5.7 # 拉取mysql镜像 docker image ls # 查看所有已下载镜像 \"]},\"394\":{\"h\":\"构建镜像\",\"t\":[\"运行 docker build命令并指定一个 Dockerfile 时，Docker 会读取 Dockerfile 中的指令，逐步构建一个新的镜像，并将其保存在本地。\",\"# # imageName 是镜像名称，1.0.0 是镜像的版本号或标签 docker build -t imageName:1.0.0 . \",\"需要注意：Dockerfile 的文件名不必须为 Dockerfile，也不一定要放在构建上下文的根目录中。使用 -f 或 --file 选项，可以指定任何位置的任何文件作为 Dockerfile。当然，一般大家习惯性的会使用默认的文件名 Dockerfile，以及会将其置于镜像构建上下文目录中。\"]},\"395\":{\"h\":\"删除镜像\",\"t\":[\"比如我们要删除我们下载的 mysql 镜像。\",\"通过 docker rmi [image] （等价于docker image rm [image]）删除镜像之前首先要确保这个镜像没有被容器引用（可以通过标签名称或者镜像 ID 删除）。通过我们前面讲的docker ps命令即可查看。\",\"➜ ~ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c4cd691d9f80 mysql:5.7 \\\"docker-entrypoint.s…\\\" 7 weeks ago Up 12 days 0.0.0.0:3306->3306/tcp, 33060/tcp mysql \",\"可以看到 mysql 正在被 id 为 c4cd691d9f80 的容器引用，我们需要首先通过 docker stop c4cd691d9f80 或者 docker stop mysql暂停这个容器。\",\"然后查看 mysql 镜像的 id\",\"➜ ~ docker images REPOSITORY TAG IMAGE ID CREATED SIZE mysql 5.7 f6509bac4980 3 months ago 373MB \",\"通过 IMAGE ID 或者 REPOSITORY 名字即可删除\",\"docker rmi f6509bac4980 # 或者 docker rmi mysql \"]},\"396\":{\"h\":\"镜像推送\",\"t\":[\"docker push 命令用于将本地的 Docker 镜像上传到指定的 Registry/Hub。\",\"# 将镜像推送到私有镜像仓库 Harbor # harbor.example.com是私有镜像仓库的地址，ubuntu是镜像的名称，18.04是镜像的版本标签 docker push harbor.example.com/ubuntu:18.04 \",\"镜像推送之前，要确保本地已经构建好需要推送的 Docker 镜像。另外，务必先登录到对应的镜像仓库。\"]},\"397\":{\"h\":\"Docker 数据管理\",\"t\":[\"在容器中管理数据主要有两种方式：\",\"数据卷（Volumes）\",\"挂载主机目录 (Bind mounts)\",\"数据卷是由 Docker 管理的数据存储区域，有如下这些特点：\",\"可以在容器之间共享和重用。\",\"即使容器被删除，数据卷中的数据也不会被自动删除，从而确保数据的持久性。\",\"对数据卷的修改会立马生效。\",\"对数据卷的更新，不会影响镜像。\",\"# 创建一个数据卷 docker volume create my-vol # 查看所有的数据卷 docker volume ls # 查看数据卷的具体信息 docker inspect web # 删除指定的数据卷 docker volume rm my-vol \",\"在用 docker run 命令的时候，使用 --mount 标记来将一个或多个数据卷挂载到容器里。\",\"还可以通过 --mount 标记将宿主机上的文件或目录挂载到容器中，这使得容器可以直接访问宿主机的文件系统。Docker 挂载主机目录的默认权限是读写，用户也可以通过增加 readonly 指定为只读。\"]},\"398\":{\"h\":\"Docker Compose\"},\"399\":{\"h\":\"什么是 Docker Compose？有什么用？\",\"t\":[\"Docker Compose 是 Docker 官方编排（Orchestration）项目之一，基于 Python 编写，负责实现对 Docker 容器集群的快速编排。通过 Docker Compose，开发者可以使用 YAML 文件来配置应用的所有服务，然后只需一个简单的命令即可创建和启动所有服务。\",\"Docker Compose 是开源项目，地址：https://github.com/docker/compose。\",\"Docker Compose 的核心功能：\",\"多容器管理：允许用户在一个 YAML 文件中定义和管理多个容器。\",\"服务编排：配置容器间的网络和依赖关系。\",\"一键部署：通过简单的命令，如docker-compose up和docker-compose down，可以轻松地启动和停止整个应用程序。\",\"Docker Compose 简化了多容器应用程序的开发、测试和部署过程，提高了开发团队的生产力，同时降低了应用程序的部署复杂度和管理成本。\"]},\"400\":{\"h\":\"Docker Compose 文件基本结构\",\"t\":[\"Docker Compose 文件是 Docker Compose 工具的核心，用于定义和配置多容器 Docker 应用。这个文件通常命名为 docker-compose.yml，采用 YAML（YAML Ain't Markup Language）格式编写。\",\"Docker Compose 文件基本结构如下：\",\"版本（version）： 指定 Compose 文件格式的版本。版本决定了可用的配置选项。\",\"服务（services）： 定义了应用中的每个容器（服务）。每个服务可以使用不同的镜像、环境设置和依赖关系。 \",\"镜像（image）： 从指定的镜像中启动容器，可以是存储仓库、标签以及镜像 ID。\",\"命令（command）： 可选，覆盖容器启动后默认执行的命令。在启动服务时运行特定的命令或脚本，常用于启动应用程序、执行初始化脚本等。\",\"端口（ports）： 可选，映射容器和宿主机的端口。\",\"依赖（depends_on）： 依赖配置的选项，意思是如果服务启动是如果有依赖于其他服务的，先启动被依赖的服务，启动完成后在启动该服务。\",\"环境变量（environment）： 可选，设置服务运行所需的环境变量。\",\"重启（restart）: 可选，控制容器的重启策略。在容器退出时，根据指定的策略自动重启容器。\",\"服务卷（volumes）: 可选，定义服务使用的卷，用于数据持久化或在容器之间共享数据。\",\"构建（build）： 指定构建镜像的 dockerfile 的上下文路径，或者详细配置对象。\",\"网络（networks）： 定义了容器间的网络连接。\",\"卷（volumes）： 用于数据持久化和共享的数据卷定义。常用于数据库存储、配置文件、日志等数据的持久化。\",\"version: \\\"3.8\\\" # 定义版本， 表示当前使用的 docker-compose 语法的版本 services: # 服务，可以存在多个 servicename1: # 服务名字，它也是内部 bridge 网络可以使用的 DNS name，如果不是集群模式相当于 docker run 的时候指定的一个名称， #集群（Swarm）模式是多个容器的逻辑抽象 image: # 镜像的名字 command: # 可选，如果设置，则会覆盖默认镜像里的 CMD 命令 environment: # 可选，等价于 docker container run 里的 --env 选项设置环境变量 volumes: # 可选，等价于 docker container run 里的 -v 选项 绑定数据卷 networks: # 可选，等价于 docker container run 里的 --network 选项指定网络 ports: # 可选，等价于 docker container run 里的 -p 选项指定端口映射 restart: # 可选，控制容器的重启策略 build: #构建目录 depends_on: #服务依赖配置 servicename2: image: command: networks: ports: servicename3: #... volumes: # 可选，需要创建的数据卷，类似 docker volume create db_data: networks: # 可选，等价于 docker network create \"]},\"401\":{\"h\":\"Docker Compose 常见命令\"},\"402\":{\"h\":\"启动\",\"t\":[\"docker-compose up会根据 docker-compose.yml 文件中定义的服务来创建和启动容器，并将它们连接到默认的网络中。\",\"# 在当前目录下寻找 docker-compose.yml 文件，并根据其中定义的服务启动应用程序 docker-compose up # 后台启动 docker-compose up -d # 强制重新创建所有容器，即使它们已经存在 docker-compose up --force-recreate # 重新构建镜像 docker-compose up --build # 指定要启动的服务名称，而不是启动所有服务 # 可以同时指定多个服务，用空格分隔。 docker-compose up service_name \",\"另外，如果 Compose 文件名称不是 docker-compose.yml 也没问题，可以通过 -f 参数指定。\",\"docker-compose -f docker-compose.prod.yml up \"]},\"403\":{\"h\":\"暂停\",\"t\":[\"docker-compose down用于停止并移除通过 docker-compose up 启动的容器和网络。\",\"# 在当前目录下寻找 docker-compose.yml 文件 # 根据其中定义移除启动的所有容器，网络和卷。 docker-compose down # 停止容器但不移除 docker-compose down --stop # 指定要停止和移除的特定服务，而不是停止和移除所有服务 # 可以同时指定多个服务，用空格分隔。 docker-compose down service_name \",\"同样地，如果 Compose 文件名称不是 docker-compose.yml 也没问题，可以通过 -f 参数指定。\",\"docker-compose -f docker-compose.prod.yml down \"]},\"404\":{\"h\":\"查看\",\"t\":[\"docker-compose ps用于查看通过 docker-compose up 启动的所有容器的状态信息。\",\"# 查看所有容器的状态信息 docker-compose ps # 只显示服务名称 docker-compose ps --services # 查看指定服务的容器 docker-compose ps service_name \"]},\"405\":{\"h\":\"其他\",\"t\":[\"命令\",\"介绍\",\"docker-compose version\",\"查看版本\",\"docker-compose images\",\"列出所有容器使用的镜像\",\"docker-compose kill\",\"强制停止服务的容器\",\"docker-compose exec\",\"在容器中执行命令\",\"docker-compose logs\",\"查看日志\",\"docker-compose pause\",\"暂停服务\",\"docker-compose unpause\",\"恢复服务\",\"docker-compose push\",\"推送服务镜像\",\"docker-compose start\",\"启动当前停止的某个容器\",\"docker-compose stop\",\"停止当前运行的某个容器\",\"docker-compose rm\",\"删除服务停止的容器\",\"docker-compose top\",\"查看进程\"]},\"406\":{\"h\":\"Docker 底层原理\",\"t\":[\"首先，Docker 是基于轻量级虚拟化技术的软件，那什么是虚拟化技术呢？\",\"简单点来说，虚拟化技术可以这样定义：\",\"虚拟化技术是一种资源管理技术，是将计算机的各种实体资源)（CPU、内存、磁盘空间、网络适配器等），予以抽象、转换后呈现出来并可供分割、组合为一个或多个电脑配置环境。由此，打破实体结构间的不可切割的障碍，使用户可以比原本的配置更好的方式来应用这些电脑硬件资源。这些资源的新虚拟部分是不受现有资源的架设方式，地域或物理配置所限制。一般所指的虚拟化资源包括计算能力和数据存储。\",\"Docker 技术是基于 LXC（Linux container- Linux 容器）虚拟容器技术的。\",\"LXC，其名称来自 Linux 软件容器（Linux Containers）的缩写，一种操作系统层虚拟化（Operating system–level virtualization）技术，为 Linux 内核容器功能的一个用户空间接口。它将应用软件系统打包成一个软件容器（Container），内含应用软件本身的代码，以及所需要的操作系统核心和库。通过统一的名字空间和共用 API 来分配不同软件容器的可用硬件资源，创造出应用程序的独立沙箱运行环境，使得 Linux 用户可以容易的创建和管理系统或应用容器。\",\"LXC 技术主要是借助 Linux 内核中提供的 CGroup 功能和 namespace 来实现的，通过 LXC 可以为软件提供一个独立的操作系统运行环境。\",\"cgroup 和 namespace 介绍：\",\"namespace 是 Linux 内核用来隔离内核资源的方式。 通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也只能看到与它们自己相关的资源，这两拨进程根本就感觉不到对方的存在。具体的实现方式是把一个或多个进程的相关资源指定在同一个 namespace 中。Linux namespaces 是对全局系统资源的一种封装隔离，使得处于不同 namespace 的进程拥有独立的全局系统资源，改变一个 namespace 中的系统资源只会影响当前 namespace 里的进程，对其他 namespace 中的进程没有影响。\",\"（以上关于 namespace 介绍内容来自https://www.cnblogs.com/sparkdev/p/9365405.html ，更多关于 namespace 的内容可以查看这篇文章 ）。\",\"CGroup 是 Control Groups 的缩写，是 Linux 内核提供的一种可以限制、记录、隔离进程组 (process groups) 所使用的物理资源 (如 cpu memory i/o 等等) 的机制。\",\"（以上关于 CGroup 介绍内容来自 https://www.ibm.com/developerworks/cn/linux/1506_cgroup/index.html ，更多关于 CGroup 的内容可以查看这篇文章 ）。\",\"cgroup 和 namespace 两者对比：\",\"两者都是将进程进行分组，但是两者的作用还是有本质区别。namespace 是为了隔离进程组之间的资源，而 cgroup 是为了对一组进程进行统一的资源监控和限制。\"]},\"407\":{\"h\":\"总结\",\"t\":[\"本文主要把 Docker 中的一些常见概念和命令做了详细的阐述。从零到上手实战可以看Docker 从入门到上手干事这篇文章，内容非常详细！\",\"另外，再给大家推荐一本质量非常高的开源书籍《Docker 从入门到实践》 ，这本书的内容非常新，毕竟书籍的内容是开源的，可以随时改进。\"]},\"408\":{\"h\":\"参考\",\"t\":[\"Docker Compose：从零基础到实战应用的全面指南\",\"Linux Namespace 和 Cgroup\",\"LXC vs Docker: Why Docker is Better\",\"CGroup 介绍、应用实例及原理描述\"]},\"409\":{\"c\":[\"容器\"]},\"410\":{\"c\":[\"Docker\"]},\"411\":{\"h\":\"Git核心概念总结\"},\"412\":{\"h\":\"版本控制\"},\"413\":{\"h\":\"什么是版本控制\",\"t\":[\"版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 除了项目源代码，你可以对任何类型的文件进行版本控制。\"]},\"414\":{\"h\":\"为什么要版本控制\",\"t\":[\"有了它你就可以将某个文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态，你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等。\"]},\"415\":{\"h\":\"本地版本控制系统\",\"t\":[\"许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。 这么做唯一的好处就是简单，但是特别容易犯错。 有时候会混淆所在的工作目录，一不小心会写错文件或者覆盖意想外的文件。\",\"为了解决这个问题，人们很久以前就开发了许多种本地版本控制系统，大多都是采用某种简单的数据库来记录文件的历次更新差异。\"]},\"416\":{\"h\":\"集中化的版本控制系统\",\"t\":[\"接下来人们又遇到一个问题，如何让在不同系统上的开发者协同工作？ 于是，集中化的版本控制系统（Centralized Version Control Systems，简称 CVCS）应运而生。\",\"集中化的版本控制系统都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。\",\"这么做虽然解决了本地版本控制系统无法让在不同系统上的开发者协同工作的诟病，但也还是存在下面的问题：\",\"单点故障： 中央服务器宕机，则其他人无法使用；如果中心数据库磁盘损坏又没有进行备份，你将丢失所有数据。本地版本控制系统也存在类似问题，只要整个项目的历史记录被保存在单一位置，就有丢失所有历史更新记录的风险。\",\"必须联网才能工作： 受网络状况、带宽影响。\"]},\"417\":{\"h\":\"分布式版本控制系统\",\"t\":[\"于是分布式版本控制系统（Distributed Version Control System，简称 DVCS）面世了。 Git 就是一个典型的分布式版本控制系统。\",\"这类系统，客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。 这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。 因为每一次的克隆操作，实际上都是一次对代码仓库的完整备份。\",\"分布式版本控制系统可以不用联网就可以工作，因为每个人的电脑上都是完整的版本库，当你修改了某个文件后，你只需要将自己的修改推送给别人就可以了。但是，在实际使用分布式版本控制系统的时候，很少会直接进行推送修改，而是使用一台充当“中央服务器”的东西。这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。\",\"分布式版本控制系统的优势不单是不必联网这么简单，后面我们还会看到 Git 极其强大的分支管理等功能。\"]},\"418\":{\"h\":\"认识 Git\"},\"419\":{\"h\":\"Git 简史\",\"t\":[\"Linux 内核项目组当时使用分布式版本控制系统 BitKeeper 来管理和维护代码。但是，后来开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统，而且对新的版本控制系统做了很多改进。\"]},\"420\":{\"h\":\"Git 与其他版本管理系统的主要区别\",\"t\":[\"Git 在保存和对待各种信息的时候与其它版本控制系统有很大差异，尽管操作起来的命令形式非常相近，理解这些差异将有助于防止你使用中的困惑。\",\"下面我们主要说一个关于 Git 与其他版本管理系统的主要差别：对待数据的方式。\",\"Git 采用的是直接记录快照的方式，而非差异比较。我后面会详细介绍这两种方式的差别。\",\"大部分版本控制系统（CVS、Subversion、Perforce、Bazaar 等等）都是以文件变更列表的方式存储信息，这类系统将它们保存的信息看作是一组基本文件和每个文件随时间逐步累积的差异。\",\"我们怎样才能得到一个文件的最终版本呢？\",\"很简单，高中数学的基本知识，我们只需要将这些原文件和这些增加进行相加就行了。\",\"这种方式有什么问题呢？\",\"比如我们的增量特别特别多的话，如果我们要得到最终的文件是不是会耗费时间和性能。\",\"Git 不按照以上方式对待或保存数据。 反之，Git 更像是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，它主要对当时的全部文件制作一个快照并保存这个快照的索引。 为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。 Git 对待数据更像是一个 快照流。\"]},\"421\":{\"h\":\"Git 的三种状态\",\"t\":[\"Git 有三种状态，你的文件可能处于其中之一：\",\"已提交（committed）：数据已经安全的保存在本地数据库中。\",\"已修改（modified）：已修改表示修改了文件，但还没保存到数据库中。\",\"已暂存（staged）：表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。\",\"由此引入 Git 项目的三个工作区域的概念：Git 仓库(.git directory)、工作目录(Working Directory) 以及 暂存区域(Staging Area) 。\",\"基本的 Git 工作流程如下：\",\"在工作目录中修改文件。\",\"暂存文件，将文件的快照放入暂存区域。\",\"提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。\"]},\"422\":{\"h\":\"Git 使用快速入门\"},\"423\":{\"h\":\"获取 Git 仓库\",\"t\":[\"有两种取得 Git 项目仓库的方法。\",\"在现有目录中初始化仓库: 进入项目目录运行 git init 命令,该命令将创建一个名为 .git 的子目录。\",\"从一个服务器克隆一个现有的 Git 仓库: git clone [url] 自定义本地仓库的名字: git clone [url] directoryname\"]},\"424\":{\"h\":\"记录每次更新到仓库\",\"t\":[\"检测当前文件状态 : git status\",\"提出更改（把它们添加到暂存区）：git add filename (针对特定文件)、git add *(所有文件)、git add *.txt（支持通配符，所有 .txt 文件）\",\"忽略文件：.gitignore 文件\",\"提交更新:git commit -m \\\"代码提交信息\\\" （每次准备提交前，先用 git status 看下，是不是都已暂存起来了， 然后再运行提交命令 git commit）\",\"跳过使用暂存区域更新的方式 : git commit -a -m \\\"代码提交信息\\\"。 git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤。\",\"移除文件：git rm filename （从暂存区域移除，然后提交。）\",\"对文件重命名：git mv README.md README(这个命令相当于mv README.md README、git rm README.md、git add README 这三条命令的集合)\"]},\"425\":{\"h\":\"一个好的 Git 提交消息\",\"t\":[\"一个好的 Git 提交消息如下：\",\"标题行：用这一行来描述和解释你的这次提交 主体部分可以是很少的几行，来加入更多的细节来解释提交，最好是能给出一些相关的背景或者解释这个提交能修复和解决什么问题。 主体部分当然也可以有几段，但是一定要注意换行和句子不要太长。因为这样在使用 \\\"git log\\\" 的时候会有缩进比较好看。 \",\"提交的标题行描述应该尽量的清晰和尽量的一句话概括。这样就方便相关的 Git 日志查看工具显示和其他人的阅读。\"]},\"426\":{\"h\":\"推送改动到远程仓库\",\"t\":[\"如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：git remote add origin <server> ,比如我们要让本地的一个仓库和 GitHub 上创建的一个仓库关联可以这样git remote add origin https://github.com/Snailclimb/test.git\",\"将这些改动提交到远端仓库：git push origin master (可以把 master 换成你想要推送的任何分支)\",\"如此你就能够将你的改动推送到所添加的服务器上去了。\"]},\"427\":{\"h\":\"远程仓库的移除与重命名\",\"t\":[\"将 test 重命名为 test1：git remote rename test test1\",\"移除远程仓库 test1:git remote rm test1\"]},\"428\":{\"h\":\"查看提交历史\",\"t\":[\"在提交了若干更新，又或者克隆了某个项目之后，你也许想回顾下提交历史。 完成这个任务最简单而又有效的工具是 git log 命令。git log 会按提交时间列出所有的更新，最近的更新排在最上面。\",\"可以添加一些参数来查看自己希望看到的内容：\",\"只看某个人的提交记录：\",\"git log --author=bob \"]},\"429\":{\"h\":\"撤销操作\",\"t\":[\"有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。 此时，可以运行带有 --amend 选项的提交命令尝试重新提交：\",\"git commit --amend \",\"取消暂存的文件\",\"git reset filename \",\"撤消对文件的修改:\",\"git checkout -- filename \",\"假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：\",\"git fetch origin git reset --hard origin/master \"]},\"430\":{\"h\":\"分支\",\"t\":[\"分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认”的分支。在其他分支上进行开发，完成后再将它们合并到主分支上。\",\"我们通常在开发新功能、修复一个紧急 bug 等等时候会选择创建分支。单分支开发好还是多分支开发好，还是要看具体场景来说。\",\"创建一个名字叫做 test 的分支\",\"git branch test \",\"切换当前分支到 test（当你切换分支的时候，Git 会重置你的工作目录，使其看起来像回到了你在那个分支上最后一次提交的样子。 Git 会自动添加、删除、修改文件以确保此时你的工作目录和这个分支最后一次提交时的样子一模一样）\",\"git checkout test \",\"你也可以直接这样创建分支并切换过去(上面两条命令的合写)\",\"git checkout -b feature_x \",\"切换到主分支\",\"git checkout master \",\"合并分支(可能会有冲突)\",\" git merge test \",\"把新建的分支删掉\",\"git branch -d feature_x \",\"将分支推送到远端仓库（推送成功后其他人可见）：\",\"git push origin \"]},\"431\":{\"h\":\"学习资料推荐\",\"t\":[\"推荐阅读：\",\"Git 入门图文教程(1.5W 字 40 图)：超用心的一篇文章，内容全面且附带详细的图解，强烈推荐！\",\"Git - 简明指南：涵盖 Git 常见操作，非常清晰。\",\"图解 Git：图解 Git 中的最常用命令。如果你稍微理解 git 的工作原理，这篇文章能够让你理解的更透彻。\",\"猴子都能懂得 Git 入门：有趣的讲解。\",\"Pro Git book：国外的一本 Git 书籍，被翻译成多国语言，质量很高。\"]},\"432\":{\"c\":[\"版本控制\"]},\"433\":{\"c\":[\"Git\"]},\"434\":{\"h\":\"Linux CPU监控\"},\"435\":{\"h\":\"1. 简介\",\"t\":[\"常用命令有top 和mpstat\"]},\"436\":{\"h\":\"2.命令\"},\"437\":{\"h\":\"2.1 top\"},\"438\":{\"h\":\"2.1.1 简介\",\"t\":[\"top命令 可以实时动态地查看系统的整体运行情况。\"]},\"439\":{\"h\":\"2.1.2 语法：\",\"t\":[\"top (选项) \",\"选项： -b：以批处理模式操作； -c：显示完整的治命令； -d：屏幕刷新间隔时间； -I：忽略失效过程； -s：保密模式； -S：累积模式； -i<时间>：设置间隔时间； -u<用户名>：指定用户名； -p<进程号>：指定进程； -n<次数>：循环显示的次数\",\"image-20220401142646239\"]},\"440\":{\"h\":\"2.1.3 字段说明\",\"t\":[\"top：系统当前时间\",\"up xxx days：系统运行时间\",\"1 users：当前登录用户个数\",\"load average：系统负载。即任务队列的平均长度。三个数值分别为最近1分钟、最近5分钟、最近15分钟的平均负载。——超过N（CPU核数）说明系统满负荷运行。\",\"Tasks \",\"total：总进程数\",\"running：正在运行的进程数\",\"sleeping：睡眠的进程数\",\"stopped：停止的进程数\",\"zombie：冻结的进程数\",\"%Cpu(s) \",\"us：用户进程消耗的CPU百分比\",\"sy：内核进程消耗的CPU百分比\",\"ni：改变过优先级的进程占用CPU的百分比\",\"id：空闲CPU的百分比\",\"wa：IO等待消耗的CPU百分比\",\"Mem \",\"total：物理内存总量\",\"free：空闲物理内存总量\",\"used：已用物理内存总量\",\"buff：用作内核缓存内存总量\",\"Swap \",\"total：虚拟内存总量\",\"free：空闲虚拟内存总量\",\"used：已用虚拟内存总量\"]},\"441\":{\"h\":\"2.1.4 实例\"},\"442\":{\"h\":\"2.1.4.1 默认top\",\"t\":[\"image-20220401142646239\"]},\"443\":{\"h\":\"2.2 mpstat\"},\"444\":{\"h\":\"2.2.1 简介\",\"t\":[\"mpstat命令 指令主要用于多CPU环境下，它显示各个可用CPU的状态系你想。\"]},\"445\":{\"h\":\"2.2.2 语法：\",\"t\":[\"mpstat (选项) (参数) \",\"选项：\",\"-P：指定CPU编号。 \",\"参数：\",\"间隔时间：每次报告的间隔时间（秒）；\",\"次数：显示报告的次数。\"]},\"446\":{\"h\":\"2.2.3 示例\",\"t\":[\"ALL表示显示所有CPUs，也可以指定某个CPU；2表示刷新间隔。\",\"image-20220401143304219\"]},\"447\":{\"h\":\"Linux磁盘监控\"},\"448\":{\"h\":\"1. 简介\",\"t\":[\"linux磁盘监控命令主要有，df，iostat,iotop\"]},\"449\":{\"h\":\"2. 监控命令\"},\"450\":{\"h\":\"2.1 df\"},\"451\":{\"h\":\"2.1.1 简介\",\"t\":[\"df命令 用于显示磁盘分区上的可使用的磁盘空间。如果没有文件名被指定，则显示当前所有被挂载的文件系统，默认以 KB 为单位。\"]},\"452\":{\"h\":\"2.1.2 语法：\",\"t\":[\"df (选项) (参数) \",\"选项： -a 全部文件系统列表 -h 以方便阅读的方式显示 -i 显示inode信息 -T 显示文件系统类型 -l 只显示本地文件系统 -k 以KB为单位 -m 以MB为单位\",\"参数：\",\"文件：指定文件系统上的文件。\"]},\"453\":{\"h\":\"2.1.3 示例\",\"t\":[\"image-20220401145602336\"]},\"454\":{\"h\":\"2.1.4 tldr 中的介绍\",\"t\":[\" df Gives an overview of the filesystem disk space usage. 概述了文件系统磁盘空间的使用情况。 More information: https://www.gnu.org/software/coreutils/df. - Display all filesystems and their disk usage: 显示所有文件系统及其磁盘使用情况: df - Display all filesystems and their disk usage in human readable form: 以人类可读的形式显示所有文件系统及其磁盘使用情况: df -h - Display the filesystem and its disk usage containing the given file or directory: 显示包含指定文件或目录的文件系统及其磁盘使用情况: df path/to/file_or_directory - Display statistics on the number of free inodes: df -i - Display filesystems but exclude the specified types: df -x squashfs -x tmpfs \"]},\"455\":{\"h\":\"2.2 iostat\"},\"456\":{\"h\":\"2.2.1 简介\",\"t\":[\"iostat命令 被用于监视系统输入输出设备和CPU的使用情况。\"]},\"457\":{\"h\":\"2.2.2 语法：\",\"t\":[\"iostat (选项) (参数) \",\"选项： -c：仅显示CPU使用情况； -d：仅显示设备利用率； -k：显示状态以千字节每秒为单位，而不使用块每秒； -m：显示状态以兆字节每秒为单位； -p：仅显示块设备和所有被使用的其他分区的状态； -t：显示每个报告产生时的时间； -V：显示版号并退出； -x：显示扩展状态。\",\"参数：\",\"间隔时间：每次报告的间隔时间（秒）；\",\"次数：显示报告的次数。\"]},\"458\":{\"h\":\"2.2.3 字段说明：\",\"t\":[\"r/s: 每秒完成的读 I/O 设备次数。\",\"w/s: 每秒完成的写 I/O 设备次数。\",\"rkB/s: 每秒读K字节数.是 rsect/s 的一半,因为每扇区大小为512字节。\",\"wkB/s: 每秒写K字节数.是 wsect/s 的一半。\",\"avgrq-sz: 平均每次设备I/O操作的数据大小 (扇区)。\",\"avgqu-sz: 平均I/O队列长度。\",\"await: 平均每次设备I/O操作的等待时间 (毫秒)。\",\"svctm: 平均每次设备I/O操作的服务时间 (毫秒)。\",\"%util: 一秒中有百分之多少的时间用于 I/O 操作,或者说一秒中有多少时间 I/O 队列是非空的。\"]},\"459\":{\"h\":\"2.2.4 示例\",\"t\":[\"image-20220401145950590\"]},\"460\":{\"h\":\"2.3 . iotop\",\"t\":[\"centos没有该命名\"]},\"461\":{\"h\":\"2.3.1 简介\",\"t\":[\"iotop命令 是一个用来监视磁盘I/O使用状况的top类工具。\",\"iotop具有与top相似的UI，其中包括PID、用户、I/O、进程等相关信息。Linux下的IO统计工具如iostat，nmon等大多数是只能统计到per设备的读写情况，如果你想知道每个进程是如何使用IO的就比较麻烦，使用iotop命令可以很方便的查看。\"]},\"462\":{\"h\":\"2.3.2 语法：\",\"t\":[\"iotop (选项) \",\"选项： -o：只显示有io操作的进程 -b：批量显示，无交互，主要用作记录到文件。 -n： NUM：显示NUM次，主要用于非交互式模式。 -d SEC：间隔SEC秒显示一次。 -p PID：监控的进程pid。 -u USER：监控的进程用户。\"]},\"463\":{\"h\":\"2.3.3 iotop常用快捷键：\",\"t\":[\"左右箭头：改变排序方式，默认是按IO排序。\",\"r：改变排序顺序。\",\"o：只显示有IO输出的进程。\",\"p：进程/线程的显示方式的切换。\",\"a：显示累积使用量。\",\"q：退出。\",\"image-20220401150415728\"]},\"464\":{\"h\":\"Linux内存监控\"},\"465\":{\"h\":\"1. 简介\",\"t\":[\"内存监控主要有free 和 vmstat\"]},\"466\":{\"h\":\"2. 监控命令\"},\"467\":{\"h\":\"2.1 free\",\"t\":[\"Linux free命令用于显示内存状态。\",\"free指令会显示内存的使用情况，包括实体内存，虚拟的交换文件内存，共享内存区段，以及系统核心使用的缓冲区等。\"]},\"468\":{\"h\":\"2.1.1 语法\",\"t\":[\"free [-bkmotV][-s <间隔秒数>] \",\"常用选项： -b：以Byte为单位显示内存使用情况； -k：以KB为单位显示内存使用情况； -m：以MB为单位显示内存使用情况； -g：以GB为单位显示内存使用情况;\",\"-h: 以合适的单位显示内存使用情况，最大为三位数，自动计算对应的单位值。单位有：\",\"B = bytes K = kilos M = megas G = gigas T = teras \",\"-o：不显示缓冲区调节列； -t：显示内存总和列； -V：显示版本信息。****\",\"-s: <间隔秒数> 持续观察内存使用状况。\",\"image-20220401101834998\"]},\"469\":{\"h\":\"2.1.2 字段说明：\",\"t\":[\"total：内存总数；\",\"used：已经使用的内存数，包括 cached 和应用程序实际使用的内存；\",\"free：空闲的内存数；\",\"shared：当前已经废弃不用；\",\"buffers：缓存内存数；\",\"cached：缓存内存数。\",\"关系：total = used +available\"]},\"470\":{\"h\":\"2.1.3 实例\"},\"471\":{\"h\":\"2.1.3.1 显示内存使用情况\",\"t\":[\"free \",\"image-20220401141256030\"]},\"472\":{\"h\":\"2.1.3.2 以合适的单位显示内存使用情况\",\"t\":[\"image-20220401141510962\"]},\"473\":{\"h\":\"2.1.3.3 以总和的形式显示内存的使用信息\",\"t\":[\"free -t \",\"image-20220401141403556\"]},\"474\":{\"h\":\"2.1.3.4 周期性的查询内存使用信息\",\"t\":[\"free -s 10 //每10s 执行一次命令 \",\"image-20220401141645744\"]},\"475\":{\"h\":\"2.1.4 tldr 中的介绍\",\"t\":[\"(base) ➜ ~ tldr free free Display amount of free and used memory in the system. 显示系统中可用和已使用的内存量。 - Display system memory: 显示系统内存: free - Display memory in Bytes/KB/MB/GB: 以字节/KB/MB/GB为单位显示内存: free -b|k|m|g - Display memory in human readable units: 以人类可读单位显示内存: free -h - Refresh the output every 2 seconds: 每2秒刷新一次输出: free -s 2 \"]},\"476\":{\"h\":\"2.2 vmstat\"},\"477\":{\"h\":\"2.2.1 简介\",\"t\":[\"mstat命令 的含义为显示虚拟内存状态（“Viryual Memor Statics”），但是它可以报告关于进程、内存、I/O等系统整体运行状态。\"]},\"478\":{\"h\":\"2.2.2 语法\",\"t\":[\"vmstat (选项) (参数) \",\"选项 -a：显示活动内页； -f：显示启动后创建的进程总数； -m：显示slab信息； -n：头信息仅显示一次； -s：以表格方式显示事件计数器和内存状态； -d：报告磁盘状态； -p：显示指定的硬盘分区状态； -S：输出信息的单位。\",\"参数\",\"事件间隔：状态信息刷新的时间间隔；\",\"次数：显示报告的次数\",\"image-20220401141913473\"]},\"479\":{\"h\":\"2.2.3 字段说明\",\"t\":[\"Procs（进程）\",\"r: 运行和等待CPU时间片的进程数，这个值如果长期大于系统CPU个数，就说明CPU资源不足，可以考虑增加CPU\",\"b: 等待资源的进程数，比如正在等待I/O或者内存交换等\",\"Memory（内存）\",\"swpd: 使用虚拟内存大小，如果swpd的值不为0，但是SI，SO的值长期为0，这种情况不会影响系统性能。\",\"free: 空闲物理内存大小（以KB为单位）。\",\"buff: 用作缓冲的内存大小。\",\"cache: 用作缓存的内存大小，如果cache的值大的时候，说明cache处的文件数多。如果此时IO中的bi比较小，就说明文件系统效率比较好。\",\"Swap\",\"si: 每秒从交换区写到内存的大小，由磁盘调入内存。\",\"so: 每秒写入交换区的内存大小，由内存调入磁盘。\",\"注意：内存够用的时候，这2个值都是0，如果这2个值长期大于0时，系统性能会受到影响，磁盘IO和CPU资源都会被消耗。有些朋友看到空闲内存（free）很少的或接近于0时，就认为内存不够用了，不能光看这一点，还要结合si和so，如果free很少，但是si和so也很少（大多时候是0），那么不用担心，系统性能这时不会受到影响的。\",\"IO（现在的Linux版本块的大小为1kb）\",\"bi: 每秒读取的块数\",\"bo: 每秒写入的块数\",\"注意：随机磁盘读写的时候，这2个值较大（如超出1024k)，而且wa值比较大，则表示系统磁盘IO性能瓶颈。\",\"system（系统）\",\"in: 每秒中断数，包括时钟中断。\",\"cs: 每秒上下文切换数。\",\"注意：上面2个值越大，会看到由内核消耗的CPU时间会越大。\",\"CPU（以百分比表示） us: 用户进程执行时间百分比(user time) us的值比较高时，说明用户进程消耗的CPU时间多，但是如果长期超50%的使用，那么我们就该考虑优化程序算法或者进行加速。\",\"sy: 内核系统进程执行时间百分比(system time)\",\"sy的值高时，说明系统内核消耗的CPU资源多，这并不是良性表现，我们应该检查原因。\",\"id: 空闲时间百分比\",\"wa: IO等待时间百分比\",\"wa的值高时，说明IO等待比较严重，这可能由于磁盘大量作随机访问造成，也有可能磁盘出现瓶颈（块操作）。\",\"st：一般不关注，虚拟机占用的时间百分比。\"]},\"480\":{\"h\":\"2.2.4 实例\",\"t\":[\"每2s显示一次\",\"image-20220401141913473\"]},\"481\":{\"h\":\"Linux网络监控\"},\"482\":{\"h\":\"1. 简介\",\"t\":[\"linux中网络监控命令主要是netstat 和sar\"]},\"483\":{\"h\":\"2. 监控命令\"},\"484\":{\"h\":\"2.1 netstat\"},\"485\":{\"h\":\"2.1.1 简介\",\"t\":[\"netstat命令一般用于检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据。\"]},\"486\":{\"h\":\"2.1.2 常用实例：\",\"t\":[\"netstat -aup # 输出所有UDP连接状况 netstat -atp # 输出所有TCP连接状况 netstat -s # 显示各个协议的网络统计信息 netstat -i # 显示网卡列表 netstat -r # 显示路由表信息 netstat -l # 只显示监听端口 netstat -lt # 只列出所有监听 tcp 端口 netstat -lu # 只列出所有监听 udp 端口 netstat -lx # 只列出所有监听 UNIX 端口 netstat -p或--programs # 显示正在使用Socket的程序识别码和程序名称； \"]},\"487\":{\"h\":\"2.1.3 tldr 中的介绍\",\"t\":[\" netstat 显示与网络相关的信息，如打开的连接、打开的套接字端口等. 更多信息: https://www.unix.com/man-page/osx/1/netstat. - 列出所有端口: netstat -a - 列出所有被侦听端口: netstat -l - 列出侦听的 TCP 端口: netstat -t - 显示监听给定协议监听的 PID 和程序名: netstat -p 协议 - 打印路由表: netstat -nr \"]},\"488\":{\"h\":\"2.1.4 示例\"},\"489\":{\"h\":\"2.1.4.1\",\"t\":[\"netstat -a \",\"image-20220408145537683\"]},\"490\":{\"h\":\"2.1.4.2\",\"t\":[\"> netstat -at \",\"image-20220408145637391\"]},\"491\":{\"h\":\"2.1.4.3\",\"t\":[\"netstat -au \",\"image-20220408145728045\"]},\"492\":{\"h\":\"2.1.4.4\",\"t\":[\" netstat -tunlp | grep redis \",\"image-20220408150002077\"]},\"493\":{\"h\":\"2.1.4.5\",\"t\":[\"netstat -tunlp | grep 6379 \",\"image-20220408150517112\"]},\"494\":{\"h\":\"2.1.4.6 通过端口找进程ID\",\"t\":[\"netstat -tunlp | grep 6379 | awk '{print $7}' | cut -d/ -f1 \",\"image-20220408150717292\"]},\"495\":{\"h\":\"2.2 sar\"},\"496\":{\"h\":\"2.2.1 简介\",\"t\":[\"sar命令 是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。\"]},\"497\":{\"h\":\"2.2.2 字段说明\",\"t\":[\"IFACE：网络设备的名称\",\"rxpck/s：每秒钟接收到的包数目\",\"txpck/s：每秒钟发送出去的包数目\",\"rxkB/s：每秒钟接收到的字节数\",\"txkB/s：每秒钟发送出去的字节数\"]},\"498\":{\"h\":\"2.2.3 示例\",\"t\":[\"image-20220401145225177\"]},\"499\":{\"h\":\"参考文章\",\"t\":[\"Linux之netstat命令\"]},\"500\":{\"h\":\"Linux进程监控\"},\"501\":{\"h\":\"1. 简介\",\"t\":[\"进程监控命令ps\"]},\"502\":{\"h\":\"2. 命令\"},\"503\":{\"h\":\"2.1 ps\"},\"504\":{\"h\":\"2.1.1 简介\",\"t\":[\"ps（Process Status，进程状态）命令 用于报告当前系统的进程状态。\"]},\"505\":{\"h\":\"2.1.2 语法\",\"t\":[\"ps [参数] \",\"常用参数：\",\"-A 显示所有进程（同-e） -a 显示当前终端的所有进程 -u 显示进程的用户信息 -o 以用户自定义形式显示进程信息 -f 显示程序间的关系 \"]},\"506\":{\"h\":\"2.1.3\",\"t\":[\"在介绍实例之前，需要先了解一下ps命令输出各字段的含义，这样我们才能更好地理解所展示的信息。常见字段的基本含义如下:\",\"USER 进程所有者的用户名 PID 进程ID（Process ID） START 进程激活时间 %CPU 进程的cpu占用率 %MEM 进程使用内存的百分比 VSZ 进程使用的虚拟内存大小，以K为单位 RSS 驻留空间的大小。显示当前常驻内存的程序的K字节数。 TTY 与进程关联的终端（tty） STAT 进程状态，包括下面的状态： D 不可中断 Uninterruptible sleep (usually IO) R 正在运行，或在队列中的进程 S 处于休眠状态 T 停止或被追踪 Z 僵尸进程 W 进入内存交换（从内核2.6开始无效） X 死掉的进程 < 高优先级 N 低优先级 L 有些页被锁进内存 s 包含子进程 \\\\+ 位于后台的进程组； l 多线程，克隆线程 TIME 进程使用的总CPU时间 COMMAND 被执行的命令行 NI 进程的优先级值，较小的数字意味着占用较少的CPU时间 PRI 进程优先级。 PPID 父进程ID WCHAN 进程等待的内核事件名 \"]},\"507\":{\"h\":\"2.1.4 tldr 文档\",\"t\":[\"(base) ➜ ~ tldr ps Cache is out of date. You should run \\\"tldr --update\\\" ps Information about running processes. - List all running processes: 显示所有运行的进程 ps aux - List all running processes including the full command string: 列出所有正在运行的进程，包括完整的命令字符串 ps auxww - Search for a process that matches a string: 搜索与字符串匹配的进程: ps aux | grep string - List all processes of the current user in extra full format: 以额外完整格式列出当前用户的所有进程: ps --user $(id -u) -F - List all processes of the current user as a tree: 以树的形式列出当前用户的所有进程: ps --user $(id -u) f - Get the parent pid of a process: 获取进程的父进程pid: ps -o ppid= -p pid - Sort processes by memory consumption: 按内存消耗对进程进行排序: ps --sort size \"]},\"508\":{\"h\":\"2.1.5 常见用法\"},\"509\":{\"h\":\"2.1.5.1 显示所有运行的进程\",\"t\":[\"把所有进程显示出来，可用使用 ps -aux 或者 ps -A 。\",\" ps -aux \",\"image-20220408112800947\"]},\"510\":{\"h\":\"2.1.5.2\",\"t\":[\"ps -ef \",\"image-20220408112951231\"]},\"511\":{\"h\":\"2.1.5.3 搜索与字符串匹配的进程\",\"t\":[\" ps -aux | grep nginx \",\"image-20220408113035249\"]},\"512\":{\"h\":\"2.1.5.4\",\"t\":[\"默认的结果集是未排好序的。可以通过 sort命令来排序。\",\"ps -aux | sort -nk 3 \"]},\"513\":{\"h\":\"2.1.5.4\",\"t\":[\"ps 的用法非常多，这里仅列举一些常用的：\",\"ps -aux | grep <name> # 查看name 进程详细信息 ps -p <pid> -L # 显示进程<pid> 的所有线程 ps -o lstart <pid> # 显示进程的启动时间 ps -f --forest -C <name> # 用树的风格显示进程的层次关系 ps -e -o pid,uname,pcpu,pmem,comm,etime # 定制显示的列 ps -o lstart <pid> # 显示进程的启动时间 \"]},\"514\":{\"h\":\"Linux系统监控命令汇总\"},\"515\":{\"h\":\"1. 简介\",\"t\":[\"以下命令以Ubuntu 18.04 LTS 系统为准。\",\"命令\",\"功能\",\"实例\",\"free\",\"查看内存使用情况，包括物理内存和虚拟内存\",\"free -h 或 free -m\",\"vmstat\",\"对系统的整体情况进行统计，包括内核进程、虚拟内存、磁盘、陷阱和 CPU 活动的统计信息\",\"vmstat 2 100\",\"top\",\"实时显示系统中各个进程的资源占用状况及总体状况\",\"top\",\"mpstat\",\"实时系统监控工具，它会报告与CPU相关的统计信息\",\"mpstat\",\"sar\",\"收集、报告和保存CPU、内存、输入输出端口使用情况\",\"sar -n DEV 3 100\",\"netstat\",\"检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据\",\"netstat -a\",\"tcpdump\",\"用于捕捉或者过滤网络上指定接口上接收或者传输的TCP/IP包\",\"tcpdump -i eth0 -c 3\",\"iptraf\",\"用来生成包括TCP信息、UDP计数、ICMP和OSPF信息、以太网负载信息、节点状态信息、IP校验和错误等等统计数据\",\"iptraf\",\"iostat\",\"收集显示系统存储设备输入和输出状态统计\",\"iostat -x -k 2 100\",\"lsof\",\"查看进程打开的文件的工具，查看监听端口\",\"lsof -i :3000\",\"atop\",\"显示的是各种系统资源（CPU, memory, network, I/O, kernel）的综合，并且在高负载的情况下进行了彩色标注\",\"atop\",\"htop\",\"它和top命令十分相似，高级的交互式的实时linux进程监控工具\",\"htop\",\"ps\",\"最基本同时也是非常强大的进程查看命令\",\"ps aux\",\"grep php\",\"glances\",\"监视 CPU，平均负载，内存，网络流量，磁盘 I/O，其他处理器 和 文件系统 空间的利用情况\",\"glances\",\"dstat\",\"全能系统信息统计工具，可用于替换vmstat、iostat、netstat、nfsstat和ifstat这些命令的工具\",\"dstat\",\"uptime\",\"用于查看服务器运行了多长时间以及有多少个用户登录，快速获知服务器的负荷情况\",\"uptime\",\"dmesg\",\"主要用来显示内核信息。使用dmesg可以有效诊断机器硬件故障或者添加硬件出现的问题\",\"dmesg\",\"mpstat\",\"用于报告多路CPU主机的每颗CPU活动情况，以及整个主机的CPU情况\",\"mpstat 2 3\",\"nmon\",\"监控CPU、内存、I/O、文件系统及网络资源。对于内存的使用，它可以实时的显示 总/剩余内存、交换空间等信息\",\"nmon\",\"mytop\",\"用于监控 mysql 的线程和性能。它能让你实时查看数据库以及正在处理哪些查询\",\"mytop\",\"iftop\",\"用来监控网卡的实时流量（可以指定网段）、反向解析IP、显示端口信息等\",\"iftop\",\"jnettop\",\"以相同的方式来监测网络流量但比 iftop 更形象。它还支持自定义的文本输出，并能以友好的交互方式来深度分析日志\",\"jnettop\",\"ngrep\",\"网络层的 grep。它使用 pcap ，允许通过指定扩展正则表达式或十六进制表达式来匹配数据包\",\"ngrep\",\"nmap\",\"可以扫描你服务器开放的端口并且可以检测正在使用哪个操作系统\",\"nmap localhost\",\"du\",\"查看Linux系统中某目录的大小\",\"du -sh *\",\"fdisk\",\"查看硬盘及分区信息\",\"fdisk -l\"]},\"516\":{\"h\":\"2. 内存监控\"},\"517\":{\"h\":\"2.1 free\",\"t\":[\"Linux free命令用于显示内存状态。\",\"free指令会显示内存的使用情况，包括实体内存，虚拟的交换文件内存，共享内存区段，以及系统核心使用的缓冲区等。\"]},\"518\":{\"h\":\"2.1.1 语法\",\"t\":[\"free [-bkmotV][-s <间隔秒数>] \",\"常用选项： -b：以Byte为单位显示内存使用情况； -k：以KB为单位显示内存使用情况； -m：以MB为单位显示内存使用情况； -g：以GB为单位显示内存使用情况;\",\"-h: 以合适的单位显示内存使用情况，最大为三位数，自动计算对应的单位值。单位有：\",\"B = bytes K = kilos M = megas G = gigas T = teras \",\"-o：不显示缓冲区调节列； -t：显示内存总和列； -V：显示版本信息。****\",\"-s: <间隔秒数> 持续观察内存使用状况。\",\"image-20220401101834998\"]},\"519\":{\"h\":\"2.1.2 字段说明：\",\"t\":[\"total：内存总数；\",\"used：已经使用的内存数，包括 cached 和应用程序实际使用的内存；\",\"free：空闲的内存数；\",\"shared：当前已经废弃不用；\",\"buffers：缓存内存数；\",\"cached：缓存内存数。\",\"关系：total = used +available\"]},\"520\":{\"h\":\"2.1.3 实例\"},\"521\":{\"h\":\"2.1.3.1 显示内存使用情况\",\"t\":[\"free \",\"image-20220401141256030\"]},\"522\":{\"h\":\"2.1.3.2 以合适的单位显示内存使用情况\",\"t\":[\"image-20220401141510962\"]},\"523\":{\"h\":\"2.1.3.3 以总和的形式显示内存的使用信息\",\"t\":[\"free -t \",\"image-20220401141403556\"]},\"524\":{\"h\":\"2.1.3.4 周期性的查询内存使用信息\",\"t\":[\"free -s 10 //每10s 执行一次命令 \",\"image-20220401141645744\"]},\"525\":{\"h\":\"2.2 vmstat\"},\"526\":{\"h\":\"2.2.1 简介\",\"t\":[\"mstat命令 的含义为显示虚拟内存状态（“Viryual Memor Statics”），但是它可以报告关于进程、内存、I/O等系统整体运行状态。\"]},\"527\":{\"h\":\"2.2.2 语法\",\"t\":[\"vmstat (选项) (参数) \",\"选项 -a：显示活动内页； -f：显示启动后创建的进程总数； -m：显示slab信息； -n：头信息仅显示一次； -s：以表格方式显示事件计数器和内存状态； -d：报告磁盘状态； -p：显示指定的硬盘分区状态； -S：输出信息的单位。\",\"参数\",\"事件间隔：状态信息刷新的时间间隔；\",\"次数：显示报告的次数\",\"image-20220401141913473\"]},\"528\":{\"h\":\"2.2.3 字段说明\",\"t\":[\"Procs（进程）\",\"r: 运行和等待CPU时间片的进程数，这个值如果长期大于系统CPU个数，就说明CPU资源不足，可以考虑增加CPU\",\"b: 等待资源的进程数，比如正在等待I/O或者内存交换等\",\"Memory（内存）\",\"swpd: 使用虚拟内存大小，如果swpd的值不为0，但是SI，SO的值长期为0，这种情况不会影响系统性能。\",\"free: 空闲物理内存大小（以KB为单位）。\",\"buff: 用作缓冲的内存大小。\",\"cache: 用作缓存的内存大小，如果cache的值大的时候，说明cache处的文件数多。如果此时IO中的bi比较小，就说明文件系统效率比较好。\",\"Swap\",\"si: 每秒从交换区写到内存的大小，由磁盘调入内存。\",\"so: 每秒写入交换区的内存大小，由内存调入磁盘。\",\"注意：内存够用的时候，这2个值都是0，如果这2个值长期大于0时，系统性能会受到影响，磁盘IO和CPU资源都会被消耗。有些朋友看到空闲内存（free）很少的或接近于0时，就认为内存不够用了，不能光看这一点，还要结合si和so，如果free很少，但是si和so也很少（大多时候是0），那么不用担心，系统性能这时不会受到影响的。\",\"IO（现在的Linux版本块的大小为1kb）\",\"bi: 每秒读取的块数\",\"bo: 每秒写入的块数\",\"注意：随机磁盘读写的时候，这2个值较大（如超出1024k)，而且wa值比较大，则表示系统磁盘IO性能瓶颈。\",\"system（系统）\",\"in: 每秒中断数，包括时钟中断。\",\"cs: 每秒上下文切换数。\",\"注意：上面2个值越大，会看到由内核消耗的CPU时间会越大。\",\"CPU（以百分比表示） us: 用户进程执行时间百分比(user time) us的值比较高时，说明用户进程消耗的CPU时间多，但是如果长期超50%的使用，那么我们就该考虑优化程序算法或者进行加速。\",\"sy: 内核系统进程执行时间百分比(system time)\",\"sy的值高时，说明系统内核消耗的CPU资源多，这并不是良性表现，我们应该检查原因。\",\"id: 空闲时间百分比\",\"wa: IO等待时间百分比\",\"wa的值高时，说明IO等待比较严重，这可能由于磁盘大量作随机访问造成，也有可能磁盘出现瓶颈（块操作）。\",\"st：一般不关注，虚拟机占用的时间百分比。\"]},\"529\":{\"h\":\"2.2.4 实例\",\"t\":[\"每2s显示一次\",\"image-20220401141913473\"]},\"530\":{\"h\":\"3. CPU 监控\"},\"531\":{\"h\":\"3.1 top\"},\"532\":{\"h\":\"3.1.1 简介\",\"t\":[\"top命令 可以实时动态地查看系统的整体运行情况。\"]},\"533\":{\"h\":\"3.1.2 语法：\",\"t\":[\"top (选项) \",\"选项： -b：以批处理模式操作； -c：显示完整的治命令； -d：屏幕刷新间隔时间； -I：忽略失效过程； -s：保密模式； -S：累积模式； -i<时间>：设置间隔时间； -u<用户名>：指定用户名； -p<进程号>：指定进程； -n<次数>：循环显示的次数\",\"image-20220401142646239\"]},\"534\":{\"h\":\"3.1.3 字段说明\",\"t\":[\"top：系统当前时间\",\"up xxx days：系统运行时间\",\"1 users：当前登录用户个数\",\"load average：系统负载。即任务队列的平均长度。三个数值分别为最近1分钟、最近5分钟、最近15分钟的平均负载。——超过N（CPU核数）说明系统满负荷运行。\",\"Tasks \",\"total：总进程数\",\"running：正在运行的进程数\",\"sleeping：睡眠的进程数\",\"stopped：停止的进程数\",\"zombie：冻结的进程数\",\"%Cpu(s) \",\"us：用户进程消耗的CPU百分比\",\"sy：内核进程消耗的CPU百分比\",\"ni：改变过优先级的进程占用CPU的百分比\",\"id：空闲CPU的百分比\",\"wa：IO等待消耗的CPU百分比\",\"Mem \",\"total：物理内存总量\",\"free：空闲物理内存总量\",\"used：已用物理内存总量\",\"buff：用作内核缓存内存总量\",\"Swap \",\"total：虚拟内存总量\",\"free：空闲虚拟内存总量\",\"used：已用虚拟内存总量\"]},\"535\":{\"h\":\"3.1.4 实例\"},\"536\":{\"h\":\"3.1.4.1 默认top\",\"t\":[\"image-20220401142646239\"]},\"537\":{\"h\":\"3.2 mpstat\"},\"538\":{\"h\":\"3.2.1 简介\",\"t\":[\"mpstat命令 指令主要用于多CPU环境下，它显示各个可用CPU的状态系你想。\"]},\"539\":{\"h\":\"3.2.2 语法：\",\"t\":[\"mpstat (选项) (参数) \",\"选项：\",\"-P：指定CPU编号。 \",\"参数：\",\"间隔时间：每次报告的间隔时间（秒）；\",\"次数：显示报告的次数。\"]},\"540\":{\"h\":\"2.2.3 示例\",\"t\":[\"ALL表示显示所有CPUs，也可以指定某个CPU；2表示刷新间隔。\",\"image-20220401143304219\"]},\"541\":{\"h\":\"4. 网络监控\"},\"542\":{\"h\":\"4.1 netstat\"},\"543\":{\"h\":\"4.1.1 简介\",\"t\":[\"netstat命令一般用于检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据。\"]},\"544\":{\"h\":\"4.1.2 常用实例：\",\"t\":[\"netstat -aup # 输出所有UDP连接状况 netstat -atp # 输出所有TCP连接状况 netstat -s # 显示各个协议的网络统计信息 netstat -i # 显示网卡列表 netstat -r # 显示路由表信息 netstat -l # 只显示监听端口 netstat -lt # 只列出所有监听 tcp 端口 netstat -lu # 只列出所有监听 udp 端口 netstat -lx # 只列出所有监听 UNIX 端口 \"]},\"545\":{\"h\":\"4.2 sar\"},\"546\":{\"h\":\"4.2.1 简介\",\"t\":[\"sar命令 是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。\"]},\"547\":{\"h\":\"4.2.2 字段说明\",\"t\":[\"IFACE：网络设备的名称\",\"rxpck/s：每秒钟接收到的包数目\",\"txpck/s：每秒钟发送出去的包数目\",\"rxkB/s：每秒钟接收到的字节数\",\"txkB/s：每秒钟发送出去的字节数\"]},\"548\":{\"h\":\"4.2.3 示例\",\"t\":[\"image-20220401145225177\"]},\"549\":{\"h\":\"5. 磁盘监控\"},\"550\":{\"h\":\"5.1 df\"},\"551\":{\"h\":\"5.1.1 简介\",\"t\":[\"df命令 用于显示磁盘分区上的可使用的磁盘空间。如果没有文件名被指定，则显示当前所有被挂载的文件系统，默认以 KB 为单位。\"]},\"552\":{\"h\":\"5.1.2 语法：\",\"t\":[\"df (选项) (参数) \",\"选项： -a 全部文件系统列表 -h 以方便阅读的方式显示 -i 显示inode信息 -T 显示文件系统类型 -l 只显示本地文件系统 -k 以KB为单位 -m 以MB为单位\",\"参数：\",\"文件：指定文件系统上的文件。\"]},\"553\":{\"h\":\"5.1.3 示例\",\"t\":[\"image-20220401145602336\"]},\"554\":{\"h\":\"5.2 iostat\"},\"555\":{\"h\":\"5.2.1 简介\",\"t\":[\"iostat命令 被用于监视系统输入输出设备和CPU的使用情况。\"]},\"556\":{\"h\":\"5.2.2 语法：\",\"t\":[\"iostat (选项) (参数) \",\"选项： -c：仅显示CPU使用情况； -d：仅显示设备利用率； -k：显示状态以千字节每秒为单位，而不使用块每秒； -m：显示状态以兆字节每秒为单位； -p：仅显示块设备和所有被使用的其他分区的状态； -t：显示每个报告产生时的时间； -V：显示版号并退出； -x：显示扩展状态。\",\"参数：\",\"间隔时间：每次报告的间隔时间（秒）；\",\"次数：显示报告的次数。\"]},\"557\":{\"h\":\"5.2.3 字段说明：\",\"t\":[\"r/s: 每秒完成的读 I/O 设备次数。\",\"w/s: 每秒完成的写 I/O 设备次数。\",\"rkB/s: 每秒读K字节数.是 rsect/s 的一半,因为每扇区大小为512字节。\",\"wkB/s: 每秒写K字节数.是 wsect/s 的一半。\",\"avgrq-sz: 平均每次设备I/O操作的数据大小 (扇区)。\",\"avgqu-sz: 平均I/O队列长度。\",\"await: 平均每次设备I/O操作的等待时间 (毫秒)。\",\"svctm: 平均每次设备I/O操作的服务时间 (毫秒)。\",\"%util: 一秒中有百分之多少的时间用于 I/O 操作,或者说一秒中有多少时间 I/O 队列是非空的。\"]},\"558\":{\"h\":\"5.2.4 示例\",\"t\":[\"image-20220401145950590\"]},\"559\":{\"h\":\"5.3 . iotop\",\"t\":[\"centos没有该命名\"]},\"560\":{\"h\":\"5.3.1 简介\",\"t\":[\"iotop命令 是一个用来监视磁盘I/O使用状况的top类工具。\",\"iotop具有与top相似的UI，其中包括PID、用户、I/O、进程等相关信息。Linux下的IO统计工具如iostat，nmon等大多数是只能统计到per设备的读写情况，如果你想知道每个进程是如何使用IO的就比较麻烦，使用iotop命令可以很方便的查看。\"]},\"561\":{\"h\":\"5.3.2 语法：\",\"t\":[\"iotop (选项) \",\"选项： -o：只显示有io操作的进程 -b：批量显示，无交互，主要用作记录到文件。 -n： NUM：显示NUM次，主要用于非交互式模式。 -d SEC：间隔SEC秒显示一次。 -p PID：监控的进程pid。 -u USER：监控的进程用户。\"]},\"562\":{\"h\":\"5.3.3 iotop常用快捷键：\",\"t\":[\"左右箭头：改变排序方式，默认是按IO排序。\",\"r：改变排序顺序。\",\"o：只显示有IO输出的进程。\",\"p：进程/线程的显示方式的切换。\",\"a：显示累积使用量。\",\"q：退出。\",\"image-20220401150415728\"]},\"563\":{\"h\":\"6. 进程\"},\"564\":{\"h\":\"6.1 ps\",\"t\":[\"ps（Process Status，进程状态）命令 用于报告当前系统的进程状态。\",\"ps 的用法非常多，这里仅列举一些常用的：\",\"ps -aux | grep <name> # 查看name 进程详细信息 ps -p <pid> -L # 显示进程<pid> 的所有线程 ps -o lstart <pid> # 显示进程的启动时间 ps -f --forest -C <name> # 用树的风格显示进程的层次关系 ps -e -o pid,uname,pcpu,pmem,comm,etime # 定制显示的列 ps -o lstart <pid> # 显示进程的启动时间 \"]},\"565\":{\"h\":\"7. 系统监控全能工具\"},\"566\":{\"h\":\"7.1 glances\",\"t\":[\"glances 是一个用来监视 GNU/Linux 和 FreeBSD 操作系统的 GPL 授权的全能工具。\",\"Glances 会用一下几种颜色来代表状态：\",\"绿色：OK（一切正常）\",\"蓝色：CAREFUL（需要注意）\",\"紫色：WARNING（警告）\",\"红色：CRITICAL（严重）。\",\"阀值可以在配置文件中设置，一般阀值被默认设置为（careful=50、warning=70、critical=90）\"]},\"567\":{\"h\":\"7.2 dstat\",\"t\":[\"dstat命令 是一个用来替换vmstat、iostat、netstat、nfsstat和ifstat这些命令的工具。\",\"直接使用dstat，默认使用的是-cdngy参数，分别显示cpu、disk、net、page、system信息，默认是1s显示一条信息。\"]},\"568\":{\"h\":\"参考文章\",\"t\":[\"Linux 系统监控命令整理汇总\"]},\"569\":{\"h\":\"shell入门\"},\"570\":{\"h\":\"1. 简介\",\"t\":[\"Shell 是一个命令解释器，它为用户提供了一个向 Linux 内核发送请求以便运行程序界面系统级程序，用户可以用 Shell 来启动、挂起、停止甚至是编写一些程序。\",\"image-20220330153029197\"]},\"571\":{\"h\":\"2.\",\"t\":[\"进入 Linux 终端，编写一个 Shell 脚本 hello.sh ：\",\"#!/bin/bash echo 'hello world!' \",\"运行：\",\"# 方法1 sh hello.sh # 方法2 chmod +x hello.sh ./hello.sh \",\"终端打印出 hello world! 。\",\"说明：\",\"#! 告诉系统这个脚本需要什么解释器来执行。\",\"文件扩展名 .sh 不是强制要求的。\",\"方法1 直接运行解释器，hello.sh 作为 Shell 解释器的参数。此时 Shell 脚本就不需要指定解释器信息，第一行可以去掉。\",\"方法2 hello.sh 作为可执行程序运行，Shell 脚本第一行一定要指定解释器。\"]},\"572\":{\"h\":\"3.\"},\"573\":{\"h\":\"3.1\",\"t\":[\"Shell 变量分为系统变量和自定义变量。系统变量有$HOME、$PWD、$USER等，显示当前 Shell 中所有变量：set 。 变量名可以由字母、数字、下划线组成，不能以数字开头。\"]},\"574\":{\"h\":\"3.2\",\"t\":[\"定义变量： 变量名=变量值，等号两侧不能有空格，变量名一般习惯用大写。\",\"删除变量： unset 变量名 。\",\"声明静态变量： readonly 变量名，静态变量不能unset。\",\"使用变量： $变量名\"]},\"575\":{\"h\":\"3.3\",\"t\":[\"A=` ls` 反引号,执行里面的命令\",\"A=$(ls) 等价于反引号\"]},\"576\":{\"h\":\"4.\"},\"577\":{\"h\":\"4.1\",\"t\":[\"image-20220330153653301\"]},\"578\":{\"h\":\"4.2\",\"t\":[\"export 变量名=变量值，将 Shell 变量输出为环境变量。\",\"source 配置文件路径，让修改后的配置信息立即生效。\",\"echo $变量名，检查环境变量是否生效\"]},\"579\":{\"h\":\"4.3\",\"t\":[\"基本语法\",\"$n ：$0 代表命令本身、$1-$9 代表第1到9个参数，10以上参数用花括号，如 ${10}。\",\"$* ：命令行中所有参数，且把所有参数看成一个整体。\",\"$@ ：命令行中所有参数，且把每个参数区分对待。\",\"$# ：所有参数个数。\"]},\"580\":{\"h\":\"4.4\",\"t\":[\"编写 Shell 脚本 positionPara.sh ，输出命令行输入的各个参数信息。\",\"#!/bin/bash # 输出各个参数 echo $0 $1 $2 echo $* echo $@ echo 参数个数=$# \",\"运行：\",\"chmod +x positionPara.sh ./positionPara.sh 10 20 \",\"运行结果：\",\"./positionPara.sh 10 20 10 20 10 20 参数个数=2 \"]},\"581\":{\"h\":\"5.\"},\"582\":{\"h\":\"5.1\",\"t\":[\"在赋值定义之前，事先在 Shell 脚本中直接引用的变量。\"]},\"583\":{\"h\":\"5.2\",\"t\":[\"$$ ：当前进程的 PID 进程号。\",\"$! ：后台运行的最后一个进程的 PID 进程号。\",\"$? ：最后一次执行的命令的返回状态，0为执行正确，非0执行失败。\"]},\"584\":{\"h\":\"5.3\",\"t\":[\"编写 Shell 脚本 prePara.sh ，输出命令行输入的各个参数信息。\",\"#!/bin/bash echo 当前的进程号=$$ # &：以后台的方式运行程序 ./hello.sh & echo 最后一个进程的进程号=$! echo 最后执行的命令结果=$? \",\"运行结果：\",\"当前的进程号=41752 最后一个进程的进程号=41753 最后执行的命令结果=0 # hello world! \"]},\"585\":{\"h\":\"6.\"},\"586\":{\"h\":\"6.1\",\"t\":[\"$((运算式)) 或 $[运算式]\",\"expr m + n 注意 expr 运算符间要有空格\",\"expr m - n\",\"expr *，/，% 分别代表乘，除，取余\"]},\"587\":{\"h\":\"6.2\",\"t\":[\"# 第1种方式 $(()) echo $(((2+3)*4)) # 第2种方式 $[]，推荐 echo $[(2+3)*4] # 使用 expr TEMP=`expr 2 + 3` echo `expr $TEMP \\\\* 4` \"]},\"588\":{\"h\":\"7.\"},\"589\":{\"h\":\"7.1\",\"t\":[\"[ condition ] 注意condition前后要有空格。非空返回0，0为 true，否则为 false 。\"]},\"590\":{\"h\":\"7.2\",\"t\":[\"#!/bin/bash if [ 'test01' = 'test' ] then echo '等于' fi # 20是否大于10 if [ 20 -gt 10] then echo '大于' fi # 是否存在文件/root/shell/a.txt if [ -e /root/shell/a.txt ] then echo '存在' fi if [ 'test02' = 'test02' ] && echo 'hello' || echo 'world' then echo '条件满足，执行后面的语句' fi 运行结果： \",\"大于 hello 条件满足，执行后面的语句 \"]},\"591\":{\"h\":\"9.\"},\"592\":{\"h\":\"9.1\"},\"593\":{\"h\":\"9.1.1\",\"t\":[\"if [ 条件判断式 ];then 程序 fi # 或者（推荐） if [ 条件判断式 ] then 程序 elif [ 条件判断式 ] then 程序 fi \"]},\"594\":{\"h\":\"9.1.2\",\"t\":[\"编写 Shell 程序：如果输入的参数大于60，输出“及格”，否则输出“不及格”。\",\"#!/bin/bash if [ $1 -ge 60 ] then echo 及格 elif [ $1 -lt 60 ] then echo \\\"不及格\\\" fi \"]},\"595\":{\"h\":\"9.2\"},\"596\":{\"h\":\"9.2.1\",\"t\":[\"case $变量名 in \\\"值1\\\") 如果变量值等于值1，则执行此处程序1 ;; \\\"值2\\\") 如果变量值等于值2，则执行此处程序2 ;; ...省略其它分支... *) 如果变量值不等于以上列出的值，则执行此处程序 ;; esac \"]},\"597\":{\"h\":\"9.2.2\",\"t\":[\"当命令行参数为1时输出“周一”，2时输出“周二”，其他情况输出“其它”。\",\"case $1 in \\\"1\\\") echo 周一 ;; \\\"2\\\") echo 周二 ;; *) echo 其它 ;; esac \"]},\"598\":{\"h\":\"9.3\"},\"599\":{\"h\":\"9..3.1\",\"t\":[\"# 语法1 for 变量名 in 值1 值2 值3... do 程序 done # 语法2 for ((初始值;循环控制条件;变量变化)) do 程序 done \"]},\"600\":{\"h\":\"9.3.2\",\"t\":[\"打印命令行输入的参数。\",\"#!/bin/bash # 使用$* for i in \\\"$*\\\" do echo \\\"the arg is $i\\\" done echo \\\"==================\\\" # 使用$@ for j in \\\"$@\\\" do echo \\\"the arg is $j\\\" done \",\"运行结果（回顾一下 $* 和 $@ 的区别）：\",\"the arg is 1 2 3 ================== the arg is 1 the arg is 2 the arg is 3 \",\"输出从1加到100的值。\",\"#!/bin/bash SUM=0 for ((i=1;i<=100;i++)) do SUM=$[$SUM+$i] done echo $SUM \"]},\"601\":{\"h\":\"9.4\"},\"602\":{\"h\":\"9.4.1\",\"t\":[\"while [ 条件判断式 ] do 程序 done \"]},\"603\":{\"h\":\"9.4.2\",\"t\":[\"输出从1加到100的值。\",\"#!/bin/bash SUM=0 i=0 while [ $i -le $1 ] do SUM=$[$SUM+$i] i=$[$i+1] done echo $SUM \"]},\"604\":{\"h\":\"10.\"},\"605\":{\"h\":\"10.1\",\"t\":[\"read(选项)(参数) 选项\",\"-p：指定读取值时的提示符\",\"-t：指定读取值时等待的时间（秒），如果没有在指定时间内输入，就不再等待了。\",\"参数\",\"变量名：读取值的变量名\"]},\"606\":{\"h\":\"10.2\",\"t\":[\"读取控制台输入一个num值。\",\"#!/bin/bash read -p \\\"请输入一个数num1=\\\" NUM1 echo \\\"你输入num1的值是：$NUM1\\\" read -t 10 -p \\\"请在10秒内输入一个数num2=\\\" NUM2 echo \\\"你输入num2的值是：$NUM2\\\" \",\"运行结果：\",\"请输入一个数num1=10 你输入num1的值是：10 请在10秒内输入一个数num2=20 你输入num2的值是：20 \"]},\"607\":{\"h\":\"11.\",\"t\":[\"和其它编程语言一样，Shell 编程有系统函数和自定义函数，本文只举两个常用系统函数。\"]},\"608\":{\"h\":\"11.1\"},\"609\":{\"h\":\"11.1.1 basename\",\"t\":[\"basename，删掉路径最后一个 / 前的所有部分（包括/），常用于获取文件名。 基本语法\",\"basename [pathname] [suffix]\",\"basename [string] [suffix]\",\"如果指定 suffix，也会删掉pathname或string的后缀部分。\",\"实例\",\"# basename /usr/bin/sort sort # basename include/stdio.h stdio.h # basename include/stdio.h .h stdio \"]},\"610\":{\"h\":\"11.1.2 dirname\",\"t\":[\"dirname，删掉路径最后一个 / 后的所有部分（包括/），常用于获取文件路径。 基本语法\",\"dirname pathname\",\"如果路径中不含 / ，则返回 '.' （当前路径）。\",\"实例\",\"# dirname /usr/bin/ /usr # dirname dir1/str dir2/str dir1 dir2 # dirname stdio.h . \"]},\"611\":{\"h\":\"11.2\"},\"612\":{\"h\":\"11.2.1\",\"t\":[\"[ function ] funname[()] { Action; [return int;] } # 调用 funname 参数1 参数2... \"]},\"613\":{\"h\":\"11.2.2\",\"t\":[\"计算输入两个参数的和。\",\"#!/bin/bash function getSum(){ SUM=$[$n1+$n2] echo \\\"sum=$SUM\\\" } read -p \\\"请输入第一个参数n1：\\\" n1 read -p \\\"请输入第二个参数n2：\\\" n2 # 调用 getSum 函数 getSum $n1 $n2 \"]},\"614\":{\"h\":\"参考文章\",\"t\":[\"掌握Shell编程，一篇就够了\"]},\"615\":{\"c\":[\"linux\"]},\"616\":{\"h\":\"概述\"},\"617\":{\"h\":\"关系的三个范式是什么？\",\"t\":[\"第一范式(1NF)：用来确保每列的原子性，要求每列（或者每个属性值）都是不可再分的最小数据单元（也称为最小的原子单元）。\",\"第二范式(2NF)：在第一范式的基础上更进一层，要求表中的每列都和主键相关，即要求实体的唯一性。如果一个表满足第一范式，并且除了主键以外的其他列全部都依赖于该主键，那么该表满足第二范式。\",\"第三范式(3NF)：在第二范式的基础上更进一层，第三范式是确保每列都和主键列直接相关，而不是间接相关，即限制列的冗余性。如果一个关系满足第二范式，并且除了主键以外的其他列都依赖于主键列，列和列之间不存在相互依赖关系，则满足第三范式。\"]},\"618\":{\"h\":\"MySQL中varchar和char的区别是什么？\",\"t\":[\"char字段的最大长度为255字符，varchar字段的最大长度为65535个字符。\",\"char类型如果存的数据量小于最大长度，剩余的空间会使用空格填充，因此可能会浪费空间，所以char类型适合存储长度固定的数据，这样不会浪费空间，效率还比varchar略高；varchar类型如果存到数据量小于最大长度，剩余的空间会留给别的数据使用，所以varchar类型适合存储长度不固定的数据，这样虽然没有char存储效率高，但至少不会浪费空间。\",\"char类型的查找效率高，varchar类型的查找效率较低。\"]},\"619\":{\"h\":\"join和left join的区别？\",\"t\":[\"join等价于inner join内连接，是返回两个表中都有的符合条件的行。\",\"left join左连接，是返回左表中所有的行及右表中符合条件的行。\",\"right join右连接，是返回右表中所有的行及左表中符合条件的行。\"]},\"620\":{\"h\":\"SQL怎么实现模糊查询？\",\"t\":[\"索引 B+ 树是按照索引值有序排列存储的，只能根据前缀进行比较。每一次按照模糊匹配的前缀字典序来进行比较。\"]},\"621\":{\"h\":\"select的执行过程？\",\"t\":[\"连接：首先客户端和MySQL通过三次握手建立连接，MySQL是基于TCP进行传输的。MySQL服务如果没有启动就会报错。MySQL正常运行的话就去校验用户名和密码，如果认证信息错误也会报错。检验通过之后连接器会获取用户权限并且保存起来，后续的任何操作都会基于开始的读到权限进行判断，即便创建连接之后更改了权限也不会影响已连接的权限。\",\"长连接解决\",\"第一种，定期断开长连接。\",\"第二种，客户端主动重置连接。当客户端执行了一个很大的操作后，在代码里调用 mysql_reset_connection 函数来重置连接，达到释放内存的效果。这个过程不需要重连和重新做权限验证，但是会将连接恢复到刚刚创建完时的状态。\",\"查询缓存：连接成功后会像MySQL服务中发送SQL语句，MySQL服务收到语句之后会进行解析判断SQL语句的类型。如果是select语句的话就去缓存中查询，看看之前有没有执行过这条select语句。缓存是以k-v形式保存在内存中的，key是SQL语句，value是SQL查询结果。如果缓存中有结果就直接返回给客户端，如果没有命中就继续向下执行。执行完成后的结果会被放入缓存中。\",\"缓存缺点\",\"对于更新比较频繁的表，查询缓存的命中率很低的，只要一个表有更新操作，那么这个表的查询缓存就会被清空。如果刚缓存了一个查询结果很大的数据，还没被使用的时候，刚好这个表有更新操作，查询缓冲就被清空了寞。\",\"MySQL 8.0 版本直接将查询缓存删掉了，执行一条 SQL 查询语句，不会有查询缓存这个阶段了。\",\"SQL解析：词法分析和语法分析，词法分析是把SQL语句的字符串识别出关键字，方便后续优化，语法分析根据语法规则判断SQL语句是否满足要求。如果SQL语句不对就会报错，\",\"执行SQL：主要是prepare预处理、optimize优化和execute执行阶段。预处理器检查SQL查询的表或者字段是否存在，如果有*就将它扩展为SQL的所有的列。优化器是确定SQL语句的执行方案，比方说有索引会选择走了哪个索引。执行器会与存储引擎交互，如果走索引了就将相应索引条件交给存储引擎，存储引擎通过B+树定位数据，如果数据不存在就像执行器返回错误，然后查询结束，找到了就将记录返回给执行数，执行器读到数据之后判断记录是否满足要求，如果满足要求就将数据返回给客户端，否则跳过该数据。如果是全表扫描优化器和存储引擎交互之后存储引擎会访问第一条表中数据，执行器会判断这条数据是否满足条件，满足就发给客户端，然后执行器查询是一个while循环，继续取下一条记录重复判断，直到读完表中所有记录退出循环。如果使用联合索引的话，会在存储引擎层分别判断每个索引是否满足条件，而不先执行回表，所有索引有一个不成立就跳过，否则就返回给Server层回表，这是一个索引下推的过程。\"]},\"622\":{\"h\":\"update的执行过程？\",\"t\":[\"执行器负责具体执行，会调用存储引擎的接口，通过主键索引树搜索获取一行记录：\",\"如果记录所在的数据页本来就在 buffer pool 中，就直接返回给执行器更新；\",\"如果记录不在 buffer pool，将数据页从磁盘读入到 buffer pool，返回记录给执行器。\",\"执行器得到聚簇索引记录后，会看一下更新前的记录和更新后的记录是否一样：\",\"如果一样的话就不进行后续更新流程；\",\"如果不一样的话就把更新前的记录和更新后的记录都当作参数传给 InnoDB 层，让 InnoDB 真正的执行更新记录的操作；\",\"开启事务，首先要记录相应的 undo log，需要把被更新的列的旧值记下来，也就是要生成一条 undo log，undo log 会写入 Buffer Pool 中的 Undo 页面，不过在内存修改该 Undo 页面后，需要记录对应的 redo log。\",\"InnoDB 层开始更新记录，会先更新内存（同时标记为脏页），然后将记录写到 redo log 里面，这个时候更新就算完成了。为了减少磁盘I/O，不会立即将脏页写入磁盘，后续由后台线程选择一个合适的时机将脏页写入到磁盘。\",\"在一条更新语句执行完成后，然后开始记录该语句对应的 binlog，此时记录的 binlog 会被保存到 binlog cache，在事务提交时才会统一将该事务运行过程中的所有 binlog 刷新到硬盘。\",\"两阶段提交：\",\"prepare 阶段：将 redo log 对应的事务状态设置为 prepare，然后将 redo log 刷新到硬盘；\",\"commit 阶段：将 binlog 刷新到磁盘，接着调用引擎的提交事务接口，将 redo log 状态设置为 commit（将事务设置为 commit 状态后，刷入到磁盘 redo log 文件）；\"]},\"623\":{\"h\":\"count性能比较？\",\"t\":[\"count(*)=count(1)>count(主键)>count(字段)\",\"MySQL 会将星号参数转化为参数 0 来处理，所以count(*) 和count(1)相等。count(主键)需要判断主键是否为空值；count(字段)会进行全表扫描，效率最差。\"]},\"624\":{\"h\":\"drop、truncate和delete的区别？\",\"t\":[\"drop删除整张表和表结构，以及表的索引、约束和触发器；truncate只删除表数据，表的结构、索引、约束等会被保留； delete只删除表的全部或部分数据，表结构、索引、约束等会被保留。\",\"delete语句为DML(data maintain Language)，执行删除操作的过程是每次从表中删除一行，并且同时将该行的删除操作作为事务记录在日志中保存以便进行进行回滚操作；truncate、drop是DLL(data define language)，删除行是不能恢复的，并且在删除的过程中不会激活与表有关的删除触发器，执行速度快，原数据不放到rollback segment中，不能回滚。\",\"truncate 和 drop 不支持添加 where 条件，而 delete 支持 where 条件。\",\"执行速度drop>truncate>delete，delete 是逐行执行的，并且在执行时会把操作日志记录下来，以备日后回滚使用，所以 delete 的执行速度是比较慢的；而 truncate 的操作是先复制一个新的表结构，再把原先的表整体删除，所以它的执行速度居中，而 drop 的执行速度最快。\",\"truncate 只能对TABLE；delete可以是TABLE和VIEW。\",\"使用场景\",\"如果想删除表，用drop；\",\"如果想保留表而将所有数据删除，和事务无关，用truncate即可；\",\"如果和事务有关，或者想触发trigger，用delete；\",\"如果是整理表内部的碎片，可以用truncate跟上reuse stroage，再重新导入/插入数据。\"]},\"625\":{\"h\":\"MySQL会出现死锁吗，怎么检测死锁？\",\"t\":[\"如果 update 语句的 where 条件没有用到索引列，那么就会全表扫描，在一行行扫描的过程中，不仅给行记录加上了行锁，还给行记录两边的空隙也加上了间隙锁，相当于锁住整个表，然后直到事务结束才会释放锁。\",\"行锁会发生死锁，表锁不会。死锁的四个必要条件：互斥、占有且等待、不可强占用、循环等待。只要系统发生死锁，这些条件必然成立，但是只要破坏任意一个条件就死锁就不会成立。\",\"解决办法：\",\"设置事务等待锁的超时时间。当一个事务的等待时间超过该值后，就对这个事务进行回滚，于是锁就释放了，另一个事务就可以继续执行了。在 InnoDB 中，参数 innodb_lock_wait_timeout 是用来设置超时时间的，默认值时 50 秒。\",\"当发生超时后，就出现下面这个提示：\",\"开启主动死锁检测。主动死锁检测在发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数 innodb_deadlock_detect 设置为 on，表示开启这个逻辑，默认就开启。当检测到死锁后，就会出现提示。\"]},\"626\":{\"h\":\"事务\"},\"627\":{\"h\":\"MySQL之事务的四大特性(ACID)？\",\"t\":[\"原子性(atomicity)：一个事务必须视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，对于一个事务来说，不可能只执行其中的一部分操作，这就是事务的原子性。\",\"一致性(consistency)：数据库总是从一个一致性的状态转换到另一个一致性的状态。\",\"隔离性(isolation)：一个事务所做的修改在最终提交以前，对其他事务是不可见的。\",\"持久性(durability)：一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，修改的数据也不会丢失。\",\"实现\",\"持久性：通过 redo log来保证的\",\"原子性：通过 undo log来保证的\",\"隔离性：通过 MVCC 或锁机制来保证的\",\"一致性：通过持久性+原子性+隔离性来保证\"]},\"628\":{\"h\":\"并发事务会出现什么问题？\",\"t\":[\"脏读：脏读指的是读到了其他事务未提交的数据，未提交意味着这些数据可能会回滚，也就是可能最终不会存到数据库中，也就是不存在的数据。读到了并一定最终存在的数据，这就是脏读。\",\"不可重复读：对比可重复读，不可重复读指的是在同一事务内，不同的时刻读到的同一批数据可能是不一样的，可能会受到其他事务的影响，比如其他事务改了这批数据并提交了。通常针对数据更新操作。\",\"幻读：幻读是针对数据插入操作来说的。假设事务A对某些行的内容作了更改，但是还未提交，此时事务B插入了与事务A更改前的记录相同的记录行，并且在事务A提交之前先提交了，而这时，在事务A中查询，会发现好像刚刚的更改对于某些数据未起作用，让用户感觉感觉出现了幻觉，这就叫幻读。\",\"可重复读：可重复读指的是在一个事务内，最开始读到的数据和事务结束前的任意时刻读到的同一批数据都是一致的。\"]},\"629\":{\"h\":\"MySQL的事务隔离级别？\",\"t\":[\"读未提交(read uncommitted)：指一个事务还没提交时，它做的变更就能被其他事务看到。\",\"读提交(read committed)：指一个事务提交之后，它做的变更才能被其他事务看到。\",\"可重复读(repeatable read)：指一个事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，MySQL InnoDB 引擎的默认隔离级别。\",\"串行化(serializable )：会对记录加上读写锁，在多个事务对这条记录进行读写操作时，如果发生了读写冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。\"]},\"630\":{\"h\":\"在不同事务隔离级别下会发生什么现象？\",\"t\":[\"读未提交：可能发生脏读、不可重复读和幻读现象；\",\"读提交：可能发生不可重复读和幻读现象，但是不可能发生脏读现象；\",\"可重复读：可能发生幻读现象，但是不可能脏读和不可重复读现象；\",\"串行化：隔离级别下，脏读、不可重复读和幻读现象都不可能会发生。\",\"提示\",\"解决脏读现象：升级到读提交以上的隔离级别\",\"解决不可重复读：升级到可重复读的隔离级别\",\"解决幻读：不建议将隔离级别升级到串行化，因为这样会导致数据库在并发事务时性能很差。\"]},\"631\":{\"h\":\"MVVC实现原理？\",\"t\":[\"Read View 有四个重要的字段：\",\"m_ids ：指的是在创建 Read View 时，当前数据库中活跃事务的事务 id 列表，活跃事务指的就是，启动了但还没提交的事务。\",\"min_trx_id ：指的是在创建 Read View 时，当前数据库中活跃事务中事务 id 最小的事务，也就是 m_ids 的最小值。\",\"max_trx_id ：创建 Read View 时当前数据库中应该给下一个事务的 id 值，也就是全局事务中最大的事务 id 值 + 1。\",\"creator_trx_id ：指的是创建该 Read View 的事务的事务 id。\",\"对于使用 InnoDB 存储引擎的数据库表，它的聚簇索引记录中都包含下面两个隐藏列：\",\"trx_id，当一个事务对某条聚簇索引记录进行改动时，就会把该事务的事务 id 记录在 trx_id 隐藏列里。\",\"roll_pointer，每次对某条聚簇索引记录进行改动时，都会把旧版本的记录写入到 undo 日志中，然后这个隐藏列是个指针，指向每一个旧版本记录，于是就可以通过它找到修改前的记录。\",\"一个事务去访问记录的时候，除了自己的更新记录总是可见之外，还有这几种情况：\",\"如果记录的 trx_id 值小于 Read View 中的 min_trx_id 值，表示这个版本的记录是在创建 Read View 前已经提交的事务生成的，所以该版本的记录对当前事务可见。\",\"如果记录的 trx_id 值大于等于 Read View 中的 max_trx_id 值，表示这个版本的记录是在创建 Read View 后才启动的事务生成的，所以该版本的记录对当前事务不可见。\",\"如果记录的 trx_id 值在 Read View 的min_trx_id和max_trx_id之间，需要判断 trx_id 是否在 m_ids 列表中： \",\"如果记录的 trx_id 在 m_ids 列表中，表示生成该版本记录的活跃事务依然活跃着(还没提交事务)，所以该版本的记录对当前事务不可见。\",\"如果记录的 trx_id 不在 m_ids 列表中，表示生成该版本记录的活跃事务已经被提交，所以该版本的记录对当前事务可见。\"]},\"632\":{\"h\":\"幻读是如何解决的？\",\"t\":[\"快照读（普通 select 语句）：是通过 MVCC 方式解决了幻读，可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，查询不出来这条数据的。\",\"当前读（select ... for update 等语句）：是通过 next-key lock（记录锁+间隙锁）方式解决了幻读，因为当执行 select ... for update 语句的时候会加上 next-key lock，如果有其他事务在 next-key lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入。\",\"失效\",\"对于快照读， MVCC 并不能完全避免幻读现象。当事务 A 更新了一条事务 B 插入的记录，那么事务 A 前后两次查询的记录条目就不一样了，所以就发生幻读。\",\"对于当前读，如果事务开启后，并没有执行当前读，而是先快照读，然后这期间如果其他事务插入了一条记录，那么事务后续使用当前读进行查询的时候，就会发现两次查询的记录条目就不一样了，所以就发生幻读。\",\"即MySQL 可重复读隔离级别并没有彻底解决幻读，只是很大程度上避免了幻读现象的发生。\",\"尽量在开启事务之后，马上执行 select ... for update 这类当前读的语句，因为它会对记录加 next-key lock，从而避免其他事务插入一条新记录。\"]},\"633\":{\"h\":\"读提交怎么实现的？\",\"t\":[\"读提交隔离级别是在每次读取数据时，都会生成一个新的 Read View。事务期间的多次读取同一条数据，前后两次读的数据可能会出现不一致，因为可能这期间另外一个事务修改了该记录，并提交了事务。\"]},\"634\":{\"h\":\"HTTP面试常见题\"},\"635\":{\"h\":\"HTTP和HTTPS的区别？\",\"t\":[\"HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS(SSL+HTTP）数据传输过程是加密的，安全性较好。\",\"使用 HTTPS 协议需要到 CA 申请证书。\",\"HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，而 HTTPS除了 TCP 的三个包，还要加上SSL握手的消耗。\",\"用的端口也不一样，前者是 80，后者是 443。\",\"HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。\"]},\"636\":{\"h\":\"HTTPS的加密与认证过程？\"},\"637\":{\"h\":\"ClientHello\",\"t\":[\"首先，由客户端向服务端发起加密通信请求。客户端主要向服务端发送：\",\"客户端支持的 SSL/TLS协议版本\",\"客户端产生的的随机数(Client Random）\",\"客户端支持的密码套件列表\"]},\"638\":{\"h\":\"SeverHello\",\"t\":[\"服务器收到客户端请求后，向客户端发出响应。服务端回应的内容有：\",\"确认 SSL/ TLS 协议版本(如果浏览器不支持，则关闭加密通信）\",\"服务端生产的随机数(Server Random）\",\"确认的密码套件列表\",\"服务端的数字证书\"]},\"639\":{\"h\":\"客户端回应\",\"t\":[\"客户端收到服务端的回应之后，首先通过浏览器或者操作系统中的 CA 公钥，确认服务端的数字证书的真实性。如果证书没有问题，客户端会从数字证书中取出服务端的公钥，然后使用它加密报文，向服务端发送如下信息：\",\"一个随机数，该随机数会被服务端公钥加密\",\"加密通信算法改变通知，表示随后的信息都将用会话秘钥加密通信\",\"客户端握手结束通知，表示客户端的握手阶段已经结束\",\"之前所有内容的发生的数据做个摘要，用来供服务端校验\",\"服务端和客户端有了三个随机数，接着用双方协商的加密算法，各自生成本次通信的会话秘钥。\"]},\"640\":{\"h\":\"服务端回应\",\"t\":[\"服务端收到客户端的第三个随机数(pre-master key）之后，通过协商的加密算法，计算出本次通信的会话秘钥。服务端向客户端发送最后的信息：\",\"加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信\",\"服务端握手结束通知，表示服务端的握手阶段已经结束\",\"之前所有内容的发生的数据做个摘要，用来供客户端校验\",\"接下来，客户端与服务器进入加密通信，就完全是使用普通的 HTTP 协议。\"]},\"641\":{\"h\":\"HTTPS一定安全可靠吗？\",\"t\":[\"不安全是因为用户点击接受了中间人服务器的证书。中间人服务器与客户端在 TLS 握手过程中，实际上发送了自己伪造的证书给浏览器，而这个伪造的证书是能被浏览器(客户端）识别出是非法的，于是就会提醒用户该证书存在问题。如果用户点击「继续浏览此网站」，相当于用户接受了中间人伪造的证书，那么后续整个 HTTPS 通信都能被中间人监听了。\",\"HTTPS协议本身到目前为止还是没有任何漏洞的，即使你成功进行中间人攻击，本质上是利用了客户端的漏洞(用户点击继续访问或者被恶意导入伪造的根证书)，并不是HTTPS不够安全。\"]},\"642\":{\"h\":\"HTTP状态码的含义？\",\"t\":[\"100类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。\",\"100(继续)：请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。\",\"101(切换协议）：请求者已要求服务器切换协议，服务器已确认并准备切换。\",\"200类状态码表示服务器成功处理了客户端的请求。\",\"200(成功）：表示服务器响应成功，也就是服务器找到了客户端请求的内容，并且将内容返回给客户端。\",\"204(已创建）：请求成功并且服务器创建了新的资源。\",\"206(部分内容）：服务器成功处理了部分GET请求。\",\"300类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。\",\"301(永久移动）：代表永久性的重定向**，值得注意的是，这种重定向跳转，从严格意义来讲不是服务器跳转，而是客户端跳转**的。这个“跳”的动作是服务器是通过回传状态码301来下达给客户端的，让客户端完成跳转。\",\"302(临时移动）：代表临时跳转。例如：URL地址A可以向URL地址B上跳转，但这并不是永久性的，在经过一段时间后，URL地址A还可能向URL地址C上跳转。\",\"304(未修改）：服务器通过返回状态码304可以告诉客户端请求资源成功，但是这个资源不是由服务器提供返回给客户端的，而是客户端本地浏览器缓存中就有的这个资源，因为可以从缓存中获取这个资源，从而节省传输的开销。\",\"提示\",\"301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。\",\"400类状态码表示客户端发送的报文有误，服务器无法处理。\",\"400(错误请求）：服务器不理解请求的语法。\",\"403(禁止）：代表请求的服务器资源权限不够，也就是没有权限去访问服务器的资源，或者请求的IP地址被封掉了。\",\"404(未找到）：代表服务器上没有该资源，或者说服务器找不到客户端请求的资源，是最常见的请求错误码。\",\"500类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。\",\"500(服务器内部错误）：代表程序错误，也就是说请求的网页程序本身报错了。在服务器端的网页程序出错。由于现在的浏览器都会对状态码500做一定的处理，所以在一般情况下会返回一个定制的错误页面。\",\"501(尚未实施）：服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。\",\"502(错误网关）：通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。\",\"503(服务不可用）：表示服务器当前很忙，暂时无法响应客户端。。\",\"504(网关超时）：服务器作为网关或代理，但是没有及时从上游服务器收到请求。\",\"505(HTTP 版本不受支持）：服务器不支持请求中所用的 HTTP 协议版本。\"]},\"643\":{\"h\":\"HTTP缓存有哪些实现方式？\",\"t\":[\"强制缓存：强缓存指的是只要浏览器判断缓存没有过期，则直接使用浏览器的本地缓存，决定是否使用缓存的主动性在于浏览器这边。\",\"协商缓存：请求的响应码304，告诉浏览器可以使用本地缓存的资源，通过服务端告知客户端是否可以使用缓存的方式被称为协商缓存。\"]},\"644\":{\"h\":\"HTTP1.0、HTTP1.1、HTTP2.0和HTTP3.0的区别？\"},\"645\":{\"h\":\"HTTP1.0\",\"t\":[\"无连接：每次请求都要建立连接，需要使用 keep-alive 参数建立长连接，建立连接十分消耗资源。\",\"队头阻塞：HTTP1.0规定下一个请求必须在前一个请求响应到达之前才能发送，假设前一个请求响应一直不到达，那么下一个请求就不发送，后面的请求就阻塞了。\",\"缓存：在HTTP1.0中主要使用header里的协商缓存 last-modified\\\\if-modified-since，强缓存Expires来做为缓存判断的标准。\",\"提示\",\"If-Modified-Since，属附带条件之一，它会告知服务器若If-Modified-Since字段值早于资源的更新时间，则希望能处理该请求。而在指定If-Modified-Since字段值的日期时间之后，如果请求的资源都没有过更新，则返回状态码304 Not Modified的响应。If-Modified-Since用于确认代理或客户端拥有的本地资源的有效性。获取资源的更新日期时间，可通过确认首部字段Last-Modified来确定。\",\"Expires是RFC 2616(HTTP1.0）协议中和网页缓存相关字段。用来控制缓存的失效日期。Expires 字段声明了一个网页或 URL 地址不再被浏览器缓存的时间，一旦超过了这个时间，浏览器都应该联系原始服务器。RFC告诉我们：“由于推断的失效时间也许会降低语义透明度，应该被谨慎使用，同时我们鼓励原始服务器尽可能提供确切的失效时间。”\"]},\"646\":{\"h\":\"HTTP1.1\",\"t\":[\"长连接：好处在于减少了 TCP 连接的重复建立和断开所造成的额外开销，减轻了服务器端的负载。\",\"支持管道(pipeline）网络传输：只要第一个请求发出去了，不必等其回来，就可以发第二个请求出去，可以减少整体的响应时间。\",\"缓存处理：HTTP1.1则引入了更多的缓存控制策略，多可供选择的缓存头来控制缓存策略。\",\"断点续传：HTTP1.1则在请求头引入了range头域，它允许只请求资源的某个部分，即返回码是206(Partial Content），这样就方便了开发者自由的选择以便于充分利用带宽和连接。\"]},\"647\":{\"h\":\"HTTP2.0\",\"t\":[\"header压缩：HTTP1的header带有大量信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。\",\"多路复用：使用多路复用的技术，做到同一个连接并发处理多个请求，而且并发请求的数量比HTTP1.1大了好几个数量级。\",\"新的二进制帧格式：HTTP2.0把请求在应用层切分成二进制帧并标上序号，服务器接收到二进制帧后组装成请求进行处理，从而达到并发发送请求的效果，对于服务器端，响应可以通过序号确定是哪个请求，从而不会出现混乱的问题。\",\"服务器推送：HTTP2.0引入了server push，它允许服务端推送资源给浏览器，在浏览器明确地请求之前，免得客户端再次创建连接发送请求到服务器端获取。这样客户端可以直接从本地加载这些资源，不用再通过网络。\"]},\"648\":{\"h\":\"HTTP3.0(QUIC)\",\"t\":[\"HTTP/3.0直接放弃使用TCP，将传输层协议改成UDP，使用UDP实现可靠传输。\",\"0-RTT：缓存当前会话的上下文，下次恢复会话的时候，只需要将之前的缓存传递给服务器，验证通过，就可以进行传输了。(这是QUIC协议相比HTTP2.0的最大优势）\",\"多路复用：QUIC基于UDP，一个连接上的多个stream之间没有依赖，即使丢包，只需要重发丢失的包即可，不需要重传整个连接。\",\"更好的移动端表现：QUIC在移动端的表现比TCP好，因为TCP是基于IP识别连接，而QUIC是通过ID识别链接。无论网络环境如何变化，只要ID不便，就能迅速重新连上。\",\"加密认证的根文：TCP协议头没有经过任何加密和认证，在传输过程中很容易被中间网络设备篡改、注入和窃听。QUIC的packet除了个别报文，所有报文头部都是经过认证的，报文Body都是经过加密的。只要对 QUIC 做任何更改，接收端都能及时发现，有效地降低了安全风险。\",\"向前纠错机制：向前纠错(Foward Error Connec，FEC)，每个数据包除了它本身的内容之外还包括了其他数据包的数据，因此少量的丢包可以通过其他包的冗余数据直接组装而无需重传。向前纠错牺牲了每个数据包可以发送数据的上限，但是带来的提升大于丢包导致的数据重传，因为数据重传将会消耗更多的时间(包括确认数据包丢失，请求重传，等待新数据包等步骤的时间消耗)。\"]},\"649\":{\"h\":\"QUIC协议的概念和特点？\"},\"650\":{\"h\":\"概念\",\"t\":[\"HTTP/3 基于UDP 协议在应用层实现了 QUIC 协议，具有类似 TCP 的连接管理、拥塞窗口、流量控制的网络特性，让UDP协议变得可靠。\"]},\"651\":{\"h\":\"特点\",\"t\":[\"无队头阻塞\",\"QUIC 协议有类似 HTTP/2 Stream 与多路复用的概念，可以在同一条连接上并发传输多个 Stream。UDP 不关心数据包的顺序，也不关心是否丢包。UDP将每个数据包都有一个序号唯一标识。当某个流中的一个数据包丢失了，该流的其他数据包到达了，数据也无法被 HTTP/3 读取，QUIC 重传丢失的报文之后数据才会交给 HTTP/3。而其他流的数据报文只要被完整接收，HTTP/3 就可以读取到数据。QUIC 连接上的多个 Stream 之间并没有依赖，都是独立的，某个流发生丢包了，只会影响该流，其他流不受影响。\",\"快速连接建立\",\"对于 HTTP/1 和 HTTP/2 协议，TCP 和 TLS 是分层的，分别属于内核实现的传输层、openssl 库实现的表示层，需要分批次来握手，先 TCP 握手，再 TLS 握手。\",\"HTTP/3 在传输数据前虽然需要 QUIC 协议握手，这个握手过程只需要 1 RTT，握手的目的是为确认双方的「连接 ID」，连接迁移就是基于连接 ID 实现的。\",\"HTTP/3 的 QUIC 协议不与 TLS 分层，QUIC 内部包含了 TLS，它在自己的帧会携带 TLS 记录，只需 1 个 RTT 就可以完成建立连接与密钥协商。在第二次连接的时候，应用数据包可以和 QUIC 握手信息(连接信息 + TLS 信息）一起发送。\",\"连接迁移\",\"QUIC 协议没有用四元组的方式来绑定连接，而是通过连接 ID来标记通信的两个端点，客户端和服务器可以各自选择一组 ID 来标记自己，因此即使移动设备的网络变化后，导致 IP 地址变化了，只要仍保有上下文信息(比如连接 ID、TLS 密钥等），就可以复用原连接，消除重连的成本，达到了连接迁移的功能。\"]},\"652\":{\"h\":\"QUIC如何保证可靠传输？\",\"t\":[\"Packet Header：分为Long Packet Header用于首次建立连接、和Short Packet Header用于日常传输数据。QUIC也是需要三次握手来建立连接的，目的是为了协商连接ID。协商出连接ID后，后续传输时，双方只需要固定住连接 ID，从而实现连接迁移功能。Short Packet Header 中的 Packet Number 每个报文有独一无二的编号，并且严格递增。单调递增的设计，可以让数据包不再像 TCP 那样必须有序确认，当数据包Packet N 丢失后，只要有新的已接收数据包确认，当前窗口就会继续向右滑动，从而解决了队头阻塞的问题。\",\"QUIC Frame Header：一个 Packet 报文中可以存放多个 QUIC Frame。用于传输的Stream Frame有Stream ID、Offset和length字段，Stream ID用于多个并发传输的 HTTP 消息，通过不同的 Stream ID 加以区别、Offset字段类似于 TCP 协议中的 Seq 序号，保证数据的顺序性和可靠性；Length标识了 Frame 数据的长度。如果发生丢包了进行重传，通过比较两个数据包的Stream ID 与 Stream Offset，如果都是一致，就说明这两个数据包的内容一致。\",\"所以，QUIC 通过单向递增的 Packet Number，配合 Stream ID 与 Offset 字段信息，可以支持乱序确认而不影响数据包的正确组装，摆脱了TCP必须按顺序确认的限制。\"]},\"653\":{\"h\":\"HTTP的GET和POST方法区别？\",\"t\":[\"GET一般用来从服务器上获取资源，POST一般用来更新服务器上的资源。\",\"GET是幂等的，即读取同一个资源总是得到相同的数据，而POST不是幂等的，因为每次请求对资源的改变并不是相同的。\",\"GET不会改变服务器上的资源，而POST会对服务器资源进行改变。\",\"GET请求的数据会附在URL之后，即将请求数据放置在HTTP报文的请求头中，以?分割URL和传输数据，参数之间以&相连；而POST请求会把提交的数据则放置在是HTTP请求报文的请求体中。\",\"POST的安全性要比GET的安全性高，因为GET请求提交的数据将明文出现在URL上，而且POST请求参数则被包装到请求体中，相对更安全。\",\"从请求的大小看，GET请求的长度受限于浏览器或服务器对URL长度的限制，允许发送的数据量比较小，而POST请求则是没有大小限制的。\"]},\"654\":{\"h\":\"GET请求可以带body吗？\",\"t\":[\"RFC规范并没有规定GET请求不能带 body 的。任何请求都可以带 body 的。 GET 请求是获取资源，所以根据这个语义不需要用到 body。URL 中的查询参数也不是 GET 所独有的，POST 请求的 URL 中也可以有参数的。\"]},\"655\":{\"h\":\"既然有HTTP协议，为什么还要有RPC？\",\"t\":[\"定义：TCP是传输层的协议，基于TCP造出来的HTTP和各类RPC协议，它们都只是定义了不同消息格式的应用层协议而已。HTTP协议是超文本传输协议。RPC是远程过程调用。它不是一个具体的协议，而是一种调用方式。虽然大部分RPC协议底层使用TCP，但实际上它们不一定非要用TCP，改用UDP或者HTTP。HTTP主要用于b/s架构，而RPC更多用于c/s架构。\",\"服务发现：HTTP中知道服务的域名，就可以通过DNS服务去解析得到IP地址，默认80端口。RPC一般会有专门的中间服务去保存服务名和IP信息，比如consul或者etcd，或者是redis。想要访问某个服务，就去这些中间服务去获得IP和端口信息。由于dns也是服务发现的一种，所以也有基于dns去做服务发现的组件，比如CoreDNS。\",\"底层连接方式：HTTP协议默认在建立底层TCP连接之后会一直保持这个连接(keep alive），之后的请求和响应都会复用这条连接。RPC协议也是通过建立TCP长链接进行数据交互，但RPC协议一般还会再建个连接池，在请求量大的时候，建立多条连接放在池内，要发数据的时候就从池里取一条连接出来，用完放回去便于下次再复用。\",\"传输的内容：HTTP设计初是用于做网页文本展示的，传的内容以字符串为主，有header和body。在body这块，它使用json来序列化结构体数据，内容会有冗余。RPC因为定制化程度更高，可以采用体积更小的protobuf或其他序列化协议去保存结构体数据，同时也不需要像HTTP那样考虑各种浏览器行为，比如302重定向。因此性能也会更好一些，这也是在公司内部微服务中抛弃HTTP，选择使用RPC的最主要原因。\",\"历史包袱：RPC其实比HTTP出现的要早，且比目前主流的HTTP1.1性能要更好，所以大部分公司内部都还在使用RPC。HTTP2.0在HTTP1.1的基础上做了优化，性能可能比很多RPC协议都要好，但由于是这几年才出来的，所以也不太可能取代掉RPC。\"]},\"656\":{\"h\":\"什么是XSS攻击？有什么解决办法？\",\"t\":[\"XSS是指恶意攻击者利用网站没有对用户提交数据进行转义处理或者过滤不足的缺点，进而添加一些脚本代码嵌入到web页面中去，使别的用户访问都会执行相应的嵌入代码，从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。\"]},\"657\":{\"h\":\"分类\",\"t\":[\"反射性XSS攻击(非持久性XSS攻击）：漏洞产生的原因是攻击者注入的数据反映在响应中。\",\"持久性XSS攻击 (留言板场景)：指XSS攻击代码存储在网站数据库，每当用户使用浏览器打开指定页面时，脚本就执行。与非持久性XSS攻击相比，持久性XSS攻击危害性更大。\"]},\"658\":{\"h\":\"危害\",\"t\":[\"盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号\",\"控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力\",\"盗窃企业重要的具有商业价值的资料\",\"非法转账\",\"强制发送电子邮件\",\"网站挂马\",\"控制受害者机器向其它网站发起攻击\"]},\"659\":{\"h\":\"防范\",\"t\":[\"漏洞产生的根本原因是太相信用户提交的数据，对用户所提交的数据过滤不足所导致的，解决方案也应该从这个方面入手：\",\"将重要的cookie标记为http only：Javascript中的document.cookie语句就不能获取到cookie了(如果在cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击）\",\"表单数据规定值的类型：例如：年龄应为只能为int、name只能为字母数字组合\",\"对数据进行HTML编码处理\",\"过滤或移除特殊的HTML标签：例如:\",\"<script> , <iframe> , < for < , > for> \",\"过滤JavaScript事件的标签：例如 \\\"onclick=\\\", \\\"onfocus=\\\"\"]},\"660\":{\"h\":\"什么是CSRF攻击？有什么解决办法？\"},\"661\":{\"h\":\"概念\",\"t\":[\"CSRF就是跨站请求伪造。\",\"登录受信任网站A，并在本地生成Cookie(如果用户没有登录网站A，那么网站B在诱导的时候，请求网站A的api接口时，会提示你登录）\",\"在不登出A的情况下，访问危险网站B(其实是利用了网站A的漏洞）\"]},\"662\":{\"h\":\"防范\",\"t\":[\"Token验证\",\"服务器发送给客户端一个token，客户端提交的表单中带着这个token，如果这个 token 不合法，那么服务器拒绝这个请求。\",\"隐藏令牌\",\"把token隐藏在http的head头中。\",\"Referer验证\",\"只接受本站的请求，服务器才做响应；如果不是，就拦截。\"]},\"663\":{\"h\":\"中间人攻击以及如何防范？\"},\"664\":{\"h\":\"概念\",\"t\":[\"指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。\",\"嗅探：嗅探或数据包嗅探 是一种用于捕获流进和流出系统/网络的数据包的技术。网络中的数据包嗅探就好像电话中的监听。\",\"数据包注入：攻击者会将恶意数据包注入常规数据中。这样用户便不会注意到文件/恶意软件，因为它们是合法通讯流的一部分。在中间人攻击和拒绝式攻击中，这些文件是很常见的。\",\"会话劫持：当客户端和服务器端在进行一个会话时，会话中包含了很多重要信息，一些黑客会潜伏在这个会话中，最终控制这个会话，这既是会话劫持。\",\"SSL剥离：SSL/TLS证书通过加密保护着的通讯安全。在SSL剥离攻击中，攻击者使SSL/TLS连接剥落，随之协议便从安全的HTTPS变成了不安全的HTTP。\"]},\"665\":{\"h\":\"防范\",\"t\":[\"使用HTTPS协议，禁用不安全的SSL协议，启用虚拟专用网(VPN)，\",\"通过 HTTPS 双向认证来避免这种问题：一般 HTTPS 是单向认证，客户端只会验证了服务端的身份，但是服务端并不会验证客户端的身份。如果用了双向认证方式，不仅客户端会验证服务端的身份，而且服务端也会验证客户端的身份。服务端一旦验证到请求自己的客户端为不可信任的，服务端就拒绝继续通信，客户端如果发现服务端为不可信任的，那么也中止通信。\"]},\"666\":{\"h\":\"IP面试常见题\"},\"667\":{\"h\":\"DNS查询服务器的基本流程？\",\"t\":[\"客户机向其本地域名服务器发出DNS请求报文\",\"本地域名服务器收到请求后，查询本地缓存，假设没有该记录，则以DNS客户的身份向根域名服务器发出解析请求\",\"根域名服务器收到请求后，判断该域名所属域，将对应的顶级域名服务器的IP地址返回给本地域名服务器\",\"本地域名服务器向顶级域名服务器发出解析请求报文\",\"顶级域名服务器收到请求后，将所对应的授权域名服务器的IP地址返回给本地域名服务器\",\"本地域名服务器向授权域名服务器发起解析请求报文\",\"授权域名服务器收到请求后，将查询结果返回给本地域名服务器\",\"本地域名服务器将查询结果保存到本地缓存，同时返回给客户机\",\". —- .com —– qq.com —– www.qq.com –ip给客户机。\",\"如果是转发模式，则与上一步骤相反，从下往上找。www.qq.com => qq.com => .com => .\"]},\"668\":{\"h\":\"DNS采用TCP还是UDP，为什么？\",\"t\":[\"DNS在进行区域传输的时候使用TCP协议，其它时候则使用UDP协议。TCP与UDP传送字节的长度限制不同，一般情况下一个DNS的UDP包的最大长度是512字节。\",\"区域传输使用TCP协议的原因大概是：\",\"区域传输的数据量相比单次DNS查询的数据量要大得多\",\"区域传输对数据的可靠性和准确性相比普通的DNS查询要要高得多，因此使用TCP协议\",\"域名解析时一般返回的内容都不超过512字节，首选的通讯协议是UDP。使用UDP传输，不用经过TCP三次握手，这样DNS服务器负载更低，响应更快。\"]},\"669\":{\"h\":\"DNS劫持是什么？解决办法？\"},\"670\":{\"h\":\"概念\",\"t\":[\"DNS重定向，通过覆盖计算机的TCP/IP设置，将个人查询重定向到域名服务器DNS。这可以通过使用恶意软件或修改服务器的设置来实现，一旦执行DNS劫持的个人控制了DNS，他们就可以使用它来将流量引导到不同的网站。\",\"本地DNS劫持\",\"攻击者在用户的计算机上安装木马恶意软件，并更改本地DNS设置以将用户重定向到恶意站点。\",\"路由器DNS劫持\",\"攻击者接管路由器并覆盖DNS设置，从而影响连接到该路由器的所有用户。\",\"中间DNS攻击的人\",\"攻击者拦截用户和DNS服务器之间的通信，并提供指向恶意站点的不同目标IP地址。\"]},\"671\":{\"h\":\"解决方法\",\"t\":[\"加强域名账户的安全防护能力，使用有别于其他平台的用户名和强密码，定期对密码进行更换。\",\"定期查看域名账户信息、域名whois信息、域名解析状态，每天site网站检查是否存在非个人设定网页，发现异常及时联系域名服务商。\",\"锁定域名解析状态，不允许通过DNS服务商网站修改记录，使用此方法后，需要做域名解析都要通过服务商来完成，这样可以从根本上杜绝通过攻击服务商修改解析记录的方法。\"]},\"672\":{\"h\":\"浏览器输入一个URL到显示器显示的过程？\",\"t\":[\"键盘输入\",\"输入键盘字符后键盘就会产生扫描数据，并将其缓冲存在寄存器中，然后键盘通过总线给 CPU 发送中断请求。CPU 收到中断请求后，操作系统会保存被中断进程的 CPU 上下文，然后调用键盘的中断处理程序。键盘中断处理函数从键盘的寄存器的缓冲区读取扫描码，再根据扫描码找到用户在键盘输入的字符的ASCII 码。然后把 ASCII 码放到读缓冲区队列，显示器会定时从读缓冲区队列读取数据放到写缓冲区队列，最后把写缓冲区队列的数据一个一个写入到显示器的寄存器中的数据缓冲区，最后将这些数据显示在屏幕里。\",\"URL解析\",\"浏览器会首先从缓存中找是否存在域名，如果存在就直接取出对应的ip地址，如果没有就开启一个DNS域名解析器。DNS域名解析器会首先访问顶级域名服务器，将对应的IP发给客户端；然后访问根域名解析器，将对应的IP发给客户端；最后访问本地域名服务器，得到最终的ip地址。\",\"TCP连接\",\"在URL解析过程中得到真实的IP地址之后，会调用Socket函数建立TCP连接。\",\"HTTP请求\",\"浏览器向服务器发起一个 HTTP请求，HTTP协议是建立在TCP协议之上的应用层协议，其本质是建立起的 TCP连接中，按照 HTTP协议标准发送一个索要网页的请求。请求包含请求行、请求头、请求体三个部分组成，有GET、POST等主要方法。\",\"浏览器接收响应\",\"服务器在收到浏览器发送的HTTP请求之后，会将收到的HTTP报文封装成HTTP的Request对象，并通过不同的Web服务器进行处理，处理完的结果以HTTP的Response对象返回，主要包括状态码，响应头，响应报文三个部分。\",\"页面渲染\",\"浏览器根据响应开始显示页面，首先解析 HTML文件构建DOM树，然后解析CSS文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。\",\"断开连接\",\"客户端和服务器通过四次挥手终止TCP连接。\"]},\"673\":{\"h\":\"PING是怎么工作的？\",\"t\":[\"提示\",\"ICMP主要的功能包括：确认IP包是否成功送达目标地址、报告发送过程中IP包被废弃的原因、改善网络设置等。在IP通信中如果某个IP包因为某种原因未能达到目标地址，具体的原因将由ICMP通知。\",\"ping命令执行的时候，源主机首先会构建一个ICMP回送请求消息数据包，由ICMP协议将这个数据包连同服务端IP一起交给IP层，IP层将以服务端IP作为目的地址，本机IP地址作为源地址，协议字段设置为1，再加上一些其他控制信息，构建一个IP数据包；然后加入MAC头；如果在本地ARP映射表中查找出服务端IP所对应的MAC地址，则可以直接使用，如果没有，则需要发送ARP协议查询MAC地址。获得MAC地址后，由数据链路层构建一个数据帧，目的地址是IP层传过来的MAC地址，源地址则是本机的MAC地址；还要附加上一些控制信息，依据以太网的介质访问规则将它们传送出去。\",\"目的收到这个数据帧后，先检查它的目的MAC地址，并和本机的MAC地址对比，如符合，则接收，否则就丢弃。接收后检查该数据帧，将IP数据包从帧中提取出来，交给本机的IP层。IP层检查后，将有用的信息提取后交给ICMP协议。主机B会构建一个ICMP回送响应消息数据包，回送响应数据包的类型字段为0，序号为接收到的请求数据包中的序号，然后再发送出去给主机A。\",\"在规定的时候间内，源主机如果没有接到ICMP的应答包，则说明目标主机不可达；如果接收到了ICMP回送响应消息，则说明目标主机可达。\"]},\"674\":{\"h\":\"Cookie和Session的关系和区别是什么？\"},\"675\":{\"h\":\"Cookie\",\"t\":[\"概念\",\"Cookie是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务器两个请求是否来自同一浏览器。\",\"如保持用户的登录状态，Cookie 使基于无状态的 HTTP 协议记录稳定的状态信息成为了可能。\",\"作用\",\"会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）\",\"个性化设置（如用户自定义设置、主题等）\",\"浏览器行为跟踪（如跟踪分析用户行为等）\"]},\"676\":{\"h\":\"Session\",\"t\":[\"Session代表着服务器和客户端一次会话的过程。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当客户端关闭会话，或者 Session 超时失效时会话结束。\"]},\"677\":{\"h\":\"差别\",\"t\":[\"作用范围不同：Cookie 保存在客户端（浏览器），Session 保存在服务端\",\"存取方式的不同：Cookie 只能保存 ASCII，Session 可以存任意数据类型\",\"有效期不同：Cookie 可设置为长时间保持，比如经常使用的默认登录功能，Session 一般失效时间较短，客户端关闭或者 Session 超时都会失效\",\"隐私策略不同：Cookie 存储在客户端，比较容易遭到不法获取；Session 存储在服务端，安全性相对 Cookie 要好一些\",\"存储大小不同：单个 Cookie 保存的数据不能超过 4K，Session 可存储数据远高于 Cookie\"]},\"678\":{\"h\":\"iPv4和iPv6的区别？\",\"t\":[\"IPv6的首部长度是40个字节，相对IPv4的首部长度24字节要长，但IPv6首部结构比IPv4简单。\",\"IPv6 把 IP 地址由 32 位增加到 128 位，从而能够支持更大的地址空间。IPv6 简化了路由， 加快了路由速度。\",\"IPv6 的可选项不放入报头，而是放在一个个独立的扩展头部。如果不指定路由器不会打开处理扩展头部， IPv6 放宽了对可选项长度的严格要求 (IPv4 的可选项总长最多为 40 字节) ，并可根据需要随时引入新选项。\",\"IPv6协议支持地址自动配置，这是一种即插即用的机制。IPv6节点通过地址自动配置得到IPv6地址和网关地址。IPv6支持无状态地址自动配置和状态地址自动配置两种地址自动配置方式。它会给配置128位的地址带来很大的方便，特别是无状态地址自动配置。\",\"在IPv6 中加入了关于身份验证、数据一致性和保密性的内容。\"]},\"679\":{\"h\":\"什么是跨域，什么情况下会发生跨域请求？\"},\"680\":{\"h\":\"概念\",\"t\":[\"指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的。a页面想获取b页面资源，如果a、b页面的协议、域名、端口、子域名不同，所进行的访问行动都是跨域的，而浏览器为了安全问题一般都限制了跨域访问，也就是不允许跨域请求资源。\"]},\"681\":{\"h\":\"解决方法\",\"t\":[\"Nginx：使用Nginx作为代理服务器和用户交互，用户就只需要在80端口上进行交互就可以了，这样就避免了跨域问题。\",\"JSONP：网页通过添加一个script元素，向服务器请求 JSON 数据，服务器收到请求后，将数据放在一个指定名字的回调函数的参数位置传回来。缺点是只支持get请求，不支持post请求。\",\"CORS：跨域资源分享。\"]},\"682\":{\"h\":\"概述\"},\"683\":{\"h\":\"OSI的7层网络模型？\",\"t\":[\"分为应用层、表示层、会话层、运输层、网络层、链路层、物理层。\",\"应用层(数据)：确定进程之间通信的性质以及满足用户需要以及提供网络和用户应用，为应用程序提供服务，DNS，HTTP，HTTPS，DHCP，FTP，POP3(Post Office Protocol)、SMTP(Simple Mail Transfer Protocol)都是这层的协议。\",\"表示层(数据)：主要解决用户信息的语法表示问题，表示层提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别，如数据转换，压缩和加密，解密。\",\"会话层(数据)：会话层就是负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成。 比如服务器验证用户登录就是在会话层。\",\"传输层(段)：实现网络不同主机上的用户进程之间的数据通信，可靠与不可靠的传输，传输层的错误检测，流量控制，拥塞控制。TCP UDP就这层。\",\"网络层(包)：本层通过IP寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层。IP就是这层。\",\"数据链路层(帧)：将上层数据封装成帧，用MAC地址访问媒介，并由错误检测和修正\",\"物理层(比特流)：设备之间比特流的传输，物理接口，电气特性(常用设备有(各种物理设备)集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质。)\"]},\"684\":{\"h\":\"TCP/IP的四层网络模型？\",\"t\":[\"TCP四层模型是我们实践过程中发现比较合理的分层，虽然我们实际过程中都没有按OSI分为七层，但是OSI对我们实践过程分层有着指导性的意义。\"]},\"685\":{\"h\":\"五层因特网协议栈？\",\"t\":[\"应用层、运输层、网络层、链路层、物理层。\"]},\"686\":{\"h\":\"TCP与UDP面试常见题\"},\"687\":{\"h\":\"TCP的头部结构？\",\"t\":[\"源端口：16位，标识报文的返回地址。\",\"目的端口：16位，指明接收方计算机上的应用程序接口。\",\"序列号：32位，在建立连接时由计算机生成的随机数作为其初始值，通过 SYN 包传给接收端主机，每发送一次数据，就累加一次该数据字节数的大小。用来解决网络包乱序问题。\",\"确认号：32位，指下一次期望收到的数据的序列号，发送端收到这个确认应答以后可以认为在这个序号以前的数据都已经被正常接收。用来解决丢包的问题。\",\"数据偏移／首部长度：4位，TCP首部可能含有可选项内容，所以TCP报头的长度是不确定的，报头不包含任何任选字段则长度为20字节，4位首部长度字段所能表示最大长度为60字节。首部长度也叫数据偏移，因为首部长度实际上指示了数据区在报文段中的起始偏移值。\",\"保留：6位，为将来定义新的用途保留，现在一般置0。\",\"校验和：16位，由发送端填充，接收端对TCP报文段执行CRC算法以检验TCP报文段在传输过程中是否损坏，这个校验不仅包括TCP头部，也包括数据部分。这是TCP实现可靠传输的一个重要保障。\",\"窗口：16位，是TCP流量控制的一个手段。通过窗口告诉对方本端的TCP接收缓冲区还能容纳多少字节的数据，这样对方可以控制发送数据的速度，从而达到流量控制。窗口大小为16bit字段，因而窗口大小最大为65535。\",\"紧急指针：16位，只有当 URG 标志置 1 时紧急指针才有效。紧急指针是一个正的偏移量，和顺序号字段中的值相加表示紧急数据最后一个字节的序号。使用紧急指针是发送端向另一端发送紧急数据的一种方式。\",\"选项和填充：TCP头部的最后一个选项字段是可变长的可选信息。这部分最多包含40字节，因为TCP头部最长是60字节。 最常见的可选字段是最长报文大小MSS，每个连接方通常都在通信的第一个报文段中指明这个选项，它表示本端所能接受的最大报文段的长度。\",\"数据部分：TCP 报文段中的数据部分是可选的。在连接建立或者终止时，双方交换的报文段仅有 TCP 首部；如果一方没有数据要发送，也会使用没有任何数据的首部来确认收到的数据；在处理超时的许多情况中，也会发送不带任何数据的报文段。\",\"还包括控制位：\",\"URG：紧急指针标志，为1时表示紧急指针有效，该报文应该优先传送，为0则忽略紧急指针。\",\"ACK：确认序号标志，为1时表示确认号有效，为0表示报文中不含确认信息。携带ACK标识的TCP报文段被称为确认报文段。\",\"RST：重置连接标志，用于重置由于主机崩溃或其他原因而出现错误的连接，或者用于拒绝非法的报文段和拒绝连接请求。称携带RST标志的TCP报文段为复位报文段。\",\"SYN：表示请求建立一个连接。称携带SYN标志的TCP报文段为同步报文段。\",\"FIN：finish标志，用于释放连接，为1时表示发送方已经没有数据发送了，即关闭本方数据流。称携带FIN标志的TCP报文段为结束报文段。\",\"PSH：push标志，为1表示是带有push标志的数据，指示接收方在接收到该报文段以后，应优先将这个报文段交给应用程序，而不是在缓冲区排队。\"]},\"688\":{\"h\":\"TCP如何保证可靠传输?\"},\"689\":{\"h\":\"校验和\",\"t\":[\"TCP是端到端的传输，由发送方计算校验和，接收方进行验证，目的是为了验证TCP首部和数据在发送过程中没有任何改动，一旦发现校验和有差错，直接丢弃TCP段并重新发送。\"]},\"690\":{\"h\":\"序列号/确认应答\",\"t\":[\"TCP传输时发送方对每一个发送的消息都会编号，也就是序列号seq。接收方在每次接收到消息后回复确认应答号ACK，不仅告诉接收到哪些数据，还包括下一次消息从哪里发送。只要发送方没有接收到确认应答号ACK，都会重新发送数据。\"]},\"691\":{\"h\":\"超时重传\",\"t\":[\"发送方发送完数据后会等待一定的时间，如果在这个时间内没有接收到ACK，就会重传数据。如果是发送方发生了丢包，那么接收方在接收到数据后会回复ACK，如果是接收方回复的ACK丢失了导致的重传，那么根据校验和和序列号知道该数据已经接收，丢弃该数据并发送ACK。\"]},\"692\":{\"h\":\"连接管理\",\"t\":[\"三次握手和四次挥手得以实现。\"]},\"693\":{\"h\":\"流量控制（滑动窗口控制）\",\"t\":[\"发送方发送数据的快慢取决于接收方接收能力。TCP的报文信息中有一个16位字段来标识滑动窗口，窗口大小就是接收方剩余缓冲区大小，在回复ACK时，接收方将自己剩余缓冲区大小填入。发送方根据窗口大小来调整自己的发送速度，如果缓冲区大小为0，那么发送方会停止发送数据。并且发送方定期会发送探测报文，来获取缓冲区大小。\"]},\"694\":{\"h\":\"快速重传\",\"t\":[\"当接收端收到比期望号大的seq时候，就会发送冗余ACK，在超时重传之前如果收到三个相同的冗余ACK，那么就知道哪段报文发生了丢包，重传该段报文即可，避免了超时重传。\"]},\"695\":{\"h\":\"拥塞控制\",\"t\":[\"网络可能刚开始很拥塞，如果在网络传输过程中开始就发送大量数据的话，会发生丢包和超时重传，所以需要慢启动算法、拥塞避免算法、快速重传和快速恢复。\",\"慢启动算法\",\"一开始不发送大量数据，而是应该先发一小部分探测数据，然后由小到大逐渐增大发送窗口。通常在刚刚开始发送报文段时，先把拥塞窗口 cwnd 设置为1，每次接收到报文之后将窗口大小翻倍。如果指数增长到避免拥塞算法的门限ssthresh，则改用避免拥塞算法。\",\"初始化设置 cwnd = 1，并开始传输数据\",\"收到回馈的 ACK，会将 cwnd 加 1\",\"当发送端一个 RTT 后且未发现有丢包重传，就会将 cwnd = cwnd * 2\",\"当 cwnd >= ssthresh 或发生丢包重传时慢启动结束，进入拥塞避免状态\"]},\"696\":{\"h\":\"避免拥塞算法\",\"t\":[\"每当收到一个 ACK 时，cwnd 增加 1/cwnd，变为线性增长。一但发现丢包和超时重传，就进入拥塞处理状态。\"]},\"697\":{\"h\":\"拥塞发生\",\"t\":[\"当网络出现拥塞，也就是会发生数据包重传，重传机制主要有两种：超时重传和快速重传。\",\"ssthresh 和 cwnd 的值会发生变化\",\"ssthresh 设为 cwnd/2\",\"cwnd 重置为 1\",\"发送三次前一个包的 ACK，于是发送端就会快速地重传，不必等待超时再重传。TCP 认为这种情况不严重，因为大部分没丢，只丢了一小部分，则 ssthresh 和 cwnd 变化如下：\",\"cwnd = cwnd/2 ，也就是设置为原来的一半\",\"ssthresh = cwnd\",\"进入快速恢复算法\"]},\"698\":{\"h\":\"快速恢复\",\"t\":[\"拥塞窗口 cwnd = ssthresh + 3 （ 3 的意思是确认有 3 个数据包被收到了）\",\"重传丢失的数据包\",\"如果再收到重复的 ACK，那么 cwnd 增加 1\",\"如果收到新数据的 ACK 后，把 cwnd 设置为第一步中的 ssthresh 的值，原因是该 ACK 确认了新的数据，说明从 duplicated ACK 时的数据都已收到，该恢复过程已经结束，可以回到恢复之前的状态了，也即再次进入拥塞避免状态\"]},\"699\":{\"h\":\"TCP的三次握手？\",\"t\":[\"第一次握手\",\"客户端请求建立连接，将首部的SYN标识位置为1，初始化序列号seq=x，发送给服务器，并进入SYN_SENT状态，等待服务器确认。\",\"第二次握手\",\"服务器接收到SYN后，将首部的SYN和ACK标识位置为1，回复确认ack的值为客户端发送的序列号x+1，同时自己也要初始化一个seq=y，ACK和SYN一起发送客户端，进入SYN_RECV状态。\",\"第三次握手\",\"客户端收到服务器的SYN和ACK包后，向服务器发送确认包ack，值为服务器的序列号y+1，并且自己的seq为x+1，此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态。\"]},\"700\":{\"h\":\"TCP为什么要三次握手？\",\"t\":[\"只有三次握手才能证明服务端和客户端的收发能力都是正常的。\",\"第一次握手：客户端发数据服务端接收，服务端可以知道客户端发消息的能力是正常的，自己接收消息的能力是正常的。\",\"第二次握手：服务端发消息客户端收，客户端可以知道自己发送接收消息的能力和服务端发送接收消息的能力是正常的。\",\"第三次握手：客户端再发送消息服务端接收，服务端可以知道自己发送消息的能力是正常的，客户端接收消息的能力是正常的。\",\"由此经过三次握手之后双方就可以都知道自己的发送和接收消息的能力是正常的。\"]},\"701\":{\"h\":\"TCP的三次握手丢了？\",\"t\":[\"提示\",\"在TCP通信连接的过程中，ACK报文发生了丢包是不会重传的，ACK 丢失是由对方重传对应的报文。\",\"第一次丢失：客户端发送的SYN报文会收不到服务端的响应，从而会触发超时重传，重传的SYN报文序列号和之前相同，重传最大重传次数由内核参数控制，一般是5。如果超过最大次数客户端仍没有收到回复就会断开连接。\",\"第二次丢失：服务端在收到客户端的报文之后会回复SYN+ACK报文，如果第二次握手丢失了客户端会认为自己丢包了，触发超时重传，重新发送SYN报文，服务端因为收不到确认的ACK自身也会重传。\",\"第三次丢失：客户端收到服务端的 SYN-ACK 报文后会给服务端回一个 ACK 报文，此时客户端状态进入到 ESTABLISH 状态。如果发生了丢包，服务端收不到ACK会触发超时重传机制，重传 SYN-ACK 报文，直到收到确认ACK或者达到最大重传次数。\"]},\"702\":{\"h\":\"TCP为什么不是两次握手？\"},\"703\":{\"h\":\"避免历史连接\",\"t\":[\"首要原因是为了防止旧的重复连接初始化造成混乱。\",\"如果使用的是两次握手建立连接，可能客户端发送的第一个请求连接并且没有丢失，只是因为在网络中滞留的时间太长了，由于TCP的客户端迟迟没有收到确认报文，以为服务器没有收到，此时重新向服务器发送这条报文，此后客户端和服务器经过两次握手完成连接，传输数据，然后关闭连接。之前滞留的那一次请求连接，因为网络通畅了，到达了服务器，这个报文本该是失效的，但是，两次握手的机制将会让客户端和服务器再次建立连接，这将导致不必要的错误和资源的浪费。\",\"如果采用的是三次握手，就算是那一次失效的报文传送过来了，服务端接受到了那条失效报文并且回复了确认报文，但是客户端不会再次发出确认。由于服务器收不到确认，就知道客户端并没有请求连接。\"]},\"704\":{\"h\":\"同步双方初始序列号\",\"t\":[\"为了实现可靠数据传输，TCP协议的通信双方，都必须维护一个序列号，以标识发送出去的数据包中，哪些是已经被对方收到的。 三次握手的过程即是通信双方相互告知序列号起始值，并确认对方已经收到了序列号起始值的必经步骤。如果只是两次握手，至多只有连接发起方的起始序列号能被确认，另一方选择的序列号则得不到确认。\"]},\"705\":{\"h\":\"TCP的四次挥手？\",\"t\":[\"第一次挥手\",\"客户端发送释放报文，并停止发送数据，将首部的FIN标识位置为1，序列号seq=u发送给服务器，值等于前面已经传送过来的数据的最后一个字节的序号加1，此时客户端进入FIN_WAIT_1状态。即便FIN报文不携带数据，也要消耗一个序列号。\",\"第二次挥手\",\"服务器在收到释放报文后，发送确认报文，ACK标识位置为1，ack值为客户端发送的序列号u+1，并带上自己的序列号v，然后服务器进入CLOSE_WAIT关闭等待状态。这时服务器TCP通知高级应用进程，客户端向服务器的连接释放了，进入半关闭状态，但是服务器如果向客户端发送数据，客户端仍然可以接收，这个状态要持续一段时间，也就是CLOSE_WAIT关闭等待持续的时间。\",\"客户端收到服务器的确认请求后，进入FIN_WAIT_2状态，等待服务器发送释放报文。\",\"第三次挥手\",\"服务器数据处理完毕后，向客户端发送释放连接报文，FIN标识位置为1，ack的值为客户端的序列号u+1，由于在半关闭状态，服务器很可能又发送一些数据，假定此时序列号为w，服务器进入LAST_ACK状态，等待客户端确认。\",\"第四次挥手\",\"客户端在收到服务器的释放连接报文后，会发送确认报文，ACK标识位置为1，ack值为服务器发送的序列号w+1，\",\"自己的序列号是u+1，然后客户端就进入TIME_WAIT状态。此时TCP连接还没有释放，必须经过两个MSL时间（一个MSL指的是报文段最长寿命），当客户端撤销TCB，才进入CLOSED状态。\",\"服务器只要收到客户端发送的确认请求，立即进入CLOSED状态。同时会撤销TCB，TCP连接至此结束。\"]},\"706\":{\"h\":\"TCP为什么要四次挥手？\",\"t\":[\"关闭连接时，客户端向服务端发送 FIN时，仅仅表示客户端不再发送数据了但是还能接收数据。\",\"服务端收到客户端的FIN报文时，先回一个 ACK 应答报文，而服务端可能还有数据需要处理和发送，等服务端不再发送数据时，才发送 FIN 报文给客户端来表示同意现在关闭连接。\"]},\"707\":{\"h\":\"在FIN_WAIT_2状态下，是如何处理收到的乱序到 FIN 报文，然后TCP连接又是什么时候才进入到TIME_WAIT状态？\",\"t\":[\"在FIN_WAIT_2状态时，如果收到乱序的FIN报文会加入到乱序队列，并不会进入到TIME_WAIT状态。等再次收到前面被网络延迟的数据包时，会判断乱序队列有没有数据，检测乱序队列中是否有可用的数据，如果能在乱序队列中找到与当前报文的序列号保持的顺序的报文，就会看该报文是否有FIN标志，如果发现有FIN标志，才会进入TIME_WAIT状态。\"]},\"708\":{\"h\":\"TCP的四次挥手丢了？\",\"t\":[\"第一次丢失：客户端发送的报文FIN报文收不到服务端的ACK响应，会触发超时重传，重传 FIN 报文，重发次数由内核参数控制。\",\"第二次丢失：服务端回复的ACK报文发生丢失，客户端会触发超时重传，重传 FIN 报文，直到收到服务端的ACK或者达到最大的重传次数。超过最大重传次数还没收到ACK会等待一段时间，再断开连接。\",\"第三次丢失：服务端收到客户端的 FIN 报文后内核会自动回复 ACK，同时连接处于 CLOSE_WAIT 状态。服务端处于 CLOSE_WAIT 状态时，调用了 close 函数，内核会发出 FIN 报文，同时连接进入 LAST_ACK 状态，等待客户端返回 ACK 来确认连接关闭。收不到ACK的话会重发FIN报文直到最大次数为止。\",\"第四次丢失：最后一次的ACK发生了丢失，服务端没有收到 ACK 报文前是处于 LAST_ACK 状态。超时之后服务端会重传FIN报文，客户端此时是在 TIME_WAIT 状态，开启时长为 2MSL 的定时器，如果途中再次收到第三次挥手（FIN 报文）后，会重置定时器，当等待 2MSL 时长后，客户端会断开连接。\"]},\"709\":{\"h\":\"TCP的延迟应答和累计应答？\",\"t\":[\"延迟应答：TCP在接收到对端的报文后并不会立即发送ACK，而是等待一段时间发送ACK，以便将ACK和要发送的数据一块发送。延迟时间不能无限延长，否则对方端会认为丢包超时而造成超时重传。Linux采用动态调节算法来确定等待的时间。\",\"累计应答：为了保证顺序性，每一个包都有一个ID（序号），在建立连接的时候，双方会商定起始的ID是多少，然后按照ID一个个发送。为了保证不丢包，对应发送的包都要进行应答，但不是一个个应答，而是会应答某个之前的ID，该模式称为累计应答。\"]},\"710\":{\"h\":\"TCP会有三次挥手出现吗？\",\"t\":[\"当被动关闭方在TCP挥手过程中，没有数据要发送并且开启了延迟应答，第二和第三次挥手就会合并传输，这样就出现了三次挥手。\"]},\"711\":{\"h\":\"TCP的MSL？\",\"t\":[\"MSL是任何报文在网络中被丢弃前的最长存活时间，这个时间是有限的，因为TCP是以IP数据报的形式在网络中传输，IP有限制其生存的时间TTL，RFC793指出MSL为2分钟，现实中常用30秒或1分钟。\"]},\"712\":{\"h\":\"已经建立了连接，客户端突然出现故障了会怎样？\",\"t\":[\"TCP存在保活计时器，如果客户端故障，服务器不会一直等待。通常计时器设置为两小时，在每次收到客户端发来的报文都会重置计时器，超时之后客户端就会发送探测报文，每隔75S发送一次，如果连续10个探测报文都没有收到回复，服务器会认为客户端发生故障，中断此次连接。\"]},\"713\":{\"h\":\"什么时候用长连接，短连接？\",\"t\":[\"长连接多用于操作频繁，点对点的通讯，而且连接数不能太多情况。每个TCP连接都需要三步握手，这需要时间，如果每个操作都是先连接，再操作的话那么处理速度会降低很多，所以每个操作完后都不断开，下次处理时直接发送数据包就可以，不用建立TCP连接。例如：数据库的连接用长连接。\",\"WEB网站的HTTP服务一般都用短链接，因为长连接对于服务端来说会耗费一定的资源，而WEB网站成千上万客户端的连接用短连接会更省一些资源，如果用长连接，而且同时有成千上万的用户，如果每个用户都占用一个连接的话，所以并发量大，用短链接可以快速释放资源。\"]},\"714\":{\"h\":\"TCP的半连接队列和全连接队列？\",\"t\":[\"半连接队列：也称 SYN 队列，服务端收到客户端发起的 SYN 请求后，内核会把该连接存储到半连接队列，并向客户端发SYN+ACK，\",\"全连接队列：也称 accept 队列，服务端收到第三次握手的 ACK 后，内核会把连接从半连接队列移除，然后创建新的完全的连接，并将其添加到全连接队列，等待进程调用 accept 函数时把连接取出来。\"]},\"715\":{\"h\":\"什么是SYN攻击？如何避免？\"},\"716\":{\"h\":\"概念\",\"t\":[\"SYN攻击是指利用合理的服务请求来占用过多的服务资源，从而使合法用户无法得到服务的响应。如果向某个服务器端口发送大量的SYN报文，接收到客户端发来的SYN报文之后，服务端就需要为每个请求分配一个进程控制块TCB，并返回一个SYN-ACK报文，并立即转为SYN_RECV半开连接状态，收不到对端ACK回复的服务端还会重传SYN-ACK报文, 系统会为此耗尽资源。\"]},\"717\":{\"h\":\"避免方法\",\"t\":[\"Cache：系统在收到一个SYN报文时，在一个专用HASH表中保存这种半连接信息，直到收到正确的回应ACK报文再分配TCB。这个开销远小于TCB的开销。\",\"Cookie：利用算法，通过对方的IP、端口、己方IP、端口的固定信息，以及对方无法知道而己方比较固定的一些信息，如MSS(最大报文段大小)、时间等，在收到对方的ACK报文后，重新计算一遍，看其是否与对方回应报文中的（Sequence Number-1）相同，从而决定是否分配TCB资源。\",\"Proxy防火墙：设立中间层防火墙，防火墙在确认了连接的有效性后，才向内部的服务器发起SYN请求，所有的无效连接均无法到达内部的服务器。而防火墙采用的验证连接有效性的方法则可以是Cookie或Cathe等其他技术。\",\"减少SYN+ACK重传次数：减少 SYN-ACK 的重传次数，以加快处于 SYN_RECV 状态的 TCP 连接断开。\",\"无效连接监视释放：不停监视系统的半开连接和不活动连接，当达到一定阈值时拆除这些连接，从而释放系统资源。这种方法对于所有的连接一视同仁，正常连接请求也会被这种方式误释放掉。\",\"增大半连接队列：修改TCP的内核参数，增大全连接队列大小。\",\"调大netdev_max_backlog：当网卡接收数据包的速度大于内核处理的速度时，会有一个队列保存这些数据包，可以调大队列大小。\"]},\"718\":{\"h\":\"TIME_WAIT作用，过多如何解决？\",\"t\":[\"提示\",\"TCP常用的三个状态是：ESTABLISHED表示正在通信，TIME_WAIT表示主动关闭，CLOSE_WAIT表示被动关闭。\"]},\"719\":{\"h\":\"作用\",\"t\":[\"实现全双工的可靠释放连接\",\"假设发起主动关闭的一方最后发送的ACK在网络中丢失，由于TCP的重传机制，被动关闭的一方会重新发送FIN报文，在FIN在被主动关闭方接收之前，主动关闭方都需要维护这条连接状态，包括对应的IP地址和端口号。如果发送方不维护TIME_WAIT状态，那么当FIN到达主动关闭方的时候，主动关闭放会发送RST包来响应，被动关闭方就会认为有错误发生。\",\"为使旧的数据包在网络因过期而消失\",\"如果不存在TIME_WAIT状态，当前的一个TCP四元组因为某些原因关闭之后，假设有一个新的相同的四元组建立了TCP连接，因为TCP连接是由四元组唯一标识的，所以没法区分新旧连接。旧的已经关闭的TCP连接发送的数据到达接受方之后，会被当作正常数据而向上传输，从而导致数据错乱。有了TIME_WAIT状态之后，可以使旧TCP产生的数据包全部在网路中消亡。\"]},\"720\":{\"h\":\"危害\",\"t\":[\"占用系统资源，比如文件描述符、内存资源、CPU 资源、线程资源等\",\"占用端口资源，端口资源也是有限的，一般可以开启的端口为 32768～61000，也可以通过 net.ipv4.ip_local_port_range参数指定范围\"]},\"721\":{\"h\":\"避免方法\",\"t\":[\"修改短连接为长连接\",\"扩大可使用端口号的范围\",\"客户端机器打开tcp_tw_reuse和tcp_timestamps选项\",\"tcp_tw_reuse调用 connect() 函数时，内核会随机找一个 time_wait 状态超过 1 秒的连接给新的连接复。复用连接之后需要更新timestamps参数，当旧的TCP数据包到达时，根据时间戳判断是旧连接的数据可以舍弃。\",\"客户端机器打开tcp_tw_recycle和tcp_timestamps选项\",\"当开启之后内核会快速回收TIME_WAIT状态的连接，时间是一个RTO，远小于两个MSL。在启用该配置，当连接进入TIME_WAIT状态后，内核里会记录包括该连接对应五元组的一些统计数据，包括从该对方IP所接收到的最近的一次数据包时间。当有新的数据包到达，只要时间晚于内核记录的这个时间，数据包都会被统统的丢掉。\",\"缩小net.ipv4.tcp_max_tw_buckets\",\"当系统中处于 TIME_WAIT 的连接一旦超过这个值时，系统就会将后面的 TIME_WAIT 连接状态重置。\",\"程序中使用 SO_LINGER\",\"那么调用close后，会立该发送一个RST标志给对端，该 TCP 连接将跳过四次挥手，也就跳过了TIME_WAIT状态，直接关闭。\"]},\"722\":{\"h\":\"TIME_WAIT状态为什么需要经过2MSL？\",\"t\":[\"因为客户端最后一个发送的ACK有可能丢失。假如服务器没有收到客户端发送的最后一个ACK，就会重新发送FIN报文，为了确保服务器收到了FIN报文，客户端在TIME_WAIT状态需要经过2MSL，在这个期间客户端收到重发的FIN报文就会重新发送ACK并且重设计时器。MSL指一个片段在网络中最大的存活时间，2MSL就是一个发送和一个回复所需的最大时间。第一个MSL是保证最后一次挥手客户端响应服务端的ACK到达了服务端。第二个MSL是保证服务端没有重发新的报文给客户端，没有超时重传。\",\"如果客户端直接关闭，然后向服务器建立新连接，如果新连接和老连接的端口是一样的。假设老连接还有一些数据，因为网络或者其他原因，一直滞留没有发送成功，新连接建立后，就直接发送到新连接里面去了，造成数据的紊乱，因此，需要等到2MSL，让滞留在网络中的报文失效，再去建立新的连接。\",\"2MSL 的时间是从客户端接收到 FIN 后发送 ACK 开始计时的。如果在 TIME-WAIT 时间内，因为客户端的 ACK 没有传输到服务端，客户端又接收到了服务端重发的 FIN 报文，那么 2MSL 时间将重新计时\"]},\"723\":{\"h\":\"CLOSE_WAIT状态过多如何解决？\",\"t\":[\"如果一直保持在CLOSE_WAIT状态，原因是在对方关闭连接之后服务器程序自己没有进一步发出ACK信号。\",\"CLOSE_WAIT的解决办法是：\",\"查代码。因为问题出在服务器程序。\"]},\"724\":{\"h\":\"TCP和UDP的区别？\",\"t\":[\"TCP是面向连接的。在通信之前需要三次握手建立连接，通信之后断开连接时需要四次挥手；UDP不需要进行连接建立。\",\"TCP是可靠传输服务。通过TCP传输数据可以保证数据无差错、不丢失、不重复；UDP尽最大努力交付，不保证可靠交付。\",\"每个TCP对应的是点对点的连接；UDP支持一对一、一对多、多对一、多对多等多种方式的通讯。\",\"UDP对系统资源要求较少，通讯效率高，实时性好，应用于高速传输并且对实时性有要求的通信；TCP适合需要可靠连接，比如付费、加密数据等等方向都需要依靠TCP。\",\"TCP 首部长度较长，会有一定的开销，首部在没有使用「选项」字段时是 20 个字节，如果使用了「选项」字段则会变长的；UDP 首部只有 8 个字节，并且是固定不变的。\",\"TCP 是流式传输，没有边界，但保证顺序和可靠。UDP 是一个包一个包的发送，是有边界的，可能会丢包和乱序。\",\"TCP 的数据大小如果大于 MSS 大小，则会在传输层进行分片，目标主机收到后，也同样在传输层组装 TCP 数据包，如果中途丢失了一个分片，只需要传输丢失的这个分片。UDP 的数据大小如果大于 MTU 大小，则会在 IP 层进行分片，目标主机收到后，在 IP 层组装完数据，接着再传给传输层。\",\"应用场景：TCP用于FTP文件传输，HTTP / HTTPS；UDP用于包总量较少的通信，如 DNS、SNMP 等，视频、音频等多媒体通信，广播通信。\"]},\"725\":{\"h\":\"粘包和拆包问题的解决办法？\"},\"726\":{\"h\":\"概念\",\"t\":[\"TCP的特点之一就是面向字节流的，也就是说传输时候数据像“水流一样”，是没有边界的，因此拆包这个功能本身就不在TCP来完成。\",\"所谓的粘包拆包就是TCP流的特性导致的，而且根本不能说是问题，拆包本身就应该在应用层来完成。\"]},\"727\":{\"h\":\"解决办法\",\"t\":[\"遇到这个面试题，作者个人认为是面试官基础不扎实才会问出来，就直接怼它。\"]},\"728\":{\"h\":\"TCP的keepalive和HTTP的 keepalive 的区别？\",\"t\":[\"HTTP 的 Keep-Alive，是由**应用层（用户态）实现的，称为 HTTP 长连接；TCP 的 Keepalive，是由TCP层（内核态）**实现的，称为 TCP 保活机制。\",\"HTTP Keep-Alive是指使用同一个 TCP 连接来发送和接收多个 HTTP 请求/应答，好处是避免了连接建立和释放的开销，只要任意一端没有明确提出断开连接，就保持 TCP 连接状态；TCP Keepalive是指建立TCP连接的两端一直没有数据交互达到触发 TCP 保活机制的条件，内核里的 TCP 协议栈就会发送探测报文，如果对端程序正常工作，收到探测报文之后就会回复响应，同时保活时间重置，如果对端主机崩溃没有响应或者网络原因报文不可达，连续几次探测报文之后TCP 会报告该 TCP 连接已经死亡。\",\"web 服务软件一般都会提供 keepalive_timeout 参数来指定 HTTP 长连接的超时时间。例如设置了 HTTP 长连接的超时时间是 60 秒，web 服务软件就会启动一个定时器，如果客户端在完成一个 HTTP 请求后，在 60 秒内都没有再发起新的请求，定时器的时间一到，就会触发回调函数来释放该连接。\"]},\"729\":{\"h\":\"IP层会分片，为什么TCP层还需要MSS呢？\",\"t\":[\"MTU：一个网络包的最大长度，以太网中一般为 1500 字节；\",\"MSS：除去 IP 和 TCP 头部之后，一个网络包所能容纳的 TCP 数据的最大长度；\",\"如果交给IP来进行分片，一个 IP 分片丢失，整个 IP 报文的所有分片都得重传。因为 IP 层本身没有超时重传机制，它由传输层的 TCP 来负责超时和重传。当某一个 IP 分片丢失后，接收方的 IP 层就无法组装成一个完整的 TCP 报文（头部 + 数据），也就无法将数据报文送到 TCP 层，所以接收方不会响应 ACK 给发送方，因为发送方迟迟收不到 ACK 确认报文，所以会触发超时重传，就会重发整个 TCP 报文（头部 + 数据）。\"]},\"730\":{\"h\":\"计算机系统基础\"},\"731\":{\"h\":\"讲一讲什么是操作系统？\",\"t\":[\"操作系统（Operating System, OS）是管理计算机硬件和软件资源、给应用程序和用户提供底层抽象的一种系统软件。操作系统起到了计算机系统中的核心作用，它负责协调、控制和管理计算机硬件设备、系统资源和应用程序的执行。操作系统的主要功能如下：\",\"硬件管理：操作系统负责管理计算机系统的各种硬件资源，包括处理器、内存、磁盘、显示器、输入设备等。通过管理这些硬件资源，操作系统能够高效地分配和使用计算机的计算能力。\",\"文件管理：操作系统提供了一个文件系统，用于组织、存储和管理用户的数据文件。文件系统允许用户创建、删除、读取和修改文件，并提供了文件保护、权限管理等功能。\",\"进程管理：操作系统负责管理运行在计算机上的应用程序（进程）。它负责进程的创建、调度、终止以及进程间通信等功能。操作系统通过进程管理来保证计算机系统的稳定运行和资源的公平分配。\",\"内存管理：操作系统负责管理计算机的主存储器（RAM）。内存管理包括内存分配、回收、虚拟内存管理等功能。操作系统通过内存管理来确保系统资源的高效利用。\",\"系统安全和保护：操作系统负责维护系统的安全性和稳定性。它提供了各种安全机制，如用户身份验证、权限管理、防止非法访问等。操作系统通过这些机制来保护计算机系统和用户数据免受未经授权的访问。\",\"用户接口：操作系统提供了用户与计算机系统之间的交互界面。这个界面可以是图形用户界面（GUI）或者命令行界面（CLI），使用户能够方便地操作计算机系统。\",\"系统服务和应用程序支持：操作系统提供了一系列的系统服务和应用程序支持，包括设备驱动程序、系统工具、应用程序接口（API）等。这些服务和支持使得应用程序能够更轻松地访问计算机的硬件资源和系统功能。\"]},\"732\":{\"h\":\"讲一讲冯诺依曼结构？\",\"t\":[\"冯·诺依曼结构（Von Neumann Architecture）又称为存储程序计算机，是一种计算机组织结构。它基于冯·诺依曼在 1945 年提出的一种计算机设计理念，至今仍是计算机系统的基础架构。冯·诺依曼结构的主要特点是将计算机程序和数据存储在同一个存储器中，并通过中央处理器（CPU）进行处理和执行。冯·诺依曼结构主要包括以下几个部分：\",\"存储器（Memory）：存储器负责存储计算机程序和数据。在冯·诺依曼结构中，程序和数据共享同一个存储空间。这种设计使得计算机能够在运行时动态地加载和修改程序。\",\"中央处理器（Central Processing Unit, CPU）：CPU 是计算机系统的核心部件，负责执行存储器中的程序指令。CPU 主要由两个部分组成：算术逻辑单元（Arithmetic Logic Unit, ALU）和控制单元（Control Unit, CU）。\",\"算术逻辑单元（ALU）：负责执行各种算术和逻辑运算。\",\"控制单元（CU）：负责从存储器获取指令，解析指令，并控制计算机系统的各个部件按照指令进行操作。\",\"输入设备（Input Devices）：输入设备用于将外部数据输入到计算机系统中，如键盘、鼠标等。\",\"输出设备（Output Devices）：输出设备用于将计算机系统的处理结果输出到外部设备，如显示器、打印机等。\",\"总线（Bus）：总线是连接存储器、CPU、输入设备和输出设备的通信通道。总线主要包括数据总线、地址总线和控制总线。\",\"数据总线（Data Bus）：负责在各个部件之间传输数据。\",\"地址总线（Address Bus）：负责传输数据所对应的存储器地址。\",\"控制总线（Control Bus）：负责传输控制信号，用于同步和协调各个部件的工作。\",\"冯·诺依曼结构的主要优点是将程序和数据存储在同一个存储器中，使得程序可以在运行时被修改，从而实现了更为灵活的计算机系统。\"]},\"733\":{\"h\":\"讲一讲外中断与异常？\",\"t\":[\"外部中断和异常是计算机系统中用于处理非正常或特殊情况的两种机制。它们都会导致处理器暂停当前正在执行的任务，并转向执行一个特定的处理程序（中断处理程序或异常处理程序）。然后在处理完这些特殊情况后，处理器会返回到被打断的任务继续执行。下面我们分别来详细介绍外部中断和异常：\",\"外部中断（Interrupt）\",\"外部中断是由计算机系统外部事件触发的，通常与硬件设备相关。外部中断的目的是通知处理器某个外部设备需要处理器的注意，例如设备需要传输数据、设备发生错误等。常见的外部中断来源包括：\",\"输入/输出设备：如键盘、鼠标、磁盘等设备在数据传输完成、缓冲区已满或发生错误时发出的中断。\",\"计时器：操作系统使用计时器产生定时中断，用于实现时间片轮转等调度策略。\",\"电源管理：例如处理器需要进入低功耗模式时发出的中断。\",\"当外部中断发生时，处理器会完成当前指令的执行，然后跳转到中断处理程序执行。中断处理程序完成后，处理器会返回到被打断的程序继续执行。\",\"异常（Exception）\",\"异常是由计算机系统内部事件触发的，通常与正在执行的程序或指令有关。异常的目的是通知处理器某个指令无法正常执行，需要采取特殊处理。常见的异常包括：\",\"算术异常：如除以零、溢出等。\",\"地址异常：如非法内存访问、页面错误等。\",\"系统调用：程序请求操作系统提供服务时触发的异常。\",\"保护异常：如程序试图访问受保护的资源或执行非法操作时触发的异常。\",\"当异常发生时，处理器会立即跳转到异常处理程序执行。根据异常的类型和严重程度，异常处理程序可能会修复错误、终止程序或通知用户。异常处理程序完成后，处理器可能会返回到被打断的程序继续执行，或者终止程序执行。\"]},\"734\":{\"h\":\"CPU地址翻译是怎样实现的？\",\"t\":[\"CPU地址翻译是计算机系统中将虚拟地址转换为物理地址的过程。地址翻译的目的是为了实现虚拟内存，让每个进程都有一致的、连续的地址空间，从而简化编程和内存管理。虚拟内存到物理内存的映射方式有两种，分页与分段，现在大部分操作系统都是分页系统，下面我们以分页系统为例来说明：\",\"分页系统\",\"分页是一种将虚拟内存和物理内存分成固定大小的单元（页）的内存管理技术。在分页系统中，虚拟内存被划分为一系列大小相等的页（例如4KB），物理内存同样被划分为相同大小的页框。分页系统的任务就是将虚拟页映射到物理页框。\",\"地址翻译过程\",\"在分页系统中，虚拟地址由两部分组成：虚拟页号（Virtual Page Number, VPN）和页内偏移（Offset）。VPN用于标识虚拟内存中的一个页，Offset表示在这个页中的位置。地址翻译的过程主要包括以下步骤：\",\"从虚拟地址中提取VPN和Offset。\",\"使用页表（Page Table）将VPN转换为物理页框号（Physical Frame Number, PFN）。页表是操作系统维护的数据结构，用于记录虚拟页到物理页框的映射关系。每个进程都有一个独立的页表。\",\"将PFN与Offset组合成物理地址。\",\"页表查找与地址翻译\",\"页表查找是地址翻译过程中的关键步骤。在简单的单级页表系统中，页表是一个线性数组，使用VPN作为索引来查找对应的PFN。然而，对于较大的地址空间，单级页表可能会非常庞大并且浪费内存。\",\"为了解决这个问题，多级页表被引入。在多级页表系统中，页表被划分为多级层次结构。虚拟地址被分为多个部分，每个部分用于在不同级别的页表中查找。最后一级页表包含实际的PFN。多级页表可以有效减少内存消耗，因为只需要分配实际使用的页表空间。\",\"页表缓存\",\"由于地址翻译过程需要多次访问内存，这会导致性能开销。为了加速地址翻译，现代处理器引入了一种叫做Translation Lookaside Buffer（TLB）的硬件缓存。TLB缓存了最近使用过的VPN到PFN的映射关系。当处理器需要执行地址翻译时，首先在TLB中查找。如果找到了相应的映射，就不需要再访问页表，从而减少了内存访问次数和地址翻译的延迟。这种情况称为TLB命中。如果TLB未找到相应的映射（TLB未命中），则需要访问内存中的页表进行地址翻译，然后将新的映射加入TLB。\"]},\"735\":{\"h\":\"介绍一下现代CPU指令周期与指令类型？\",\"t\":[\"指令周期\",\"现代CPU的指令周期是指CPU执行一条指令所需的时间。在处理器中，每条指令都会经过一系列阶段来完成其执行，这些阶段构成了指令执行的流水线（Pipeline）。典型的流水线包括以下阶段：\",\"取指（Fetch）：从内存中获取指令。\",\"解码（Decode）：将指令转换为控制信号和操作数。\",\"执行（Execute）：根据指令类型，执行相应的操作。\",\"访存（Memory Access）：如果指令涉及到内存操作（如加载、存储），则访问内存。\",\"写回（Write Back）：将执行结果写回目标寄存器。\",\"现代CPU通常采用多级流水线设计，允许同时处理多条指令，从而提高处理器的吞吐量。\",\"指令类型\",\"CPU支持多种不同类型的指令，这些指令可以大致分为以下几类：\",\"算术指令（Arithmetic Instructions）：执行基本的算术运算，如加法、减法、乘法和除法。\",\"逻辑指令（Logical Instructions）：执行逻辑运算，如与、或、非、异或等。\",\"移位指令（Shift Instructions）：对数据进行位移操作，如左移、右移等。\",\"控制流指令（Control Flow Instructions）：用于改变程序执行流程，包括跳转、分支和函数调用等。\",\"数据传输指令（Data Transfer Instructions）：负责在寄存器、内存和I/O设备之间传输数据，如加载、存储等。\",\"特殊指令（Special Instructions）：用于处理特定的操作，如系统调用、同步原语、浮点运算等。\",\"不同类型的指令在执行过程中可能需要不同的时间，这取决于它们所需的流水线阶段和操作的复杂性。为了提高性能，现代CPU通常采用各种优化技术，如乱序执行、分支预测、乱序执行等。\"]},\"736\":{\"h\":\"讲一讲TLB？\",\"t\":[\"Translation Lookaside Buffer（TLB）是一种硬件高速缓存，用于加速虚拟地址到物理地址的翻译过程。TLB位于CPU内部，存储了最近使用过的虚拟地址到物理地址的映射关系。通过将常用的地址映射存储在TLB中，CPU可以快速查找映射关系，而无需每次都访问内存中的页表。\",\"特点\",\"小容量：与缓存相比，TLB通常具有较小的容量。由于TLB需要在每次地址翻译过程中进行查找，因此它需要具有较低的访问延迟。TLB的容量通常在数十到数百条映射之间。\",\"关联性：TLB可以是全相联、组相联或直接映射的。在全相联TLB中，任何虚拟地址映射都可以放在TLB的任何位置。组相联TLB将TLB划分为多个组，每个组可以容纳一定数量的映射关系，虚拟地址映射根据特定策略映射到一个组中。直接映射TLB中，每个虚拟地址映射固定地映射到一个位置。不同关联性的TLB具有不同的查找速度、容量利用率和替换策略。\",\"替换策略：当TLB满载时，需要根据某种替换策略选择一个现有的映射进行替换。常用的替换策略包括最近最少使用（LRU）、随机替换（Random）等。\",\"工作流程\",\"TLB查找：当CPU需要进行地址翻译时，首先在TLB中查找相应的虚拟地址映射。如果找到了相应的映射（TLB命中），则不需要访问页表，直接使用TLB中的物理地址。\",\"TLB未命中：如果TLB未找到相应的映射（TLB未命中），则需要访问内存中的页表来进行地址翻译。地址翻译完成后，将新的映射关系添加到TLB中，以便后续访问。\",\"TLB的存在可以有效地减少地址翻译过程中的内存访问次数，提高系统性能。\"]},\"737\":{\"h\":\"什么是局部性原理？\",\"t\":[\"局部性原理（Locality of Reference），又称为引用局部性，是指在计算机程序的执行过程中，对内存访问的一种现象。局部性原理描述了程序在一段时间内，对内存地址的访问倾向于集中在某个较小的地址范围内。局部性原理是计算机系统中高速缓存（Cache）、TLB（Translation Lookaside Buffer）等性能优化技术的基础。\",\"局部性原理主要分为两种\",\"时间局部性（Temporal Locality）： 时间局部性是指在一段时间内，一个内存地址被多次访问的现象。程序在执行过程中，如果某个数据或指令被访问了一次，那么在不久的将来它很可能会被再次访问。时间局部性的一个典型例子是程序中的循环结构，循环体内的指令和数据会在循环过程中被反复访问。\",\"空间局部性（Spatial Locality）： 空间局部性是指在一段时间内，程序访问的内存地址倾向于集中在一定范围内的现象。当程序访问一个内存地址时，它很可能在不久的将来访问相邻的内存地址。空间局部性的一个典型例子是程序中的数组操作，数组元素在内存中是连续存储的，访问数组时，通常会顺序地访问相邻的元素。\",\"局部性原理在计算机系统中的应用\",\"局部性原理是计算机系统中许多性能优化技术的基础。由于程序在执行过程中倾向于访问局部的、相邻的内存地址，系统可以将这些地址所对应的数据和指令存储在更快的存储介质上，从而提高程序的执行速度。以下是几种局部性原理在计算机系统中的应用：\",\"高速缓存（Cache）： Cache是一种介于CPU和主存之间的高速缓存存储器。当CPU访问内存时，Cache会根据局部性原理提前加载附近的数据和指令。如果CPU再次访问这些数据和指令，它们就已经在Cache中了，从而避免了对较慢的主存的访问。这样可以大大提高程序的执行速度。\",\"TLB（Translation Lookaside Buffer）： TLB是一种用于加速虚拟地址到物理地址转换的硬件缓存。由于程序在执行过程中倾向于访问相邻的虚拟地址，TLB可以缓存最近使用过的虚拟地址到物理地址的映射关系。当CPU访问虚拟地址时，如果对应的物理地址已经在TLB中，则可以避免查询页表，从而加速地址翻译过程。\",\"预取策略（Prefetching）： 预取策略是一种主动加载数据和指令到Cache或其他高速存储器的技术。预取策略根据局部性原理预测程序在未来可能访问的内存地址，并在访问之前将这些地址对应的数据和指令加载到Cache中。这样，当CPU实际访问这些地址时，它们已经在高速缓存中，从而减少了访问延迟。\",\"磁盘调度（Disk Scheduling）： 磁盘调度算法也可以利用局部性原理来提高磁盘I/O性能。文件系统在磁盘上存储数据时，通常会将相关的数据块放在相邻的磁盘扇区上，以便在访问一个数据块时能够快速地访问相邻的数据块。此外，磁盘调度算法还可以根据访问请求的局部性对磁盘操作进行排序，从而减少磁头的寻道和旋转延迟。\",\"局部性原理为Cache、TLB、预取策略、磁盘调度等性能优化技术提供了基础。通过充分利用局部性原理，计算机系统可以显著提高程序的执行速度和资源利用率。\"]},\"738\":{\"h\":\"讲一讲用户态与内核态，他们之间怎么切换的？\",\"t\":[\"用户态和内核态是操作系统为了保护系统资源和实现权限控制而设计的两种不同的CPU运行级别。用户态（User Mode）是程序运行时的正常状态，而内核态（Kernel Mode）是系统在执行内核代码或响应系统调用时的特权状态。\",\"用户态与内核态的区别\",\"权限：内核态具有执行所有指令和访问所有内存空间的权限，而用户态则受到限制，不能直接访问内核地址空间或执行特权指令。\",\"代码：内核态主要执行操作系统的内核代码，如中断处理程序、设备驱动、文件系统等。用户态则主要执行应用程序的代码。\",\"资源访问：在用户态下，程序不能直接访问受保护的系统资源，如硬件设备、中断、内核数据结构等。在内核态下，程序可以访问这些资源。\",\"触发用户态和内核态之间的切换的场景\",\"系统调用（System Call）：当用户程序需要请求操作系统提供的服务时，会通过系统调用进入内核态。系统调用会触发一个特殊的中断，将CPU从用户态切换到内核态。在内核态下，操作系统会执行相应的服务例程，完成请求后，再通过中断返回指令将CPU切换回用户态。\",\"异常（Exception）：当程序执行过程中出现错误或异常情况（如除以零、非法指令、缺页等）时，CPU会自动切换到内核态，以便操作系统能够处理这些异常。\",\"外部中断（External Interrupt）：外部设备（如键盘、鼠标、磁盘等）产生的中断信号会使CPU从用户态切换到内核态。操作系统会处理这些中断，执行相应的中断处理程序，然后再将CPU切换回用户态。\",\"切换过程\",\"切换的时候会先保存处理器状态与错误信息至状态寄存器，主要保存4个东西，异常触发的指令地址PC,异常的原因，当前CPU的栈指针SP。当发生用户态到内核态的切换时，CPU会先获取异常向量表，然后根据异常的原因来调用相应的异常处理函数。异常处理完成后，会恢复应用储蓄的现场，恢复PC与SP指针，并切换回用户态。如下图所示，其中EL0指的是用户态，EL1指的是内核态。\"]},\"739\":{\"h\":\"讲一讲CPU缓存？\",\"t\":[\"CPU缓存（Cache）是一种位于CPU与主内存（RAM）之间的高速存储器，用于存储近期访问过的数据和指令。CPU缓存的设计目的是为了减少CPU访问主内存所需的时间，提高处理器的性能。因为缓存的访问速度比主内存快得多，所以当CPU需要访问某个数据时，如果数据已经在缓存中，那么CPU可以更快地获取它。\",\"类型\",\"L1缓存：又称一级缓存，它是最接近CPU的缓存层级。L1缓存通常被分为两部分，一部分用于存储数据（L1数据缓存），另一部分用于存储指令（L1指令缓存）。L1缓存的容量相对较小（通常为几十KB），但访问速度最快。\",\"L2缓存：又称二级缓存，位于L1缓存之外，但仍然位于CPU芯片内部。L2缓存的容量通常比L1缓存大，但访问速度略慢。L2缓存通常存储更多的数据和指令，以提高CPU的缓存命中率。\",\"L3缓存：又称三级缓存，位于L2缓存之外，但仍在CPU芯片内部。L3缓存的容量比L2缓存更大，但访问速度略慢。L3缓存通常在多核处理器中共享，用于在不同核之间共享数据和降低访问内存的延迟。\",\"组织方式\",\"缓存的组织方式决定了如何将数据和指令映射到缓存中。常见的缓存组织方式有：\",\"直接映射缓存：每个主内存块只能映射到缓存的一个固定位置。这种方式实现简单，但可能导致缓存冲突。\",\"全相联映射缓存：每个主内存块可以映射到缓存的任何位置。这种方式可以降低缓存冲突的可能性，但实现起来较为复杂，同时搜索缓存的速度相对较慢。\",\"组相联映射缓存：这是直接映射缓存和全相联映射缓存的折衷方案。缓存被划分为多个组，每个主内存块可以映射到特定组中的任何位置。这种方式在降低缓存冲突和提高查找速度方面都表现得较好。\",\"缓存替换策略\",\"当缓存已满，且需要存储新的数据或指令时，缓存替换策略决定了哪些数据或指令应该被替换。常见的替换策略有：\",\"随机替换：从缓存中随机选择一个条目进行替换。这种策略实现简单，但可能导致频繁使用的数据被替换。\",\"最近最少使用（LRU）：替换缓存中最久未使用的数据或指令。这种策略依赖局部性原理，试图保留最近访问过的数据。实现起来相对复杂，但在许多情况下性能较好。\",\"最不经常使用（LFU）：替换缓存中使用频率最低的数据或指令。这种策略试图保留访问次数较多的数据，但需要跟踪每个缓存条目的访问计数，实现相对复杂。\",\"先进先出（FIFO）：替换缓存中最早进入的数据或指令。这种策略实现简单，但可能导致频繁使用的数据被替换。\"]},\"740\":{\"h\":\"CPU L1，L2，L3多级缓存的基本作用？\",\"t\":[\"CPU多级缓存（L1，L2，L3）是一种层级化的存储器架构，用于存储近期访问过的数据和指令。多级缓存的目的是在速度与容量之间取得平衡，提高CPU性能和效率。下面详细介绍L1、L2和L3缓存的基本作用：\",\"L1缓存（一级缓存）： L1缓存是距离CPU最近的缓存层级，通常位于CPU内部。它的访问速度非常快，但容量相对较小（通常为几十KB）。L1缓存通常被分为两部分：L1数据缓存（用于存储数据）和L1指令缓存（用于存储指令）。L1缓存的主要作用是减少CPU访问数据和指令的延迟，从而提高处理速度。\",\"L2缓存（二级缓存）： L2缓存位于L1缓存之外，但仍在CPU芯片内部。它的访问速度稍慢于L1缓存，但容量通常比L1缓存大（通常为几百KB至几MB）。L2缓存的主要作用是在L1缓存未命中时提供较大的数据和指令缓存空间，从而降低访问主内存的次数和延迟。\",\"L3缓存（三级缓存）： L3缓存位于L2缓存之外，但仍在CPU芯片内部。它的访问速度略慢于L2缓存，但容量比L2缓存更大（通常为几MB至几十MB）。在多核处理器中，L3缓存通常是所有核心共享的，用于在不同核心之间共享数据，减少访问内存的延迟。L3缓存的主要作用是在L1和L2缓存未命中时，提供更大的数据和指令缓存空间，进一步降低访问主内存的次数和延迟。\"]},\"741\":{\"h\":\"讲一讲CPU的缓存一致性？\",\"t\":[\"CPU缓存一致性（Cache Coherence）是多核处理器系统中一种关键的技术，它确保了各个核之间的数据一致性。在现代计算机系统中，为了提高性能，每个CPU核心都配备了一个或多个层次的缓存（如L1、L2、L3缓存），用于存储临时数据。多核处理器系统中的缓存一致性问题主要涉及以下几个方面：\",\"写操作的一致性：当一个处理器对内存中的某个地址进行写操作时，需要确保其他处理器对该地址的访问能够看到这次写操作的结果。如果多个处理器同时对同一个地址进行写操作，需要确保它们的操作有一个明确的顺序。\",\"事务性：多核处理器系统中的缓存一致性需要满足事务性，即对内存的操作要么完全执行，要么完全不执行。这可以确保在多个处理器之间的数据传输不会产生错误或不一致的状态。\",\"缓存一致性协议：为了保持缓存一致性，需要采用一种协议来规定处理器如何操作缓存。常见的缓存一致性协议有以下几种：\",\"1.MESI协议：Modified（修改）、Exclusive（独占）、Shared（共享）和Invalid（无效）四种状态。MESI协议通过对缓存行设置这四种状态来维护一致性。2.MOESI协议：在MESI协议的基础上增加了一个Owned（拥有）状态，用于优化共享数据的写回操作。\",\"3.MSI协议：Modified（修改）、Shared（共享）和Invalid（无效）三种状态。MSI协议是一种简化版的缓存一致性协议，与MESI协议相比，性能较低。\",\"缓存一致性的实现：实现缓存一致性需要在硬件层面进行支持。例如，多核处理器系统中通常包含一个或多个总线嗅探器（Bus Snooper），用于监控处理器之间的通信，以及一个或多个总线控制器（Bus Controller），用于控制数据在处理器之间的传输。\"]},\"742\":{\"h\":\"讲一讲缓存一致性中的MESI协议？\",\"t\":[\"MESI协议（Modified, Exclusive, Shared, Invalid）是一种缓存一致性协议，用于多处理器系统中的缓存，以确保在多核处理器访问同一数据时的一致性。MESI协议通过四种状态来跟踪缓存行（cache line）的状态，每个缓存行可以处于以下四种状态之一：\",\"Modified（修改）：缓存行中的数据已经被修改，与内存中的数据不一致。在此状态下，该处理器核心负责将数据写回主内存。\",\"Exclusive（独占）：缓存行中的数据与内存中的数据一致，且此数据只在当前缓存中存在。这意味着其他处理器核心的缓存中不存在该数据。\",\"Shared（共享）：缓存行中的数据与内存中的数据一致，但可能在其他处理器核心的缓存中也存在。此时，多个处理器核心都可以读取该数据。\",\"Invalid（无效）：缓存行中的数据是无效的，可能是因为其他处理器核心修改了数据，或者当前处理器核心失去了对该数据的独占权限。\",\"MESI协议通过监控处理器核心的读写操作以及跟踪其他核心的操作来实现缓存一致性。当一个处理器核心需要执行读或写操作时，它会发送请求到其他核心，以便根据其他核心的缓存状态来更新自己的缓存行状态。例如，当一个处理器核心需要修改一份共享数据时，它会向其他拥有该数据的核心发出请求，使其将缓存行状态标记为无效。这样，修改后的数据只存在于一个核心的缓存中，确保了数据一致性。\"]},\"743\":{\"h\":\"讲一讲伪共享问题？\",\"t\":[\"伪共享（False Sharing）是一个多处理器系统中的性能问题，当多个处理器核心频繁访问位于同一个缓存行（cache line）内的不同数据时，可能导致性能下降。这种情况下，虽然处理器核心访问的数据实际上并没有共享，但由于它们位于相同的缓存行内，会导致缓存一致性协议（如MESI协议）误认为数据是共享的，从而触发不必要的缓存同步操作。\",\"伪共享的产生主要是因为缓存行的设计。在处理器中，数据是以缓存行为单位进行存取的，而缓存行一般大小为 64 字节（可根据处理器不同而变化）。当两个处理器核心访问的数据恰好位于同一个缓存行内时，即使它们访问的是不同的变量，也会导致伪共享问题。\",\"比如：一个变量A，一个变量B，CPU1去读A，CPU2去读B，AB刚好在一条缓存行里：\",\"​ 1.线程1先去读A；此时这条缓存独占\",\"​ 2.线程2去读B，此时这条缓存共享\",\"​ 3.线程1修改A，此时Cache的状态已经修改，它会去通知CPU2这条缓存失效\",\"​ 4.线程2写B的时候，会先把Cache写回内存，再取出cache，再写入B，但其实A与B不会互相影响。\",\"伪共享可能导致以下问题：\",\"性能下降：由于频繁的缓存同步操作，处理器核心需要等待数据在各个缓存间传输，从而导致性能下降。\",\"增加总线流量：处理器核心之间需要通过总线进行通信，以维护缓存一致性。伪共享会导致更多的通信开销，增加总线流量。\",\"为了避免伪共享问题，可以采取以下方法：\",\"数据对齐与填充：通过对齐数据结构或在数据结构之间添加填充，使得不同处理器核心访问的数据位于不同的缓存行内。\",\"优化数据布局：尽量使同一个缓存行内的数据是由同一个处理器核心频繁访问的，避免跨核访问。\",\"降低共享数据的使用：尽量减少共享数据，或将共享数据的访问频率降低，以降低伪共享的可能性。\",\"使用无锁数据结构：无锁数据结构能够减少对共享数据的争用，从而降低伪共享问题的影响。\"]},\"744\":{\"h\":\"程序执行的基本过程？\",\"t\":[\"程序执行的基本过程涉及程序从源代码到可执行程序的转换，以及在计算机系统中的实际执行。下面是一个简化的程序执行过程：\",\"编写源代码：程序员使用某种编程语言（如C、Java或Python等）编写程序的源代码。源代码是人类可读的文本形式，包含了程序的逻辑和控制结构。\",\"编译/解释：\",\"对于编译型语言（如C、C++等），源代码需要经过编译器将其编译成目标代码（通常是二进制文件），称为可执行程序。这个过程包括预处理、编译、汇编和链接等步骤。\",\"对于解释型语言（如Python、JavaScript等），源代码通常不需要事先编译成可执行程序，而是在运行时由解释器逐行解释并执行。\",\"加载：当可执行程序准备好后，操作系统负责将其加载到内存中。这个过程涉及分配内存、加载代码和数据等。\",\"执行：处理器按照程序指令顺序执行程序，可能包括以下操作：\",\"获取指令：处理器从内存中获取下一条指令。\",\"解码指令：处理器解码指令，以确定要执行的操作和操作数。\",\"执行指令：处理器执行指令，可能包括算术运算、逻辑运算、数据移动、条件分支等操作。\",\"存储结果：处理器将执行结果存储回内存或寄存器中。\",\"系统调用与库函数：程序执行过程中可能需要与操作系统或其他库进行交互。这时，程序会发起系统调用或调用库函数来完成特定任务，如文件读写、内存管理、网络通信等。\",\"结束：当程序执行完毕，操作系统负责回收程序占用的资源，如内存、文件句柄等，并将程序退出状态返回给用户。\"]},\"745\":{\"h\":\"常用的Linux命令？\",\"t\":[\"find 查找文件或目录的路径\",\"pwd 显示当前所在路径\",\"ls 列出当前目录所有子目录与文件\",\"cd 切换工作目录\",\"man 查看帮助手册\",\"grep 查找文件或其他内容里符合条件的字符串\",\"chmod 控制用户对文件的权限的命令\",\"ps 列出系统中当前运行的进程\",\"kill 向执行中进程发出信号\"]},\"746\":{\"h\":\"Linux页大小是多少？\",\"t\":[\"Linux操作系统中的页大小可能因系统和硬件架构而异。在许多系统上，页大小通常为4KB（4096字节）。使用以下命令查看页大小：\",\"getconf PAGE_SIZE \"]},\"747\":{\"h\":\"Linux下如何查看CPU荷载，正在运行的线程，某个端口对应的进程？\",\"t\":[\"查看CPU负载\",\"使用top命令来查看实时的系统状态，包括CPU负载、内存使用情况等；使用uptime命令查看系统运行时间和平均负载。\",\"查看正在运行的线程\",\"使用ps命令来查看当前系统中正在运行的线程。要查看所有线程（包括其他用户的线程），使用ps -eLf命令。\",\"查找某个端口对应的进程\",\"可以使用netstat或lsof命令。\",\"使用netstat：\",\"sudo netstat -tuln | grep :端口号 \",\"使用lsof：\",\"sudo lsof -i :端口号 \"]},\"748\":{\"h\":\"Linux下如何排查CPU以及内存占用过多？\",\"t\":[\"top：使用top命令可以实时查看系统的资源使用情况，包括CPU和内存占用。在top界面中，进程会按照CPU占用率进行排序，可以观察哪些进程占用了较多的CPU和内存资源。\",\"htop：htop是top命令的一个增强版，提供了更丰富的视图和更多的交互功能。htop会显示资源占用情况，可以使用F键进行排序、筛选和搜索。\",\"ps：使用ps命令可以查看当前运行的进程。要按CPU或内存占用对进程进行排序。\",\"按CPU占用排序：ps aux --sort=-%cpu\",\"按内存占用排序：ps aux --sort=-%mem\",\"free：使用free命令可以查看系统的内存使用情况。\",\"vmstat：vmstat命令提供有关虚拟内存、进程、CPU活动等的报告。\",\"当找到占用大量CPU或内存资源的进程时，可以根据具体情况优化程序代码、调整进程优先级、限制资源使用或杀死进程。要杀死进程，可以使用kill或pkill命令，kill 进程ID或pkill 进程名称。\"]},\"749\":{\"h\":\"Linux如何查看实时的滚动日志？\",\"t\":[\"使用tail命令查看实时的滚动日志。tail命令可以显示文件的最后部分，-f选项使命令持续输出文件的新增内容，这样就可以实时查看滚动日志。假设想查看名为/var/log/mylogfile.log的日志文件：\",\"tail -f /var/log/mylogfile.log \",\"当文件内容发生更改时，新的日志行将自动显示在终端上。\"]},\"750\":{\"h\":\"traceroute命令的原理？\",\"t\":[\"traceroute是一个网络诊断工具，用于跟踪数据包在IP网络中从源主机到目标主机的路径。它可以帮助识别和定位网络延迟和问题的来源。traceroute的原理基于IP协议中的“生存时间”（TTL）字段。\",\"TTL（Time to Live）是IP包头中的一个字段，表示数据包在网络中允许经过的最大跳数（路由器）。每当数据包经过一个路由器时，TTL值减1。当TTL值变为0时，路由器将丢弃该数据包，并向源主机发送一条ICMP“超时”（Time Exceeded）消息。\",\"traceroute通过发送一系列数据包来工作，这些数据包具有逐渐增加的TTL值。对于每个数据包，当TTL值耗尽时，沿途的路由器会返回一个ICMP“超时”消息。traceroute通过收集这些消息来确定数据包经过的路径。\",\"基本工作原理\",\"traceroute首先发送一个TTL为1的数据包（通常是ICMP Echo请求或UDP数据包）到目标主机。\",\"当第一个路由器收到此数据包时，它将TTL值减1（变为0），然后丢弃该数据包，并向源主机发送一个ICMP“超时”消息。\",\"traceroute接收到ICMP“超时”消息后，记录发送此消息的路由器的IP地址和传输时间。\",\"然后，traceroute增加TTL值（比如设置为2），重复步骤1-3。这次，数据包将到达第二个路由器，然后被丢弃，并返回另一个ICMP“超时”消息。\",\"traceroute继续逐步增加TTL值，直到数据包到达目标主机或达到最大跳数限制。\",\"最后，traceroute命令会显示从源主机到目标主机的完整路径，包括每个经过的路由器的IP地址、主机名（如果可用）和每个跳的往返时间。这有助于识别和排除网络问题。\"]},\"751\":{\"h\":\"ASCII，Unicode，UTF-8的区别？\",\"t\":[\"ASCII（美国标准信息交换代码）、Unicode（统一字符编码）和UTF-8（8位Unicode转换格式）是计算机中用于表示和处理文本的不同字符编码方案。它们之间的区别如下：\",\"ASCII： ASCII是一种基于拉丁字母表的字符编码，最初于1963年发布。它使用7位二进制数（即128个可能值）来表示128个不同字符，包括大小写英文字母、数字0-9、标点符号以及一些控制字符。ASCII只能表示英语中的字符，无法表示其他语言的字符。随着计算机科技的发展，ASCII已无法满足现代多语言环境的需求。\",\"Unicode： 为了解决ASCII不能表示多种语言字符的问题，Unicode应运而生。Unicode是一种字符集，旨在包含世界上所有语言的字符和符号。Unicode为每个字符分配一个唯一的数字代码点，可以表示超过110,000个字符，包括拉丁字母、希腊字母、汉字、象形文字等。然而，Unicode本身不是一种编码方案，而是为字符分配代码点的标准。为了在计算机中存储和处理这些字符，需要使用不同的编码方案，如UTF-8、UTF-16和UTF-32。\",\"UTF-8： UTF-8是Unicode的一种变长字节编码方案。它使用1到4个字节表示一个字符，根据字符的Unicode代码点进行编码。UTF-8的优点是向后兼容ASCII，即ASCII字符在UTF-8中的表示与原始ASCII编码相同。这意味着许多现有的ASCII文本和软件无需修改即可处理UTF-8编码的文本。由于其兼容性和高效的存储方式，UTF-8已成为Web和许多操作系统中最常用的字符编码方案。\",\"总结：ASCII是一种有限的、只能表示英语字符的编码方案。Unicode是一种广泛的字符集，可以表示世界上所有语言的字符。UTF-8是Unicode字符集的一种编码方案，可以高效地存储和处理Unicode字符，且与ASCII兼容。\"]},\"752\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"753\":{\"h\":\"Help\"},\"754\":{\"h\":\"Notes\"},\"755\":{\"h\":\"Language\"},\"756\":{\"h\":\"Docker\"},\"757\":{\"h\":\"Git\"},\"758\":{\"h\":\"Linux\"},\"759\":{\"h\":\"Specialized Knowledge\"},\"760\":{\"h\":\"Mysql\"},\"761\":{\"h\":\"Network\"},\"762\":{\"h\":\"Operation System\"}},\"dirtCount\":0,\"index\":[[\"象形文字等\",{\"1\":{\"751\":1}}],[\"汉字\",{\"1\":{\"751\":1}}],[\"希腊字母\",{\"1\":{\"751\":1}}],[\"旨在包含世界上所有语言的字符和符号\",{\"1\":{\"751\":1}}],[\"统一字符编码\",{\"1\":{\"751\":1}}],[\"统一定义了服务的消费形式\",{\"1\":{\"254\":1}}],[\"美国标准信息交换代码\",{\"1\":{\"751\":1}}],[\"沿途的路由器会返回一个icmp\",{\"1\":{\"750\":1}}],[\"筛选和搜索\",{\"1\":{\"748\":1}}],[\"逻辑运算\",{\"1\":{\"744\":1}}],[\"逻辑指令\",{\"1\":{\"735\":1}}],[\"汇编和链接等步骤\",{\"1\":{\"744\":1}}],[\"误认为数据是共享的\",{\"1\":{\"743\":1}}],[\"伪共享会导致更多的通信开销\",{\"1\":{\"743\":1}}],[\"伪共享可能导致以下问题\",{\"1\":{\"743\":1}}],[\"伪共享的产生主要是因为缓存行的设计\",{\"1\":{\"743\":1}}],[\"伪共享\",{\"1\":{\"743\":1}}],[\"拥有\",{\"1\":{\"741\":1}}],[\"拥塞发生\",{\"0\":{\"697\":1}}],[\"拥塞避免算法\",{\"1\":{\"695\":1}}],[\"拥塞控制\",{\"0\":{\"695\":1},\"1\":{\"683\":1}}],[\"拥塞窗口\",{\"1\":{\"650\":1,\"698\":1}}],[\"试图保留最近访问过的数据\",{\"1\":{\"739\":1}}],[\"恢复pc与sp指针\",{\"1\":{\"738\":1}}],[\"恢复服务\",{\"1\":{\"405\":1}}],[\"产生的中断信号会使cpu从用户态切换到内核态\",{\"1\":{\"738\":1}}],[\"外部设备\",{\"1\":{\"738\":1}}],[\"外部中断的目的是通知处理器某个外部设备需要处理器的注意\",{\"1\":{\"733\":1}}],[\"外部中断是由计算机系统外部事件触发的\",{\"1\":{\"733\":1}}],[\"外部中断\",{\"1\":{\"733\":1,\"738\":1}}],[\"外部中断和异常是计算机系统中用于处理非正常或特殊情况的两种机制\",{\"1\":{\"733\":1}}],[\"缺页等\",{\"1\":{\"738\":1}}],[\"缺点是只支持get请求\",{\"1\":{\"681\":1}}],[\"缺点\",{\"1\":{\"320\":3}}],[\"权限\",{\"1\":{\"738\":1}}],[\"权限管理\",{\"1\":{\"731\":1}}],[\"权限管理等功能\",{\"1\":{\"731\":1}}],[\"局部性原理为cache\",{\"1\":{\"737\":1}}],[\"局部性原理是计算机系统中许多性能优化技术的基础\",{\"1\":{\"737\":1}}],[\"局部性原理是计算机系统中高速缓存\",{\"1\":{\"737\":1}}],[\"局部性原理在计算机系统中的应用\",{\"1\":{\"737\":1}}],[\"局部性原理主要分为两种\",{\"1\":{\"737\":1}}],[\"局部性原理描述了程序在一段时间内\",{\"1\":{\"737\":1}}],[\"局部性原理\",{\"1\":{\"737\":1}}],[\"局部变量表\",{\"1\":{\"239\":1}}],[\"替换缓存中最早进入的数据或指令\",{\"1\":{\"739\":1}}],[\"替换缓存中最久未使用的数据或指令\",{\"1\":{\"739\":1}}],[\"替换缓存中使用频率最低的数据或指令\",{\"1\":{\"739\":1}}],[\"替换策略\",{\"1\":{\"736\":1}}],[\"替换时\",{\"1\":{\"254\":1}}],[\"小容量\",{\"1\":{\"736\":1}}],[\"小于等于零\",{\"1\":{\"293\":1}}],[\"乱序执行等\",{\"1\":{\"735\":1}}],[\"浮点运算等\",{\"1\":{\"735\":1}}],[\"乘法和除法\",{\"1\":{\"735\":1}}],[\"访存\",{\"1\":{\"735\":1}}],[\"访问数组时\",{\"1\":{\"737\":1}}],[\"访问危险网站b\",{\"1\":{\"661\":1}}],[\"访问后端服务器发生了错误\",{\"1\":{\"642\":1}}],[\"访问控制等高级功能\",{\"1\":{\"388\":1}}],[\"典型的流水线包括以下阶段\",{\"1\":{\"735\":1}}],[\"溢出等\",{\"1\":{\"733\":1}}],[\"电源管理\",{\"1\":{\"733\":1}}],[\"电气特性\",{\"1\":{\"683\":1}}],[\"缓冲区已满或发生错误时发出的中断\",{\"1\":{\"733\":1}}],[\"缓存行中的数据是无效的\",{\"1\":{\"742\":1}}],[\"缓存行中的数据与内存中的数据一致\",{\"1\":{\"742\":2}}],[\"缓存行中的数据已经被修改\",{\"1\":{\"742\":1}}],[\"缓存行锁定\",{\"1\":{\"208\":1}}],[\"缓存一致性的实现\",{\"1\":{\"741\":1}}],[\"缓存一致性协议\",{\"1\":{\"207\":1,\"741\":1}}],[\"缓存替换策略决定了哪些数据或指令应该被替换\",{\"1\":{\"739\":1}}],[\"缓存替换策略\",{\"1\":{\"739\":1}}],[\"缓存被划分为多个组\",{\"1\":{\"739\":1}}],[\"缓存的组织方式决定了如何将数据和指令映射到缓存中\",{\"1\":{\"739\":1}}],[\"缓存当前会话的上下文\",{\"1\":{\"648\":1}}],[\"缓存处理\",{\"1\":{\"646\":1}}],[\"缓存\",{\"1\":{\"645\":1}}],[\"缓存缺点\",{\"1\":{\"621\":1}}],[\"缓存是以k\",{\"1\":{\"621\":1}}],[\"缓存内存数\",{\"1\":{\"469\":2,\"519\":2}}],[\"缓存可见性实现原理\",{\"0\":{\"208\":1}}],[\"缓存锁的核心机制是基于缓存一致性协议来实现的\",{\"1\":{\"207\":1}}],[\"缓存加锁\",{\"1\":{\"207\":1}}],[\"缓存不一致问题\",{\"0\":{\"207\":1}}],[\"缓存模型来建立的\",{\"1\":{\"205\":1}}],[\"缓存模型类似\",{\"1\":{\"205\":1}}],[\"鼠标\",{\"1\":{\"733\":1,\"738\":1}}],[\"鼠标等\",{\"1\":{\"732\":1}}],[\"算术指令\",{\"1\":{\"735\":1}}],[\"算术异常\",{\"1\":{\"733\":1}}],[\"算术逻辑单元\",{\"1\":{\"732\":2}}],[\"算法可以有效地进行多种排序\",{\"1\":{\"368\":1}}],[\"算法计算出其存放在数组中的\",{\"1\":{\"249\":1}}],[\"诺依曼在\",{\"1\":{\"732\":1}}],[\"诺依曼结构的主要优点是将程序和数据存储在同一个存储器中\",{\"1\":{\"732\":1}}],[\"诺依曼结构的主要特点是将计算机程序和数据存储在同一个存储器中\",{\"1\":{\"732\":1}}],[\"诺依曼结构中\",{\"1\":{\"732\":1}}],[\"诺依曼结构主要包括以下几个部分\",{\"1\":{\"732\":1}}],[\"诺依曼结构\",{\"1\":{\"732\":1}}],[\"冯\",{\"1\":{\"732\":4}}],[\"讲一讲伪共享问题\",{\"0\":{\"743\":1}}],[\"讲一讲缓存一致性中的mesi协议\",{\"0\":{\"742\":1}}],[\"讲一讲cpu的缓存一致性\",{\"0\":{\"741\":1}}],[\"讲一讲cpu缓存\",{\"0\":{\"739\":1}}],[\"讲一讲用户态与内核态\",{\"0\":{\"738\":1}}],[\"讲一讲tlb\",{\"0\":{\"736\":1}}],[\"讲一讲外中断与异常\",{\"0\":{\"733\":1}}],[\"讲一讲冯诺依曼结构\",{\"0\":{\"732\":1}}],[\"讲一讲什么是操作系统\",{\"0\":{\"731\":1}}],[\"连续的地址空间\",{\"1\":{\"734\":1}}],[\"连续几次探测报文之后tcp\",{\"1\":{\"728\":1}}],[\"连接已经死亡\",{\"1\":{\"728\":1}}],[\"连接状态\",{\"1\":{\"728\":1}}],[\"连接状态重置\",{\"1\":{\"721\":1}}],[\"连接来发送和接收多个\",{\"1\":{\"728\":1}}],[\"连接将跳过四次挥手\",{\"1\":{\"721\":1}}],[\"连接断开\",{\"1\":{\"717\":1}}],[\"连接管理\",{\"0\":{\"692\":1}}],[\"连接迁移\",{\"1\":{\"651\":1}}],[\"连接迁移就是基于连接\",{\"1\":{\"651\":1}}],[\"连接信息\",{\"1\":{\"651\":1}}],[\"连接上的多个\",{\"1\":{\"651\":1}}],[\"连接的重复建立和断开所造成的额外开销\",{\"1\":{\"646\":1}}],[\"连接成功后会像mysql服务中发送sql语句\",{\"1\":{\"621\":1}}],[\"连接\",{\"1\":{\"303\":2,\"621\":1,\"651\":1}}],[\"遇到这个面试题\",{\"1\":{\"727\":1}}],[\"拆包本身就应该在应用层来完成\",{\"1\":{\"726\":1}}],[\"拆分的标准\",{\"1\":{\"189\":1}}],[\"拆分链表\",{\"1\":{\"189\":1}}],[\"拆分项目等效果\",{\"1\":{\"19\":1}}],[\"水流一样\",{\"1\":{\"726\":1}}],[\"粘包和拆包问题的解决办法\",{\"0\":{\"725\":1}}],[\"广播通信\",{\"1\":{\"724\":1}}],[\"音频等多媒体通信\",{\"1\":{\"724\":1}}],[\"视频\",{\"1\":{\"724\":1}}],[\"造成数据的紊乱\",{\"1\":{\"722\":1}}],[\"造成资源浪费\",{\"1\":{\"255\":1}}],[\"缩小net\",{\"1\":{\"721\":1}}],[\"远小于两个msl\",{\"1\":{\"721\":1}}],[\"远程方法激活\",{\"1\":{\"233\":1,\"259\":1}}],[\"远程仓库的移除与重命名\",{\"0\":{\"427\":1}}],[\"远程仓库没有找到的话\",{\"1\":{\"160\":1}}],[\"远程仓库又可以分为\",{\"1\":{\"158\":1}}],[\"远程仓库\",{\"1\":{\"158\":2}}],[\"复用连接之后需要更新timestamps参数\",{\"1\":{\"721\":1}}],[\"复制\",{\"1\":{\"382\":1}}],[\"复制和处理测试资源到目标目录\",{\"1\":{\"166\":1}}],[\"复制和处理资源到目标目录\",{\"1\":{\"166\":1}}],[\"复制测试资源文件到测试输出目录\",{\"1\":{\"155\":1}}],[\"复制资源文件到输出目录\",{\"1\":{\"155\":1}}],[\"己方ip\",{\"1\":{\"717\":1}}],[\"半连接队列\",{\"1\":{\"714\":1}}],[\"点对点的通讯\",{\"1\":{\"713\":1}}],[\"点击这个去下载页面\",{\"1\":{\"8\":1}}],[\"短连接\",{\"0\":{\"713\":1}}],[\"现代cpu通常采用各种优化技术\",{\"1\":{\"735\":1}}],[\"现代cpu通常采用多级流水线设计\",{\"1\":{\"735\":1}}],[\"现代cpu的指令周期是指cpu执行一条指令所需的时间\",{\"1\":{\"735\":1}}],[\"现代处理器引入了一种叫做translation\",{\"1\":{\"734\":1}}],[\"现实中常用30秒或1分钟\",{\"1\":{\"711\":1}}],[\"现在大部分操作系统都是分页系统\",{\"1\":{\"734\":1}}],[\"现在一般置0\",{\"1\":{\"687\":1}}],[\"现在的linux版本块的大小为1kb\",{\"1\":{\"479\":1,\"528\":1}}],[\"现在我们可以向父\",{\"1\":{\"146\":1}}],[\"现在\",{\"1\":{\"50\":1}}],[\"现在也是不齐全\",{\"1\":{\"2\":1}}],[\"现在是一名在校的计算机科班学生\",{\"1\":{\"1\":1}}],[\"累计应答\",{\"1\":{\"709\":1}}],[\"累积模式\",{\"1\":{\"439\":1,\"533\":1}}],[\"延迟时间不能无限延长\",{\"1\":{\"709\":1}}],[\"延迟应答\",{\"1\":{\"709\":1}}],[\"立即进入closed状态\",{\"1\":{\"705\":1}}],[\"哪些是已经被对方收到的\",{\"1\":{\"704\":1}}],[\"认为这种情况不严重\",{\"1\":{\"697\":1}}],[\"认识\",{\"0\":{\"418\":1}}],[\"增大全连接队列大小\",{\"1\":{\"717\":1}}],[\"增大半连接队列\",{\"1\":{\"717\":1}}],[\"增加总线流量\",{\"1\":{\"743\":2}}],[\"增加\",{\"1\":{\"696\":1,\"698\":1}}],[\"增强了程序的可维护性和可扩展性\",{\"1\":{\"236\":1}}],[\"慢启动算法\",{\"1\":{\"695\":1}}],[\"滑动窗口控制\",{\"0\":{\"693\":1}}],[\"携带ack标识的tcp报文段被称为确认报文段\",{\"1\":{\"687\":1}}],[\"紧急指针标志\",{\"1\":{\"687\":1}}],[\"紧急指针是一个正的偏移量\",{\"1\":{\"687\":1}}],[\"紧急指针\",{\"1\":{\"687\":1}}],[\"窗口大小就是接收方剩余缓冲区大小\",{\"1\":{\"693\":1}}],[\"窗口大小为16bit字段\",{\"1\":{\"687\":1}}],[\"窗口\",{\"1\":{\"687\":1}}],[\"五层因特网协议栈\",{\"0\":{\"685\":1}}],[\"帧\",{\"1\":{\"683\":1}}],[\"段\",{\"1\":{\"683\":1}}],[\"物理接口\",{\"1\":{\"683\":1}}],[\"物理层\",{\"1\":{\"683\":2,\"685\":1}}],[\"物理内存同样被划分为相同大小的页框\",{\"1\":{\"734\":1}}],[\"物理内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"物理内存已经耗光3\",{\"1\":{\"239\":1}}],[\"链路层\",{\"1\":{\"683\":1,\"685\":1}}],[\"链表采用的是头插法添加元素\",{\"1\":{\"190\":1}}],[\"链表将会转化为红黑树\",{\"1\":{\"187\":1}}],[\"链表则是为了解决哈希冲突而存在的\",{\"1\":{\"187\":1}}],[\"跨域资源分享\",{\"1\":{\"681\":1}}],[\"跨线程调度\",{\"0\":{\"278\":1}}],[\"什么时候用长连接\",{\"0\":{\"713\":1}}],[\"什么情况下会发生跨域请求\",{\"0\":{\"679\":1}}],[\"什么是局部性原理\",{\"0\":{\"737\":1}}],[\"什么是syn攻击\",{\"0\":{\"715\":1}}],[\"什么是跨域\",{\"0\":{\"679\":1}}],[\"什么是csrf攻击\",{\"0\":{\"660\":1}}],[\"什么是xss攻击\",{\"0\":{\"656\":1}}],[\"什么是版本控制\",{\"0\":{\"413\":1}}],[\"什么是容器\",{\"0\":{\"377\":1}}],[\"什么是aba问题呢\",{\"1\":{\"223\":1}}],[\"什么是\",{\"0\":{\"43\":1,\"319\":1,\"382\":1,\"399\":1}}],[\"隐私策略不同\",{\"1\":{\"677\":1}}],[\"隐藏令牌\",{\"1\":{\"662\":1}}],[\"隐藏列里\",{\"1\":{\"631\":1}}],[\"差别\",{\"0\":{\"677\":1}}],[\"页大小通常为4kb\",{\"1\":{\"746\":1}}],[\"页表缓存\",{\"1\":{\"734\":1}}],[\"页表被划分为多级层次结构\",{\"1\":{\"734\":1}}],[\"页表是一个线性数组\",{\"1\":{\"734\":1}}],[\"页表是操作系统维护的数据结构\",{\"1\":{\"734\":1}}],[\"页表查找是地址翻译过程中的关键步骤\",{\"1\":{\"734\":1}}],[\"页表查找与地址翻译\",{\"1\":{\"734\":1}}],[\"页\",{\"1\":{\"734\":1}}],[\"页之间跳转时\",{\"1\":{\"676\":1}}],[\"页面错误等\",{\"1\":{\"733\":1}}],[\"页面渲染\",{\"1\":{\"672\":1}}],[\"页面响应速度比\",{\"1\":{\"635\":1}}],[\"页面后\",{\"1\":{\"622\":1}}],[\"页面标题\",{\"0\":{\"54\":1}}],[\"页面\",{\"1\":{\"50\":1,\"59\":6,\"85\":1,\"87\":1,\"89\":2,\"622\":1}}],[\"游戏分数或其它需要记录的信息\",{\"1\":{\"675\":1}}],[\"购物车\",{\"1\":{\"675\":1}}],[\"获得mac地址后\",{\"1\":{\"673\":1}}],[\"获取指令\",{\"1\":{\"744\":1}}],[\"获取指定索引位置的元素\",{\"1\":{\"179\":1}}],[\"获取资源的更新日期时间\",{\"1\":{\"645\":1}}],[\"获取进程的父进程pid\",{\"1\":{\"507\":1}}],[\"获取随机元素\",{\"1\":{\"354\":1}}],[\"获取事件循环\",{\"1\":{\"334\":1}}],[\"获取锁\",{\"1\":{\"287\":1}}],[\"获取当前事件循环\",{\"1\":{\"279\":2}}],[\"获取当前线程优先级\",{\"1\":{\"202\":1}}],[\"获取当前线程对象\",{\"1\":{\"202\":1}}],[\"获取当前线程的名字\",{\"1\":{\"202\":1}}],[\"获取同步状态成功后\",{\"1\":{\"229\":1}}],[\"获取到\",{\"1\":{\"223\":2}}],[\"获取线程状态\",{\"1\":{\"202\":1}}],[\"获取线程\",{\"1\":{\"202\":1}}],[\"获取键对应的值\",{\"1\":{\"193\":1}}],[\"获取元素的最后一个索引位置\",{\"1\":{\"179\":1}}],[\"获取元素的索引\",{\"1\":{\"179\":1}}],[\"获取后续元素\",{\"1\":{\"178\":1}}],[\"获取导航栏\",{\"1\":{\"59\":1}}],[\"获取\",{\"0\":{\"423\":1},\"1\":{\"53\":1}}],[\"获取文件\",{\"1\":{\"53\":1}}],[\"获取sqlsession连接\",{\"1\":{\"41\":3}}],[\"断开连接\",{\"1\":{\"672\":1}}],[\"断点续传\",{\"1\":{\"646\":1}}],[\"得到最终的ip地址\",{\"1\":{\"672\":1}}],[\"得到的余数才是用来存放对应的数组下标\",{\"1\":{\"188\":1}}],[\"码放到读缓冲区队列\",{\"1\":{\"672\":1}}],[\"码\",{\"1\":{\"672\":1}}],[\"收不到对端ack回复的服务端还会重传syn\",{\"1\":{\"716\":1}}],[\"收不到ack的话会重发fin报文直到最大次数为止\",{\"1\":{\"708\":1}}],[\"收到探测报文之后就会回复响应\",{\"1\":{\"728\":1}}],[\"收到回馈的\",{\"1\":{\"695\":1}}],[\"收到中断请求后\",{\"1\":{\"672\":1}}],[\"收集显示系统存储设备输入和输出状态统计\",{\"1\":{\"515\":1}}],[\"收集\",{\"1\":{\"515\":1}}],[\"域名\",{\"1\":{\"680\":1}}],[\"域名解析状态\",{\"1\":{\"671\":1}}],[\"域名解析时一般返回的内容都不超过512字节\",{\"1\":{\"668\":1}}],[\"域名whois信息\",{\"1\":{\"671\":1}}],[\"路由器将丢弃该数据包\",{\"1\":{\"750\":1}}],[\"路由器\",{\"1\":{\"750\":1}}],[\"路由器dns劫持\",{\"1\":{\"670\":1}}],[\"路径最短优先\",{\"1\":{\"144\":2}}],[\"响应报文三个部分\",{\"1\":{\"672\":1}}],[\"响应头\",{\"1\":{\"672\":1}}],[\"响应更快\",{\"1\":{\"668\":1}}],[\"响应可以通过序号确定是哪个请求\",{\"1\":{\"647\":1}}],[\"区域传输对数据的可靠性和准确性相比普通的dns查询要要高得多\",{\"1\":{\"668\":1}}],[\"区域传输的数据量相比单次dns查询的数据量要大得多\",{\"1\":{\"668\":1}}],[\"区域传输使用tcp协议的原因大概是\",{\"1\":{\"668\":1}}],[\"授权域名服务器收到请求后\",{\"1\":{\"667\":1}}],[\"授权的全能工具\",{\"1\":{\"566\":1}}],[\"顶级域名服务器收到请求后\",{\"1\":{\"667\":1}}],[\"顶级支持而言\",{\"1\":{\"8\":1}}],[\"客户机向其本地域名服务器发出dns请求报文\",{\"1\":{\"667\":1}}],[\"客户端又接收到了服务端重发的\",{\"1\":{\"722\":1}}],[\"客户端在time\",{\"1\":{\"722\":1}}],[\"客户端在收到服务器的释放连接报文后\",{\"1\":{\"705\":1}}],[\"客户端机器打开tcp\",{\"1\":{\"721\":2}}],[\"客户端突然出现故障了会怎样\",{\"0\":{\"712\":1}}],[\"客户端此时是在\",{\"1\":{\"708\":1}}],[\"客户端会断开连接\",{\"1\":{\"708\":1}}],[\"客户端会触发超时重传\",{\"1\":{\"708\":1}}],[\"客户端会从数字证书中取出服务端的公钥\",{\"1\":{\"639\":1}}],[\"客户端向服务端发送\",{\"1\":{\"706\":1}}],[\"客户端向服务器的连接释放了\",{\"1\":{\"705\":1}}],[\"客户端仍然可以接收\",{\"1\":{\"705\":1}}],[\"客户端发送的报文fin报文收不到服务端的ack响应\",{\"1\":{\"708\":1}}],[\"客户端发送的syn报文会收不到服务端的响应\",{\"1\":{\"701\":1}}],[\"客户端发送释放报文\",{\"1\":{\"705\":1}}],[\"客户端发数据服务端接收\",{\"1\":{\"700\":1}}],[\"客户端接收消息的能力是正常的\",{\"1\":{\"700\":1}}],[\"客户端再发送消息服务端接收\",{\"1\":{\"700\":1}}],[\"客户端可以知道自己发送接收消息的能力和服务端发送接收消息的能力是正常的\",{\"1\":{\"700\":1}}],[\"客户端收到服务器的确认请求后\",{\"1\":{\"705\":1}}],[\"客户端收到服务器的syn和ack包后\",{\"1\":{\"699\":1}}],[\"客户端收到服务端的\",{\"1\":{\"701\":1}}],[\"客户端收到服务端的回应之后\",{\"1\":{\"639\":1}}],[\"客户端请求建立连接\",{\"1\":{\"699\":1}}],[\"客户端关闭或者\",{\"1\":{\"677\":1}}],[\"客户端和服务器进入established\",{\"1\":{\"699\":1}}],[\"客户端和服务器通过四次挥手终止tcp连接\",{\"1\":{\"672\":1}}],[\"客户端和服务器可以各自选择一组\",{\"1\":{\"651\":1}}],[\"客户端如果发现服务端为不可信任的\",{\"1\":{\"665\":1}}],[\"客户端只会验证了服务端的身份\",{\"1\":{\"665\":1}}],[\"客户端提交的表单中带着这个token\",{\"1\":{\"662\":1}}],[\"客户端\",{\"1\":{\"641\":1}}],[\"客户端与服务器进入加密通信\",{\"1\":{\"640\":1}}],[\"客户端握手结束通知\",{\"1\":{\"639\":1}}],[\"客户端回应\",{\"0\":{\"639\":1}}],[\"客户端产生的的随机数\",{\"1\":{\"637\":1}}],[\"客户端支持的密码套件列表\",{\"1\":{\"637\":1}}],[\"客户端支持的\",{\"1\":{\"637\":1}}],[\"客户端主要向服务端发送\",{\"1\":{\"637\":1}}],[\"客户端主动重置连接\",{\"1\":{\"621\":1}}],[\"客户端并不只提取最新版本的文件快照\",{\"1\":{\"417\":1}}],[\"客户端样例\",{\"1\":{\"303\":1}}],[\"启用虚拟专用网\",{\"1\":{\"665\":1}}],[\"启动了但还没提交的事务\",{\"1\":{\"631\":1}}],[\"启动当前停止的某个容器\",{\"1\":{\"405\":1}}],[\"启动的所有容器的状态信息\",{\"1\":{\"404\":1}}],[\"启动的容器和网络\",{\"1\":{\"403\":1}}],[\"启动完成后在启动该服务\",{\"1\":{\"400\":1}}],[\"启动也十分缓慢\",{\"1\":{\"380\":1}}],[\"启动线程\",{\"1\":{\"324\":1}}],[\"启动协程数量最多\",{\"1\":{\"320\":1}}],[\"启动数目有限制\",{\"1\":{\"320\":1}}],[\"启动类加载器是由\",{\"1\":{\"236\":1}}],[\"启动类加载器\",{\"1\":{\"236\":1}}],[\"启动一个\",{\"1\":{\"300\":1,\"303\":1}}],[\"启动一个新线程\",{\"1\":{\"202\":1}}],[\"启动一个本地服务器\",{\"1\":{\"49\":1}}],[\"启动\",{\"0\":{\"402\":1},\"1\":{\"171\":1,\"303\":1,\"387\":1}}],[\"禁用不安全的ssl协议\",{\"1\":{\"665\":1}}],[\"禁止\",{\"1\":{\"642\":1}}],[\"攻击者拦截用户和dns服务器之间的通信\",{\"1\":{\"670\":1}}],[\"攻击者接管路由器并覆盖dns设置\",{\"1\":{\"670\":1}}],[\"攻击者在用户的计算机上安装木马恶意软件\",{\"1\":{\"670\":1}}],[\"攻击者使ssl\",{\"1\":{\"664\":1}}],[\"攻击者会将恶意数据包注入常规数据中\",{\"1\":{\"664\":1}}],[\"恶意软件\",{\"1\":{\"664\":1}}],[\"嗅探或数据包嗅探\",{\"1\":{\"664\":1}}],[\"嗅探\",{\"1\":{\"664\":1}}],[\"登录受信任网站a\",{\"1\":{\"661\":1}}],[\"登录等\",{\"1\":{\"24\":1}}],[\"漏洞产生的根本原因是太相信用户提交的数据\",{\"1\":{\"659\":1}}],[\"漏洞产生的原因是攻击者注入的数据反映在响应中\",{\"1\":{\"657\":1}}],[\"盗窃企业重要的具有商业价值的资料\",{\"1\":{\"658\":1}}],[\"盗取各类用户帐号\",{\"1\":{\"658\":1}}],[\"篡改\",{\"1\":{\"658\":1}}],[\"危害\",{\"0\":{\"658\":1,\"720\":1}}],[\"留言板场景\",{\"1\":{\"657\":1}}],[\"利用算法\",{\"1\":{\"717\":1}}],[\"利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式\",{\"1\":{\"656\":1}}],[\"利用多核\",{\"1\":{\"322\":1}}],[\"历史包袱\",{\"1\":{\"655\":1}}],[\"摆脱了tcp必须按顺序确认的限制\",{\"1\":{\"652\":1}}],[\"序号为接收到的请求数据包中的序号\",{\"1\":{\"673\":1}}],[\"序号\",{\"1\":{\"652\":1,\"709\":1}}],[\"序列号seq=u发送给服务器\",{\"1\":{\"705\":1}}],[\"序列号\",{\"0\":{\"690\":1},\"1\":{\"687\":1}}],[\"序列中的任一\",{\"1\":{\"273\":1}}],[\"序列中的其他可等待对象\",{\"1\":{\"273\":1}}],[\"序列中的\",{\"1\":{\"273\":1}}],[\"序列\",{\"1\":{\"178\":1}}],[\"消息后\",{\"1\":{\"750\":1}}],[\"消息\",{\"1\":{\"652\":1,\"750\":4}}],[\"消除重连的成本\",{\"1\":{\"651\":1}}],[\"消除了丰富的比较与\",{\"1\":{\"370\":1}}],[\"丢失是由对方重传对应的报文\",{\"1\":{\"701\":1}}],[\"丢失后\",{\"1\":{\"652\":1}}],[\"丢弃该数据并发送ack\",{\"1\":{\"691\":1}}],[\"丢弃了\",{\"1\":{\"233\":1,\"259\":1}}],[\"达到了连接迁移的功能\",{\"1\":{\"651\":1}}],[\"达到释放内存的效果\",{\"1\":{\"621\":1}}],[\"密钥等\",{\"1\":{\"651\":1}}],[\"密集型计算依然可以大幅提升速度\",{\"1\":{\"322\":1}}],[\"密集型计算\",{\"0\":{\"319\":2},\"1\":{\"319\":2,\"320\":3,\"322\":1}}],[\"密集型函数\",{\"1\":{\"277\":1}}],[\"密集型和高层级\",{\"1\":{\"263\":1}}],[\"握手信息\",{\"1\":{\"651\":1}}],[\"握手的目的是为确认双方的\",{\"1\":{\"651\":1}}],[\"握手\",{\"1\":{\"651\":2}}],[\"握手过程中\",{\"1\":{\"641\":1}}],[\"报头不包含任何任选字段则长度为20字节\",{\"1\":{\"687\":1}}],[\"报文的所有分片都得重传\",{\"1\":{\"729\":1}}],[\"报文前是处于\",{\"1\":{\"708\":1}}],[\"报文后内核会自动回复\",{\"1\":{\"708\":1}}],[\"报文后会给服务端回一个\",{\"1\":{\"701\":1}}],[\"报文给客户端来表示同意现在关闭连接\",{\"1\":{\"706\":1}}],[\"报文\",{\"0\":{\"707\":1},\"1\":{\"701\":2,\"708\":4,\"722\":1,\"729\":2}}],[\"报文段中的数据部分是可选的\",{\"1\":{\"687\":1}}],[\"报文中可以存放多个\",{\"1\":{\"652\":1}}],[\"报文body都是经过加密的\",{\"1\":{\"648\":1}}],[\"报告发送过程中ip包被废弃的原因\",{\"1\":{\"673\":1}}],[\"报告和保存cpu\",{\"1\":{\"515\":1}}],[\"报告和文档\",{\"1\":{\"135\":1}}],[\"报告磁盘状态\",{\"1\":{\"478\":1,\"527\":1}}],[\"减法\",{\"1\":{\"735\":1}}],[\"减少访问内存的延迟\",{\"1\":{\"740\":1}}],[\"减少\",{\"1\":{\"717\":1}}],[\"减少syn+ack重传次数\",{\"1\":{\"717\":1}}],[\"减少创建终止线程开销\",{\"1\":{\"331\":1}}],[\"减轻了服务器端的负载\",{\"1\":{\"646\":1}}],[\"浏览器\",{\"1\":{\"677\":1}}],[\"浏览器行为跟踪\",{\"1\":{\"675\":1}}],[\"浏览器开始布局渲染树并将其绘制到屏幕上\",{\"1\":{\"672\":1}}],[\"浏览器根据响应开始显示页面\",{\"1\":{\"672\":1}}],[\"浏览器接收响应\",{\"1\":{\"672\":1}}],[\"浏览器向服务器发起一个\",{\"1\":{\"672\":1}}],[\"浏览器会首先从缓存中找是否存在域名\",{\"1\":{\"672\":1}}],[\"浏览器会自动重定向新的\",{\"1\":{\"642\":1}}],[\"浏览器输入一个url到显示器显示的过程\",{\"0\":{\"672\":1}}],[\"浏览器都应该联系原始服务器\",{\"1\":{\"645\":1}}],[\"属附带条件之一\",{\"1\":{\"645\":1}}],[\"属于服务器端的错误码\",{\"1\":{\"642\":1}}],[\"属于操作系统层面的虚拟化技术\",{\"1\":{\"382\":1}}],[\"属于\",{\"1\":{\"248\":1}}],[\"队头阻塞\",{\"1\":{\"645\":1}}],[\"队列是非空的\",{\"1\":{\"458\":1,\"557\":1}}],[\"队列是一个虚拟的双向队列\",{\"1\":{\"226\":1}}],[\"队列集文档\",{\"1\":{\"301\":1}}],[\"队列集被用于多个异步\",{\"1\":{\"301\":1}}],[\"队列的尺寸一直是已知的\",{\"1\":{\"293\":1}}],[\"队列不是线程安全的\",{\"1\":{\"292\":1}}],[\"队列被设计成与\",{\"1\":{\"292\":1}}],[\"队列锁\",{\"1\":{\"226\":1}}],[\"队列\",{\"1\":{\"178\":1,\"226\":1,\"263\":1,\"293\":1,\"714\":2}}],[\"告诉浏览器可以使用本地缓存的资源\",{\"1\":{\"643\":1}}],[\"告诉系统这个脚本需要什么解释器来执行\",{\"1\":{\"571\":1}}],[\"决定是否使用缓存的主动性在于浏览器这边\",{\"1\":{\"643\":1}}],[\"尚未实施\",{\"1\":{\"642\":1}}],[\"尚未完成\",{\"1\":{\"273\":1}}],[\"临时移动\",{\"1\":{\"642\":1}}],[\"永久移动\",{\"1\":{\"642\":1}}],[\"永久代的概念就被废弃了\",{\"1\":{\"244\":1}}],[\"永久代已用满\",{\"1\":{\"239\":1}}],[\"成功\",{\"1\":{\"642\":1}}],[\"成立\",{\"1\":{\"181\":1}}],[\"识别出是非法的\",{\"1\":{\"641\":1}}],[\"申请证书\",{\"1\":{\"635\":1}}],[\"明文传输\",{\"1\":{\"635\":1}}],[\"马上执行\",{\"1\":{\"632\":1}}],[\"普通\",{\"1\":{\"632\":1}}],[\"活跃事务指的就是\",{\"1\":{\"631\":1}}],[\"活动的统计信息\",{\"1\":{\"515\":1}}],[\"幻读是如何解决的\",{\"0\":{\"632\":1}}],[\"幻读是针对数据插入操作来说的\",{\"1\":{\"628\":1}}],[\"幻读\",{\"1\":{\"628\":1}}],[\"未找到\",{\"1\":{\"642\":1}}],[\"未修改\",{\"1\":{\"642\":1}}],[\"未提交意味着这些数据可能会回滚\",{\"1\":{\"628\":1}}],[\"未完成计数就会减少\",{\"1\":{\"293\":1}}],[\"未完成任务的计数就会增加\",{\"1\":{\"293\":1}}],[\"未完成的\",{\"1\":{\"276\":1}}],[\"脏读指的是读到了其他事务未提交的数据\",{\"1\":{\"628\":1}}],[\"脏读\",{\"1\":{\"628\":1,\"630\":1}}],[\"占有且等待\",{\"1\":{\"625\":1}}],[\"占用端口资源\",{\"1\":{\"720\":1}}],[\"占用系统资源\",{\"1\":{\"720\":1}}],[\"占用大量空间\",{\"1\":{\"380\":1}}],[\"占用内存资源\",{\"1\":{\"320\":1}}],[\"占用资源少\",{\"1\":{\"320\":1}}],[\"占用资源最多\",{\"1\":{\"320\":1}}],[\"占用\",{\"1\":{\"215\":1}}],[\"互斥\",{\"1\":{\"625\":1}}],[\"互斥锁\",{\"1\":{\"304\":1}}],[\"死锁的四个必要条件\",{\"1\":{\"625\":1}}],[\"死掉的进程\",{\"1\":{\"506\":1}}],[\"约束等会被保留\",{\"1\":{\"624\":2}}],[\"约束和触发器\",{\"1\":{\"624\":1}}],[\"约定优于配置\",{\"0\":{\"136\":1},\"1\":{\"136\":1}}],[\"刷入到磁盘\",{\"1\":{\"622\":1}}],[\"刷新到磁盘\",{\"1\":{\"622\":1}}],[\"刷新到硬盘\",{\"1\":{\"622\":2}}],[\"真正的执行更新记录的操作\",{\"1\":{\"622\":1}}],[\"真正转换的逻辑\",{\"1\":{\"187\":1}}],[\"层就无法组装成一个完整的\",{\"1\":{\"729\":1}}],[\"层本身没有超时重传机制\",{\"1\":{\"729\":1}}],[\"层组装完数据\",{\"1\":{\"724\":1}}],[\"层进行分片\",{\"1\":{\"724\":1}}],[\"层开始更新记录\",{\"1\":{\"622\":1}}],[\"层\",{\"1\":{\"622\":1,\"729\":1}}],[\"层面实现了一种服务提供发现机制\",{\"1\":{\"254\":1}}],[\"层面触发的\",{\"1\":{\"239\":1}}],[\"层面的线程最大数\",{\"1\":{\"239\":1}}],[\"继续\",{\"1\":{\"642\":1}}],[\"继续浏览此网站\",{\"1\":{\"641\":1}}],[\"继续取下一条记录重复判断\",{\"1\":{\"621\":1}}],[\"继承了其除\",{\"1\":{\"280\":1}}],[\"继承自\",{\"1\":{\"178\":1,\"182\":1}}],[\"继承某些值\",{\"1\":{\"147\":1}}],[\"继承父工程版本\",{\"1\":{\"30\":4}}],[\"继承和聚合\",{\"1\":{\"19\":1,\"140\":1}}],[\"继承\",{\"0\":{\"19\":1,\"21\":1,\"146\":1},\"1\":{\"146\":1,\"200\":1}}],[\"满足就发给客户端\",{\"1\":{\"621\":1}}],[\"预取策略根据局部性原理预测程序在未来可能访问的内存地址\",{\"1\":{\"737\":1}}],[\"预取策略是一种主动加载数据和指令到cache或其他高速存储器的技术\",{\"1\":{\"737\":1}}],[\"预取策略\",{\"1\":{\"737\":2}}],[\"预处理器检查sql查询的表或者字段是否存在\",{\"1\":{\"621\":1}}],[\"预览页面\",{\"1\":{\"106\":1}}],[\"词法分析是把sql语句的字符串识别出关键字\",{\"1\":{\"621\":1}}],[\"词法分析和语法分析\",{\"1\":{\"621\":1}}],[\"刚好这个表有更新操作\",{\"1\":{\"621\":1}}],[\"刚刚的乐观锁就有类似的无限循环操作\",{\"1\":{\"215\":1}}],[\"效率最差\",{\"1\":{\"623\":1}}],[\"效率还比varchar略高\",{\"1\":{\"618\":1}}],[\"效率也更高\",{\"1\":{\"380\":1}}],[\"剩余的空间会留给别的数据使用\",{\"1\":{\"618\":1}}],[\"剩余的空间会使用空格填充\",{\"1\":{\"618\":1}}],[\"剩余内存\",{\"1\":{\"515\":1}}],[\"掌握shell编程\",{\"1\":{\"614\":1}}],[\"删掉路径最后一个\",{\"1\":{\"609\":1,\"610\":1}}],[\"删除企业敏感数据的能力\",{\"1\":{\"658\":1}}],[\"删除行是不能恢复的\",{\"1\":{\"624\":1}}],[\"删除变量\",{\"1\":{\"574\":1}}],[\"删除服务停止的容器\",{\"1\":{\"405\":1}}],[\"删除指定的数据卷\",{\"1\":{\"397\":1}}],[\"删除指定位置的元素\",{\"1\":{\"354\":1}}],[\"删除镜像之前首先要确保这个镜像没有被容器引用\",{\"1\":{\"395\":1}}],[\"删除镜像\",{\"0\":{\"395\":1}}],[\"删除所有没有用的镜像\",{\"1\":{\"392\":1}}],[\"删除前一层文件的操作\",{\"1\":{\"386\":1}}],[\"删除装饰\",{\"1\":{\"369\":1}}],[\"删除第\",{\"0\":{\"350\":1}}],[\"删除从左到右的第一个\",{\"1\":{\"345\":1}}],[\"删除是否受元素位置影响\",{\"1\":{\"183\":1}}],[\"删除操作\",{\"1\":{\"182\":2}}],[\"删除\",{\"1\":{\"181\":1,\"182\":4,\"387\":1,\"395\":1,\"430\":1,\"731\":1}}],[\"删除迭代器返回的最后一个元素\",{\"1\":{\"178\":1}}],[\"回收\",{\"1\":{\"731\":1}}],[\"回复确认ack的值为客户端发送的序列号x+1\",{\"1\":{\"699\":1}}],[\"回送响应数据包的类型字段为0\",{\"1\":{\"673\":1}}],[\"回顾一下\",{\"1\":{\"600\":1}}],[\"回调或执行\",{\"1\":{\"280\":1}}],[\"周二\",{\"1\":{\"597\":2}}],[\"周一\",{\"1\":{\"597\":2}}],[\"周期性的查询内存使用信息\",{\"0\":{\"474\":1,\"524\":1}}],[\"脚本就执行\",{\"1\":{\"657\":1}}],[\"脚本就不需要指定解释器信息\",{\"1\":{\"571\":1}}],[\"脚本中直接引用的变量\",{\"1\":{\"582\":1}}],[\"脚本第一行一定要指定解释器\",{\"1\":{\"571\":1}}],[\"脚本\",{\"1\":{\"571\":1,\"580\":1,\"584\":1}}],[\"挂起\",{\"1\":{\"570\":1}}],[\"挂载主机目录的默认权限是读写\",{\"1\":{\"397\":1}}],[\"挂载主机目录\",{\"1\":{\"397\":1}}],[\"阀值可以在配置文件中设置\",{\"1\":{\"566\":1}}],[\"严重\",{\"1\":{\"566\":1}}],[\"严格来说\",{\"1\":{\"200\":1}}],[\"红色\",{\"1\":{\"566\":1}}],[\"红黑树\",{\"1\":{\"187\":2}}],[\"警告\",{\"1\":{\"566\":1}}],[\"紫色\",{\"1\":{\"566\":1}}],[\"蓝色\",{\"1\":{\"566\":1}}],[\"绿色\",{\"1\":{\"566\":1}}],[\"反射性xss攻击\",{\"1\":{\"657\":1}}],[\"反引号\",{\"1\":{\"575\":1}}],[\"反向解析ip\",{\"1\":{\"515\":1}}],[\"反之\",{\"1\":{\"420\":1}}],[\"反之则在字符串池中创建新的字符串对象\",{\"1\":{\"249\":1}}],[\"监视\",{\"1\":{\"515\":1}}],[\"监控\",{\"0\":{\"530\":1}}],[\"监控cpu\",{\"1\":{\"515\":1}}],[\"监控的进程用户\",{\"1\":{\"462\":1,\"561\":1}}],[\"监控的进程pid\",{\"1\":{\"462\":1,\"561\":1}}],[\"监控命令\",{\"0\":{\"449\":1,\"466\":1,\"483\":1}}],[\"陷阱和\",{\"1\":{\"515\":1}}],[\"较小的数字意味着占用较少的cpu时间\",{\"1\":{\"506\":1}}],[\"克隆线程\",{\"1\":{\"506\":1}}],[\"低优先级\",{\"1\":{\"506\":1}}],[\"低层级\",{\"1\":{\"263\":1,\"269\":1}}],[\"僵尸进程\",{\"1\":{\"506\":1}}],[\"处于休眠状态\",{\"1\":{\"506\":1}}],[\"处理器将执行结果存储回内存或寄存器中\",{\"1\":{\"744\":1}}],[\"处理器执行指令\",{\"1\":{\"744\":1}}],[\"处理器解码指令\",{\"1\":{\"744\":1}}],[\"处理器从内存中获取下一条指令\",{\"1\":{\"744\":1}}],[\"处理器按照程序指令顺序执行程序\",{\"1\":{\"744\":1}}],[\"处理器核心之间需要通过总线进行通信\",{\"1\":{\"743\":1}}],[\"处理器核心需要等待数据在各个缓存间传输\",{\"1\":{\"743\":1}}],[\"处理器可能会返回到被打断的程序继续执行\",{\"1\":{\"733\":1}}],[\"处理器会立即跳转到异常处理程序执行\",{\"1\":{\"733\":1}}],[\"处理器会返回到被打断的程序继续执行\",{\"1\":{\"733\":1}}],[\"处理器会返回到被打断的任务继续执行\",{\"1\":{\"733\":1}}],[\"处理器会完成当前指令的执行\",{\"1\":{\"733\":1}}],[\"处理器使用\",{\"1\":{\"207\":1}}],[\"处理完的结果以http的response对象返回\",{\"1\":{\"672\":1}}],[\"处理的高级\",{\"1\":{\"303\":1}}],[\"处理\",{\"1\":{\"263\":1}}],[\"处理过程是等效字节码解析过程\",{\"1\":{\"250\":1}}],[\"处理逻辑跟代码块是一样的\",{\"1\":{\"219\":1}}],[\"处理链表\",{\"1\":{\"189\":1}}],[\"处理红黑树\",{\"1\":{\"189\":1}}],[\"处理和部署项目到可以运行集成测试环境中\",{\"1\":{\"166\":1}}],[\"处理测试源码编译生成的文件\",{\"1\":{\"166\":1}}],[\"处理测试源代码\",{\"1\":{\"166\":2}}],[\"处理测试类文件\",{\"1\":{\"166\":1}}],[\"处理测试资源文件\",{\"1\":{\"166\":1}}],[\"处理编译生成的文件\",{\"1\":{\"166\":1}}],[\"处理类文件\",{\"1\":{\"166\":1}}],[\"处理资源文件\",{\"1\":{\"166\":1}}],[\"处理源代码\",{\"1\":{\"166\":2}}],[\"驻留空间的大小\",{\"1\":{\"506\":1}}],[\"块操作\",{\"1\":{\"479\":1,\"528\":1}}],[\"退出\",{\"1\":{\"463\":1,\"562\":1}}],[\"退货\",{\"1\":{\"24\":1}}],[\"左右箭头\",{\"1\":{\"463\":1,\"562\":1}}],[\"左旋\",{\"1\":{\"187\":1}}],[\"批量显示\",{\"1\":{\"462\":1,\"561\":1}}],[\"毫秒\",{\"1\":{\"458\":2,\"557\":2}}],[\"扇区\",{\"1\":{\"458\":1,\"557\":1}}],[\"平均负载\",{\"1\":{\"515\":1}}],[\"平均i\",{\"1\":{\"458\":1,\"557\":1}}],[\"平均每次设备i\",{\"1\":{\"458\":3,\"557\":3}}],[\"平台核心库\",{\"1\":{\"236\":1}}],[\"平台中的\",{\"1\":{\"233\":1,\"259\":1}}],[\"平台上被编译为字节码格式\",{\"1\":{\"233\":1,\"259\":1}}],[\"平台上被编译为体系结构中立的字节码格式\",{\"1\":{\"233\":1,\"259\":1}}],[\"平台的两个优点\",{\"1\":{\"242\":1}}],[\"平台的任何系统中运行\",{\"1\":{\"233\":2,\"259\":2}}],[\"平台的总称\",{\"1\":{\"232\":1,\"258\":1}}],[\"平台微型版\",{\"1\":{\"232\":1,\"258\":1}}],[\"平台企业版\",{\"1\":{\"232\":1,\"258\":1}}],[\"平台标准版\",{\"1\":{\"232\":1,\"258\":1}}],[\"间隔sec秒显示一次\",{\"1\":{\"462\":1,\"561\":1}}],[\"间隔时间\",{\"1\":{\"445\":1,\"457\":1,\"539\":1,\"556\":1}}],[\"间隔一段时间后会再次尝试获取\",{\"1\":{\"215\":1}}],[\"冻结的进程数\",{\"1\":{\"440\":1,\"534\":1}}],[\"睡眠的进程数\",{\"1\":{\"440\":1,\"534\":1}}],[\"质量很高\",{\"1\":{\"431\":1}}],[\"书籍\",{\"1\":{\"431\":1}}],[\"国外的一本\",{\"1\":{\"431\":1}}],[\"猴子都能懂得\",{\"1\":{\"431\":1}}],[\"涵盖\",{\"1\":{\"431\":1}}],[\"图解\",{\"1\":{\"431\":2}}],[\"图\",{\"1\":{\"431\":1}}],[\"图片缩放\",{\"0\":{\"94\":1}}],[\"推荐\",{\"1\":{\"587\":1,\"593\":1}}],[\"推荐阅读\",{\"1\":{\"431\":1}}],[\"推送成功后其他人可见\",{\"1\":{\"430\":1}}],[\"推送改动到远程仓库\",{\"0\":{\"426\":1}}],[\"推送服务镜像\",{\"1\":{\"405\":1}}],[\"合并分支\",{\"1\":{\"430\":1}}],[\"合并多个有序列表形成单独一个有序列表\",{\"1\":{\"351\":1}}],[\"切换工作目录\",{\"1\":{\"745\":1}}],[\"切换的时候会先保存处理器状态与错误信息至状态寄存器\",{\"1\":{\"738\":1}}],[\"切换过程\",{\"1\":{\"738\":1}}],[\"切换协议\",{\"1\":{\"642\":1}}],[\"切换到主分支\",{\"1\":{\"430\":1}}],[\"切换当前分支到\",{\"1\":{\"430\":1}}],[\"切换前需要保存用户态的上下文\",{\"1\":{\"222\":1}}],[\"假如服务器没有收到客户端发送的最后一个ack\",{\"1\":{\"722\":1}}],[\"假如你想丢弃你在本地的所有改动与提交\",{\"1\":{\"429\":1}}],[\"假定此时序列号为w\",{\"1\":{\"705\":1}}],[\"假设想查看名为\",{\"1\":{\"749\":1}}],[\"假设老连接还有一些数据\",{\"1\":{\"722\":1}}],[\"假设有一个新的相同的四元组建立了tcp连接\",{\"1\":{\"719\":1}}],[\"假设有两个线程a\",{\"1\":{\"223\":1}}],[\"假设发起主动关闭的一方最后发送的ack在网络中丢失\",{\"1\":{\"719\":1}}],[\"假设没有该记录\",{\"1\":{\"667\":1}}],[\"假设前一个请求响应一直不到达\",{\"1\":{\"645\":1}}],[\"假设事务a对某些行的内容作了更改\",{\"1\":{\"628\":1}}],[\"假设\",{\"1\":{\"189\":1}}],[\"假设是\",{\"1\":{\"189\":1}}],[\"假设现在通过无参构造函数创建一个列表\",{\"1\":{\"181\":1}}],[\"假设你的项目依赖于一个库\",{\"1\":{\"20\":1}}],[\"撤消对文件的修改\",{\"1\":{\"429\":1}}],[\"撤销操作\",{\"0\":{\"429\":1}}],[\"撤销协程\",{\"1\":{\"300\":1}}],[\"换成你想要推送的任何分支\",{\"1\":{\"426\":1}}],[\"步骤\",{\"1\":{\"424\":1}}],[\"跳\",{\"1\":{\"642\":1}}],[\"跳过使用暂存区域更新的方式\",{\"1\":{\"424\":1}}],[\"跳转\",{\"1\":{\"238\":1}}],[\"针对特定文件\",{\"1\":{\"424\":1}}],[\"针对此情况\",{\"1\":{\"21\":1}}],[\"检测乱序队列中是否有可用的数据\",{\"1\":{\"707\":1}}],[\"检测当前文件状态\",{\"1\":{\"424\":1}}],[\"检验通过之后连接器会获取用户权限并且保存起来\",{\"1\":{\"621\":1}}],[\"检验本机各端口的网络连接情况\",{\"1\":{\"515\":1}}],[\"检查环境变量是否生效\",{\"1\":{\"578\":1}}],[\"检查堆外内存使用代码\",{\"1\":{\"239\":1}}],[\"检查\",{\"1\":{\"239\":1}}],[\"检查是否直接或间接使用了\",{\"1\":{\"239\":1}}],[\"检查合理性\",{\"1\":{\"239\":1}}],[\"检查hashtable中是否包含某个键\",{\"1\":{\"193\":1}}],[\"暂时无法响应客户端\",{\"1\":{\"642\":1}}],[\"暂存文件\",{\"1\":{\"421\":1}}],[\"暂存区域\",{\"1\":{\"421\":1}}],[\"暂停服务\",{\"1\":{\"405\":1}}],[\"暂停\",{\"0\":{\"403\":1}}],[\"暂停等\",{\"1\":{\"387\":1}}],[\"快\",{\"1\":{\"635\":1}}],[\"快照读\",{\"1\":{\"632\":1}}],[\"快照流\",{\"1\":{\"420\":1}}],[\"快速恢复\",{\"0\":{\"698\":1}}],[\"快速重传和快速恢复\",{\"1\":{\"695\":1}}],[\"快速重传\",{\"0\":{\"694\":1}}],[\"快速连接建立\",{\"1\":{\"651\":1}}],[\"快速获知服务器的负荷情况\",{\"1\":{\"515\":1}}],[\"快速扩展\",{\"1\":{\"384\":1}}],[\"快速随机访问\",{\"1\":{\"181\":1}}],[\"快速开始\",{\"0\":{\"46\":1}}],[\"快速搭建个人文档网站\",{\"0\":{\"42\":1}}],[\"高速缓存\",{\"1\":{\"737\":1}}],[\"高级的交互式的实时linux进程监控工具\",{\"1\":{\"515\":1}}],[\"高优先级\",{\"1\":{\"506\":1}}],[\"高中数学的基本知识\",{\"1\":{\"420\":1}}],[\"高层级\",{\"0\":{\"299\":1},\"1\":{\"263\":1,\"299\":1}}],[\"极其强大的分支管理等功能\",{\"1\":{\"417\":1}}],[\"交给本机的ip层\",{\"1\":{\"673\":1}}],[\"交换空间等信息\",{\"1\":{\"515\":1}}],[\"交换\",{\"1\":{\"417\":1}}],[\"交付和部署\",{\"1\":{\"378\":1}}],[\"面世了\",{\"1\":{\"417\":1}}],[\"面向的对象的设计里\",{\"1\":{\"252\":1}}],[\"面向对象程序设计语言和\",{\"1\":{\"232\":1,\"258\":1}}],[\"受网络状况\",{\"1\":{\"416\":1}}],[\"人们很久以前就开发了许多种本地版本控制系统\",{\"1\":{\"415\":1}}],[\"毕竟书籍的内容是开源的\",{\"1\":{\"407\":1}}],[\"记录发送此消息的路由器的ip地址和传输时间\",{\"1\":{\"750\":1}}],[\"记录锁+间隙锁\",{\"1\":{\"632\":1}}],[\"记录在\",{\"1\":{\"631\":1}}],[\"记录每次更新到仓库\",{\"0\":{\"424\":1}}],[\"记录\",{\"1\":{\"406\":1,\"651\":1}}],[\"记录日志\",{\"1\":{\"357\":1}}],[\"改善网络设置等\",{\"1\":{\"673\":1}}],[\"改用udp或者http\",{\"1\":{\"655\":1}}],[\"改变排序顺序\",{\"1\":{\"463\":1,\"562\":1}}],[\"改变排序方式\",{\"1\":{\"463\":1,\"562\":1}}],[\"改变过优先级的进程占用cpu的百分比\",{\"1\":{\"440\":1,\"534\":1}}],[\"改变一个\",{\"1\":{\"406\":1}}],[\"改为\",{\"1\":{\"223\":3}}],[\"创造出应用程序的独立沙箱运行环境\",{\"1\":{\"406\":1}}],[\"创建task列表\",{\"1\":{\"334\":1}}],[\"创建事件循环\",{\"1\":{\"300\":1}}],[\"创建任务\",{\"0\":{\"271\":1}}],[\"创建和管理\",{\"1\":{\"263\":1}}],[\"创建的\",{\"1\":{\"200\":1}}],[\"创建线程\",{\"1\":{\"324\":1}}],[\"创建线程的方式只有一种\",{\"1\":{\"200\":1}}],[\"创建线程的方式有很多种\",{\"1\":{\"200\":1}}],[\"创建线程池\",{\"1\":{\"200\":1}}],[\"创建一个名字叫做\",{\"1\":{\"430\":1}}],[\"创建一个数据卷\",{\"1\":{\"397\":1}}],[\"创建一个仅包含新排序中初始值的列表\",{\"1\":{\"369\":1}}],[\"创建一个复数\",{\"1\":{\"360\":1}}],[\"创建一个handler\",{\"1\":{\"357\":1}}],[\"创建一个hashtable实例\",{\"1\":{\"193\":1}}],[\"创建一个logger\",{\"1\":{\"357\":1}}],[\"创建一个子进程\",{\"1\":{\"302\":1}}],[\"创建一个新的结点并存入\",{\"1\":{\"187\":1}}],[\"创建一个指定容量的列表\",{\"1\":{\"181\":1}}],[\"创建一个默认容量为0的空列表\",{\"1\":{\"181\":1}}],[\"创建一个并行流\",{\"1\":{\"178\":1}}],[\"创建一个流\",{\"1\":{\"178\":1}}],[\"创建一个导航栏\",{\"1\":{\"57\":1}}],[\"创建项目\",{\"1\":{\"155\":1}}],[\"创建接口并重写方法\",{\"0\":{\"118\":1}}],[\"创建\",{\"1\":{\"80\":1,\"300\":1,\"631\":1}}],[\"创建user实体类\",{\"1\":{\"40\":1}}],[\"创建工程\",{\"1\":{\"26\":1,\"28\":1,\"31\":1,\"34\":1}}],[\"技术主要是借助\",{\"1\":{\"406\":1}}],[\"技术\",{\"1\":{\"406\":1}}],[\"技术是基于\",{\"1\":{\"406\":1}}],[\"软件容器\",{\"1\":{\"406\":1}}],[\"软件工具\",{\"0\":{\"172\":1}}],[\"地域或物理配置所限制\",{\"1\":{\"406\":1}}],[\"地址翻译完成后\",{\"1\":{\"736\":1}}],[\"地址翻译的过程主要包括以下步骤\",{\"1\":{\"734\":1}}],[\"地址翻译的目的是为了实现虚拟内存\",{\"1\":{\"734\":1}}],[\"地址翻译过程\",{\"1\":{\"734\":1}}],[\"地址异常\",{\"1\":{\"733\":1}}],[\"地址总线\",{\"1\":{\"732\":1}}],[\"地址总线和控制总线\",{\"1\":{\"732\":1}}],[\"地址由\",{\"1\":{\"678\":1}}],[\"地址变化了\",{\"1\":{\"651\":1}}],[\"地址不再被浏览器缓存的时间\",{\"1\":{\"645\":1}}],[\"地址空间不足2\",{\"1\":{\"239\":1}}],[\"地址\",{\"1\":{\"159\":1,\"399\":1}}],[\"打印机等\",{\"1\":{\"732\":1}}],[\"打印命令行输入的参数\",{\"1\":{\"600\":1}}],[\"打印路由表\",{\"1\":{\"487\":1}}],[\"打开的套接字端口等\",{\"1\":{\"487\":1}}],[\"打破实体结构间的不可切割的障碍\",{\"1\":{\"406\":1}}],[\"打包项目可以通过将一组项目列为模块来聚合它们的构建\",{\"1\":{\"149\":1}}],[\"打包\",{\"1\":{\"135\":1,\"161\":1,\"166\":1}}],[\"打包为\",{\"1\":{\"30\":1}}],[\"打包方式默认就是jar\",{\"1\":{\"30\":1}}],[\"打包方式\",{\"1\":{\"27\":1}}],[\"予以抽象\",{\"1\":{\"406\":1}}],[\"磁盘调度等性能优化技术提供了基础\",{\"1\":{\"737\":1}}],[\"磁盘调度算法还可以根据访问请求的局部性对磁盘操作进行排序\",{\"1\":{\"737\":1}}],[\"磁盘调度算法也可以利用局部性原理来提高磁盘i\",{\"1\":{\"737\":1}}],[\"磁盘调度\",{\"1\":{\"737\":1}}],[\"磁盘监控\",{\"0\":{\"549\":1}}],[\"磁盘\",{\"1\":{\"515\":2,\"731\":1}}],[\"磁盘io和cpu资源都会被消耗\",{\"1\":{\"479\":1,\"528\":1}}],[\"磁盘空间\",{\"1\":{\"406\":1}}],[\"磁盘等设备在数据传输完成\",{\"1\":{\"733\":1}}],[\"磁盘等\",{\"1\":{\"196\":1,\"738\":1}}],[\"绑定数据卷\",{\"1\":{\"400\":1}}],[\"绑定配置文件\",{\"1\":{\"41\":2}}],[\"卷\",{\"1\":{\"400\":1}}],[\"意思是如果服务启动是如果有依赖于其他服务的\",{\"1\":{\"400\":1}}],[\"映射容器和宿主机的端口\",{\"1\":{\"400\":1}}],[\"端口号\",{\"1\":{\"747\":2}}],[\"端口资源也是有限的\",{\"1\":{\"720\":1}}],[\"端口的固定信息\",{\"1\":{\"717\":1}}],[\"端口\",{\"1\":{\"400\":1,\"486\":3,\"487\":1,\"544\":3,\"680\":1,\"717\":1}}],[\"覆盖容器启动后默认执行的命令\",{\"1\":{\"400\":1}}],[\"格式编写\",{\"1\":{\"400\":1}}],[\"务必先登录到对应的镜像仓库\",{\"1\":{\"396\":1}}],[\"称为可执行程序\",{\"1\":{\"744\":1}}],[\"称为\",{\"1\":{\"728\":2}}],[\"称为码头工人或码头装卸工\",{\"1\":{\"390\":1}}],[\"称携带fin标志的tcp报文段为结束报文段\",{\"1\":{\"687\":1}}],[\"称携带syn标志的tcp报文段为同步报文段\",{\"1\":{\"687\":1}}],[\"称携带rst标志的tcp报文段为复位报文段\",{\"1\":{\"687\":1}}],[\"称作\",{\"1\":{\"249\":1}}],[\"拉取mysql镜像\",{\"1\":{\"393\":1}}],[\"拉取镜像\",{\"0\":{\"393\":1},\"1\":{\"389\":1,\"393\":1}}],[\"拉链法\",{\"1\":{\"187\":2}}],[\"逐步构建一个新的镜像\",{\"1\":{\"389\":1,\"394\":1}}],[\"逐步优化\",{\"1\":{\"249\":1}}],[\"足以支持\",{\"1\":{\"388\":1}}],[\"阿里云镜像库等\",{\"1\":{\"388\":1}}],[\"阿里云镜像地址\",{\"1\":{\"159\":1}}],[\"➜\",{\"1\":{\"388\":1,\"395\":2,\"475\":1,\"507\":1}}],[\"代表程序错误\",{\"1\":{\"642\":1}}],[\"代表服务器上没有该资源\",{\"1\":{\"642\":1}}],[\"代表请求的服务器资源权限不够\",{\"1\":{\"642\":1}}],[\"代表临时跳转\",{\"1\":{\"642\":1}}],[\"代表永久性的重定向\",{\"1\":{\"642\":1}}],[\"代表第1到9个参数\",{\"1\":{\"579\":1}}],[\"代表命令本身\",{\"1\":{\"579\":1}}],[\"代表镜像被拉取的次数\",{\"1\":{\"388\":1}}],[\"代表镜像为\",{\"1\":{\"388\":1}}],[\"代码提交信息\",{\"1\":{\"424\":2}}],[\"代码优势\",{\"1\":{\"331\":1}}],[\"代码实现复杂\",{\"1\":{\"320\":1}}],[\"代码\",{\"1\":{\"292\":1,\"378\":1,\"738\":1}}],[\"代码的库\",{\"1\":{\"263\":1}}],[\"代码是先经过编译器编译成字节码文件\",{\"1\":{\"235\":1}}],[\"代码在哪个线程中执行\",{\"1\":{\"202\":1}}],[\"代码高亮\",{\"0\":{\"102\":1}}],[\"命名空间\",{\"1\":{\"387\":1}}],[\"命令的时候\",{\"1\":{\"397\":1}}],[\"命令的工具包\",{\"1\":{\"302\":1}}],[\"命令用于将本地的\",{\"1\":{\"396\":1}}],[\"命令而没有指定任何\",{\"1\":{\"393\":1}}],[\"命令默认使用的\",{\"1\":{\"393\":1}}],[\"命令可以将本地的\",{\"1\":{\"389\":1}}],[\"命令可以从本地镜像创建一个新的容器并启动它\",{\"1\":{\"389\":1}}],[\"命令可以从指定的\",{\"1\":{\"389\":1}}],[\"命令\",{\"0\":{\"436\":1,\"502\":1},\"1\":{\"239\":1,\"302\":2,\"388\":1,\"392\":1,\"400\":2,\"405\":1,\"423\":1,\"428\":1,\"504\":1,\"515\":1,\"564\":1}}],[\"命令行中所有参数\",{\"1\":{\"579\":2}}],[\"命令行参数\",{\"1\":{\"171\":1}}],[\"命令行激活\",{\"1\":{\"171\":1}}],[\"命令行工具\",{\"1\":{\"17\":1}}],[\"命令如下\",{\"1\":{\"153\":1}}],[\"命令执行插件的目标\",{\"1\":{\"153\":1}}],[\"停止甚至是编写一些程序\",{\"1\":{\"570\":1}}],[\"停止或被追踪\",{\"1\":{\"506\":1}}],[\"停止的进程数\",{\"1\":{\"440\":1,\"534\":1}}],[\"停止当前运行的某个容器\",{\"1\":{\"405\":1}}],[\"停止容器但不移除\",{\"1\":{\"403\":1}}],[\"停止\",{\"1\":{\"387\":1}}],[\"迁移方便\",{\"1\":{\"384\":1}}],[\"迁移到另一个平台上\",{\"1\":{\"384\":1}}],[\"弹性伸缩\",{\"1\":{\"384\":1}}],[\"弹出最小的元素\",{\"1\":{\"351\":1}}],[\"善于处理集中爆发的服务器使用压力\",{\"1\":{\"384\":1}}],[\"甚至将整个项目都回退到过去某个时间点的状态\",{\"1\":{\"414\":1}}],[\"甚至可以用之前构建好的镜像作为基础层\",{\"1\":{\"386\":1}}],[\"甚至毫秒级的启动时间\",{\"1\":{\"384\":1}}],[\"甚至都可以不配置\",{\"1\":{\"12\":1}}],[\"赋予应用的隔离性不仅限于彼此隔离\",{\"1\":{\"383\":1}}],[\"赋值\",{\"1\":{\"206\":1}}],[\"赋值给\",{\"1\":{\"189\":1}}],[\"安全性相对\",{\"1\":{\"677\":1}}],[\"安全性较好\",{\"1\":{\"635\":1}}],[\"安全性较差\",{\"1\":{\"635\":1}}],[\"安全\",{\"1\":{\"383\":1}}],[\"安装目录的\",{\"1\":{\"169\":1}}],[\"安装目录下的\",{\"1\":{\"159\":1}}],[\"安装项目包到本地仓库\",{\"1\":{\"166\":1}}],[\"安装官方提供的工具\",{\"1\":{\"47\":1}}],[\"安装新版本\",{\"1\":{\"12\":1}}],[\"安装程序会自动弹窗继续安装\",{\"1\":{\"9\":1}}],[\"安装完成后\",{\"1\":{\"9\":1}}],[\"安装\",{\"0\":{\"9\":1,\"47\":1},\"1\":{\"166\":1}}],[\"裸机服务器和云在内的任何基础设施上运行\",{\"1\":{\"383\":1}}],[\"隔离级别下\",{\"1\":{\"630\":1}}],[\"隔离进程组\",{\"1\":{\"406\":1}}],[\"隔离性\",{\"1\":{\"384\":1,\"627\":2}}],[\"隔离\",{\"1\":{\"382\":1}}],[\"隔离部署\",{\"1\":{\"239\":1}}],[\"运算符间要有空格\",{\"1\":{\"586\":1}}],[\"运算式\",{\"1\":{\"586\":2}}],[\"运输层\",{\"1\":{\"683\":1,\"685\":1}}],[\"运输镜像\",{\"1\":{\"390\":1}}],[\"运输方式\",{\"1\":{\"382\":1}}],[\"运行结果\",{\"1\":{\"580\":1,\"584\":1,\"590\":1,\"600\":1,\"606\":1}}],[\"运行和等待cpu时间片的进程数\",{\"1\":{\"479\":1,\"528\":1}}],[\"运行过程也就是去仓库把镜像拉到本地\",{\"1\":{\"390\":1}}],[\"运行的镜像就是一个容器\",{\"1\":{\"390\":1}}],[\"运行镜像\",{\"1\":{\"390\":1}}],[\"运行一个\",{\"1\":{\"302\":1}}],[\"运行一个协程\",{\"1\":{\"300\":1}}],[\"运行异步程序\",{\"1\":{\"300\":1}}],[\"运行时环境\",{\"1\":{\"378\":1}}],[\"运行时数据区的一部分\",{\"1\":{\"248\":1}}],[\"运行时数据区域是\",{\"1\":{\"237\":1}}],[\"运行时数据区域\",{\"0\":{\"237\":1},\"1\":{\"237\":2}}],[\"运行时数据区域和执行引擎\",{\"1\":{\"235\":1}}],[\"运行时常量池的内容并不全部来自\",{\"1\":{\"247\":1}}],[\"运行时常量池相对于\",{\"1\":{\"247\":1}}],[\"运行时常量池在\",{\"1\":{\"247\":1}}],[\"运行时常量池\",{\"0\":{\"247\":1},\"1\":{\"237\":2,\"245\":1}}],[\"运行上面的代码后\",{\"1\":{\"205\":1}}],[\"运行状态\",{\"1\":{\"201\":1}}],[\"运行任意的检查来验证项目包有效且达到质量标准\",{\"1\":{\"166\":1}}],[\"运行测试有效\",{\"1\":{\"142\":1}}],[\"运行测试类\",{\"1\":{\"41\":1}}],[\"运行命令\",{\"0\":{\"106\":1}}],[\"运行\",{\"0\":{\"270\":1},\"1\":{\"22\":1,\"142\":1,\"158\":1,\"263\":2,\"273\":1,\"389\":1,\"394\":1,\"571\":1,\"580\":1}}],[\"思想\",{\"1\":{\"382\":1}}],[\"云服务提供商通常采用虚拟机技术隔离不同的用户\",{\"1\":{\"380\":1}}],[\"瞬间就能完成启动\",{\"1\":{\"380\":1}}],[\"传输数据\",{\"1\":{\"703\":1}}],[\"传输层的错误检测\",{\"1\":{\"683\":1}}],[\"传输层\",{\"1\":{\"683\":1}}],[\"传输的内容\",{\"1\":{\"655\":1}}],[\"传的内容以字符串为主\",{\"1\":{\"655\":1}}],[\"传统虚拟机技术是虚拟出一套硬件后\",{\"1\":{\"380\":1}}],[\"传递依赖关系\",{\"1\":{\"142\":1}}],[\"传递性依赖是maven2\",{\"1\":{\"20\":1}}],[\"鞋架可以放各种鞋子一样\",{\"1\":{\"379\":1}}],[\"衣柜可以放各种衣服\",{\"1\":{\"379\":1}}],[\"资料汇总\",{\"0\":{\"374\":1}}],[\"资源访问\",{\"1\":{\"738\":1}}],[\"资源会容易受到其他用户的影响\",{\"1\":{\"384\":1}}],[\"资源\",{\"1\":{\"197\":1,\"202\":1,\"386\":1,\"720\":1}}],[\"教程\",{\"1\":{\"373\":1}}],[\"魔术方法之间的冲突\",{\"1\":{\"370\":1}}],[\"装饰列表已排序\",{\"1\":{\"369\":1}}],[\"升序对学生数据进行排序\",{\"1\":{\"368\":1}}],[\"升级到可重复读的隔离级别\",{\"1\":{\"630\":1}}],[\"升级到读提交以上的隔离级别\",{\"1\":{\"630\":1}}],[\"升级配置\",{\"1\":{\"239\":2}}],[\"升级配置2\",{\"1\":{\"239\":1}}],[\"升级是单向的\",{\"1\":{\"220\":1}}],[\"升级过程\",{\"1\":{\"220\":1}}],[\"降序然后\",{\"1\":{\"368\":1}}],[\"降低共享数据的使用\",{\"1\":{\"743\":1}}],[\"降低内存消耗\",{\"1\":{\"249\":1}}],[\"降低\",{\"1\":{\"239\":1}}],[\"稳定\",{\"1\":{\"368\":1}}],[\"排序提供了键函数\",{\"1\":{\"369\":1}}],[\"排序是稳定的\",{\"1\":{\"369\":1}}],[\"排序\",{\"1\":{\"368\":2},\"2\":{\"372\":1}}],[\"排序保证是\",{\"1\":{\"368\":1}}],[\"排除主动将自己从依赖树中删除\",{\"1\":{\"145\":1}}],[\"排除包含一个或多个\",{\"1\":{\"145\":1}}],[\"排除依赖\",{\"0\":{\"145\":1}}],[\"日志中\",{\"1\":{\"631\":1}}],[\"日志查看工具显示和其他人的阅读\",{\"1\":{\"425\":1}}],[\"日志等数据的持久化\",{\"1\":{\"400\":1}}],[\"日志\",{\"1\":{\"357\":1},\"2\":{\"359\":1}}],[\"日志门面\",{\"1\":{\"256\":1}}],[\"入门\",{\"1\":{\"431\":1}}],[\"入门图文教程\",{\"1\":{\"431\":1}}],[\"入队\",{\"1\":{\"354\":1}}],[\"入口文件\",{\"1\":{\"48\":1}}],[\"压入堆中\",{\"1\":{\"351\":2}}],[\"压缩和加密\",{\"1\":{\"683\":1}}],[\"压缩解压缩\",{\"1\":{\"319\":1}}],[\"压缩后\",{\"1\":{\"75\":1}}],[\"压缩后~21kb\",{\"1\":{\"45\":1}}],[\"述\",{\"1\":{\"351\":1}}],[\"函\",{\"1\":{\"351\":1}}],[\"函数时\",{\"1\":{\"721\":1}}],[\"函数时把连接取出来\",{\"1\":{\"714\":1}}],[\"函数被添加到标准库中的\",{\"1\":{\"370\":1}}],[\"函数转换为\",{\"1\":{\"363\":1}}],[\"函数为队列添加超时操作\",{\"1\":{\"292\":1}}],[\"函数来重置连接\",{\"1\":{\"621\":1}}],[\"函数来执行带有超时的操作\",{\"1\":{\"286\":1}}],[\"函数来创建\",{\"1\":{\"280\":1}}],[\"函数将在所有可等待对象结束或取消时返回\",{\"1\":{\"276\":1}}],[\"函数将在任意可等待对象因引发异常而结束时返回\",{\"1\":{\"276\":1}}],[\"函数将在任意可等待对象结束或取消时返回\",{\"1\":{\"276\":1}}],[\"函数用来并发运行作为\",{\"1\":{\"265\":1}}],[\"函数用来运行最高层级的入口点\",{\"1\":{\"265\":1}}],[\"函数\",{\"0\":{\"282\":1,\"365\":1},\"1\":{\"265\":1,\"278\":1,\"280\":1,\"298\":1,\"306\":1,\"325\":1,\"360\":1,\"363\":1,\"366\":1,\"613\":1,\"708\":1}}],[\"函数调用链\",{\"1\":{\"181\":1}}],[\"才向内部的服务器发起syn请求\",{\"1\":{\"717\":1}}],[\"才会进入time\",{\"1\":{\"707\":1}}],[\"才会去仓库中下载\",{\"1\":{\"150\":1}}],[\"才发送\",{\"1\":{\"706\":1}}],[\"才进入closed状态\",{\"1\":{\"705\":1}}],[\"才能继续执行\",{\"1\":{\"629\":1}}],[\"才是一对\",{\"1\":{\"344\":1}}],[\"迭代\",{\"1\":{\"342\":1}}],[\"迭代器的\",{\"1\":{\"192\":2}}],[\"迭代器不是集合\",{\"1\":{\"178\":1}}],[\"迭代器是\",{\"1\":{\"178\":1}}],[\"迭代器\",{\"1\":{\"178\":1}}],[\"长连接的超时时间是\",{\"1\":{\"728\":1}}],[\"长连接的超时时间\",{\"1\":{\"728\":1}}],[\"长连接多用于操作频繁\",{\"1\":{\"713\":1}}],[\"长连接\",{\"1\":{\"646\":1,\"728\":1}}],[\"长连接解决\",{\"1\":{\"621\":1}}],[\"长度\",{\"1\":{\"342\":1}}],[\"长整形数组原子类\",{\"1\":{\"224\":1}}],[\"长整型原子类\",{\"1\":{\"224\":1}}],[\"手动acquire\",{\"1\":{\"336\":1}}],[\"手把手系列\",{\"1\":{\"3\":1}}],[\"计时器\",{\"1\":{\"733\":1}}],[\"计数器\",{\"0\":{\"353\":1}}],[\"计数器等于\",{\"1\":{\"336\":1}}],[\"计数器大于\",{\"1\":{\"336\":1}}],[\"计算出本次通信的会话秘钥\",{\"1\":{\"640\":1}}],[\"计算输入两个参数的和\",{\"1\":{\"613\":1}}],[\"计算机系统可以显著提高程序的执行速度和资源利用率\",{\"1\":{\"737\":1}}],[\"计算机系统基础\",{\"0\":{\"730\":1}}],[\"计算机为了最大限度的发挥机器性能\",{\"1\":{\"210\":1}}],[\"计算机科学中\",{\"1\":{\"177\":1}}],[\"计算的结果并不等于\",{\"1\":{\"189\":1}}],[\"计算得出的\",{\"1\":{\"181\":1}}],[\"至今仍是计算机系统的基础架构\",{\"1\":{\"732\":1}}],[\"至多只有连接发起方的起始序列号能被确认\",{\"1\":{\"704\":1}}],[\"至指定最大值之间的一个计数器\",{\"1\":{\"336\":1}}],[\"至此\",{\"1\":{\"17\":1}}],[\"库实现的表示层\",{\"1\":{\"651\":1}}],[\"库\",{\"1\":{\"334\":1,\"386\":1}}],[\"库不支持异步\",{\"1\":{\"334\":1}}],[\"库和框架的编写者\",{\"1\":{\"298\":1}}],[\"库和框架的开发者\",{\"1\":{\"263\":1}}],[\"于是发送端就会快速地重传\",{\"1\":{\"697\":1}}],[\"于是就会提醒用户该证书存在问题\",{\"1\":{\"641\":1}}],[\"于是就可以通过它找到修改前的记录\",{\"1\":{\"631\":1}}],[\"于是锁就释放了\",{\"1\":{\"625\":1}}],[\"于是分布式版本控制系统\",{\"1\":{\"417\":1}}],[\"于是\",{\"1\":{\"416\":1}}],[\"于是在等待\",{\"1\":{\"333\":1}}],[\"于是出现了数组+红黑树\",{\"1\":{\"249\":1}}],[\"配合\",{\"1\":{\"333\":1,\"652\":1}}],[\"配置文件路径\",{\"1\":{\"578\":1}}],[\"配置文件\",{\"1\":{\"400\":1}}],[\"配置容器间的网络和依赖关系\",{\"1\":{\"399\":1}}],[\"配置等文件外\",{\"1\":{\"386\":1}}],[\"配置和初始化要由spring\",{\"1\":{\"121\":1}}],[\"配置类方式\",{\"1\":{\"121\":1}}],[\"配置+注解\",{\"0\":{\"121\":1}}],[\"配置xml文件\",{\"0\":{\"117\":1}}],[\"配置过\",{\"1\":{\"89\":1}}],[\"配置存储库\",{\"1\":{\"68\":1}}],[\"配置项\",{\"0\":{\"63\":1},\"1\":{\"52\":1,\"53\":1,\"58\":1,\"60\":1}}],[\"配置一个具体的mapper映射文件\",{\"1\":{\"40\":1}}],[\"配置数据源\",{\"1\":{\"40\":1}}],[\"配置common\",{\"1\":{\"32\":1}}],[\"配置commons\",{\"1\":{\"30\":1}}],[\"配置junit\",{\"1\":{\"30\":1}}],[\"配置jackson\",{\"1\":{\"30\":1}}],[\"配置spring\",{\"1\":{\"30\":1}}],[\"配置依赖信息\",{\"1\":{\"20\":1}}],[\"配置了\",{\"1\":{\"14\":1}}],[\"配置方式\",{\"0\":{\"12\":1,\"14\":1,\"16\":1}}],[\"配置\",{\"0\":{\"10\":1,\"100\":1},\"1\":{\"30\":1,\"35\":1,\"82\":1,\"87\":1,\"101\":1,\"170\":3}}],[\"核心原理\",{\"1\":{\"333\":1}}],[\"核心思想是\",{\"1\":{\"226\":1}}],[\"哔哩哔哩\",{\"1\":{\"332\":1}}],[\"防止非法访问等\",{\"1\":{\"731\":1}}],[\"防止其被\",{\"1\":{\"274\":1}}],[\"防火墙在确认了连接的有效性后\",{\"1\":{\"717\":1}}],[\"防范\",{\"0\":{\"659\":1,\"662\":1,\"665\":1}}],[\"防御功能\",{\"1\":{\"331\":1}}],[\"突发性大量请求\",{\"1\":{\"331\":1}}],[\"顺序是不定的\",{\"1\":{\"325\":1}}],[\"顺序很重要\",{\"1\":{\"81\":1}}],[\"期间\",{\"1\":{\"322\":1}}],[\"维护了每个对象的引用计数\",{\"1\":{\"322\":1}}],[\"维护的一个字符串实例的引用表\",{\"1\":{\"249\":1}}],[\"边解释边执行\",{\"1\":{\"322\":1}}],[\"动态类型语言\",{\"1\":{\"322\":1}}],[\"动态链接\",{\"1\":{\"239\":2}}],[\"速度慢的两大原因\",{\"1\":{\"322\":1}}],[\"怎么检测死锁\",{\"0\":{\"625\":1}}],[\"怎么拿到这一位的值呢\",{\"1\":{\"189\":1}}],[\"怎样规避\",{\"1\":{\"322\":1}}],[\"怎样根据任务选择对应技术\",{\"0\":{\"321\":1}}],[\"适用场景\",{\"1\":{\"331\":1}}],[\"适用于\",{\"1\":{\"320\":3}}],[\"适应性自旋锁\",{\"1\":{\"220\":1}}],[\"优化数据布局\",{\"1\":{\"743\":1}}],[\"优化器是确定sql语句的执行方案\",{\"1\":{\"621\":1}}],[\"优势\",{\"1\":{\"322\":1}}],[\"优点\",{\"0\":{\"331\":1},\"1\":{\"320\":3}}],[\"优先级队列\",{\"0\":{\"294\":1},\"1\":{\"301\":1}}],[\"优先使用非公平锁\",{\"1\":{\"217\":1}}],[\"爬虫\",{\"1\":{\"319\":1}}],[\"尽量减少共享数据\",{\"1\":{\"743\":1}}],[\"尽量使同一个缓存行内的数据是由同一个处理器核心频繁访问的\",{\"1\":{\"743\":1}}],[\"尽量使用\",{\"1\":{\"311\":1}}],[\"尽量在开启事务之后\",{\"1\":{\"632\":1}}],[\"尽管操作起来的命令形式非常相近\",{\"1\":{\"420\":1}}],[\"尽管\",{\"1\":{\"292\":1}}],[\"尽管自旋与\",{\"1\":{\"215\":1}}],[\"尽管在构建系统中可以模拟\",{\"1\":{\"146\":1}}],[\"尽管如果\",{\"1\":{\"139\":1}}],[\"⚠️\",{\"1\":{\"310\":1}}],[\"笔记\",{\"2\":{\"307\":1,\"313\":1,\"337\":1,\"355\":1,\"358\":1,\"361\":1,\"371\":1}}],[\"专用异常\",{\"1\":{\"305\":1}}],[\"条件分支等操作\",{\"1\":{\"744\":1}}],[\"条件没有用到索引列\",{\"1\":{\"625\":1}}],[\"条件\",{\"1\":{\"624\":2}}],[\"条件判断式\",{\"1\":{\"593\":3,\"602\":1}}],[\"条件满足\",{\"1\":{\"590\":2}}],[\"条件对象\",{\"1\":{\"304\":1}}],[\"条目通常是\",{\"1\":{\"294\":1}}],[\"发送确认报文\",{\"1\":{\"705\":1}}],[\"发送给服务器\",{\"1\":{\"699\":1}}],[\"发送三次前一个包的\",{\"1\":{\"697\":1}}],[\"发送方根据窗口大小来调整自己的发送速度\",{\"1\":{\"693\":1}}],[\"发送方发送数据的快慢取决于接收方接收能力\",{\"1\":{\"693\":1}}],[\"发送方发送完数据后会等待一定的时间\",{\"1\":{\"691\":1}}],[\"发送端收到这个确认应答以后可以认为在这个序号以前的数据都已经被正常接收\",{\"1\":{\"687\":1}}],[\"发送中断请求\",{\"1\":{\"672\":1}}],[\"发送网络数据的高级\",{\"1\":{\"303\":1}}],[\"发现异常及时联系域名服务商\",{\"1\":{\"671\":1}}],[\"发生读写\",{\"1\":{\"387\":1}}],[\"发布以及部署等工作\",{\"1\":{\"135\":1}}],[\"接收到客户端发来的syn报文之后\",{\"1\":{\"716\":1}}],[\"接收方的\",{\"1\":{\"729\":1}}],[\"接收方将自己剩余缓冲区大小填入\",{\"1\":{\"693\":1}}],[\"接收方在每次接收到消息后回复确认应答号ack\",{\"1\":{\"690\":1}}],[\"接收方进行验证\",{\"1\":{\"689\":1}}],[\"接收端对tcp报文段执行crc算法以检验tcp报文段在传输过程中是否损坏\",{\"1\":{\"687\":1}}],[\"接收端都能及时发现\",{\"1\":{\"648\":1}}],[\"接收后检查该数据帧\",{\"1\":{\"673\":1}}],[\"接收网络数据的高级\",{\"1\":{\"303\":1}}],[\"接下来\",{\"1\":{\"640\":1}}],[\"接下来人们又遇到一个问题\",{\"1\":{\"416\":1}}],[\"接着再传给传输层\",{\"1\":{\"724\":1}}],[\"接着用双方协商的加密算法\",{\"1\":{\"639\":1}}],[\"接着调用引擎的提交事务接口\",{\"1\":{\"622\":1}}],[\"接口的对象包装成一个线程\",{\"1\":{\"233\":1,\"259\":1}}],[\"接口和继承等面向对象的特性\",{\"1\":{\"233\":1,\"259\":1}}],[\"接口实现\",{\"1\":{\"187\":1}}],[\"接口支持以先进先出的方式存储和访问元素\",{\"1\":{\"185\":1}}],[\"接口允许使用者将元素存储在不同的集合中\",{\"1\":{\"184\":1}}],[\"接口说明其支持快速随机访问\",{\"1\":{\"183\":1}}],[\"接口是一个有序的集合\",{\"1\":{\"179\":1}}],[\"接口\",{\"1\":{\"118\":1,\"182\":3,\"187\":1,\"200\":1,\"233\":1,\"259\":1,\"382\":1}}],[\"订阅模式\",{\"1\":{\"301\":1}}],[\"订单查看等\",{\"1\":{\"24\":1}}],[\"订单支付\",{\"1\":{\"24\":1}}],[\"订单服务\",{\"1\":{\"24\":2}}],[\"索引\",{\"0\":{\"299\":1},\"1\":{\"299\":1,\"620\":1,\"624\":2}}],[\"他们之间怎么切换的\",{\"0\":{\"738\":1}}],[\"他们之间的区别不过是虚拟机栈为虚拟机执行\",{\"1\":{\"240\":1}}],[\"他们就可以使用它来将流量引导到不同的网站\",{\"1\":{\"670\":1}}],[\"他们收回了\",{\"1\":{\"419\":1}}],[\"他们需要更细致地控制事件循环行为\",{\"1\":{\"298\":1}}],[\"出来的元素相关操作已经完成\",{\"1\":{\"293\":1}}],[\"出现之前\",{\"1\":{\"161\":1}}],[\"qq\",{\"1\":{\"667\":4}}],[\"q\",{\"1\":{\"463\":1,\"562\":1}}],[\"qsize\",{\"1\":{\"293\":2}}],[\"quic也是需要三次握手来建立连接的\",{\"1\":{\"652\":1}}],[\"quic如何保证可靠传输\",{\"0\":{\"652\":1}}],[\"quic协议的概念和特点\",{\"0\":{\"649\":1}}],[\"quic的packet除了个别报文\",{\"1\":{\"648\":1}}],[\"quic在移动端的表现比tcp好\",{\"1\":{\"648\":1}}],[\"quic基于udp\",{\"1\":{\"648\":1}}],[\"quic\",{\"0\":{\"648\":1},\"1\":{\"648\":1,\"650\":1,\"651\":8,\"652\":3}}],[\"qualified\",{\"1\":{\"244\":2}}],[\"queue~e~\",{\"1\":{\"178\":1}}],[\"queue\",{\"0\":{\"185\":1,\"293\":1},\"1\":{\"178\":4,\"182\":1,\"185\":1,\"226\":2,\"292\":1,\"293\":2,\"294\":1,\"296\":14,\"301\":2}}],[\"query\",{\"1\":{\"118\":1}}],[\"queryall\",{\"1\":{\"118\":3}}],[\"释放锁\",{\"1\":{\"287\":1}}],[\"释放内存资源解决方案\",{\"1\":{\"239\":1}}],[\"例子\",{\"0\":{\"285\":1,\"296\":1},\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"305\":1,\"311\":1,\"334\":1}}],[\"例如4kb\",{\"1\":{\"734\":1}}],[\"例如处理器需要进入低功耗模式时发出的中断\",{\"1\":{\"733\":1}}],[\"例如设备需要传输数据\",{\"1\":{\"733\":1}}],[\"例如设置了\",{\"1\":{\"728\":1}}],[\"例如搭建和配置开发环境\",{\"1\":{\"382\":1}}],[\"例如前端\",{\"1\":{\"380\":1}}],[\"例如原始列表可能包含无法直接排序的复数\",{\"1\":{\"369\":1}}],[\"例如先按部门\",{\"1\":{\"363\":1}}],[\"例如某些进程持续占用系统内存\",{\"1\":{\"239\":1}}],[\"例如不断申请本地内存\",{\"1\":{\"239\":1}}],[\"例如垃圾回收器\",{\"1\":{\"235\":1}}],[\"例如数据源配置\",{\"1\":{\"168\":1}}],[\"例如开发环境\",{\"1\":{\"168\":1}}],[\"例如地址\",{\"1\":{\"139\":1}}],[\"例如\",{\"1\":{\"93\":1,\"97\":1,\"139\":1,\"143\":1,\"146\":1,\"152\":1,\"153\":1,\"156\":1,\"236\":2,\"250\":1,\"273\":1,\"277\":1,\"298\":1,\"319\":1,\"363\":1,\"368\":1,\"369\":1,\"370\":1,\"378\":1,\"380\":1,\"642\":2,\"659\":3,\"713\":1,\"741\":1,\"742\":1}}],[\"例如当前路由为\",{\"1\":{\"59\":1}}],[\"例如当前路径为\",{\"1\":{\"53\":1}}],[\"例如订单的创建\",{\"1\":{\"24\":1}}],[\"例如用户信息的管理\",{\"1\":{\"24\":1}}],[\"套接字服务\",{\"1\":{\"303\":1}}],[\"套接字\",{\"0\":{\"283\":1}}],[\"流量控制\",{\"0\":{\"693\":1},\"1\":{\"683\":1}}],[\"流量控制的网络特性\",{\"1\":{\"650\":1}}],[\"流允许发送和接收数据\",{\"1\":{\"281\":1}}],[\"流是用于处理网络连接的支持\",{\"1\":{\"281\":1}}],[\"流\",{\"0\":{\"281\":1,\"303\":1},\"1\":{\"281\":1}}],[\"示例\",{\"0\":{\"446\":1,\"453\":1,\"459\":1,\"488\":1,\"498\":1,\"540\":1,\"548\":1,\"553\":1,\"558\":1},\"1\":{\"278\":1}}],[\"型数值表示的等待秒数\",{\"1\":{\"275\":1}}],[\"捕获一个\",{\"1\":{\"273\":1}}],[\"秒内都没有再发起新的请求\",{\"1\":{\"728\":1}}],[\"秒的连接给新的连接复\",{\"1\":{\"721\":1}}],[\"秒运行时间\",{\"1\":{\"277\":1}}],[\"秒数后超时\",{\"1\":{\"275\":1}}],[\"秒\",{\"1\":{\"272\":1,\"445\":1,\"457\":1,\"539\":1,\"556\":1,\"605\":1,\"625\":1,\"728\":1}}],[\"秒后打印\",{\"1\":{\"265\":2}}],[\"休眠几秒\",{\"1\":{\"300\":1}}],[\"休眠\",{\"0\":{\"272\":1}}],[\"封装为一个\",{\"1\":{\"271\":1}}],[\"封面\",{\"0\":{\"60\":1}}],[\"理解这些差异将有助于防止你使用中的困惑\",{\"1\":{\"420\":1}}],[\"理解了这三个概念\",{\"1\":{\"385\":1}}],[\"理想情况下应当只被调用一次\",{\"1\":{\"270\":1}}],[\"理论上来说\",{\"1\":{\"181\":1}}],[\"终止程序或通知用户\",{\"1\":{\"733\":1}}],[\"终止以及进程间通信等功能\",{\"1\":{\"731\":1}}],[\"终止状态\",{\"1\":{\"201\":1}}],[\"终端打印出\",{\"1\":{\"571\":1}}],[\"终端\",{\"1\":{\"571\":1}}],[\"终结异步生成器\",{\"1\":{\"270\":1}}],[\"吃函数会运行传入的协程\",{\"1\":{\"270\":1}}],[\"暴露给用户\",{\"1\":{\"269\":1}}],[\"许多人习惯用复制整个项目目录的方式来保存不同的版本\",{\"1\":{\"415\":1}}],[\"许多\",{\"1\":{\"266\":1}}],[\"许多高性能程序通过\",{\"1\":{\"239\":1}}],[\"桥接\",{\"1\":{\"263\":1}}],[\"信号量是一个同步对象\",{\"1\":{\"336\":1}}],[\"信号量一般用于访问有限数量的共享资源\",{\"1\":{\"336\":1}}],[\"信号量\",{\"0\":{\"336\":1},\"1\":{\"304\":1,\"335\":1}}],[\"信号\",{\"1\":{\"263\":1}}],[\"信息\",{\"1\":{\"111\":1,\"126\":1,\"239\":1,\"244\":1,\"651\":1}}],[\"事务性\",{\"1\":{\"741\":1}}],[\"事务期间的多次读取同一条数据\",{\"1\":{\"633\":1}}],[\"事务执行过程中看到的数据\",{\"1\":{\"632\":1}}],[\"事务\",{\"0\":{\"626\":1}}],[\"事先在\",{\"1\":{\"582\":1}}],[\"事后都可以用任何一个镜像出来的本地仓库恢复\",{\"1\":{\"417\":1}}],[\"事件间隔\",{\"1\":{\"478\":1,\"527\":1}}],[\"事件\",{\"1\":{\"288\":1}}],[\"事件可被用来通知多个\",{\"1\":{\"288\":1}}],[\"事件对象\",{\"1\":{\"288\":1,\"304\":1}}],[\"事件循环会运行异步任务和回调\",{\"1\":{\"298\":1}}],[\"事件循环是每个\",{\"1\":{\"298\":1}}],[\"事件循环使用协同日程调度\",{\"1\":{\"280\":1}}],[\"事件循环将以调试模式运行\",{\"1\":{\"270\":1}}],[\"事件循环在同一线程中运行时\",{\"1\":{\"270\":1}}],[\"事件循环\",{\"1\":{\"263\":1,\"270\":1}}],[\"事实上\",{\"1\":{\"233\":1,\"259\":1}}],[\"网线\",{\"1\":{\"683\":1}}],[\"网页通过添加一个script元素\",{\"1\":{\"681\":1}}],[\"网关超时\",{\"1\":{\"642\":1}}],[\"网易云镜像服务\",{\"1\":{\"388\":1}}],[\"网址为\",{\"1\":{\"388\":1}}],[\"网络通信等\",{\"1\":{\"744\":1}}],[\"网络可能刚开始很拥塞\",{\"1\":{\"695\":1}}],[\"网络可以使用的\",{\"1\":{\"400\":1}}],[\"网络层\",{\"1\":{\"683\":2,\"685\":1}}],[\"网络层的\",{\"1\":{\"515\":1}}],[\"网络中的数据包嗅探就好像电话中的监听\",{\"1\":{\"664\":1}}],[\"网络的数据包的技术\",{\"1\":{\"664\":1}}],[\"网络传输\",{\"1\":{\"646\":1}}],[\"网络监控\",{\"0\":{\"541\":1}}],[\"网络流量\",{\"1\":{\"515\":1}}],[\"网络设备的名称\",{\"1\":{\"497\":1,\"547\":1}}],[\"网络适配器等\",{\"1\":{\"406\":1}}],[\"网络和卷\",{\"1\":{\"403\":1}}],[\"网络化\",{\"1\":{\"263\":1}}],[\"网络\",{\"1\":{\"263\":1,\"400\":1}}],[\"网络代码的最佳选择\",{\"1\":{\"263\":1}}],[\"网站挂马\",{\"1\":{\"658\":1}}],[\"网站搜索镜像这种方式外\",{\"1\":{\"388\":1}}],[\"网站\",{\"1\":{\"66\":1}}],[\"往往是构建\",{\"1\":{\"263\":1}}],[\"异或等\",{\"1\":{\"735\":1}}],[\"异步io\",{\"2\":{\"308\":1}}],[\"异步框架的基础\",{\"1\":{\"263\":1}}],[\"异步\",{\"0\":{\"263\":1},\"1\":{\"334\":1}}],[\"异常触发的指令地址pc\",{\"1\":{\"738\":1}}],[\"异常的目的是通知处理器某个指令无法正常执行\",{\"1\":{\"733\":1}}],[\"异常的原因\",{\"1\":{\"219\":1,\"738\":1}}],[\"异常是由计算机系统内部事件触发的\",{\"1\":{\"733\":1}}],[\"异常并且确实被取消\",{\"1\":{\"280\":1}}],[\"异常给打包的协程\",{\"1\":{\"280\":1}}],[\"异常将会被传播\",{\"1\":{\"275\":1}}],[\"异常之后调用\",{\"1\":{\"273\":1}}],[\"异常会和成功的结果一样处理\",{\"1\":{\"273\":1}}],[\"异常\",{\"1\":{\"240\":1,\"243\":1,\"244\":1,\"305\":1,\"733\":1,\"738\":1}}],[\"异常处理完成后\",{\"1\":{\"738\":1}}],[\"异常处理程序完成后\",{\"1\":{\"733\":1}}],[\"异常处理程序可能会修复错误\",{\"1\":{\"733\":1}}],[\"异常处理\",{\"1\":{\"233\":1,\"238\":1,\"259\":1}}],[\"驱动加载\",{\"1\":{\"256\":1}}],[\"源端口\",{\"1\":{\"687\":1}}],[\"源主机如果没有接到icmp的应答包\",{\"1\":{\"673\":1}}],[\"源主机首先会构建一个icmp回送请求消息数据包\",{\"1\":{\"673\":1}}],[\"源地址则是本机的mac地址\",{\"1\":{\"673\":1}}],[\"源码注释里面说明了\",{\"1\":{\"255\":1}}],[\"源代码通常不需要事先编译成可执行程序\",{\"1\":{\"744\":1}}],[\"源代码需要经过编译器将其编译成目标代码\",{\"1\":{\"744\":1}}],[\"源代码是人类可读的文本形式\",{\"1\":{\"744\":1}}],[\"源代码\",{\"1\":{\"210\":1}}],[\"形式的元组\",{\"1\":{\"294\":1}}],[\"形式迭代获取\",{\"1\":{\"255\":1}}],[\"形参\",{\"1\":{\"292\":1}}],[\"形成了一些经验\",{\"1\":{\"2\":1}}],[\"涉及的概念有\",{\"1\":{\"254\":2}}],[\"组织方式\",{\"1\":{\"739\":1}}],[\"组织上位于调用方所在的包中\",{\"1\":{\"253\":1}}],[\"组织上位于实现方所在的包中\",{\"1\":{\"253\":1}}],[\"组相联映射缓存\",{\"1\":{\"739\":1}}],[\"组相联tlb将tlb划分为多个组\",{\"1\":{\"736\":1}}],[\"组相联或直接映射的\",{\"1\":{\"736\":1}}],[\"组合为一个或多个电脑配置环境\",{\"1\":{\"406\":1}}],[\"组合\",{\"1\":{\"342\":1}}],[\"组件\",{\"1\":{\"68\":1}}],[\"概念\",{\"0\":{\"650\":1,\"661\":1,\"664\":1,\"670\":1,\"680\":1,\"716\":1,\"726\":1},\"1\":{\"675\":1}}],[\"概念上更接近调用方\",{\"1\":{\"253\":1}}],[\"概念上更接近实现方\",{\"1\":{\"253\":1}}],[\"概述了文件系统磁盘空间的使用情况\",{\"1\":{\"454\":1}}],[\"概述\",{\"0\":{\"44\":1,\"616\":1,\"682\":1}}],[\"服务软件就会启动一个定时器\",{\"1\":{\"728\":1}}],[\"服务软件一般都会提供\",{\"1\":{\"728\":1}}],[\"服务不可用\",{\"1\":{\"642\":1}}],[\"服务端就需要为每个请求分配一个进程控制块tcb\",{\"1\":{\"716\":1}}],[\"服务端就拒绝继续通信\",{\"1\":{\"665\":1}}],[\"服务端没有收到\",{\"1\":{\"708\":1}}],[\"服务端处于\",{\"1\":{\"708\":1}}],[\"服务端回复的ack报文发生丢失\",{\"1\":{\"708\":1}}],[\"服务端回应\",{\"0\":{\"640\":1}}],[\"服务端回应的内容有\",{\"1\":{\"638\":1}}],[\"服务端接受到了那条失效报文并且回复了确认报文\",{\"1\":{\"703\":1}}],[\"服务端收到第三次握手的\",{\"1\":{\"714\":1}}],[\"服务端收到客户端发起的\",{\"1\":{\"714\":1}}],[\"服务端收到客户端的\",{\"1\":{\"708\":1}}],[\"服务端收到客户端的fin报文时\",{\"1\":{\"706\":1}}],[\"服务端收到客户端的第三个随机数\",{\"1\":{\"640\":1}}],[\"服务端收不到ack会触发超时重传机制\",{\"1\":{\"701\":1}}],[\"服务端因为收不到确认的ack自身也会重传\",{\"1\":{\"701\":1}}],[\"服务端在收到客户端的报文之后会回复syn+ack报文\",{\"1\":{\"701\":1}}],[\"服务端可以知道自己发送消息的能力是正常的\",{\"1\":{\"700\":1}}],[\"服务端可以知道客户端发消息的能力是正常的\",{\"1\":{\"700\":1}}],[\"服务端发消息客户端收\",{\"1\":{\"700\":1}}],[\"服务端一旦验证到请求自己的客户端为不可信任的\",{\"1\":{\"665\":1}}],[\"服务端握手结束通知\",{\"1\":{\"640\":1}}],[\"服务端向客户端发送最后的信息\",{\"1\":{\"640\":1}}],[\"服务端和客户端有了三个随机数\",{\"1\":{\"639\":1}}],[\"服务端的数字证书\",{\"1\":{\"638\":1}}],[\"服务端生产的随机数\",{\"1\":{\"638\":1}}],[\"服务端渲染\",{\"1\":{\"103\":1}}],[\"服务器会认为客户端发生故障\",{\"1\":{\"712\":1}}],[\"服务器只要收到客户端发送的确认请求\",{\"1\":{\"705\":1}}],[\"服务器进入last\",{\"1\":{\"705\":1}}],[\"服务器很可能又发送一些数据\",{\"1\":{\"705\":1}}],[\"服务器数据处理完毕后\",{\"1\":{\"705\":1}}],[\"服务器在收到释放报文后\",{\"1\":{\"705\":1}}],[\"服务器在收到浏览器发送的http请求之后\",{\"1\":{\"672\":1}}],[\"服务器接收到syn后\",{\"1\":{\"699\":1}}],[\"服务器接收到二进制帧后组装成请求进行处理\",{\"1\":{\"647\":1}}],[\"服务器收到请求后\",{\"1\":{\"681\":1}}],[\"服务器收到客户端请求后\",{\"1\":{\"638\":1}}],[\"服务器才做响应\",{\"1\":{\"662\":1}}],[\"服务器发送给客户端一个token\",{\"1\":{\"662\":1}}],[\"服务器推送\",{\"1\":{\"647\":1}}],[\"服务器作为网关或代理\",{\"1\":{\"642\":1}}],[\"服务器无法识别请求方法时可能会返回此代码\",{\"1\":{\"642\":1}}],[\"服务器无法处理\",{\"1\":{\"642\":1}}],[\"服务器不会一直等待\",{\"1\":{\"712\":1}}],[\"服务器不支持请求中所用的\",{\"1\":{\"642\":1}}],[\"服务器不具备完成请求的功能\",{\"1\":{\"642\":1}}],[\"服务器不理解请求的语法\",{\"1\":{\"642\":1}}],[\"服务器内部错误\",{\"1\":{\"642\":1}}],[\"服务器通过返回状态码304可以告诉客户端请求资源成功\",{\"1\":{\"642\":1}}],[\"服务器成功处理了部分get请求\",{\"1\":{\"642\":1}}],[\"服务器已确认并准备切换\",{\"1\":{\"642\":1}}],[\"服务器返回此代码表示已收到请求的第一部分\",{\"1\":{\"642\":1}}],[\"服务器与客户端\",{\"0\":{\"285\":1}}],[\"服务依赖配置\",{\"1\":{\"400\":1}}],[\"服务名字\",{\"1\":{\"400\":1}}],[\"服务卷\",{\"1\":{\"400\":1}}],[\"服务编排\",{\"1\":{\"399\":1}}],[\"服务的具体实现\",{\"1\":{\"254\":1}}],[\"服务在运行时的加载机制\",{\"1\":{\"254\":1}}],[\"服务提供方实现接口\",{\"1\":{\"254\":1}}],[\"服务提供者接口\",{\"1\":{\"252\":1,\"254\":1}}],[\"服务调用方定义接口\",{\"1\":{\"254\":1}}],[\"服务调用者\",{\"1\":{\"252\":1,\"253\":1}}],[\"服务\",{\"1\":{\"254\":1,\"303\":1,\"388\":2,\"400\":3}}],[\"服务接口\",{\"1\":{\"253\":1}}],[\"服务发现\",{\"1\":{\"252\":3,\"655\":1}}],[\"服务方\",{\"1\":{\"252\":1,\"253\":1}}],[\"服务标准接口\",{\"1\":{\"252\":1}}],[\"碰撞\",{\"1\":{\"249\":1}}],[\"碰撞的判断\",{\"1\":{\"191\":1}}],[\"被动关闭方就会认为有错误发生\",{\"1\":{\"719\":1}}],[\"被动关闭的一方会重新发送fin报文\",{\"1\":{\"719\":1}}],[\"被执行的命令行\",{\"1\":{\"506\":1}}],[\"被执行的协程将是第一个开始等待锁的协程\",{\"1\":{\"287\":1}}],[\"被翻译成多国语言\",{\"1\":{\"431\":1}}],[\"被排入计划日程\",{\"1\":{\"306\":1}}],[\"被打包的协程将恢复执行\",{\"1\":{\"280\":1}}],[\"被标记为已完成后取消它将不会取消任何已提交的可等待对象\",{\"1\":{\"273\":1}}],[\"被取消导致其他\",{\"1\":{\"273\":1}}],[\"被取消\",{\"1\":{\"273\":4}}],[\"被等待\",{\"1\":{\"269\":1}}],[\"被用于监视系统输入输出设备和cpu的使用情况\",{\"1\":{\"456\":1,\"555\":1}}],[\"被用来\",{\"1\":{\"268\":1}}],[\"被用作多个提供高性能\",{\"1\":{\"263\":1}}],[\"被所有类共享\",{\"1\":{\"249\":1}}],[\"被驻留的字符串\",{\"1\":{\"249\":1}}],[\"被声明为\",{\"1\":{\"246\":1}}],[\"符号引用包括\",{\"1\":{\"246\":1}}],[\"八种基本类型的值\",{\"1\":{\"246\":1}}],[\"除去\",{\"1\":{\"729\":1}}],[\"除\",{\"1\":{\"586\":1}}],[\"除非没有父类或者父类是\",{\"1\":{\"244\":1}}],[\"除了自己的更新记录总是可见之外\",{\"1\":{\"631\":1}}],[\"除了项目源代码\",{\"1\":{\"413\":1}}],[\"除了使用公开服务外\",{\"1\":{\"388\":1}}],[\"除了直接通过\",{\"1\":{\"388\":1}}],[\"除了提供容器运行时所需的程序\",{\"1\":{\"386\":1}}],[\"除了这三种基本类加载器之外\",{\"1\":{\"236\":1}}],[\"除了内置绑定之外\",{\"1\":{\"156\":1}}],[\"除了\",{\"1\":{\"150\":1,\"233\":1,\"259\":1}}],[\"除了继承某些顶级元素之外\",{\"1\":{\"148\":1}}],[\"除了最琐碎的项目之外\",{\"1\":{\"140\":1}}],[\"好处是避免了连接建立和释放的开销\",{\"1\":{\"728\":1}}],[\"好处是元空间会在运行时根据需要动态调整\",{\"1\":{\"244\":1}}],[\"好处在于减少了\",{\"1\":{\"646\":1}}],[\"好记心不如烂笔头\",{\"1\":{\"2\":1}}],[\"静态变量不能unset\",{\"1\":{\"574\":1}}],[\"静态变量\",{\"1\":{\"244\":1}}],[\"静态方法\",{\"1\":{\"202\":4}}],[\"控制用户对文件的权限的命令\",{\"1\":{\"745\":1}}],[\"控制流指令\",{\"1\":{\"735\":1}}],[\"控制总线\",{\"1\":{\"732\":1}}],[\"控制单元\",{\"1\":{\"732\":1}}],[\"控制和管理计算机硬件设备\",{\"1\":{\"731\":1}}],[\"控制受害者机器向其它网站发起攻击\",{\"1\":{\"658\":1}}],[\"控制企业数据\",{\"1\":{\"658\":1}}],[\"控制容器的重启策略\",{\"1\":{\"400\":2}}],[\"控制\",{\"1\":{\"243\":1,\"263\":1}}],[\"既避免了重复header的传输\",{\"1\":{\"647\":1}}],[\"既然有http协议\",{\"0\":{\"655\":1}}],[\"既然\",{\"1\":{\"369\":1}}],[\"既然要释放当前线程占有的对象锁并让其进入\",{\"1\":{\"204\":1}}],[\"既可以实现成固定大小的\",{\"1\":{\"243\":1}}],[\"垃圾收集堆\",{\"1\":{\"243\":1}}],[\"垃圾的自动收集等是\",{\"1\":{\"233\":1,\"259\":1}}],[\"几乎所有的对象实例都在这里分配内存\",{\"1\":{\"243\":1}}],[\"必须经过两个msl时间\",{\"1\":{\"705\":1}}],[\"必须联网才能工作\",{\"1\":{\"416\":1}}],[\"必须在该类没有任何引用的情况下\",{\"1\":{\"244\":1}}],[\"必须在不同的系统环境下重新编译配置本地语言部分\",{\"1\":{\"242\":1}}],[\"必要的二进制文件和库资源\",{\"1\":{\"380\":1}}],[\"必先利其器\",{\"0\":{\"173\":1}}],[\"免得客户端再次创建连接发送请求到服务器端获取\",{\"1\":{\"647\":1}}],[\"免去移植的工作\",{\"1\":{\"241\":1}}],[\"免费编程书籍\",{\"1\":{\"129\":1}}],[\"栈内的数据在超出其作用域后\",{\"1\":{\"240\":1}}],[\"栈内创建的基本类型数据在超出其作用域后\",{\"1\":{\"239\":1}}],[\"去运行\",{\"1\":{\"240\":1}}],[\"结束\",{\"1\":{\"333\":1,\"744\":1}}],[\"结果\",{\"1\":{\"342\":1,\"343\":1}}],[\"结果仍然按顺序\",{\"1\":{\"325\":1}}],[\"结果值的顺序与\",{\"1\":{\"273\":1}}],[\"结果将是一个由所有返回值聚合而层的列表\",{\"1\":{\"273\":1}}],[\"结构化\",{\"1\":{\"263\":1}}],[\"结合内存映射文件\",{\"1\":{\"239\":1}}],[\"结点状态\",{\"1\":{\"226\":1}}],[\"允许同时处理多条指令\",{\"1\":{\"735\":1}}],[\"允许发送的数据量比较小\",{\"1\":{\"653\":1}}],[\"允许通过指定扩展正则表达式或十六进制表达式来匹配数据包\",{\"1\":{\"515\":1}}],[\"允许用户在一个\",{\"1\":{\"399\":1}}],[\"允许用户管理镜像的\",{\"1\":{\"388\":1}}],[\"允许一个可选函数\",{\"1\":{\"370\":1}}],[\"允许在不同的线程中访问来自事件循环的上下文变量\",{\"1\":{\"277\":1}}],[\"允许应用程序通过\",{\"1\":{\"239\":1}}],[\"允许多个线程持有锁\",{\"1\":{\"227\":1}}],[\"某个端口对应的进程\",{\"0\":{\"747\":1}}],[\"某个流发生丢包了\",{\"1\":{\"651\":1}}],[\"某个节点被设置为\",{\"1\":{\"227\":1}}],[\"某些进程\",{\"1\":{\"239\":1}}],[\"名为\",{\"1\":{\"239\":1}}],[\"名字即可删除\",{\"1\":{\"395\":1}}],[\"名字\",{\"1\":{\"66\":1}}],[\"持久性xss攻击危害性更大\",{\"1\":{\"657\":1}}],[\"持久性xss攻击\",{\"1\":{\"657\":1}}],[\"持久性\",{\"1\":{\"627\":2}}],[\"持久层使用jdbctemplate和druid技术\",{\"1\":{\"111\":1}}],[\"持续观察内存使用状况\",{\"1\":{\"468\":1,\"518\":1}}],[\"持续交付和部署\",{\"1\":{\"384\":1}}],[\"持续交付\",{\"1\":{\"384\":1}}],[\"持有的内存空间6\",{\"1\":{\"239\":1}}],[\"失效\",{\"1\":{\"632\":1}}],[\"失效5\",{\"1\":{\"239\":1}}],[\"失败率\",{\"1\":{\"193\":2}}],[\"限制资源使用或杀死进程\",{\"1\":{\"748\":1}}],[\"限制了数组的最大长度\",{\"1\":{\"239\":1}}],[\"限制2\",{\"1\":{\"239\":1}}],[\"杀死\",{\"1\":{\"239\":3}}],[\"寻找评分低的进程\",{\"1\":{\"239\":1}}],[\"风险\",{\"1\":{\"239\":1}}],[\"风格的图片缩放插件\",{\"1\":{\"94\":1}}],[\"错峰复用\",{\"1\":{\"239\":1}}],[\"错误网关\",{\"1\":{\"642\":1}}],[\"错误请求\",{\"1\":{\"642\":1}}],[\"错误不是由\",{\"1\":{\"239\":1}}],[\"错误\",{\"1\":{\"239\":4}}],[\"强缓存expires来做为缓存判断的标准\",{\"1\":{\"645\":1}}],[\"强缓存指的是只要浏览器判断缓存没有过期\",{\"1\":{\"643\":1}}],[\"强烈推荐\",{\"1\":{\"431\":1}}],[\"强烈建议所有\",{\"1\":{\"8\":1}}],[\"强制发送电子邮件\",{\"1\":{\"658\":1}}],[\"强制缓存\",{\"1\":{\"643\":1}}],[\"强制停止服务的容器\",{\"1\":{\"405\":1}}],[\"强制重新创建所有容器\",{\"1\":{\"402\":1}}],[\"强制超时\",{\"1\":{\"300\":1}}],[\"强制执行\",{\"1\":{\"239\":1}}],[\"却不释放4\",{\"1\":{\"239\":1}}],[\"却存在一定的联系\",{\"1\":{\"189\":1}}],[\"常量池的另一个重要特征是具有动态性\",{\"1\":{\"247\":1}}],[\"常量池是静态信息\",{\"1\":{\"247\":1}}],[\"常量池在类加载过程中被加载到元空间中\",{\"1\":{\"246\":1}}],[\"常量池\",{\"0\":{\"245\":1,\"246\":1},\"1\":{\"244\":1,\"245\":2,\"247\":1}}],[\"常量\",{\"1\":{\"244\":1,\"276\":1}}],[\"常见的缓存一致性协议有以下几种\",{\"1\":{\"741\":1}}],[\"常见的缓存组织方式有\",{\"1\":{\"739\":1}}],[\"常见的替换策略有\",{\"1\":{\"739\":1}}],[\"常见的异常包括\",{\"1\":{\"733\":1}}],[\"常见的外部中断来源包括\",{\"1\":{\"733\":1}}],[\"常见的原因包括以下几类\",{\"1\":{\"239\":1}}],[\"常见用法\",{\"0\":{\"508\":1}}],[\"常见字段的基本含义如下\",{\"1\":{\"506\":1}}],[\"常见操作\",{\"1\":{\"431\":1}}],[\"常见命令\",{\"0\":{\"391\":1,\"401\":1}}],[\"常见原因包括以下几类\",{\"1\":{\"239\":1}}],[\"常用的linux命令\",{\"0\":{\"745\":1}}],[\"常用的替换策略包括最近最少使用\",{\"1\":{\"736\":1}}],[\"常用的是1\",{\"1\":{\"202\":1}}],[\"常用设备有\",{\"1\":{\"683\":1}}],[\"常用参数\",{\"1\":{\"505\":1}}],[\"常用实例\",{\"0\":{\"486\":1,\"544\":1}}],[\"常用选项\",{\"1\":{\"468\":1,\"518\":1}}],[\"常用命令有top\",{\"1\":{\"435\":1}}],[\"常用于获取文件路径\",{\"1\":{\"610\":1}}],[\"常用于获取文件名\",{\"1\":{\"609\":1}}],[\"常用于数据库存储\",{\"1\":{\"400\":1}}],[\"常用于启动应用程序\",{\"1\":{\"400\":1}}],[\"常用链接\",{\"0\":{\"127\":1}}],[\"常用工具分享\",{\"1\":{\"3\":1}}],[\"已创建\",{\"1\":{\"642\":1}}],[\"已用虚拟内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"已用物理内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"已暂存\",{\"1\":{\"421\":1}}],[\"已修改表示修改了文件\",{\"1\":{\"421\":1}}],[\"已修改\",{\"1\":{\"421\":1}}],[\"已提交\",{\"1\":{\"421\":1}}],[\"已经建立了连接\",{\"0\":{\"712\":1}}],[\"已经使用的内存数\",{\"1\":{\"469\":1,\"519\":1}}],[\"已经存在一些库\",{\"1\":{\"241\":1}}],[\"已经变成了\",{\"1\":{\"181\":1}}],[\"已被用满\",{\"1\":{\"239\":1}}],[\"＞\",{\"1\":{\"239\":1}}],[\"卸载\",{\"1\":{\"239\":1}}],[\"≤\",{\"1\":{\"239\":1}}],[\"次数\",{\"1\":{\"445\":1,\"457\":1,\"478\":1,\"527\":1,\"539\":1,\"556\":1}}],[\"次\",{\"1\":{\"239\":1}}],[\"次方\",{\"1\":{\"188\":1}}],[\"列和列之间不存在相互依赖关系\",{\"1\":{\"617\":1}}],[\"列出系统中当前运行的进程\",{\"1\":{\"745\":1}}],[\"列出当前目录所有子目录与文件\",{\"1\":{\"745\":1}}],[\"列出侦听的\",{\"1\":{\"487\":1}}],[\"列出所有正在运行的进程\",{\"1\":{\"507\":1}}],[\"列出所有被侦听端口\",{\"1\":{\"487\":1}}],[\"列出所有端口\",{\"1\":{\"487\":1}}],[\"列出所有容器使用的镜像\",{\"1\":{\"405\":1}}],[\"列出并作为一个组执行的项目\",{\"1\":{\"149\":1}}],[\"列表中\",{\"1\":{\"631\":3}}],[\"列表内置的\",{\"1\":{\"363\":1}}],[\"列表截取\",{\"0\":{\"343\":1}}],[\"列表脚本操作符\",{\"0\":{\"342\":1}}],[\"列表方法\",{\"0\":{\"341\":1}}],[\"列表\",{\"0\":{\"340\":1},\"1\":{\"305\":1,\"353\":1,\"631\":1}}],[\"列表或数组\",{\"1\":{\"239\":1}}],[\"场景列举与解决办法\",{\"1\":{\"239\":1}}],[\"情况的区域\",{\"1\":{\"238\":1}}],[\"独有的\",{\"1\":{\"254\":1}}],[\"独立存储\",{\"1\":{\"238\":1}}],[\"独占式的释放同步状态\",{\"1\":{\"230\":1}}],[\"独占式的获取锁的操作\",{\"1\":{\"230\":1}}],[\"独占式获取同步状态都调用者方法\",{\"1\":{\"230\":1}}],[\"独占式释放同步状态\",{\"1\":{\"229\":1}}],[\"独占获取同步状态\",{\"1\":{\"229\":1}}],[\"独占锁\",{\"1\":{\"227\":1}}],[\"独占\",{\"1\":{\"227\":1,\"741\":1,\"742\":1}}],[\"各种物理设备\",{\"1\":{\"683\":1}}],[\"各类管理员帐号\",{\"1\":{\"658\":1}}],[\"各自生成本次通信的会话秘钥\",{\"1\":{\"639\":1}}],[\"各个\",{\"1\":{\"250\":1}}],[\"各条线程之间计数器互不影响\",{\"1\":{\"238\":1}}],[\"各子模块可以是任意类型模块\",{\"1\":{\"22\":1}}],[\"元空间\",{\"1\":{\"237\":1}}],[\"元素是否存在于列表中\",{\"1\":{\"342\":1}}],[\"元素的查询效率变低\",{\"1\":{\"249\":1}}],[\"元素的时候\",{\"1\":{\"189\":1}}],[\"元素的子元素\",{\"1\":{\"156\":1}}],[\"元素不能重复\",{\"1\":{\"178\":1}}],[\"元素如下表\",{\"1\":{\"170\":1}}],[\"元素中配置\",{\"1\":{\"150\":2}}],[\"元素\",{\"1\":{\"67\":1,\"145\":1}}],[\"堆可以处于物理上不连续的内存空间中\",{\"1\":{\"243\":1}}],[\"堆可以分为新生代和老年代\",{\"1\":{\"243\":1}}],[\"堆是垃圾收集管理器管理的主要区域\",{\"1\":{\"243\":1}}],[\"堆是被所有线程共享的一块内存区域\",{\"1\":{\"243\":1}}],[\"堆的存取方式为管道类型\",{\"1\":{\"243\":1}}],[\"堆占用的内存空间是最多的\",{\"1\":{\"243\":1}}],[\"堆内存空间即可\",{\"1\":{\"239\":1}}],[\"堆内存没有足够的空间存放新创建的对象\",{\"1\":{\"239\":1}}],[\"堆\",{\"0\":{\"243\":1},\"1\":{\"237\":4,\"243\":1}}],[\"孙\",{\"1\":{\"233\":1,\"259\":1}}],[\"应答\",{\"1\":{\"728\":1}}],[\"应答报文\",{\"1\":{\"706\":1}}],[\"应优先将这个报文段交给应用程序\",{\"1\":{\"687\":1}}],[\"应该被谨慎使用\",{\"1\":{\"645\":1}}],[\"应运而生\",{\"1\":{\"416\":1}}],[\"应当很少有必要引用循环对象或调用其方法\",{\"1\":{\"298\":1}}],[\"应当减少碰撞\",{\"1\":{\"188\":1}}],[\"应用于高速传输并且对实时性有要求的通信\",{\"1\":{\"724\":1}}],[\"应用层\",{\"1\":{\"683\":1,\"685\":1,\"728\":1}}],[\"应用数据包可以和\",{\"1\":{\"651\":1}}],[\"应用实例及原理描述\",{\"1\":{\"408\":1}}],[\"应用\",{\"1\":{\"400\":1}}],[\"应用开发者通常应当使用高层级的\",{\"1\":{\"298\":1}}],[\"应用的核心\",{\"1\":{\"298\":1}}],[\"应用的开发\",{\"1\":{\"233\":1,\"259\":1}}],[\"应用场景\",{\"0\":{\"256\":1},\"1\":{\"724\":1}}],[\"应用程序接口\",{\"1\":{\"731\":1}}],[\"应用程序的本地内存泄露\",{\"1\":{\"239\":1}}],[\"应用程序可能会动态创建大量\",{\"1\":{\"239\":1}}],[\"应用程序类加载器\",{\"1\":{\"236\":1}}],[\"应用设置安全哨兵\",{\"1\":{\"233\":1,\"259\":1}}],[\"应用编程接口中有一个网络应用编程接口\",{\"1\":{\"233\":1,\"259\":1}}],[\"令人迷惑的那些特性\",{\"1\":{\"233\":1,\"259\":1}}],[\"甲骨文\",{\"1\":{\"232\":1,\"258\":1}}],[\"月\",{\"1\":{\"232\":1,\"258\":1}}],[\"月推出的\",{\"1\":{\"232\":1,\"258\":1}}],[\"月发布\",{\"1\":{\"8\":1}}],[\"语句的时候会加上\",{\"1\":{\"632\":1}}],[\"语句的\",{\"1\":{\"625\":1}}],[\"语句\",{\"1\":{\"287\":1,\"632\":1}}],[\"语句中使用\",{\"1\":{\"266\":1}}],[\"语言编写的库进行交互\",{\"1\":{\"241\":1}}],[\"语言编写的\",{\"1\":{\"240\":1,\"241\":1}}],[\"语言的核心\",{\"1\":{\"235\":1}}],[\"语言的设计目标之一是适应于动态变化的环境\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言的语法与\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言中\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言具有的许多安全特性以外\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言支持多个线程的同时执行\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言支持\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言全面支持动态绑定\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言提供类\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是动态的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是多线程的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是解释型的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是可移植的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是体系结构中立的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是安全的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是健壮的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是分布式的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是一个纯的面向对象程序设计语言\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是面向对象的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言是简单的\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言不使用指针\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言很接近\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言和\",{\"1\":{\"233\":1,\"259\":1}}],[\"语言\",{\"0\":{\"231\":1,\"257\":1},\"1\":{\"382\":1}}],[\"语法分析根据语法规则判断sql语句是否满足要求\",{\"1\":{\"621\":1}}],[\"语法2\",{\"1\":{\"599\":1}}],[\"语法1\",{\"1\":{\"599\":1}}],[\"语法的版本\",{\"1\":{\"400\":1}}],[\"语法的特殊字符例如\",{\"1\":{\"95\":1}}],[\"语法\",{\"0\":{\"439\":1,\"445\":1,\"452\":1,\"457\":1,\"462\":1,\"468\":1,\"478\":1,\"505\":1,\"518\":1,\"527\":1,\"533\":1,\"539\":1,\"552\":1,\"556\":1,\"561\":1},\"1\":{\"263\":2}}],[\"语法如下\",{\"1\":{\"153\":1}}],[\"语法来设置背景\",{\"1\":{\"61\":1}}],[\"共享内存区段\",{\"1\":{\"467\":1,\"517\":1}}],[\"共享操作系统内核\",{\"1\":{\"380\":1}}],[\"共享式的释放同步状态\",{\"1\":{\"230\":1}}],[\"共享式的获取锁的操作\",{\"1\":{\"230\":1}}],[\"共享式释放同步状态\",{\"1\":{\"229\":1}}],[\"共享式获取同步状态\",{\"1\":{\"229\":1}}],[\"共享锁和独占锁的释放有一定区别\",{\"1\":{\"227\":1}}],[\"共享锁\",{\"1\":{\"227\":1}}],[\"共享\",{\"1\":{\"227\":1,\"741\":2,\"742\":1}}],[\"节点状态信息\",{\"1\":{\"515\":1}}],[\"节点线程等待唤醒\",{\"1\":{\"226\":1}}],[\"节点值\",{\"1\":{\"182\":1}}],[\"阻塞被解除\",{\"1\":{\"293\":1}}],[\"阻塞至队列中所有的元素都被接收和处理完毕\",{\"1\":{\"293\":1}}],[\"阻塞\",{\"1\":{\"272\":1,\"336\":1}}],[\"阻塞队列\",{\"1\":{\"226\":1}}],[\"阻塞状态\",{\"1\":{\"201\":1}}],[\"抽象队列同步器\",{\"1\":{\"226\":1}}],[\"翻译过来就是\",{\"1\":{\"252\":1}}],[\"翻译的意思是\",{\"1\":{\"226\":1}}],[\"翻译成中文就是\",{\"1\":{\"221\":1}}],[\"引擎的默认隔离级别\",{\"1\":{\"629\":1}}],[\"引入logging模块\",{\"1\":{\"357\":1}}],[\"引入了大量的优化如自旋锁\",{\"1\":{\"220\":1}}],[\"引入了\",{\"1\":{\"168\":1,\"249\":1}}],[\"引入了这些依赖关系\",{\"1\":{\"142\":1}}],[\"引用类型更新器原子类\",{\"1\":{\"224\":1}}],[\"引用类型原子类\",{\"1\":{\"224\":1}}],[\"引用类型\",{\"1\":{\"224\":1}}],[\"引用类型数组原子类\",{\"1\":{\"224\":1}}],[\"布尔型原子类\",{\"1\":{\"224\":1}}],[\"整个\",{\"1\":{\"729\":1}}],[\"整个事务中的所有操作要么全部提交成功\",{\"1\":{\"627\":1}}],[\"整形数组原子类\",{\"1\":{\"224\":1}}],[\"整形原子类\",{\"1\":{\"224\":1}}],[\"整句运算式的结果就是将新容量更新为旧容量的1\",{\"1\":{\"181\":1}}],[\"很少的或接近于0时\",{\"1\":{\"479\":1,\"528\":1}}],[\"很少会直接进行推送修改\",{\"1\":{\"417\":1}}],[\"很可能应用没有正常停止\",{\"1\":{\"239\":1}}],[\"很难理解的\",{\"1\":{\"233\":1,\"259\":1}}],[\"很简单\",{\"1\":{\"223\":1,\"420\":1}}],[\"很高兴认识你\",{\"1\":{\"4\":1}}],[\"问题中\",{\"1\":{\"223\":1}}],[\"问题呢\",{\"1\":{\"223\":1}}],[\"问题\",{\"1\":{\"223\":2,\"224\":1,\"239\":1}}],[\"带宽影响\",{\"1\":{\"416\":1}}],[\"带来的限制\",{\"1\":{\"322\":1}}],[\"带来非常大的开销\",{\"1\":{\"223\":1}}],[\"带初始容量参数的构造函数\",{\"1\":{\"181\":1}}],[\"旧的已经关闭的tcp连接发送的数据到达接受方之后\",{\"1\":{\"719\":1}}],[\"旧值\",{\"1\":{\"221\":1}}],[\"旧容量为\",{\"1\":{\"189\":1}}],[\"旧容量大于\",{\"1\":{\"189\":1}}],[\"轻量\",{\"1\":{\"383\":1}}],[\"轻量级锁状态\",{\"1\":{\"220\":1}}],[\"轻量级锁等技术来减少锁操作的开销\",{\"1\":{\"220\":1}}],[\"轻便\",{\"1\":{\"75\":1}}],[\"偏向锁状态\",{\"1\":{\"220\":1}}],[\"偏向锁\",{\"1\":{\"220\":1}}],[\"虚拟地址映射根据特定策略映射到一个组中\",{\"1\":{\"736\":1}}],[\"虚拟地址被分为多个部分\",{\"1\":{\"734\":1}}],[\"虚拟地址由两部分组成\",{\"1\":{\"734\":1}}],[\"虚拟页号\",{\"1\":{\"734\":1}}],[\"虚拟内存被划分为一系列大小相等的页\",{\"1\":{\"734\":1}}],[\"虚拟内存到物理内存的映射方式有两种\",{\"1\":{\"734\":1}}],[\"虚拟内存管理等功能\",{\"1\":{\"731\":1}}],[\"虚拟内存\",{\"1\":{\"515\":1}}],[\"虚拟内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"虚拟的交换文件内存\",{\"1\":{\"467\":1,\"517\":1}}],[\"虚拟的双向队列即不存在队列实例\",{\"1\":{\"226\":1}}],[\"虚拟容器技术的\",{\"1\":{\"406\":1}}],[\"虚拟化技术是一种资源管理技术\",{\"1\":{\"406\":1}}],[\"虚拟化技术可以这样定义\",{\"1\":{\"406\":1}}],[\"虚拟机占用的时间百分比\",{\"1\":{\"479\":1,\"528\":1}}],[\"虚拟机更擅长于彻底隔离整个运行环境\",{\"1\":{\"380\":1}}],[\"虚拟机可以按照自身的需求\",{\"1\":{\"250\":1}}],[\"虚拟机规范的规定\",{\"1\":{\"243\":1}}],[\"虚拟机规范中没有规定任何\",{\"1\":{\"238\":1}}],[\"虚拟机规范中\",{\"1\":{\"237\":1,\"239\":1}}],[\"虚拟机环境\",{\"1\":{\"241\":1}}],[\"虚拟机的发行厂商都需要按照这个规范来实现\",{\"1\":{\"250\":1}}],[\"虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的\",{\"1\":{\"238\":1}}],[\"虚拟机的简称\",{\"1\":{\"235\":1}}],[\"虚拟机栈中的栈帧包括以下几个要素\",{\"1\":{\"239\":1}}],[\"虚拟机栈描述的是\",{\"1\":{\"239\":1}}],[\"虚拟机栈\",{\"0\":{\"239\":1},\"1\":{\"237\":5,\"239\":1}}],[\"虚拟机会将字节码依次解释执行\",{\"1\":{\"235\":1}}],[\"虚拟机\",{\"0\":{\"234\":1,\"380\":1},\"1\":{\"236\":1,\"237\":2,\"380\":1}}],[\"虚拟机中有几种不同的常量池\",{\"1\":{\"245\":1}}],[\"虚拟机中只有一个堆\",{\"1\":{\"243\":1}}],[\"虚拟机中\",{\"1\":{\"219\":1}}],[\"虚拟线程\",{\"0\":{\"196\":1}}],[\"机制实现不同驱动的加载\",{\"1\":{\"256\":1}}],[\"机制包含了两类角色\",{\"1\":{\"254\":1}}],[\"机制也是开发分布式应用的重要手段\",{\"1\":{\"233\":1,\"259\":1}}],[\"机制\",{\"0\":{\"251\":1},\"1\":{\"219\":1}}],[\"公钥\",{\"1\":{\"639\":1}}],[\"公开服务是官方的\",{\"1\":{\"388\":1}}],[\"公开服务\",{\"1\":{\"388\":1}}],[\"公开服务和私有\",{\"1\":{\"388\":1}}],[\"公平的\",{\"1\":{\"287\":1}}],[\"公平锁和非公平锁\",{\"0\":{\"217\":1}}],[\"公司推出的\",{\"1\":{\"382\":1}}],[\"公司公开\",{\"1\":{\"232\":1,\"258\":1}}],[\"公司的产品\",{\"1\":{\"232\":1,\"258\":1}}],[\"公司收购\",{\"1\":{\"232\":1,\"258\":1}}],[\"公司被\",{\"1\":{\"232\":1,\"258\":1}}],[\"公司于\",{\"1\":{\"232\":1,\"258\":1}}],[\"公司改进了\",{\"1\":{\"15\":1}}],[\"递归过程中这个锁会阻塞自己吗\",{\"1\":{\"216\":1}}],[\"递归锁\",{\"0\":{\"216\":1}}],[\"特殊指令\",{\"1\":{\"735\":1}}],[\"特别是无状态地址自动配置\",{\"1\":{\"678\":1}}],[\"特别是\",{\"1\":{\"419\":1}}],[\"特别地\",{\"1\":{\"233\":1,\"259\":1}}],[\"特点\",{\"0\":{\"330\":1,\"651\":1},\"1\":{\"736\":1}}],[\"特指自旋锁的自旋\",{\"1\":{\"215\":1}}],[\"特性\",{\"0\":{\"45\":1,\"162\":1},\"1\":{\"334\":1}}],[\"循环体内的指令和数据会在循环过程中被反复访问\",{\"1\":{\"737\":1}}],[\"循环等待\",{\"1\":{\"625\":1}}],[\"循环控制条件\",{\"1\":{\"599\":1}}],[\"循环显示的次数\",{\"1\":{\"439\":1,\"533\":1}}],[\"循环监控完成情况\",{\"1\":{\"300\":1}}],[\"循环\",{\"1\":{\"238\":1,\"333\":1}}],[\"循环时间过长导致开销太大\",{\"1\":{\"223\":1}}],[\"循环上述步骤直到更新成功\",{\"1\":{\"214\":1}}],[\"循环遍历链表\",{\"1\":{\"187\":1}}],[\"乐观锁回滚重试\",{\"1\":{\"214\":1}}],[\"乐观锁\",{\"1\":{\"214\":1}}],[\"悲观锁阻塞事务\",{\"1\":{\"214\":1}}],[\"悲观锁\",{\"1\":{\"214\":1}}],[\"悲观锁与乐观锁并不是特指某个锁\",{\"1\":{\"214\":1}}],[\"悲观锁与乐观锁\",{\"0\":{\"214\":1}}],[\"锁范围内插入了一条记录\",{\"1\":{\"632\":1}}],[\"锁可被用来保证对共享资源的独占访问\",{\"1\":{\"287\":1}}],[\"锁队列的一个结点\",{\"1\":{\"226\":1}}],[\"锁粗化\",{\"1\":{\"220\":1}}],[\"锁消除\",{\"1\":{\"220\":1}}],[\"锁\",{\"0\":{\"218\":1},\"1\":{\"221\":1}}],[\"锁的获取是\",{\"1\":{\"287\":1}}],[\"锁的效率提升了很多\",{\"1\":{\"220\":1}}],[\"锁的一种宏观分类方式是悲观锁和乐观锁\",{\"1\":{\"214\":1}}],[\"锁的分类\",{\"0\":{\"213\":1}}],[\"锁机制\",{\"0\":{\"212\":1,\"221\":1}}],[\"锁定域名解析状态\",{\"1\":{\"671\":1}}],[\"锁定\",{\"1\":{\"206\":1}}],[\"硬件管理\",{\"1\":{\"731\":1}}],[\"硬件级内存屏障指令\",{\"1\":{\"211\":1}}],[\"硬件对于\",{\"1\":{\"211\":1}}],[\"读提交隔离级别是在每次读取数据时\",{\"1\":{\"633\":1}}],[\"读提交怎么实现的\",{\"0\":{\"633\":1}}],[\"读提交\",{\"1\":{\"629\":1,\"630\":1}}],[\"读未提交\",{\"1\":{\"629\":1,\"630\":1}}],[\"读到了并一定最终存在的数据\",{\"1\":{\"628\":1}}],[\"读屏障\",{\"1\":{\"211\":1}}],[\"读\",{\"1\":{\"211\":1}}],[\"读取和修改文件\",{\"1\":{\"731\":1}}],[\"读取控制台输入一个num值\",{\"1\":{\"606\":1}}],[\"读取值的变量名\",{\"1\":{\"605\":1}}],[\"读取列表中倒数第二个元素\",{\"1\":{\"343\":1}}],[\"读取列表中第三个元素\",{\"1\":{\"343\":1}}],[\"读取\",{\"1\":{\"206\":1,\"651\":1}}],[\"屏幕刷新间隔时间\",{\"1\":{\"439\":1,\"533\":1}}],[\"屏蔽取消操作\",{\"0\":{\"274\":1},\"1\":{\"300\":1}}],[\"屏蔽了底层不同计算机的区别\",{\"1\":{\"205\":1}}],[\"屏障\",{\"1\":{\"211\":6}}],[\"屏障类型\",{\"1\":{\"211\":1}}],[\"保护异常\",{\"1\":{\"733\":1}}],[\"保护一个\",{\"1\":{\"274\":1}}],[\"保活机制的条件\",{\"1\":{\"728\":1}}],[\"保活机制\",{\"1\":{\"728\":1}}],[\"保留\",{\"1\":{\"687\":1}}],[\"保密模式\",{\"1\":{\"439\":1,\"533\":1}}],[\"保存的数据不能超过\",{\"1\":{\"677\":1}}],[\"保存在服务端\",{\"1\":{\"677\":1}}],[\"保存在客户端\",{\"1\":{\"677\":1}}],[\"保存所有文件的修订版本\",{\"1\":{\"416\":1}}],[\"保存arraylist数据的数组\",{\"1\":{\"181\":1}}],[\"保证数据的顺序性和可靠性\",{\"1\":{\"652\":1}}],[\"保证在\",{\"1\":{\"368\":1}}],[\"保证\",{\"1\":{\"211\":4}}],[\"保证原子性需要借助\",{\"1\":{\"210\":1}}],[\"保证可见性与有序性\",{\"1\":{\"210\":1}}],[\"原数据不放到rollback\",{\"1\":{\"624\":1}}],[\"原始项目不必具有可比性\",{\"1\":{\"369\":1}}],[\"原文链接\",{\"1\":{\"363\":1}}],[\"原因是在对方关闭连接之后服务器程序自己没有进一步发出ack信号\",{\"1\":{\"723\":1}}],[\"原因是该\",{\"1\":{\"698\":1}}],[\"原因详解\",{\"1\":{\"322\":1}}],[\"原因分析\",{\"1\":{\"239\":1}}],[\"原语不是线程安全的\",{\"1\":{\"286\":1}}],[\"原子更新长整型字段的更新器\",{\"1\":{\"224\":1}}],[\"原子更新整型的字段的更新器\",{\"1\":{\"224\":1}}],[\"原子更新字段类\",{\"1\":{\"224\":1}}],[\"原子更新带有标记位的引用类型\",{\"1\":{\"224\":1}}],[\"原子更新带有版本号的引用类型\",{\"1\":{\"224\":1}}],[\"原子操作类是\",{\"1\":{\"224\":1}}],[\"原子类\",{\"0\":{\"224\":1}}],[\"原子性\",{\"1\":{\"210\":1,\"627\":2}}],[\"原则\",{\"1\":{\"210\":1}}],[\"原本只有一个结点\",{\"1\":{\"189\":1}}],[\"原本的链表的元素有可能变少\",{\"1\":{\"187\":1}}],[\"原本不是博客的\",{\"1\":{\"2\":1}}],[\"协商出连接id后\",{\"1\":{\"652\":1}}],[\"协商缓存\",{\"1\":{\"643\":1}}],[\"协议栈就会发送探测报文\",{\"1\":{\"728\":1}}],[\"协议记录稳定的状态信息成为了可能\",{\"1\":{\"675\":1}}],[\"协议字段设置为1\",{\"1\":{\"673\":1}}],[\"协议中的\",{\"1\":{\"652\":1}}],[\"协议中和网页缓存相关字段\",{\"1\":{\"645\":1}}],[\"协议没有用四元组的方式来绑定连接\",{\"1\":{\"651\":1}}],[\"协议不与\",{\"1\":{\"651\":1}}],[\"协议握手\",{\"1\":{\"651\":1}}],[\"协议有类似\",{\"1\":{\"651\":1}}],[\"协议在应用层实现了\",{\"1\":{\"650\":1}}],[\"协议版本\",{\"1\":{\"638\":1,\"642\":1}}],[\"协议需要到\",{\"1\":{\"635\":1}}],[\"协议\",{\"1\":{\"208\":1,\"487\":1,\"635\":1,\"640\":1,\"650\":1,\"651\":1}}],[\"协程并发度的控制\",{\"0\":{\"335\":1}}],[\"协程与普通函数运行的不同点在于协程需要使用超级循环来进行调度\",{\"1\":{\"334\":1}}],[\"协程与任务文档\",{\"1\":{\"300\":1}}],[\"协程爬虫执行路径\",{\"1\":{\"333\":1}}],[\"协程的使用以及异步\",{\"0\":{\"334\":1}}],[\"协程的原理\",{\"0\":{\"333\":1}}],[\"协程的原理以及代码\",{\"0\":{\"332\":1}}],[\"协程的对比\",{\"0\":{\"320\":1}}],[\"协程或者调用\",{\"1\":{\"306\":1}}],[\"协程对象\",{\"1\":{\"267\":1}}],[\"协程函数\",{\"1\":{\"267\":2}}],[\"协程属于可等待对象\",{\"1\":{\"267\":1}}],[\"协程运行的原理见\",{\"1\":{\"263\":1}}],[\"协程\",{\"0\":{\"196\":1,\"263\":1,\"265\":1,\"267\":1,\"306\":1,\"318\":1},\"1\":{\"263\":1,\"266\":1,\"267\":1,\"280\":1,\"320\":1,\"333\":1},\"2\":{\"308\":1}}],[\"里的进程\",{\"1\":{\"406\":1}}],[\"里的\",{\"1\":{\"400\":4}}],[\"里的配置文件找到具体的实现类名\",{\"1\":{\"254\":1}}],[\"里只要以\",{\"1\":{\"216\":1}}],[\"里缓存了该内存地址的数据无效\",{\"1\":{\"208\":1}}],[\"里面\",{\"1\":{\"622\":1}}],[\"里面引进的一个新的特性\",{\"1\":{\"254\":1}}],[\"里面的代码不一定立刻运行\",{\"1\":{\"202\":1}}],[\"里面的内容在子项目中依赖时坐标只需要填写group\",{\"1\":{\"21\":1}}],[\"里面定义了\",{\"1\":{\"201\":1}}],[\"里面存放了绝大多数开源软件的包\",{\"1\":{\"158\":1}}],[\"里面有\",{\"1\":{\"48\":1}}],[\"里面找一下在配置的\",{\"1\":{\"17\":1}}],[\"架构软件开发手册对\",{\"1\":{\"208\":1}}],[\"写操作的一致性\",{\"1\":{\"741\":1}}],[\"写回\",{\"1\":{\"735\":1}}],[\"写屏障\",{\"1\":{\"211\":1}}],[\"写\",{\"1\":{\"211\":1}}],[\"写入完成\",{\"1\":{\"316\":1}}],[\"写入\",{\"1\":{\"206\":1}}],[\"写完文档直接发布\",{\"1\":{\"45\":1}}],[\"载入\",{\"1\":{\"206\":1}}],[\"行锁会发生死锁\",{\"1\":{\"625\":1}}],[\"行代码也会被执行\",{\"1\":{\"205\":1}}],[\"行的功能\",{\"1\":{\"347\":1}}],[\"行的判断\",{\"1\":{\"205\":1}}],[\"行的代码虽然执行了但是并没有影响到第\",{\"1\":{\"205\":1}}],[\"行的代码并没有输出且程序没有退出\",{\"1\":{\"205\":1}}],[\"程序会发起系统调用或调用库函数来完成特定任务\",{\"1\":{\"744\":1}}],[\"程序执行过程中可能需要与操作系统或其他库进行交互\",{\"1\":{\"744\":1}}],[\"程序执行的基本过程涉及程序从源代码到可执行程序的转换\",{\"1\":{\"744\":1}}],[\"程序执行的基本过程\",{\"0\":{\"744\":1}}],[\"程序员使用某种编程语言\",{\"1\":{\"744\":1}}],[\"程序员中推广的\",{\"1\":{\"369\":1}}],[\"程序可以访问这些资源\",{\"1\":{\"738\":1}}],[\"程序不能直接访问受保护的系统资源\",{\"1\":{\"738\":1}}],[\"程序不再是绝对安全的\",{\"1\":{\"242\":1}}],[\"程序不再跨平台\",{\"1\":{\"242\":1}}],[\"程序访问的内存地址倾向于集中在一定范围内的现象\",{\"1\":{\"737\":1}}],[\"程序请求操作系统提供服务时触发的异常\",{\"1\":{\"733\":1}}],[\"程序和数据共享同一个存储空间\",{\"1\":{\"732\":1}}],[\"程序甚至是系统环境\",{\"1\":{\"379\":1}}],[\"程序的主入口点\",{\"1\":{\"270\":1}}],[\"程序的执行顺序会按照代码的先后顺序执行\",{\"1\":{\"210\":1}}],[\"程序时\",{\"1\":{\"250\":1}}],[\"程序将失去\",{\"1\":{\"242\":1}}],[\"程序与\",{\"1\":{\"241\":1}}],[\"程序启动报错\",{\"1\":{\"239\":1}}],[\"程序计数器\",{\"0\":{\"238\":1},\"1\":{\"237\":5,\"238\":1}}],[\"程序能够实现跨平台的特性\",{\"1\":{\"235\":1}}],[\"程序中使用\",{\"1\":{\"721\":1}}],[\"程序中所有的线程都共享它\",{\"1\":{\"243\":1}}],[\"程序中\",{\"1\":{\"235\":1}}],[\"程序需要的类能够动态地被载入到运行环境\",{\"1\":{\"233\":1,\"259\":1}}],[\"程序在执行过程中\",{\"1\":{\"737\":1}}],[\"程序在\",{\"1\":{\"233\":1,\"259\":1}}],[\"程序\",{\"0\":{\"270\":1,\"347\":1},\"1\":{\"233\":1,\"259\":1,\"593\":3,\"594\":1,\"599\":2,\"602\":1}}],[\"程序健壮性的重要保证\",{\"1\":{\"233\":1,\"259\":1}}],[\"程序最终会停止且第\",{\"1\":{\"205\":1}}],[\"程序反而不能支持更多的\",{\"1\":{\"198\":1}}],[\"修复一个紧急\",{\"1\":{\"430\":1}}],[\"修复应用程序的线程泄露问题4\",{\"1\":{\"239\":1}}],[\"修饰同步代码块\",{\"1\":{\"218\":2}}],[\"修饰静态同步方法\",{\"1\":{\"218\":2}}],[\"修饰普通同步方法\",{\"1\":{\"218\":2}}],[\"修饰后再运行代码\",{\"1\":{\"205\":1}}],[\"修改后的数据只存在于一个核心的缓存中\",{\"1\":{\"742\":1}}],[\"修改短连接为长连接\",{\"1\":{\"721\":1}}],[\"修改tcp的内核参数\",{\"1\":{\"717\":1}}],[\"修改的数据也不会丢失\",{\"1\":{\"627\":1}}],[\"修改文件以确保此时你的工作目录和这个分支最后一次提交时的样子一模一样\",{\"1\":{\"430\":1}}],[\"修改了缓存里的数据\",{\"1\":{\"207\":1}}],[\"修改或增加依赖或插件等配置信息\",{\"1\":{\"170\":1}}],[\"修改\",{\"1\":{\"65\":1,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"159\":1,\"171\":1,\"239\":1,\"382\":1,\"741\":2,\"742\":1}}],[\"了\",{\"1\":{\"204\":1}}],[\"了解更多\",{\"1\":{\"190\":1}}],[\"了解底层是如何处理链表到红黑树的转换的\",{\"1\":{\"187\":1}}],[\"状态超过\",{\"1\":{\"721\":1}}],[\"状态的\",{\"1\":{\"717\":1}}],[\"状态时\",{\"1\":{\"708\":1}}],[\"状态后\",{\"1\":{\"622\":1}}],[\"状态设置为\",{\"1\":{\"622\":1}}],[\"状态信息刷新的时间间隔\",{\"1\":{\"478\":1,\"527\":1}}],[\"状态\",{\"1\":{\"204\":3,\"227\":2,\"336\":3,\"699\":1,\"701\":1,\"708\":4,\"741\":1}}],[\"唯一\",{\"1\":{\"202\":1}}],[\"唯一坐标\",{\"1\":{\"140\":1}}],[\"守护线程\",{\"1\":{\"202\":1}}],[\"竞争\",{\"1\":{\"202\":1}}],[\"让每个进程都有一致的\",{\"1\":{\"734\":1}}],[\"让滞留在网络中的报文失效\",{\"1\":{\"722\":1}}],[\"让udp协议变得可靠\",{\"1\":{\"650\":1}}],[\"让客户端完成跳转\",{\"1\":{\"642\":1}}],[\"让用户感觉感觉出现了幻觉\",{\"1\":{\"628\":1}}],[\"让其他事务得以继续执行\",{\"1\":{\"625\":1}}],[\"让修改后的配置信息立即生效\",{\"1\":{\"578\":1}}],[\"让列表具备堆特征\",{\"1\":{\"351\":1}}],[\"让\",{\"1\":{\"233\":1,\"259\":1,\"622\":1}}],[\"让操作系统立刻重新进行一次\",{\"1\":{\"202\":1}}],[\"让当前线程休眠多少秒再继续执行\",{\"1\":{\"202\":1}}],[\"功能和\",{\"1\":{\"382\":1,\"406\":1}}],[\"功能分为两种\",{\"1\":{\"227\":1}}],[\"功能\",{\"1\":{\"202\":1,\"515\":1}}],[\"超过最大重传次数还没收到ack会等待一段时间\",{\"1\":{\"708\":1}}],[\"超过n\",{\"1\":{\"440\":1,\"534\":1}}],[\"超用心的一篇文章\",{\"1\":{\"431\":1}}],[\"超级循环\",{\"1\":{\"334\":1}}],[\"超时之后客户端就会发送探测报文\",{\"1\":{\"712\":1}}],[\"超时之后服务端会重传fin报文\",{\"1\":{\"708\":1}}],[\"超时重传和快速重传\",{\"1\":{\"697\":1}}],[\"超时重传\",{\"0\":{\"691\":1}}],[\"超时都会失效\",{\"1\":{\"677\":1}}],[\"超时失效时会话结束\",{\"1\":{\"676\":1}}],[\"超时\",{\"0\":{\"275\":1},\"1\":{\"750\":5}}],[\"超时等待状态\",{\"1\":{\"201\":1}}],[\"超卖\",{\"1\":{\"239\":1}}],[\"超出预期的访问量\",{\"1\":{\"239\":1}}],[\"超大对象\",{\"1\":{\"239\":1}}],[\"超简单\",{\"1\":{\"8\":1}}],[\"准备一个线程list\",{\"1\":{\"324\":1}}],[\"准备一个函数\",{\"1\":{\"324\":1}}],[\"准备打包\",{\"1\":{\"166\":1}}],[\"准确来说这些都是使用线程的方法\",{\"1\":{\"200\":1}}],[\"寄存器和程序计数器的内容\",{\"1\":{\"198\":1}}],[\"给应用程序和用户提供底层抽象的一种系统软件\",{\"1\":{\"731\":1}}],[\"给发送方\",{\"1\":{\"729\":1}}],[\"给你的堆的元素加一个值\",{\"1\":{\"352\":1}}],[\"给当前线程设定名字\",{\"1\":{\"202\":1}}],[\"给每个进程分配时间片以及上下文切换来达到雨露均沾的效果\",{\"1\":{\"198\":1}}],[\"给出的代码均来自\",{\"1\":{\"177\":1}}],[\"然而\",{\"1\":{\"734\":1,\"751\":1}}],[\"然而其调用者已被取消\",{\"1\":{\"274\":1}}],[\"然而一颗\",{\"1\":{\"198\":1}}],[\"然后被丢弃\",{\"1\":{\"750\":1}}],[\"然后丢弃该数据包\",{\"1\":{\"750\":1}}],[\"然后根据异常的原因来调用相应的异常处理函数\",{\"1\":{\"738\":1}}],[\"然后根据平台选择对应的安装包下载即可\",{\"1\":{\"8\":1}}],[\"然后跳转到中断处理程序执行\",{\"1\":{\"733\":1}}],[\"然后向服务器建立新连接\",{\"1\":{\"722\":1}}],[\"然后创建新的完全的连接\",{\"1\":{\"714\":1}}],[\"然后按照id一个个发送\",{\"1\":{\"709\":1}}],[\"然后tcp连接又是什么时候才进入到time\",{\"0\":{\"707\":1}}],[\"然后客户端就进入time\",{\"1\":{\"705\":1}}],[\"然后服务器进入close\",{\"1\":{\"705\":1}}],[\"然后关闭连接\",{\"1\":{\"703\":1}}],[\"然后由小到大逐渐增大发送窗口\",{\"1\":{\"695\":1}}],[\"然后由虚拟机执行这些字节码\",{\"1\":{\"235\":1}}],[\"然后加入mac头\",{\"1\":{\"673\":1}}],[\"然后解析css文件构建渲染树\",{\"1\":{\"672\":1}}],[\"然后访问根域名解析器\",{\"1\":{\"672\":1}}],[\"然后键盘通过总线给\",{\"1\":{\"672\":1}}],[\"然后使用它加密报文\",{\"1\":{\"639\":1}}],[\"然后使用spring框架标签进行托管\",{\"0\":{\"118\":1}}],[\"然后这期间如果其他事务插入了一条记录\",{\"1\":{\"632\":1}}],[\"然后这个隐藏列是个指针\",{\"1\":{\"631\":1}}],[\"然后直到事务结束才会释放锁\",{\"1\":{\"625\":1}}],[\"然后开始记录该语句对应的\",{\"1\":{\"622\":1}}],[\"然后查询结束\",{\"1\":{\"621\":1}}],[\"然后查看\",{\"1\":{\"395\":1}}],[\"然后提交\",{\"1\":{\"424\":1}}],[\"然后只需一个简单的命令即可创建和启动所有服务\",{\"1\":{\"399\":1}}],[\"然后用一条命令把镜像运行起来变成容器\",{\"1\":{\"390\":1}}],[\"然后进一步添加新的层\",{\"1\":{\"386\":1}}],[\"然后进入\",{\"1\":{\"50\":1}}],[\"然后返回负值为小于\",{\"1\":{\"370\":1}}],[\"然后在处理完这些特殊情况后\",{\"1\":{\"733\":1}}],[\"然后在复制的上下文中运行其协程\",{\"1\":{\"280\":1}}],[\"然后在学习的过程中\",{\"1\":{\"2\":1}}],[\"然后等待\",{\"1\":{\"265\":1}}],[\"然后是服务实现类\",{\"1\":{\"254\":1}}],[\"然后导致其他进程没有可用内存\",{\"1\":{\"239\":1}}],[\"然后可以在实现这个\",{\"1\":{\"233\":2,\"259\":2}}],[\"然后又改为\",{\"1\":{\"223\":1}}],[\"然后循环上面的操作直到更新成功\",{\"1\":{\"221\":1}}],[\"然后执行器查询是一个while循环\",{\"1\":{\"621\":1}}],[\"然后执行\",{\"1\":{\"203\":1}}],[\"然后执行如下命令\",{\"1\":{\"48\":1}}],[\"然后调用键盘的中断处理程序\",{\"1\":{\"672\":1}}],[\"然后调用\",{\"1\":{\"203\":1}}],[\"然后一次性将整个链表存入到新的数组中\",{\"1\":{\"189\":1}}],[\"然后\",{\"1\":{\"189\":1,\"369\":1,\"750\":1}}],[\"然后再将cpu切换回用户态\",{\"1\":{\"738\":1}}],[\"然后再发送出去给主机a\",{\"1\":{\"673\":1}}],[\"然后再运行提交命令\",{\"1\":{\"424\":1}}],[\"然后再使用\",{\"1\":{\"368\":1}}],[\"然后再创建\",{\"1\":{\"189\":1}}],[\"然后再重新计算\",{\"1\":{\"189\":1}}],[\"然后再输入cd\",{\"1\":{\"14\":1}}],[\"然后将新的映射加入tlb\",{\"1\":{\"734\":1}}],[\"然后将记录写到\",{\"1\":{\"622\":1}}],[\"然后将执行结果返回\",{\"1\":{\"250\":1}}],[\"然后将评分较低的进程\",{\"1\":{\"239\":1}}],[\"然后将其指向新添加的元素即可\",{\"1\":{\"190\":1}}],[\"然后将\",{\"1\":{\"187\":1,\"622\":1}}],[\"然后替换原本的\",{\"1\":{\"187\":1}}],[\"然后通过旋转\",{\"1\":{\"187\":1}}],[\"然后通过\",{\"1\":{\"187\":1}}],[\"然后检查新容量是否大于最小需要容量\",{\"1\":{\"181\":1}}],[\"然后需要创建一个\",{\"1\":{\"75\":1,\"78\":1}}],[\"然后把\",{\"1\":{\"12\":1,\"672\":1}}],[\"作者个人认为是面试官基础不扎实才会问出来\",{\"1\":{\"727\":1}}],[\"作用范围不同\",{\"1\":{\"677\":1}}],[\"作用\",{\"0\":{\"719\":1},\"1\":{\"675\":1}}],[\"作为可执行程序运行\",{\"1\":{\"571\":1}}],[\"作为\",{\"1\":{\"571\":1}}],[\"作为默认标签\",{\"1\":{\"388\":1}}],[\"作为简化和统一语言努力的一部分\",{\"1\":{\"370\":1}}],[\"作为内容分发网络\",{\"1\":{\"105\":1}}],[\"作业数往往大于机器\",{\"1\":{\"198\":1}}],[\"更好的移动端表现\",{\"1\":{\"648\":1}}],[\"更新了一条事务\",{\"1\":{\"632\":1}}],[\"更形象\",{\"1\":{\"515\":1}}],[\"更像是把数据看作是对小型文件系统的一组快照\",{\"1\":{\"420\":1}}],[\"更快速的启动时间\",{\"1\":{\"384\":1}}],[\"更快捷\",{\"1\":{\"366\":1}}],[\"更强大\",{\"1\":{\"325\":1}}],[\"更轻量级\",{\"1\":{\"320\":1}}],[\"更具健壮性\",{\"1\":{\"233\":1,\"259\":1}}],[\"更名为\",{\"1\":{\"232\":3,\"258\":3}}],[\"更能提高并发\",{\"1\":{\"198\":1}}],[\"更多信息\",{\"1\":{\"487\":1}}],[\"更多关于\",{\"1\":{\"406\":2}}],[\"更多支持\",{\"0\":{\"103\":1}}],[\"更多插件\",{\"0\":{\"98\":1}}],[\"更多用法见\",{\"1\":{\"53\":1}}],[\"雨露均沾\",{\"1\":{\"197\":1}}],[\"系统可以将这些地址所对应的数据和指令存储在更快的存储介质上\",{\"1\":{\"737\":1}}],[\"系统调用与库函数\",{\"1\":{\"744\":1}}],[\"系统调用会触发一个特殊的中断\",{\"1\":{\"738\":1}}],[\"系统调用\",{\"1\":{\"733\":1,\"738\":1}}],[\"系统服务和应用程序支持\",{\"1\":{\"731\":1}}],[\"系统安全和保护\",{\"1\":{\"731\":1}}],[\"系统资源和应用程序的执行\",{\"1\":{\"731\":1}}],[\"系统就会将后面的\",{\"1\":{\"721\":1}}],[\"系统在收到一个syn报文时\",{\"1\":{\"717\":1}}],[\"系统会为此耗尽资源\",{\"1\":{\"716\":1}}],[\"系统变量有$home\",{\"1\":{\"573\":1}}],[\"系统监控命令整理汇总\",{\"1\":{\"568\":1}}],[\"系统监控全能工具\",{\"0\":{\"565\":1}}],[\"系统为准\",{\"1\":{\"515\":1}}],[\"系统\",{\"1\":{\"479\":1,\"528\":1}}],[\"系统性能这时不会受到影响的\",{\"1\":{\"479\":1,\"528\":1}}],[\"系统性能会受到影响\",{\"1\":{\"479\":1,\"528\":1}}],[\"系统负载\",{\"1\":{\"440\":1,\"534\":1}}],[\"系统运行时间\",{\"1\":{\"440\":1,\"534\":1}}],[\"系统当前时间\",{\"1\":{\"440\":1,\"534\":1}}],[\"系统库和设置\",{\"1\":{\"378\":1}}],[\"系统工具\",{\"1\":{\"378\":1,\"731\":1}}],[\"系统将自动激活\",{\"1\":{\"239\":1}}],[\"系统本身也具有很强的可移植性\",{\"1\":{\"233\":1,\"259\":1}}],[\"系统中的几个程序按照顺序一个一个执行\",{\"1\":{\"197\":1}}],[\"系统属性激活\",{\"1\":{\"171\":1}}],[\"串行化\",{\"1\":{\"629\":1,\"630\":1}}],[\"串行就是饭店只有一个服务员\",{\"1\":{\"197\":1}}],[\"串行\",{\"0\":{\"197\":1},\"1\":{\"197\":1}}],[\"饭桌的多少决定客户的处理效率\",{\"1\":{\"196\":1}}],[\"厨师\",{\"1\":{\"196\":1}}],[\"把\",{\"1\":{\"678\":1,\"698\":1}}],[\"把token隐藏在http的head头中\",{\"1\":{\"662\":1}}],[\"把所有进程显示出来\",{\"1\":{\"509\":1}}],[\"把新建的分支删掉\",{\"1\":{\"430\":1}}],[\"把它们添加到暂存区\",{\"1\":{\"424\":1}}],[\"把自己的应用放入容器\",{\"1\":{\"382\":1}}],[\"把线程当成饭店里面的饭桌\",{\"1\":{\"196\":1}}],[\"把进程当成一个饭店\",{\"1\":{\"196\":1}}],[\"把旧扩容阈值赋值给新容量\",{\"1\":{\"189\":1}}],[\"调大netdev\",{\"1\":{\"717\":1}}],[\"调大永久代空间应用重新部署时报错\",{\"1\":{\"239\":1}}],[\"调制解调器\",{\"1\":{\"683\":1}}],[\"调度\",{\"1\":{\"731\":1}}],[\"调度协程\",{\"1\":{\"268\":1}}],[\"调度和分派的基本单位\",{\"1\":{\"196\":1}}],[\"调优\",{\"1\":{\"239\":1}}],[\"调高\",{\"1\":{\"239\":1}}],[\"调整进程优先级\",{\"1\":{\"748\":1}}],[\"调整\",{\"1\":{\"239\":2}}],[\"调用了\",{\"1\":{\"708\":1}}],[\"调用了阻塞类型的系统中断\",{\"1\":{\"198\":1}}],[\"调用此方法将使该\",{\"1\":{\"280\":1}}],[\"调用方无需任何更改\",{\"1\":{\"254\":1}}],[\"调用方基于约定找到对应位置\",{\"1\":{\"254\":1}}],[\"调用方\",{\"1\":{\"252\":1,\"253\":1}}],[\"调用本地方法应该集中在少数几个类中\",{\"1\":{\"242\":1}}],[\"调用本地方法接口时候启用\",{\"1\":{\"240\":1}}],[\"调用该方法并不能保证一定会让出\",{\"1\":{\"202\":1}}],[\"调用这个线程的\",{\"1\":{\"202\":1}}],[\"调用grow方法进行扩容\",{\"1\":{\"181\":1}}],[\"调用\",{\"1\":{\"153\":1,\"202\":1,\"252\":1,\"253\":1,\"267\":1,\"273\":1,\"612\":1,\"613\":1}}],[\"调用插件目标就能实现对应的功能\",{\"1\":{\"151\":1}}],[\"纤程是在同一个进程内部运行的\",{\"1\":{\"196\":1}}],[\"纤程可以在一个线程内创建多个纤程\",{\"1\":{\"196\":1}}],[\"纤程\",{\"0\":{\"196\":1},\"1\":{\"196\":1}}],[\"进一步降低访问主内存的次数和延迟\",{\"1\":{\"740\":1}}],[\"进而添加一些脚本代码嵌入到web页面中去\",{\"1\":{\"656\":1}}],[\"进入fin\",{\"1\":{\"705\":1}}],[\"进入半关闭状态\",{\"1\":{\"705\":1}}],[\"进入syn\",{\"1\":{\"699\":1}}],[\"进入快速恢复算法\",{\"1\":{\"697\":1}}],[\"进入拥塞避免状态\",{\"1\":{\"695\":1}}],[\"进入\",{\"1\":{\"571\":1}}],[\"进入内存交换\",{\"1\":{\"506\":1}}],[\"进入项目目录运行\",{\"1\":{\"423\":1}}],[\"进入了字符串池的字符串\",{\"1\":{\"249\":1}}],[\"进行处理和执行\",{\"1\":{\"732\":1}}],[\"进行开发实现\",{\"1\":{\"382\":1}}],[\"进行等待的任务现在将会阻塞直至\",{\"1\":{\"288\":1}}],[\"进行原子更新时可能出现的\",{\"1\":{\"224\":1}}],[\"进行操作\",{\"1\":{\"223\":1}}],[\"进行扩容\",{\"1\":{\"187\":1}}],[\"进程名称\",{\"1\":{\"748\":1}}],[\"进程会按照cpu占用率进行排序\",{\"1\":{\"748\":1}}],[\"进程管理\",{\"1\":{\"731\":1}}],[\"进程号\",{\"1\":{\"583\":2}}],[\"进程详细信息\",{\"1\":{\"513\":1,\"564\":1}}],[\"进程等待的内核事件名\",{\"1\":{\"506\":1}}],[\"进程等相关信息\",{\"1\":{\"461\":1,\"560\":1}}],[\"进程优先级\",{\"1\":{\"506\":1}}],[\"进程的优先级值\",{\"1\":{\"506\":1}}],[\"进程的cpu占用率\",{\"1\":{\"506\":1}}],[\"进程使用的总cpu时间\",{\"1\":{\"506\":1}}],[\"进程使用的虚拟内存大小\",{\"1\":{\"506\":1}}],[\"进程使用内存的百分比\",{\"1\":{\"506\":1}}],[\"进程激活时间\",{\"1\":{\"506\":1}}],[\"进程id或pkill\",{\"1\":{\"748\":1}}],[\"进程id\",{\"1\":{\"506\":1}}],[\"进程所有者的用户名\",{\"1\":{\"506\":1}}],[\"进程状态\",{\"1\":{\"504\":1,\"506\":1,\"564\":1}}],[\"进程监控命令ps\",{\"1\":{\"501\":1}}],[\"进程花费\",{\"1\":{\"239\":1}}],[\"进程是基本的资源分配单位\",{\"1\":{\"196\":1}}],[\"进程\",{\"0\":{\"196\":1,\"563\":1},\"1\":{\"196\":1,\"463\":1,\"479\":1,\"528\":1,\"562\":1,\"731\":1,\"748\":1}}],[\"输出设备用于将计算机系统的处理结果输出到外部设备\",{\"1\":{\"732\":1}}],[\"输出设备\",{\"1\":{\"732\":1,\"733\":1}}],[\"输出从1加到100的值\",{\"1\":{\"600\":1,\"603\":1}}],[\"输出各个参数\",{\"1\":{\"580\":1}}],[\"输出命令行输入的各个参数信息\",{\"1\":{\"580\":1,\"584\":1}}],[\"输出所有tcp连接状况\",{\"1\":{\"486\":1,\"544\":1}}],[\"输出所有udp连接状况\",{\"1\":{\"486\":1,\"544\":1}}],[\"输出信息的单位\",{\"1\":{\"478\":1,\"527\":1}}],[\"输出到file的log等级的开关\",{\"1\":{\"357\":1}}],[\"输出是执行结果这个\",{\"1\":{\"250\":1}}],[\"输出\",{\"1\":{\"193\":2,\"594\":1}}],[\"输入\",{\"1\":{\"733\":1}}],[\"输入设备和输出设备的通信通道\",{\"1\":{\"732\":1}}],[\"输入设备用于将外部数据输入到计算机系统中\",{\"1\":{\"732\":1}}],[\"输入设备\",{\"1\":{\"732\":1}}],[\"输入设备等\",{\"1\":{\"731\":1}}],[\"输入键盘字符后键盘就会产生扫描数据\",{\"1\":{\"672\":1}}],[\"输入输出端口使用情况\",{\"1\":{\"515\":1}}],[\"输入以下命令\",{\"1\":{\"17\":1}}],[\"输入以下命令行\",{\"1\":{\"14\":1}}],[\"输入回显的前两位\",{\"1\":{\"14\":1}}],[\"输入echo\",{\"1\":{\"14\":1}}],[\"向执行中进程发出信号\",{\"1\":{\"745\":1}}],[\"向客户端发送释放连接报文\",{\"1\":{\"705\":1}}],[\"向客户端发出响应\",{\"1\":{\"638\":1}}],[\"向服务器发送确认包ack\",{\"1\":{\"699\":1}}],[\"向服务器请求\",{\"1\":{\"681\":1}}],[\"向服务端发送如下信息\",{\"1\":{\"639\":1}}],[\"向前纠错牺牲了每个数据包可以发送数据的上限\",{\"1\":{\"648\":1}}],[\"向前纠错\",{\"1\":{\"648\":1}}],[\"向前纠错机制\",{\"1\":{\"648\":1}}],[\"向指定事件循环提交一个协程\",{\"1\":{\"278\":1}}],[\"向此函数提供的任何\",{\"1\":{\"277\":1}}],[\"向底层操作系统请求创建一个新的\",{\"1\":{\"239\":1}}],[\"向hashtable中添加键值对\",{\"1\":{\"193\":1}}],[\"向列表中添加一个元素\",{\"1\":{\"181\":1}}],[\"性能下降\",{\"1\":{\"743\":1}}],[\"性能较低\",{\"1\":{\"741\":1}}],[\"性能可能比很多rpc协议都要好\",{\"1\":{\"655\":1}}],[\"性能高效\",{\"1\":{\"224\":1}}],[\"性能\",{\"1\":{\"193\":1}}],[\"表单数据规定值的类型\",{\"1\":{\"659\":1}}],[\"表锁不会\",{\"1\":{\"625\":1}}],[\"表结构\",{\"1\":{\"624\":1}}],[\"表的结构\",{\"1\":{\"624\":1}}],[\"表明前面排队的任务已经完成\",{\"1\":{\"293\":1}}],[\"表达式\",{\"1\":{\"342\":1,\"343\":1,\"360\":1}}],[\"表达式仍然会引发cancellederror\",{\"1\":{\"274\":1}}],[\"表达式遍历\",{\"1\":{\"192\":1}}],[\"表示数据包在网络中允许经过的最大跳数\",{\"1\":{\"750\":1}}],[\"表示请求建立一个连接\",{\"1\":{\"687\":1}}],[\"表示层提供各种用于应用层数据的编码和转换功能\",{\"1\":{\"683\":1}}],[\"表示层\",{\"1\":{\"683\":2}}],[\"表示服务器当前很忙\",{\"1\":{\"642\":1}}],[\"表示服务器自身工作正常\",{\"1\":{\"642\":1}}],[\"表示服务器响应成功\",{\"1\":{\"642\":1}}],[\"表示服务端的握手阶段已经结束\",{\"1\":{\"640\":1}}],[\"表示随后的信息都将用\",{\"1\":{\"640\":1}}],[\"表示随后的信息都将用会话秘钥加密通信\",{\"1\":{\"639\":1}}],[\"表示客户端的握手阶段已经结束\",{\"1\":{\"639\":1}}],[\"表示生成该版本记录的活跃事务已经被提交\",{\"1\":{\"631\":1}}],[\"表示生成该版本记录的活跃事务依然活跃着\",{\"1\":{\"631\":1}}],[\"表示这个版本的记录是在创建\",{\"1\":{\"631\":2}}],[\"表示这个条目已经被回收\",{\"1\":{\"293\":1}}],[\"表示开启这个逻辑\",{\"1\":{\"625\":1}}],[\"表示对一个已修改文件的当前版本做了标记\",{\"1\":{\"421\":1}}],[\"表示当前使用的\",{\"1\":{\"400\":1}}],[\"表示后面的函数是一个异步\",{\"1\":{\"334\":1}}],[\"表示定义一个协程\",{\"1\":{\"334\":1}}],[\"表示一个异步操作的\",{\"1\":{\"269\":1}}],[\"表示节点在等待队列中\",{\"1\":{\"226\":1}}],[\"表示线程已经准备好了\",{\"1\":{\"226\":1}}],[\"表示线程已取消\",{\"1\":{\"226\":1}}],[\"表示同步状态\",{\"1\":{\"226\":1}}],[\"表示新值\",{\"1\":{\"221\":1}}],[\"表示预期值\",{\"1\":{\"221\":1}}],[\"表示要更新的变量\",{\"1\":{\"221\":1}}],[\"表示要排除的依赖\",{\"1\":{\"145\":1}}],[\"表示该线程已经运行完毕\",{\"1\":{\"201\":1}}],[\"表示该线程需要等待其他线程做出一些特定动作\",{\"1\":{\"201\":1}}],[\"表示距离\",{\"1\":{\"139\":1}}],[\"表示\",{\"1\":{\"15\":1}}],[\"线程2写b的时候\",{\"1\":{\"743\":1}}],[\"线程2去读b\",{\"1\":{\"743\":1}}],[\"线程1修改a\",{\"1\":{\"743\":1}}],[\"线程1先去读a\",{\"1\":{\"743\":1}}],[\"线程1获得时间片\",{\"1\":{\"191\":1}}],[\"线程资源等\",{\"1\":{\"720\":1}}],[\"线程等待该\",{\"1\":{\"336\":1}}],[\"线程等待队列\",{\"1\":{\"226\":1}}],[\"线程池的原理\",{\"0\":{\"329\":1}}],[\"线程池原理\",{\"0\":{\"328\":1},\"1\":{\"325\":1}}],[\"线程会释放\",{\"1\":{\"322\":1}}],[\"线程会自动苏醒\",{\"1\":{\"204\":1}}],[\"线程中调度一个协程\",{\"1\":{\"300\":1}}],[\"线程中调用\",{\"1\":{\"278\":1}}],[\"线程中异步地运行一个函数\",{\"1\":{\"300\":1}}],[\"线程同步\",{\"1\":{\"286\":1}}],[\"线程数超过\",{\"1\":{\"239\":1}}],[\"线程数超过操作系统最大线程数\",{\"1\":{\"239\":1}}],[\"线程时没有足够的资源分配\",{\"1\":{\"239\":1}}],[\"线程都需要占用一定的内存空间\",{\"1\":{\"239\":1}}],[\"线程恢复等基础功能都需要依赖计数器来完成\",{\"1\":{\"238\":1}}],[\"线程私有\",{\"1\":{\"237\":2,\"238\":1}}],[\"线程共享\",{\"1\":{\"237\":2}}],[\"线程模型\",{\"1\":{\"235\":1}}],[\"线程的显示方式的切换\",{\"1\":{\"463\":1,\"562\":1}}],[\"线程的结果\",{\"1\":{\"278\":1}}],[\"线程的活动由一组方法来控制\",{\"1\":{\"233\":1,\"259\":1}}],[\"线程的生命周期和状态\",{\"0\":{\"201\":1}}],[\"线程引用\",{\"1\":{\"226\":1}}],[\"线程内存模型是标准化的\",{\"1\":{\"205\":1}}],[\"线程不会自动苏醒\",{\"1\":{\"204\":1}}],[\"线程是一种特殊的对象\",{\"1\":{\"233\":1,\"259\":1}}],[\"线程是否存活\",{\"1\":{\"202\":1}}],[\"线程是操作系统中的基本执行单元\",{\"1\":{\"196\":1}}],[\"线程启动后调用该方法\",{\"1\":{\"202\":1}}],[\"线程调用了\",{\"1\":{\"201\":1}}],[\"线程被创建出来但没有立马被调用\",{\"1\":{\"201\":1}}],[\"线程被阻塞\",{\"1\":{\"198\":1}}],[\"线程拥有的状态\",{\"1\":{\"201\":1}}],[\"线程体\",{\"1\":{\"200\":1}}],[\"线程切换意味着需要保存当前线程的上下文\",{\"1\":{\"198\":1}}],[\"线程上下文是指某一时间点\",{\"1\":{\"198\":1}}],[\"线程\",{\"0\":{\"196\":1},\"1\":{\"196\":1,\"198\":1,\"223\":6,\"226\":2,\"237\":4,\"239\":3}}],[\"线程安全地更新变量的方式\",{\"1\":{\"224\":1}}],[\"线程安全性\",{\"1\":{\"193\":1}}],[\"线程安全\",{\"1\":{\"183\":1,\"278\":1}}],[\"随之协议便从安全的https变成了不安全的http\",{\"1\":{\"664\":1}}],[\"随机替换\",{\"1\":{\"736\":1,\"739\":1}}],[\"随机磁盘读写的时候\",{\"1\":{\"479\":1,\"528\":1}}],[\"随机出队\",{\"1\":{\"354\":1}}],[\"随机队列\",{\"0\":{\"354\":1}}],[\"随后\",{\"1\":{\"191\":1}}],[\"随着计算机科技的发展\",{\"1\":{\"751\":1}}],[\"随着依赖树变得庞大而复杂\",{\"1\":{\"140\":1}}],[\"随着页面的增多\",{\"1\":{\"52\":1}}],[\"做任何更改\",{\"1\":{\"648\":1}}],[\"做到同一个连接并发处理多个请求\",{\"1\":{\"647\":1}}],[\"做了延迟载入\",{\"1\":{\"255\":1}}],[\"做了改进\",{\"1\":{\"191\":1}}],[\"做法是将新元素插入到原本链表的尾部\",{\"1\":{\"190\":1}}],[\"做法是直接将新元素作为头结点\",{\"1\":{\"190\":1}}],[\"避免跨核访问\",{\"1\":{\"743\":1}}],[\"避免方法\",{\"0\":{\"717\":1,\"721\":1}}],[\"避免历史连接\",{\"0\":{\"703\":1}}],[\"避免拥塞算法\",{\"0\":{\"696\":1}}],[\"避免了超时重传\",{\"1\":{\"694\":1}}],[\"避免公用的服务器\",{\"1\":{\"384\":1}}],[\"避免系统因为创建线程过多导致负荷过大\",{\"1\":{\"331\":1}}],[\"避免争用2\",{\"1\":{\"239\":1}}],[\"避免变成环型结构\",{\"1\":{\"190\":1}}],[\"避免搜索索引冲突\",{\"1\":{\"93\":1}}],[\"头部\",{\"1\":{\"729\":2}}],[\"头部之后\",{\"1\":{\"729\":1}}],[\"头部插入\",{\"1\":{\"182\":1}}],[\"头信息仅显示一次\",{\"1\":{\"478\":1,\"527\":1}}],[\"头结点固定不变\",{\"1\":{\"190\":1}}],[\"头插法\",{\"1\":{\"190\":1}}],[\"头插法可能会导致链表中的结点指向错误的位置\",{\"1\":{\"190\":1}}],[\"及格\",{\"1\":{\"594\":2}}],[\"及之前的版本\",{\"1\":{\"249\":1}}],[\"及之前版本的\",{\"1\":{\"190\":1}}],[\"及其后的读操作才能执行\",{\"1\":{\"211\":1}}],[\"及其后的写操作执行前\",{\"1\":{\"211\":2}}],[\"及后续读取操作之前执行\",{\"1\":{\"211\":1}}],[\"及更高版本引入了\",{\"1\":{\"193\":1}}],[\"及以上版本进行商业性质\",{\"1\":{\"8\":1}}],[\"虽然处理器核心访问的数据实际上并没有共享\",{\"1\":{\"743\":1}}],[\"虽然我们实际过程中都没有按osi分为七层\",{\"1\":{\"684\":1}}],[\"虽然大部分rpc协议底层使用tcp\",{\"1\":{\"655\":1}}],[\"虽然不会看到这个文件\",{\"1\":{\"386\":1}}],[\"虽然\",{\"1\":{\"191\":1,\"193\":1,\"255\":1}}],[\"虽然数组大小扩大了一倍\",{\"1\":{\"189\":1}}],[\"虽然这是一种属于自己的快乐方式\",{\"1\":{\"1\":1}}],[\"位于l2缓存之外\",{\"1\":{\"739\":1}}],[\"位于l1缓存之外\",{\"1\":{\"739\":1}}],[\"位于后台的进程组\",{\"1\":{\"506\":1}}],[\"位增加到\",{\"1\":{\"678\":1}}],[\"位进程的地址空间限制\",{\"1\":{\"239\":1}}],[\"位\",{\"1\":{\"189\":4,\"678\":1}}],[\"位置\",{\"1\":{\"169\":1}}],[\"放宽了对可选项长度的严格要求\",{\"1\":{\"678\":1}}],[\"放弃本次操作\",{\"1\":{\"221\":1,\"223\":1}}],[\"放入新的数组中\",{\"1\":{\"189\":1}}],[\"放在dependencymanagement中的内容主要目的是进行版本管理\",{\"1\":{\"21\":1}}],[\"遍历hashtable\",{\"1\":{\"193\":1}}],[\"遍历\",{\"1\":{\"192\":1}}],[\"遍历顺序就是插入顺序\",{\"1\":{\"190\":1}}],[\"遍历链表\",{\"1\":{\"189\":1}}],[\"遍历树的元素将它们重新计算\",{\"1\":{\"189\":1}}],[\"遍历到最后一个结点\",{\"1\":{\"187\":1}}],[\"重发次数由内核参数控制\",{\"1\":{\"708\":1}}],[\"重置为\",{\"1\":{\"697\":1}}],[\"重置连接标志\",{\"1\":{\"687\":1}}],[\"重传\",{\"1\":{\"701\":1,\"708\":2}}],[\"重传最大重传次数由内核参数控制\",{\"1\":{\"701\":1}}],[\"重传的syn报文序列号和之前相同\",{\"1\":{\"701\":1}}],[\"重传丢失的数据包\",{\"1\":{\"698\":1}}],[\"重传丢失的报文之后数据才会交给\",{\"1\":{\"651\":1}}],[\"重传机制主要有两种\",{\"1\":{\"697\":1}}],[\"重传该段报文即可\",{\"1\":{\"694\":1}}],[\"重命名为\",{\"1\":{\"427\":1}}],[\"重复步骤1\",{\"1\":{\"750\":1}}],[\"重复\",{\"1\":{\"342\":1}}],[\"重用线程资源\",{\"1\":{\"331\":1}}],[\"重要\",{\"1\":{\"267\":1}}],[\"重启\",{\"1\":{\"239\":1,\"400\":1}}],[\"重量级锁状态\",{\"1\":{\"220\":1}}],[\"重排序会遵循\",{\"1\":{\"210\":1}}],[\"重点来了\",{\"1\":{\"189\":1}}],[\"重新计算一遍\",{\"1\":{\"717\":1}}],[\"重新计算数组索引\",{\"1\":{\"189\":1}}],[\"重新发送syn报文\",{\"1\":{\"701\":1}}],[\"重新发送请求获取资源\",{\"1\":{\"642\":1}}],[\"重新构建镜像\",{\"1\":{\"402\":1}}],[\"重新\",{\"1\":{\"387\":1}}],[\"重新转换为链表\",{\"1\":{\"189\":1}}],[\"重写父类方法\",{\"1\":{\"178\":1}}],[\"使基于无状态的\",{\"1\":{\"675\":1}}],[\"使通讯的两端认为他们正在通过一个私密的连接与对方直接对话\",{\"1\":{\"664\":1}}],[\"使别的用户访问都会执行相应的嵌入代码\",{\"1\":{\"656\":1}}],[\"使之包含在下次提交的快照中\",{\"1\":{\"421\":1}}],[\"使其将缓存行状态标记为无效\",{\"1\":{\"742\":1}}],[\"使其看起来像回到了你在那个分支上最后一次提交的样子\",{\"1\":{\"430\":1}}],[\"使其免受外在环境差异\",{\"1\":{\"378\":1}}],[\"使其进位\",{\"1\":{\"189\":1}}],[\"使访问器功能更容易\",{\"1\":{\"366\":1}}],[\"使值逆序排列\",{\"1\":{\"352\":1}}],[\"使得不同处理器核心访问的数据位于不同的缓存行内\",{\"1\":{\"743\":1}}],[\"使得程序可以在运行时被修改\",{\"1\":{\"732\":1}}],[\"使得程序员不必为内存管理而担忧\",{\"1\":{\"233\":1,\"259\":1}}],[\"使得处于不同\",{\"1\":{\"406\":1}}],[\"使得\",{\"1\":{\"235\":1,\"406\":1}}],[\"使得大多数程序员很容易学习和使用\",{\"1\":{\"233\":1,\"259\":1}}],[\"使得查询元素的操作陷入死循环\",{\"1\":{\"190\":1}}],[\"使\",{\"1\":{\"208\":1}}],[\"使用tail命令查看实时的滚动日志\",{\"1\":{\"749\":1}}],[\"使用top命令可以实时查看系统的资源使用情况\",{\"1\":{\"748\":1}}],[\"使用top命令来查看实时的系统状态\",{\"1\":{\"747\":1}}],[\"使用free命令可以查看系统的内存使用情况\",{\"1\":{\"748\":1}}],[\"使用lsof\",{\"1\":{\"747\":1}}],[\"使用netstat\",{\"1\":{\"747\":1}}],[\"使用nginx作为代理服务器和用户交互\",{\"1\":{\"681\":1}}],[\"使用ps命令可以查看当前运行的进程\",{\"1\":{\"748\":1}}],[\"使用ps命令来查看当前系统中正在运行的线程\",{\"1\":{\"747\":1}}],[\"使用ps\",{\"1\":{\"747\":1}}],[\"使用uptime命令查看系统运行时间和平均负载\",{\"1\":{\"747\":1}}],[\"使用udp传输\",{\"1\":{\"668\":1}}],[\"使用udp实现可靠传输\",{\"1\":{\"648\":1}}],[\"使用以下命令查看页大小\",{\"1\":{\"746\":1}}],[\"使用无锁数据结构\",{\"1\":{\"743\":1}}],[\"使用无参构造函数创建\",{\"1\":{\"181\":1}}],[\"使用vpn作为索引来查找对应的pfn\",{\"1\":{\"734\":1}}],[\"使用页表\",{\"1\":{\"734\":1}}],[\"使用户能够方便地操作计算机系统\",{\"1\":{\"731\":1}}],[\"使用户可以比原本的配置更好的方式来应用这些电脑硬件资源\",{\"1\":{\"406\":1}}],[\"使用紧急指针是发送端向另一端发送紧急数据的一种方式\",{\"1\":{\"687\":1}}],[\"使用此方法后\",{\"1\":{\"671\":1}}],[\"使用有别于其他平台的用户名和强密码\",{\"1\":{\"671\":1}}],[\"使用https协议\",{\"1\":{\"665\":1}}],[\"使用多路复用的技术\",{\"1\":{\"647\":1}}],[\"使用场景\",{\"1\":{\"624\":1}}],[\"使用$\",{\"1\":{\"600\":2}}],[\"使用变量\",{\"1\":{\"574\":1}}],[\"使用dmesg可以有效诊断机器硬件故障或者添加硬件出现的问题\",{\"1\":{\"515\":1}}],[\"使用default属性指定实际运行时使用的环境\",{\"1\":{\"40\":1}}],[\"使用虚拟内存大小\",{\"1\":{\"479\":1,\"528\":1}}],[\"使用iotop命令可以很方便的查看\",{\"1\":{\"461\":1,\"560\":1}}],[\"使用快速入门\",{\"0\":{\"422\":1}}],[\"使用数据卷后\",{\"1\":{\"387\":1}}],[\"使用数组来实现去重的效率低\",{\"1\":{\"177\":1}}],[\"使用with\",{\"1\":{\"336\":1}}],[\"使用任务队列\",{\"1\":{\"330\":1}}],[\"使用线程池\",{\"0\":{\"325\":1}}],[\"使用了锁的机制\",{\"1\":{\"322\":1}}],[\"使用高层级的\",{\"1\":{\"280\":1}}],[\"使用基于回调的代码\",{\"1\":{\"269\":1}}],[\"使用永久代的方式来实现方法区\",{\"1\":{\"244\":1}}],[\"使用该子类创建的对象即为线程\",{\"1\":{\"233\":1,\"259\":1}}],[\"使用型构为\",{\"1\":{\"233\":1,\"259\":1}}],[\"使用成员变量\",{\"1\":{\"226\":1}}],[\"使用原子的方式更新数组里的某个元素\",{\"1\":{\"224\":1}}],[\"使用原子的方式更新基本类型\",{\"1\":{\"224\":1}}],[\"使用迭代器的方式遍历\",{\"1\":{\"192\":1}}],[\"使用新容量创建一个新的数组\",{\"1\":{\"189\":1}}],[\"使用带有初始化大小的构造函数创建\",{\"1\":{\"189\":1}}],[\"使用列表而不是树的计数阈值\",{\"1\":{\"187\":1}}],[\"使用扰动函数是为了防止一些实现比较差的\",{\"1\":{\"187\":1}}],[\"使用给定的集合创建一个列表\",{\"1\":{\"181\":1}}],[\"使用集合创建的构造函数\",{\"1\":{\"181\":1}}],[\"使用方便的接口和类\",{\"1\":{\"177\":1}}],[\"使用合适的单元测试框架运行测试\",{\"1\":{\"166\":1}}],[\"使用junit5以上版本完成测试\",{\"1\":{\"111\":1}}],[\"使用java配置类代替xml配置文件\",{\"1\":{\"111\":1}}],[\"使用注解方式进行组件管理\",{\"1\":{\"111\":1}}],[\"使用默认的浏览器打开文档\",{\"1\":{\"106\":1}}],[\"使用不同的索引作为路径前缀\",{\"1\":{\"93\":1}}],[\"使用别的文件\",{\"1\":{\"71\":1}}],[\"使用用户名\",{\"1\":{\"69\":1}}],[\"使用\",{\"0\":{\"370\":1},\"1\":{\"8\":1,\"17\":1,\"105\":3,\"106\":1,\"143\":1,\"153\":1,\"192\":2,\"200\":1,\"204\":1,\"206\":1,\"239\":1,\"263\":2,\"287\":1,\"300\":2,\"301\":1,\"322\":2,\"325\":3,\"363\":1,\"382\":1,\"384\":1,\"394\":1,\"397\":1,\"587\":1,\"635\":2}}],[\"触发用户态和内核态之间的切换的场景\",{\"1\":{\"738\":1}}],[\"触发超时重传\",{\"1\":{\"701\":1}}],[\"触发\",{\"1\":{\"189\":1}}],[\"前者是\",{\"1\":{\"635\":1}}],[\"前后两次读的数据可能会出现不一致\",{\"1\":{\"633\":1}}],[\"前后两次查询的记录条目就不一样了\",{\"1\":{\"632\":1}}],[\"前后指令不能重排序\",{\"1\":{\"208\":1}}],[\"前已经提交的事务生成的\",{\"1\":{\"631\":1}}],[\"前的所有部分\",{\"1\":{\"609\":1}}],[\"前的部分\",{\"1\":{\"333\":1}}],[\"前一层是后一层的基础\",{\"1\":{\"386\":1}}],[\"前一个节点\",{\"1\":{\"226\":1}}],[\"前面讲过镜像使用的是分层存储\",{\"1\":{\"387\":1}}],[\"前面部分是一致的\",{\"1\":{\"227\":1}}],[\"前面也提到了\",{\"1\":{\"191\":1}}],[\"前驱节点\",{\"1\":{\"226\":1}}],[\"前驱结点\",{\"1\":{\"182\":2}}],[\"前缀\",{\"1\":{\"211\":1}}],[\"前缀指令\",{\"1\":{\"208\":1}}],[\"前提是\",{\"1\":{\"188\":1}}],[\"亿长度的数组\",{\"1\":{\"188\":1}}],[\"亿的映射空间\",{\"1\":{\"188\":1}}],[\"变为0\",{\"1\":{\"750\":1}}],[\"变为线性增长\",{\"1\":{\"696\":1}}],[\"变化如下\",{\"1\":{\"697\":1}}],[\"变成了双向链表\",{\"1\":{\"187\":1}}],[\"变量变化\",{\"1\":{\"599\":1}}],[\"变量输出为环境变量\",{\"1\":{\"578\":1}}],[\"变量名\",{\"1\":{\"574\":2,\"599\":1,\"605\":1}}],[\"变量名一般习惯用大写\",{\"1\":{\"574\":1}}],[\"变量名=变量值\",{\"1\":{\"574\":1,\"578\":1}}],[\"变量名可以由字母\",{\"1\":{\"573\":1}}],[\"变量名为classpath\",{\"1\":{\"16\":1}}],[\"变量名为java\",{\"1\":{\"12\":1}}],[\"变量分为系统变量和自定义变量\",{\"1\":{\"573\":1}}],[\"变量\",{\"1\":{\"211\":1}}],[\"变量值为\",{\"1\":{\"16\":1}}],[\"变量值为本机安装\",{\"1\":{\"12\":1}}],[\"找到了就将记录返回给执行数\",{\"1\":{\"621\":1}}],[\"找到暂存区域的文件\",{\"1\":{\"421\":1}}],[\"找到具体的实现\",{\"1\":{\"254\":1}}],[\"找到问题并修改代码\",{\"1\":{\"239\":1}}],[\"找到一个已经存在的\",{\"1\":{\"187\":1}}],[\"找不到结果\",{\"1\":{\"93\":1}}],[\"转换后呈现出来并可供分割\",{\"1\":{\"406\":1}}],[\"转换到一个浮点数\",{\"1\":{\"360\":1}}],[\"转换成\",{\"1\":{\"187\":1}}],[\"转换成红黑树\",{\"1\":{\"187\":1}}],[\"转换红黑树\",{\"1\":{\"187\":1}}],[\"转换为表达式字符串\",{\"1\":{\"360\":1}}],[\"转换为字符串\",{\"1\":{\"360\":1}}],[\"转换为一个列表\",{\"1\":{\"360\":1}}],[\"转换为一个元组\",{\"1\":{\"360\":1}}],[\"转换为一个长整数\",{\"1\":{\"360\":1}}],[\"转换为一个整数\",{\"1\":{\"360\":1}}],[\"转换为一般的搜索方法\",{\"1\":{\"312\":1}}],[\"转换为指定类型的数组对象\",{\"1\":{\"178\":1}}],[\"转换为数组对象\",{\"1\":{\"178\":1}}],[\"|\",{\"1\":{\"353\":1,\"492\":1,\"493\":1,\"494\":3,\"507\":1,\"511\":1,\"512\":1,\"513\":1,\"564\":1,\"747\":1}}],[\"|=\",{\"1\":{\"189\":6}}],[\"||\",{\"1\":{\"187\":5,\"189\":1,\"590\":1}}],[\"|object\",{\"1\":{\"74\":1}}],[\"看其是否与对方回应报文中的\",{\"1\":{\"717\":1}}],[\"看看之前有没有执行过这条select语句\",{\"1\":{\"621\":1}}],[\"看下\",{\"1\":{\"424\":1}}],[\"看一下\",{\"1\":{\"187\":1}}],[\"看到页面下面的您是要寻找\",{\"1\":{\"8\":1}}],[\"又称三级缓存\",{\"1\":{\"739\":1}}],[\"又称二级缓存\",{\"1\":{\"739\":1}}],[\"又称一级缓存\",{\"1\":{\"739\":1}}],[\"又称为引用局部性\",{\"1\":{\"737\":1}}],[\"又称为存储程序计算机\",{\"1\":{\"732\":1}}],[\"又减小了需要传输的大小\",{\"1\":{\"647\":1}}],[\"又或者克隆了某个项目之后\",{\"1\":{\"428\":1}}],[\"又是谁在何时报告了某个功能缺陷等等\",{\"1\":{\"414\":1}}],[\"又是继承自\",{\"1\":{\"187\":1}}],[\"又需要恢复保存的上下文\",{\"1\":{\"222\":1}}],[\"又想自定义名字\",{\"1\":{\"76\":1}}],[\"祖父结点变红色\",{\"1\":{\"187\":1}}],[\"叔结点变黑色\",{\"1\":{\"187\":1}}],[\"叔结点是黑色\",{\"1\":{\"187\":1}}],[\"叔结点是红色\",{\"1\":{\"187\":1}}],[\"叔结点是空的\",{\"1\":{\"187\":1}}],[\"旋转+变色\",{\"1\":{\"187\":2}}],[\"右移等\",{\"1\":{\"735\":1}}],[\"右移一位\",{\"1\":{\"181\":1}}],[\"右旋\",{\"1\":{\"187\":1}}],[\"树是按照索引值有序排列存储的\",{\"1\":{\"620\":1}}],[\"树中不存在两个相邻的红色结点\",{\"1\":{\"187\":1}}],[\"树的根结点为黑色\",{\"1\":{\"187\":1}}],[\"树上的每一个结点都遵循下面的规则\",{\"1\":{\"187\":1}}],[\"补齐\",{\"1\":{\"187\":1}}],[\"补丁集更新\",{\"1\":{\"8\":2}}],[\"空间局部性的一个典型例子是程序中的数组操作\",{\"1\":{\"737\":1}}],[\"空间局部性是指在一段时间内\",{\"1\":{\"737\":1}}],[\"空间局部性\",{\"1\":{\"737\":1}}],[\"空间的利用情况\",{\"1\":{\"515\":1}}],[\"空闲时间百分比\",{\"1\":{\"479\":1,\"528\":1}}],[\"空闲物理内存大小\",{\"1\":{\"479\":1,\"528\":1}}],[\"空闲物理内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"空闲的内存数\",{\"1\":{\"469\":1,\"519\":1}}],[\"空闲虚拟内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"空闲cpu的百分比\",{\"1\":{\"440\":1,\"534\":1}}],[\"空位都以\",{\"1\":{\"187\":1}}],[\"空数组\",{\"1\":{\"181\":1}}],[\"按内存占用排序\",{\"1\":{\"748\":1}}],[\"按内存消耗对进程进行排序\",{\"1\":{\"507\":1}}],[\"按cpu占用排序\",{\"1\":{\"748\":1}}],[\"按优先级顺序取出条目\",{\"1\":{\"294\":1}}],[\"按位异或\",{\"1\":{\"187\":1}}],[\"按照\",{\"1\":{\"387\":1,\"672\":1}}],[\"按照和处理链表类似的处理逻辑变成两个链表\",{\"1\":{\"189\":1}}],[\"按照排队规则来确定元素的顺序\",{\"1\":{\"178\":1}}],[\"按照一定的顺序保存元素且可以重复\",{\"1\":{\"178\":1}}],[\"按照如下顺序查找依赖的构件\",{\"1\":{\"160\":1}}],[\"确定进程之间通信的性质以及满足用户需要以及提供网络和用户应用\",{\"1\":{\"683\":1}}],[\"确定当前元素存放的位置\",{\"1\":{\"187\":1}}],[\"确保了数据一致性\",{\"1\":{\"742\":1}}],[\"确保了应用运行环境一致性\",{\"1\":{\"384\":1}}],[\"确保一个系统的应用层发送的数据能被另一个系统的应用层识别\",{\"1\":{\"683\":1}}],[\"确保在任何环境中都能以相同的方式运行\",{\"1\":{\"382\":1}}],[\"确保是稳定的\",{\"1\":{\"363\":1}}],[\"确保内部容量达到指定的最小容量\",{\"1\":{\"181\":1}}],[\"确实被取消\",{\"1\":{\"275\":1}}],[\"确切来说\",{\"1\":{\"254\":1}}],[\"确认报文\",{\"1\":{\"729\":1}}],[\"确认了新的数据\",{\"1\":{\"698\":1}}],[\"确认应答\",{\"0\":{\"690\":1}}],[\"确认序号标志\",{\"1\":{\"687\":1}}],[\"确认号\",{\"1\":{\"687\":1}}],[\"确认ip包是否成功送达目标地址\",{\"1\":{\"673\":1}}],[\"确认服务端的数字证书的真实性\",{\"1\":{\"639\":1}}],[\"确认的密码套件列表\",{\"1\":{\"638\":1}}],[\"确认\",{\"1\":{\"638\":1}}],[\"确认是否存在内存泄露\",{\"1\":{\"239\":1}}],[\"确认业务是否需要创建如此大的数组\",{\"1\":{\"239\":1}}],[\"经\",{\"1\":{\"189\":1}}],[\"经过这些操作都能使\",{\"1\":{\"189\":1}}],[\"经过扰动函数处理后得到的\",{\"1\":{\"187\":1}}],[\"经验分享\",{\"1\":{\"3\":2}}],[\"×\",{\"1\":{\"187\":1}}],[\"太小导致数组的利用率低\",{\"1\":{\"187\":1}}],[\"太大会导致查找元素的效率低\",{\"1\":{\"187\":1}}],[\"越大优先级越高\",{\"1\":{\"202\":1}}],[\"越稀疏\",{\"1\":{\"187\":1}}],[\"越密集\",{\"1\":{\"187\":1}}],[\"越趋近于\",{\"1\":{\"187\":2}}],[\"负载因子为\",{\"1\":{\"187\":1}}],[\"负载因子是控制数组存放数据的疏密程度\",{\"1\":{\"187\":1}}],[\"负载因子\",{\"1\":{\"187\":1}}],[\"负责在寄存器\",{\"1\":{\"735\":1}}],[\"负责在各个部件之间传输数据\",{\"1\":{\"732\":1}}],[\"负责传输控制信号\",{\"1\":{\"732\":1}}],[\"负责传输数据所对应的存储器地址\",{\"1\":{\"732\":1}}],[\"负责从存储器获取指令\",{\"1\":{\"732\":1}}],[\"负责执行各种算术和逻辑运算\",{\"1\":{\"732\":1}}],[\"负责执行存储器中的程序指令\",{\"1\":{\"732\":1}}],[\"负责实现对\",{\"1\":{\"399\":1}}],[\"负责管理\",{\"1\":{\"270\":1}}],[\"负责存储其他服务需要通用工具类\",{\"1\":{\"24\":1}}],[\"负责处理订单相关的逻辑\",{\"1\":{\"24\":1}}],[\"负责处理用户相关的逻辑\",{\"1\":{\"24\":1}}],[\"总线主要包括数据总线\",{\"1\":{\"732\":1}}],[\"总线是连接存储器\",{\"1\":{\"732\":1}}],[\"总线\",{\"1\":{\"732\":1}}],[\"总\",{\"1\":{\"515\":1}}],[\"总进程数\",{\"1\":{\"440\":1,\"534\":1}}],[\"总结\",{\"0\":{\"407\":1},\"1\":{\"751\":1}}],[\"总是会挂起当前任务\",{\"1\":{\"272\":1}}],[\"总是使用\",{\"1\":{\"187\":1}}],[\"总之\",{\"1\":{\"233\":1,\"259\":1}}],[\"总的工程必须是一个pom工程\",{\"1\":{\"22\":1}}],[\"容量利用率和替换策略\",{\"1\":{\"736\":1}}],[\"容量变为原来的\",{\"1\":{\"187\":1}}],[\"容器集群的快速编排\",{\"1\":{\"399\":1}}],[\"容器就是运行程序的地方\",{\"1\":{\"390\":1}}],[\"容器就是将软件打包成标准化单元\",{\"1\":{\"378\":1}}],[\"容器消亡\",{\"1\":{\"387\":1}}],[\"容器消亡时\",{\"1\":{\"387\":1}}],[\"容器不应该向其存储层内写入任何数据\",{\"1\":{\"387\":1}}],[\"容器存储层要保持无状态化\",{\"1\":{\"387\":1}}],[\"容器存储层也随之消亡\",{\"1\":{\"387\":1}}],[\"容器存储层的生存周期和容器一样\",{\"1\":{\"387\":1}}],[\"容器也是如此\",{\"1\":{\"387\":1}}],[\"容器进程运行于属于自己的独立的\",{\"1\":{\"387\":1}}],[\"容器的实质是进程\",{\"1\":{\"387\":1}}],[\"容器的特点\",{\"0\":{\"383\":1}}],[\"容器可以随意删除\",{\"1\":{\"387\":1}}],[\"容器可以被创建\",{\"1\":{\"387\":1}}],[\"容器可以共享这台机器的操作系统内核\",{\"1\":{\"383\":1}}],[\"容器是镜像运行时的实体\",{\"1\":{\"387\":1}}],[\"容器是一个应用层抽象\",{\"1\":{\"380\":1}}],[\"容器基于开放式标准\",{\"1\":{\"383\":1}}],[\"容器都在自己的隔离环境中运行\",{\"1\":{\"382\":1}}],[\"容器包含了应用程序及其所有依赖项\",{\"1\":{\"382\":1}}],[\"容器还可以进行版本管理\",{\"1\":{\"382\":1}}],[\"容器镜像大小通常只有几十兆\",{\"1\":{\"380\":1}}],[\"容器镜像是轻量的\",{\"1\":{\"378\":1}}],[\"容器占用的空间较少\",{\"1\":{\"380\":1}}],[\"容器和虚拟机的对比\",{\"1\":{\"380\":1}}],[\"容器和虚拟机具有相似的资源隔离和分配优势\",{\"1\":{\"380\":1}}],[\"容器内没有自己的内核\",{\"1\":{\"380\":1}}],[\"容器\",{\"0\":{\"380\":1,\"387\":1},\"1\":{\"385\":1,\"406\":1},\"2\":{\"409\":1}}],[\"容器赋予了软件独立性\",{\"1\":{\"378\":1}}],[\"容器化软件适用于基于\",{\"1\":{\"378\":1}}],[\"容器介绍\",{\"0\":{\"376\":1}}],[\"容易使用并且轻量\",{\"1\":{\"45\":1}}],[\"建立多条连接放在池内\",{\"1\":{\"655\":1}}],[\"建立连接十分消耗资源\",{\"1\":{\"645\":1}}],[\"建立一个\",{\"1\":{\"303\":2}}],[\"建立数据库连接的具体信息\",{\"1\":{\"40\":1}}],[\"建议直接看官方文档\",{\"1\":{\"262\":1}}],[\"建\",{\"1\":{\"186\":1}}],[\"键盘中断处理函数从键盘的寄存器的缓冲区读取扫描码\",{\"1\":{\"672\":1}}],[\"键盘输入\",{\"1\":{\"672\":1}}],[\"键时必须确保其在\",{\"1\":{\"186\":1}}],[\"键的\",{\"1\":{\"186\":1}}],[\"键的唯一性\",{\"1\":{\"186\":1}}],[\"键以及\",{\"1\":{\"186\":1}}],[\"键值对\",{\"1\":{\"170\":1,\"186\":1}}],[\"取指\",{\"1\":{\"735\":1}}],[\"取余\",{\"1\":{\"586\":1}}],[\"取余运算能够提高运算效率\",{\"1\":{\"188\":1}}],[\"取出最新的文件或者提交更新\",{\"1\":{\"416\":1}}],[\"取出\",{\"1\":{\"293\":1}}],[\"取消暂存的文件\",{\"1\":{\"429\":1}}],[\"取消设置\",{\"1\":{\"288\":1}}],[\"取消任务\",{\"1\":{\"280\":1}}],[\"取消操作并没有发生\",{\"1\":{\"274\":1}}],[\"取消\",{\"1\":{\"274\":1,\"275\":1}}],[\"取消了循环\",{\"1\":{\"183\":1}}],[\"取值范围是\",{\"1\":{\"226\":1}}],[\"取决于默认语言\",{\"1\":{\"85\":1}}],[\"采用的是直接记录快照的方式\",{\"1\":{\"420\":1}}],[\"采用\",{\"1\":{\"400\":1}}],[\"采用一种或者同时采用多种组合的方式来实现引擎\",{\"1\":{\"250\":1}}],[\"采用了尾插法来避免链表倒置\",{\"1\":{\"190\":1}}],[\"采用链表存储\",{\"1\":{\"183\":1}}],[\"采用数组存储\",{\"1\":{\"183\":1}}],[\"双方会商定起始的id是多少\",{\"1\":{\"709\":1}}],[\"双方交换的报文段仅有\",{\"1\":{\"687\":1}}],[\"双方只需要固定住连接\",{\"1\":{\"652\":1}}],[\"双绞线\",{\"1\":{\"683\":1}}],[\"双向认证来避免这种问题\",{\"1\":{\"665\":1}}],[\"双向队列\",{\"0\":{\"344\":1}}],[\"双向链表的第一个结点\",{\"1\":{\"187\":1}}],[\"双向链表\",{\"1\":{\"183\":1}}],[\"双击可执行文件\",{\"1\":{\"9\":1}}],[\"底层连接方式\",{\"1\":{\"655\":1}}],[\"底层原理\",{\"0\":{\"406\":1}}],[\"底层是用数组+链表实现的\",{\"1\":{\"249\":1}}],[\"底层是\",{\"1\":{\"249\":1}}],[\"底层简化了内存屏障硬件指令的实现\",{\"1\":{\"211\":1}}],[\"底层实现主要通过汇编\",{\"1\":{\"208\":1}}],[\"底层都用到了红黑树\",{\"1\":{\"187\":1}}],[\"底层使用的是\",{\"1\":{\"183\":2}}],[\"底层数据结构\",{\"1\":{\"183\":1}}],[\"底层数据结构是链表\",{\"1\":{\"182\":1}}],[\"底层同样适用\",{\"1\":{\"181\":1}}],[\"尾插法\",{\"1\":{\"190\":1}}],[\"尾插法插入数据\",{\"1\":{\"187\":1}}],[\"尾结点即可完成插入\",{\"1\":{\"182\":1}}],[\"尾部插入\",{\"1\":{\"182\":1}}],[\"插入的记录\",{\"1\":{\"632\":1}}],[\"插入的数据总是红色的\",{\"1\":{\"187\":1}}],[\"插入数据\",{\"1\":{\"624\":1}}],[\"插入有序数组\",{\"1\":{\"310\":2}}],[\"插入红黑树\",{\"1\":{\"187\":1}}],[\"插入和删除元素的时间复杂度受元素位置的影响\",{\"1\":{\"183\":1}}],[\"插入和删除的时间复杂度\",{\"1\":{\"182\":1}}],[\"插入\",{\"1\":{\"183\":1}}],[\"插件仓库配置\",{\"1\":{\"170\":1}}],[\"插件绑定\",{\"0\":{\"154\":1}}],[\"插件的目标相互绑定\",{\"1\":{\"154\":1}}],[\"插件的\",{\"1\":{\"152\":1,\"153\":1}}],[\"插件名\",{\"1\":{\"152\":1,\"153\":1}}],[\"插件是插件目标的集合\",{\"1\":{\"151\":1}}],[\"插件能够实现多个功能\",{\"1\":{\"151\":1}}],[\"插件而言\",{\"1\":{\"151\":1}}],[\"插件目标需要绑定的生命周期阶段\",{\"1\":{\"156\":1}}],[\"插件目标的通用写法如下\",{\"1\":{\"152\":1}}],[\"插件目标\",{\"0\":{\"151\":1},\"1\":{\"152\":1,\"155\":1}}],[\"插件或者项目构建的输出\",{\"1\":{\"140\":1}}],[\"插件\",{\"0\":{\"92\":1,\"150\":1},\"1\":{\"150\":1,\"168\":1}}],[\"本层通过ip寻址来建立两个节点之间的连接\",{\"1\":{\"683\":1}}],[\"本机ip地址作为源地址\",{\"1\":{\"673\":1}}],[\"本质上是利用了客户端的漏洞\",{\"1\":{\"641\":1}}],[\"本文只举两个常用系统函数\",{\"1\":{\"607\":1}}],[\"本文只是对\",{\"1\":{\"375\":1}}],[\"本文主要把\",{\"1\":{\"407\":1}}],[\"本\",{\"1\":{\"370\":1}}],[\"本节所针对的主要是低层级代码\",{\"1\":{\"298\":1}}],[\"本身实现的方法\",{\"0\":{\"230\":1}}],[\"本身是支持\",{\"1\":{\"186\":1}}],[\"本身节点值\",{\"1\":{\"182\":1}}],[\"本地dns劫持\",{\"1\":{\"670\":1}}],[\"本地域名服务器将查询结果保存到本地缓存\",{\"1\":{\"667\":1}}],[\"本地域名服务器向授权域名服务器发起解析请求报文\",{\"1\":{\"667\":1}}],[\"本地域名服务器向顶级域名服务器发出解析请求报文\",{\"1\":{\"667\":1}}],[\"本地域名服务器收到请求后\",{\"1\":{\"667\":1}}],[\"本地版本控制系统也存在类似问题\",{\"1\":{\"416\":1}}],[\"本地版本控制系统\",{\"0\":{\"415\":1}}],[\"本地搭建私有\",{\"1\":{\"388\":1}}],[\"本地代码的使用不当会导致整个程序的崩溃\",{\"1\":{\"242\":1}}],[\"本地内存\",{\"1\":{\"237\":2}}],[\"本地方法接口\",{\"1\":{\"240\":1}}],[\"本地方法也不由\",{\"1\":{\"240\":1}}],[\"本地方法栈都不是\",{\"1\":{\"240\":1}}],[\"本地方法栈与虚拟机栈所发挥的作用非常的相似\",{\"1\":{\"240\":1}}],[\"本地方法栈是线程私有的\",{\"1\":{\"237\":1}}],[\"本地方法栈\",{\"0\":{\"240\":1},\"1\":{\"237\":5}}],[\"本地方法\",{\"1\":{\"202\":4}}],[\"本地仓库没有找到的话\",{\"1\":{\"160\":1}}],[\"本地仓库\",{\"1\":{\"158\":2}}],[\"本地预览\",{\"0\":{\"49\":1}}],[\"后发送\",{\"1\":{\"722\":1}}],[\"后\",{\"1\":{\"698\":1,\"708\":1,\"714\":1}}],[\"后且未发现有丢包重传\",{\"1\":{\"695\":1}}],[\"后者是\",{\"1\":{\"635\":1}}],[\"后才启动的事务生成的\",{\"1\":{\"631\":1}}],[\"后访问的事务必须等前一个事务执行完成\",{\"1\":{\"629\":1}}],[\"后续传输时\",{\"1\":{\"652\":1}}],[\"后续由后台线程选择一个合适的时机将脏页写入到磁盘\",{\"1\":{\"622\":1}}],[\"后续的任何操作都会基于开始的读到权限进行判断\",{\"1\":{\"621\":1}}],[\"后续服务提供方发生变更\",{\"1\":{\"254\":1}}],[\"后的所有部分\",{\"1\":{\"610\":1}}],[\"后台运行的最后一个进程的\",{\"1\":{\"583\":1}}],[\"后台启动\",{\"1\":{\"402\":1}}],[\"后面的请求就阻塞了\",{\"1\":{\"645\":1}}],[\"后面我们还会看到\",{\"1\":{\"417\":1}}],[\"后面会详细介绍大\",{\"1\":{\"389\":1}}],[\"后面又发展出了数组+链表+红黑树结构\",{\"1\":{\"249\":1}}],[\"后一层上的任何改变只发生在自己这一层\",{\"1\":{\"386\":1}}],[\"后一个节点\",{\"1\":{\"226\":1}}],[\"后端以及数据库\",{\"1\":{\"380\":1}}],[\"后进先出队列\",{\"1\":{\"301\":1}}],[\"后缀为\",{\"1\":{\"233\":2,\"259\":2}}],[\"后来开发\",{\"1\":{\"419\":1}}],[\"后来\",{\"1\":{\"232\":1,\"258\":1}}],[\"后申请的线程可能先获取到锁\",{\"1\":{\"217\":1}}],[\"后继节点\",{\"1\":{\"182\":2,\"226\":1}}],[\"后声明的后执行\",{\"1\":{\"156\":1}}],[\"具体的原因将由icmp通知\",{\"1\":{\"673\":1}}],[\"具体的实现方式是把一个或多个进程的相关资源指定在同一个\",{\"1\":{\"406\":1}}],[\"具体的评分规则可以参考\",{\"1\":{\"239\":1}}],[\"具体配置见\",{\"1\":{\"52\":1,\"58\":1,\"60\":1}}],[\"具有类似\",{\"1\":{\"650\":1}}],[\"具有两个可选参数\",{\"1\":{\"363\":1}}],[\"具有下列基本同步原语\",{\"1\":{\"286\":1}}],[\"具有所有屏障能力\",{\"1\":{\"211\":1}}],[\"具有双端队列的特性\",{\"1\":{\"182\":1}}],[\"具备\",{\"1\":{\"211\":1}}],[\"倍\",{\"1\":{\"181\":1,\"187\":1,\"189\":1}}],[\"依据以太网的介质访问规则将它们传送出去\",{\"1\":{\"673\":1}}],[\"依此类推\",{\"1\":{\"369\":1}}],[\"依次类推\",{\"1\":{\"189\":1}}],[\"依次通过\",{\"1\":{\"187\":1}}],[\"依次向列表中添加第3\",{\"1\":{\"181\":1}}],[\"依赖配置的选项\",{\"1\":{\"400\":1}}],[\"依赖包的搜索顺序\",{\"0\":{\"160\":1}}],[\"依赖调解\",{\"1\":{\"144\":1}}],[\"依赖冲突\",{\"0\":{\"144\":1}}],[\"依赖版本制定是有规范的\",{\"1\":{\"143\":1}}],[\"依赖版本规范\",{\"0\":{\"143\":1}}],[\"依赖版本需求规范\",{\"1\":{\"142\":1}}],[\"依赖作用范围\",{\"1\":{\"142\":1}}],[\"依赖关系管理有着悠久的传统\",{\"1\":{\"140\":1}}],[\"依赖传递结果\",{\"1\":{\"32\":1}}],[\"依赖管理\",{\"0\":{\"148\":1},\"1\":{\"27\":1}}],[\"依赖的层次路径越短的优先\",{\"1\":{\"144\":1}}],[\"依赖的传递性\",{\"1\":{\"20\":1}}],[\"依赖的基本坐标\",{\"1\":{\"20\":1}}],[\"依赖\",{\"0\":{\"20\":1,\"142\":1},\"1\":{\"19\":1,\"400\":1}}],[\"`expr\",{\"1\":{\"587\":1}}],[\"`start\",{\"1\":{\"201\":2}}],[\"`integer\",{\"1\":{\"181\":2}}],[\"`\",{\"1\":{\"181\":1,\"201\":2}}],[\"`hugecapacity\",{\"1\":{\"181\":1}}],[\"若访问不存在的元素会返回\",{\"1\":{\"353\":1}}],[\"若当作一个栈\",{\"1\":{\"344\":1}}],[\"若当作一个单向队列\",{\"1\":{\"344\":1}}],[\"若使用\",{\"1\":{\"311\":1}}],[\"若使用这种方法解题\",{\"1\":{\"311\":1}}],[\"若指定初始容量为\",{\"1\":{\"189\":1}}],[\"若遇到哈希冲突\",{\"1\":{\"187\":1}}],[\"若还是小于最小需要容量\",{\"1\":{\"181\":1}}],[\"若相同类型但版本不同的依赖存在于同一个\",{\"1\":{\"144\":1}}],[\"扩大可使用端口号的范围\",{\"1\":{\"721\":1}}],[\"扩展类加载器是由\",{\"1\":{\"236\":1}}],[\"扩展类加载器\",{\"1\":{\"236\":1}}],[\"扩展父\",{\"1\":{\"147\":1}}],[\"扩容后的大小为\",{\"1\":{\"189\":1}}],[\"扩容时的阈值\",{\"1\":{\"189\":1}}],[\"扩容阈值\",{\"1\":{\"187\":1}}],[\"扩容的核心方法\",{\"1\":{\"181\":1}}],[\"否则对方端会认为丢包超时而造成超时重传\",{\"1\":{\"709\":1}}],[\"否则就丢弃\",{\"1\":{\"673\":1}}],[\"否则就返回给server层回表\",{\"1\":{\"621\":1}}],[\"否则跳过该数据\",{\"1\":{\"621\":1}}],[\"否则输出\",{\"1\":{\"594\":1}}],[\"否则为\",{\"1\":{\"589\":1}}],[\"否则切换不到下一个任务了\",{\"1\":{\"334\":1}}],[\"否则将阻塞直至另一个任务调用\",{\"1\":{\"288\":1}}],[\"否则将其索引指向相应的位置\",{\"1\":{\"189\":1}}],[\"否则获取失败\",{\"1\":{\"229\":1}}],[\"否则会抛出\",{\"1\":{\"219\":1}}],[\"否则默认不执行如何操作\",{\"1\":{\"202\":1}}],[\"否则\",{\"1\":{\"181\":1}}],[\"否则直接返回最小容量\",{\"1\":{\"181\":1}}],[\"否则即便设置也不会生效\",{\"1\":{\"142\":1}}],[\"初始值\",{\"1\":{\"599\":1}}],[\"初始列表使用控制排序顺序的新值进行修饰\",{\"1\":{\"369\":1}}],[\"初始状态\",{\"1\":{\"201\":1}}],[\"初始情况\",{\"1\":{\"181\":1}}],[\"初始化序列号seq=x\",{\"1\":{\"699\":1}}],[\"初始化设置\",{\"1\":{\"695\":1}}],[\"初始化参数顺序分别是\",{\"1\":{\"182\":1}}],[\"初始化构建状态\",{\"1\":{\"166\":1}}],[\"初始化的路径\",{\"1\":{\"105\":1}}],[\"初始化的挂载元素\",{\"1\":{\"64\":1}}],[\"初始化命令\",{\"0\":{\"105\":1}}],[\"初始化索引时\",{\"1\":{\"93\":1}}],[\"初始化成功后\",{\"1\":{\"48\":1}}],[\"初始化\",{\"0\":{\"48\":1,\"189\":1},\"1\":{\"161\":1,\"166\":1}}],[\"根域名服务器收到请求后\",{\"1\":{\"667\":1}}],[\"根据字符的unicode代码点进行编码\",{\"1\":{\"751\":1}}],[\"根据指令类型\",{\"1\":{\"735\":1}}],[\"根据指定的策略自动重启容器\",{\"1\":{\"400\":1}}],[\"根据异常的类型和严重程度\",{\"1\":{\"733\":1}}],[\"根据时间戳判断是旧连接的数据可以舍弃\",{\"1\":{\"721\":1}}],[\"根据其中定义移除启动的所有容器\",{\"1\":{\"403\":1}}],[\"根据每个元素的数量来访问所有元素\",{\"1\":{\"353\":1}}],[\"根据定义的\",{\"1\":{\"254\":1}}],[\"根据\",{\"1\":{\"243\":1,\"363\":1}}],[\"根据报错时机\",{\"1\":{\"239\":1}}],[\"根据这个条件将原始的链表拆分为两个链表\",{\"1\":{\"189\":1}}],[\"根据给定的最小容量和当前数组元素来计算所需容量\",{\"1\":{\"181\":1}}],[\"根元素project下的\",{\"1\":{\"20\":1}}],[\"要杀死进程\",{\"1\":{\"748\":1}}],[\"要查看所有线程\",{\"1\":{\"747\":1}}],[\"要好一些\",{\"1\":{\"677\":1}}],[\"要发数据的时候就从池里取一条连接出来\",{\"1\":{\"655\":1}}],[\"要更耗费服务器资源\",{\"1\":{\"635\":1}}],[\"要比较\",{\"1\":{\"635\":1}}],[\"要求表中的每列都和主键相关\",{\"1\":{\"617\":1}}],[\"要求每列\",{\"1\":{\"617\":1}}],[\"要确保本地已经构建好需要推送的\",{\"1\":{\"396\":1}}],[\"要转换为键函数\",{\"1\":{\"370\":1}}],[\"要使用\",{\"1\":{\"369\":1}}],[\"要按cpu或内存占用对进程进行排序\",{\"1\":{\"748\":1}}],[\"要按\",{\"1\":{\"368\":1}}],[\"要包括所有的答案域\",{\"1\":{\"311\":1}}],[\"要取消一个正在运行的\",{\"1\":{\"280\":1}}],[\"要避免任务\",{\"1\":{\"275\":1}}],[\"要正在运行一个协程\",{\"1\":{\"265\":1}}],[\"要想跨平台\",{\"1\":{\"242\":1}}],[\"要移植到\",{\"1\":{\"241\":1}}],[\"要么完全不执行\",{\"1\":{\"741\":1}}],[\"要么全部失败回滚\",{\"1\":{\"627\":1}}],[\"要么全部执行失败\",{\"1\":{\"210\":1}}],[\"要么相差一个\",{\"1\":{\"189\":1}}],[\"要么跟以前一致\",{\"1\":{\"189\":1}}],[\"要么黑色\",{\"1\":{\"187\":1}}],[\"要么红色\",{\"1\":{\"187\":1}}],[\"要么是名称相似的\",{\"1\":{\"140\":1}}],[\"要么是给定的错误版本\",{\"1\":{\"140\":1}}],[\"要么是本机安装了多个\",{\"1\":{\"17\":1}}],[\"要么是配错了某个环境变量\",{\"1\":{\"17\":1}}],[\"要消耗更多的空间\",{\"1\":{\"183\":1}}],[\"要分配的最大数组大小\",{\"1\":{\"181\":1}}],[\"值等于前面已经传送过来的数据的最后一个字节的序号加1\",{\"1\":{\"705\":1}}],[\"值为服务器的序列号y+1\",{\"1\":{\"699\":1}}],[\"值在\",{\"1\":{\"631\":1}}],[\"值大于等于\",{\"1\":{\"631\":1}}],[\"值大小\",{\"1\":{\"187\":1}}],[\"值小于\",{\"1\":{\"631\":1}}],[\"值3\",{\"1\":{\"599\":1}}],[\"值2\",{\"1\":{\"596\":1,\"599\":1}}],[\"值1\",{\"1\":{\"596\":1,\"599\":1}}],[\"值得注意的是\",{\"1\":{\"233\":1,\"259\":1,\"642\":1}}],[\"值一致\",{\"1\":{\"189\":1}}],[\"值是\",{\"1\":{\"189\":1}}],[\"值以及\",{\"1\":{\"187\":1}}],[\"值的低\",{\"1\":{\"189\":1}}],[\"值的范围值是\",{\"1\":{\"188\":1}}],[\"值的\",{\"1\":{\"186\":1}}],[\"值的处理\",{\"1\":{\"186\":1}}],[\"值的可重复性\",{\"1\":{\"186\":1}}],[\"值\",{\"1\":{\"181\":1,\"186\":3,\"187\":1,\"631\":4}}],[\"查找某个端口对应的进程\",{\"1\":{\"747\":1}}],[\"查找文件或其他内容里符合条件的字符串\",{\"1\":{\"745\":1}}],[\"查找文件或目录的路径\",{\"1\":{\"745\":1}}],[\"查找等操作\",{\"1\":{\"181\":1,\"182\":1}}],[\"查代码\",{\"1\":{\"723\":1}}],[\"查询本地缓存\",{\"1\":{\"667\":1}}],[\"查询不出来这条数据的\",{\"1\":{\"632\":1}}],[\"查询语句\",{\"1\":{\"621\":1}}],[\"查询缓冲就被清空了寞\",{\"1\":{\"621\":1}}],[\"查询缓存的命中率很低的\",{\"1\":{\"621\":1}}],[\"查询缓存\",{\"1\":{\"621\":1}}],[\"查出最后是谁修改了哪个地方\",{\"1\":{\"414\":1}}],[\"查看正在运行的线程\",{\"1\":{\"747\":1}}],[\"查看正在运行的容器\",{\"1\":{\"392\":1}}],[\"查看cpu负载\",{\"1\":{\"747\":1}}],[\"查看帮助手册\",{\"1\":{\"745\":1}}],[\"查看硬盘及分区信息\",{\"1\":{\"515\":1}}],[\"查看linux系统中某目录的大小\",{\"1\":{\"515\":1}}],[\"查看监听端口\",{\"1\":{\"515\":1}}],[\"查看内存使用情况\",{\"1\":{\"515\":1}}],[\"查看name\",{\"1\":{\"513\":1,\"564\":1}}],[\"查看提交历史\",{\"0\":{\"428\":1}}],[\"查看进程打开的文件的工具\",{\"1\":{\"515\":1}}],[\"查看进程\",{\"1\":{\"405\":1}}],[\"查看日志\",{\"1\":{\"405\":1}}],[\"查看指定服务的容器\",{\"1\":{\"404\":1}}],[\"查看数据卷的具体信息\",{\"1\":{\"397\":1}}],[\"查看mysql相关镜像\",{\"1\":{\"393\":1}}],[\"查看所有的数据卷\",{\"1\":{\"397\":1}}],[\"查看所有容器的状态信息\",{\"1\":{\"404\":1}}],[\"查看所有容器\",{\"1\":{\"392\":1}}],[\"查看所有已下载镜像\",{\"1\":{\"392\":1,\"393\":1}}],[\"查看docker版本\",{\"1\":{\"392\":1}}],[\"查看是否通过\",{\"0\":{\"126\":1}}],[\"查看版本\",{\"1\":{\"108\":1,\"405\":1}}],[\"查看支持的语言列表\",{\"1\":{\"102\":1}}],[\"查看父工程micro\",{\"1\":{\"35\":1}}],[\"查看\",{\"0\":{\"404\":1},\"1\":{\"8\":1}}],[\"部分内容\",{\"1\":{\"642\":1}}],[\"部分\",{\"1\":{\"292\":1}}],[\"部分的文档\",{\"1\":{\"278\":1}}],[\"部分源码\",{\"1\":{\"181\":1,\"182\":1}}],[\"部署的时间\",{\"1\":{\"384\":1}}],[\"部署站点等\",{\"1\":{\"167\":1}}],[\"部署和站点生成等几乎所有构建过程进行了抽象和统一\",{\"1\":{\"161\":1}}],[\"部署项目站点\",{\"1\":{\"155\":1}}],[\"部署\",{\"0\":{\"50\":1},\"1\":{\"166\":1,\"384\":1}}],[\"操作数栈\",{\"1\":{\"239\":2}}],[\"操作数栈和返回值\",{\"1\":{\"239\":1}}],[\"操作来保证原子性\",{\"1\":{\"221\":1}}],[\"操作来增加\",{\"1\":{\"181\":1}}],[\"操作的对象都是\",{\"1\":{\"219\":1}}],[\"操作系统会处理这些中断\",{\"1\":{\"738\":1}}],[\"操作系统会执行相应的服务例程\",{\"1\":{\"738\":1}}],[\"操作系统会保存被中断进程的\",{\"1\":{\"672\":1}}],[\"操作系统使用计时器产生定时中断\",{\"1\":{\"733\":1}}],[\"操作系统提供了一系列的系统服务和应用程序支持\",{\"1\":{\"731\":1}}],[\"操作系统提供了一个文件系统\",{\"1\":{\"731\":1}}],[\"操作系统提供了用户与计算机系统之间的交互界面\",{\"1\":{\"731\":1}}],[\"操作系统负责回收程序占用的资源\",{\"1\":{\"744\":1}}],[\"操作系统负责将其加载到内存中\",{\"1\":{\"744\":1}}],[\"操作系统负责维护系统的安全性和稳定性\",{\"1\":{\"731\":1}}],[\"操作系统负责管理计算机的主存储器\",{\"1\":{\"731\":1}}],[\"操作系统负责管理计算机系统的各种硬件资源\",{\"1\":{\"731\":1}}],[\"操作系统负责管理运行在计算机上的应用程序\",{\"1\":{\"731\":1}}],[\"操作系统通过这些机制来保护计算机系统和用户数据免受未经授权的访问\",{\"1\":{\"731\":1}}],[\"操作系统通过内存管理来确保系统资源的高效利用\",{\"1\":{\"731\":1}}],[\"操作系统通过进程管理来保证计算机系统的稳定运行和资源的公平分配\",{\"1\":{\"731\":1}}],[\"操作系统通过进程来管理计算机的资源\",{\"1\":{\"196\":1}}],[\"操作系统能够高效地分配和使用计算机的计算能力\",{\"1\":{\"731\":1}}],[\"操作系统起到了计算机系统中的核心作用\",{\"1\":{\"731\":1}}],[\"操作系统\",{\"1\":{\"731\":1}}],[\"操作系统的主要功能如下\",{\"1\":{\"731\":1}}],[\"操作系统的\",{\"1\":{\"566\":1}}],[\"操作系统的设计者巧妙地利用了\",{\"1\":{\"198\":1}}],[\"操作系统分为内核和用户空间\",{\"1\":{\"386\":1}}],[\"操作系统进行交互\",{\"1\":{\"241\":1}}],[\"操作系统就会拒绝本次\",{\"1\":{\"239\":1}}],[\"操作系统尝试创建一个新的\",{\"1\":{\"239\":1}}],[\"操作系统环境激活\",{\"1\":{\"171\":1}}],[\"操作\",{\"1\":{\"188\":1,\"280\":1,\"298\":1,\"458\":1,\"557\":1}}],[\"操作中\",{\"1\":{\"188\":1}}],[\"相邻的内存地址\",{\"1\":{\"737\":1}}],[\"相同\",{\"1\":{\"717\":1}}],[\"相连\",{\"1\":{\"653\":1}}],[\"相等\",{\"1\":{\"623\":1}}],[\"相对ipv4的首部长度24字节要长\",{\"1\":{\"678\":1}}],[\"相对更安全\",{\"1\":{\"653\":1}}],[\"相对来说稳定性和安全性较高\",{\"1\":{\"388\":1}}],[\"相对于\",{\"1\":{\"188\":1}}],[\"相反\",{\"1\":{\"370\":1}}],[\"相比并发加速的\",{\"1\":{\"322\":1}}],[\"相比协程\",{\"1\":{\"320\":1}}],[\"相比进程\",{\"1\":{\"320\":2}}],[\"相当于用户接受了中间人伪造的证书\",{\"1\":{\"641\":1}}],[\"相当于锁住整个表\",{\"1\":{\"625\":1}}],[\"相当于\",{\"1\":{\"274\":1,\"310\":1}}],[\"相当于动态数组\",{\"1\":{\"181\":1}}],[\"相关文档\",{\"1\":{\"302\":1}}],[\"相关信息\",{\"1\":{\"271\":1,\"273\":1,\"334\":1,\"336\":1,\"354\":1}}],[\"相关笔记\",{\"1\":{\"260\":1,\"261\":1,\"373\":1}}],[\"相关的路径即可\",{\"1\":{\"13\":1}}],[\"到目标主机\",{\"1\":{\"750\":1}}],[\"到达了服务器\",{\"1\":{\"703\":1}}],[\"到底是在干什么呢\",{\"1\":{\"390\":1}}],[\"到底是个什么东西\",{\"1\":{\"382\":1}}],[\"到其任何后代叶子结点\",{\"1\":{\"187\":1}}],[\"到\",{\"1\":{\"179\":1,\"188\":1}}],[\"截取从\",{\"1\":{\"179\":1}}],[\"倒数的第一个索引\",{\"1\":{\"179\":1}}],[\"~~~\",{\"1\":{\"237\":12}}],[\"~\",{\"1\":{\"202\":1,\"388\":1,\"395\":2,\"475\":1,\"507\":1}}],[\"~tail\",{\"1\":{\"186\":1}}],[\"~table\",{\"1\":{\"186\":3}}],[\"~head\",{\"1\":{\"186\":1}}],[\"~k\",{\"1\":{\"186\":9}}],[\"~last\",{\"1\":{\"178\":1}}],[\"~first\",{\"1\":{\"178\":1}}],[\"~elementdata\",{\"1\":{\"178\":1}}],[\"~elements\",{\"1\":{\"178\":1}}],[\"~21kb\",{\"1\":{\"75\":1}}],[\"判断该域名所属域\",{\"1\":{\"667\":1}}],[\"判断值是否相等\",{\"1\":{\"223\":1}}],[\"判断原本的值和内存的值一致\",{\"1\":{\"223\":1}}],[\"判断当前线程是否被中断\",{\"1\":{\"202\":2}}],[\"判断当前列表的长度是否达到了转换成树的阈值\",{\"1\":{\"187\":1}}],[\"判断当前数组容量是否足以存储mincapacity个元素\",{\"1\":{\"181\":1}}],[\"判断是否需要扩容\",{\"1\":{\"181\":1}}],[\"判断是否有后续元素\",{\"1\":{\"178\":1}}],[\"判断集合是否为空\",{\"1\":{\"178\":1}}],[\"判断集合是否包含给定集合里的所有元素\",{\"1\":{\"178\":1}}],[\"判断集合是否包含给定的元素\",{\"1\":{\"178\":1}}],[\"比特流\",{\"1\":{\"683\":1}}],[\"比\",{\"1\":{\"635\":1}}],[\"比方说有索引会选择走了哪个索引\",{\"1\":{\"621\":1}}],[\"比上面的要快1秒\",{\"1\":{\"265\":1}}],[\"比较容易遭到不法获取\",{\"1\":{\"677\":1}}],[\"比较并替换\",{\"1\":{\"221\":1}}],[\"比较常用的方法有如下几个\",{\"1\":{\"178\":1}}],[\"比如设置为2\",{\"1\":{\"750\":1}}],[\"比如设置属性值\",{\"1\":{\"166\":1}}],[\"比如付费\",{\"1\":{\"724\":1}}],[\"比如文件描述符\",{\"1\":{\"720\":1}}],[\"比如服务器验证用户登录就是在会话层\",{\"1\":{\"683\":1}}],[\"比如经常使用的默认登录功能\",{\"1\":{\"677\":1}}],[\"比如302重定向\",{\"1\":{\"655\":1}}],[\"比如coredns\",{\"1\":{\"655\":1}}],[\"比如consul或者etcd\",{\"1\":{\"655\":1}}],[\"比如连接\",{\"1\":{\"651\":1}}],[\"比如其他事务改了这批数据并提交了\",{\"1\":{\"628\":1}}],[\"比如正在等待i\",{\"1\":{\"479\":1,\"528\":1}}],[\"比如我们要让本地的一个仓库和\",{\"1\":{\"426\":1}}],[\"比如我们要删除我们下载的\",{\"1\":{\"395\":1}}],[\"比如我们的增量特别特别多的话\",{\"1\":{\"420\":1}}],[\"比如数据库查询分页等2\",{\"1\":{\"239\":1}}],[\"比如一个递归函数里有加锁操作\",{\"1\":{\"216\":1}}],[\"比如实现\",{\"1\":{\"200\":1}}],[\"比如请求\",{\"1\":{\"198\":1}}],[\"比如调用了\",{\"1\":{\"198\":1}}],[\"比如<打工人\",{\"1\":{\"177\":1}}],[\"比如常用的多环境\",{\"1\":{\"170\":1}}],[\"比如说对\",{\"1\":{\"166\":1}}],[\"比如说\",{\"1\":{\"166\":2}}],[\"比如阿里云\",{\"1\":{\"158\":1}}],[\"比如多语言的时候\",{\"1\":{\"76\":1}}],[\"比如\",{\"1\":{\"76\":1,\"102\":1,\"142\":1,\"166\":1,\"226\":1,\"227\":2,\"386\":1,\"388\":1,\"743\":1}}],[\"比如某大学系统中拥有搜索平台\",{\"1\":{\"22\":1}}],[\"返回记录给执行器\",{\"1\":{\"622\":1}}],[\"返回的索引位置的值肯定不等于\",{\"1\":{\"310\":1}}],[\"返回的循环中执行\",{\"1\":{\"271\":1}}],[\"返回目标值的右侧边界+1\",{\"1\":{\"310\":1}}],[\"返回目标值的左侧边界\",{\"1\":{\"310\":1}}],[\"返回事件循环中所有的\",{\"1\":{\"300\":1}}],[\"返回事件循环所运行的未完成的\",{\"1\":{\"279\":1}}],[\"返回当前\",{\"1\":{\"300\":1}}],[\"返回当前运行的\",{\"1\":{\"279\":1}}],[\"返回一个\",{\"1\":{\"278\":1,\"353\":2}}],[\"返回一个可被等待以获取\",{\"1\":{\"277\":1}}],[\"返回一个协程的迭代器\",{\"1\":{\"276\":1}}],[\"返回一个对象类型为e的迭代器\",{\"1\":{\"178\":1}}],[\"返回两个\",{\"1\":{\"276\":1}}],[\"返回\",{\"1\":{\"271\":1,\"280\":1,\"351\":2}}],[\"返回值大于等于0则表示获取成功\",{\"1\":{\"229\":1}}],[\"返回散列值也就是hashcode\",{\"1\":{\"187\":1}}],[\"返回默认容量和最小容量中的较大值作为所需容量\",{\"1\":{\"181\":1}}],[\"返回类型为e的包含指定索引位置之后元素的的迭代器\",{\"1\":{\"179\":1}}],[\"返回类型为e的元素迭代器\",{\"1\":{\"179\":1}}],[\"返回用于遍历和划分源元素的对象\",{\"1\":{\"178\":1}}],[\"清空\",{\"1\":{\"288\":1}}],[\"清空集合\",{\"1\":{\"178\":1}}],[\"清理临时的\",{\"1\":{\"392\":1}}],[\"清理集成测试环境\",{\"1\":{\"166\":1}}],[\"清理\",{\"1\":{\"155\":1}}],[\"数字0\",{\"1\":{\"751\":1}}],[\"数字\",{\"1\":{\"573\":1}}],[\"数描\",{\"1\":{\"351\":1}}],[\"数目太多或体积太大\",{\"1\":{\"239\":2}}],[\"数\",{\"1\":{\"198\":1}}],[\"数组元素在内存中是连续存储的\",{\"1\":{\"737\":1}}],[\"数组类型\",{\"1\":{\"224\":1}}],[\"数组长度大于\",{\"1\":{\"187\":1}}],[\"数组中存放的数据就越少\",{\"1\":{\"187\":1}}],[\"数组中每一格就是一个链表\",{\"1\":{\"187\":1}}],[\"数组是\",{\"1\":{\"187\":1}}],[\"数组\",{\"1\":{\"183\":1}}],[\"数组不能方便的处理元素增删\",{\"1\":{\"177\":1}}],[\"数据移动\",{\"1\":{\"744\":1}}],[\"数据对齐与填充\",{\"1\":{\"743\":1}}],[\"数据是以缓存行为单位进行存取的\",{\"1\":{\"743\":1}}],[\"数据传输指令\",{\"1\":{\"735\":1}}],[\"数据传输过程是加密的\",{\"1\":{\"635\":1}}],[\"数据总线\",{\"1\":{\"732\":1}}],[\"数据包将到达第二个路由器\",{\"1\":{\"750\":1}}],[\"数据包\",{\"1\":{\"724\":1}}],[\"数据包都会被统统的丢掉\",{\"1\":{\"721\":1}}],[\"数据包注入\",{\"1\":{\"664\":1}}],[\"数据部分\",{\"1\":{\"687\":1}}],[\"数据偏移\",{\"1\":{\"687\":1}}],[\"数据链路层\",{\"1\":{\"683\":1}}],[\"数据\",{\"1\":{\"681\":1,\"683\":3,\"729\":2}}],[\"数据一致性和保密性的内容\",{\"1\":{\"678\":1}}],[\"数据的最大长度\",{\"1\":{\"729\":1}}],[\"数据的长度\",{\"1\":{\"652\":1}}],[\"数据的操作\",{\"1\":{\"177\":1}}],[\"数据也无法被\",{\"1\":{\"651\":1}}],[\"数据都是未加密的\",{\"1\":{\"635\":1}}],[\"数据已经安全的保存在本地数据库中\",{\"1\":{\"421\":1}}],[\"数据管理\",{\"0\":{\"397\":1}}],[\"数据却不会丢失\",{\"1\":{\"387\":1}}],[\"数据卷中的数据也不会被自动删除\",{\"1\":{\"397\":1}}],[\"数据卷是由\",{\"1\":{\"397\":1}}],[\"数据卷\",{\"1\":{\"397\":1}}],[\"数据卷不会消亡\",{\"1\":{\"387\":1}}],[\"数据卷的生存周期独立于容器\",{\"1\":{\"387\":1}}],[\"数据结构\",{\"2\":{\"356\":1}}],[\"数据丢失是怎么产生的呢\",{\"1\":{\"191\":1}}],[\"数据去重\",{\"1\":{\"177\":1}}],[\"数据模型\",{\"1\":{\"111\":1}}],[\"数据库的连接用长连接\",{\"1\":{\"713\":1}}],[\"数据库总是从一个一致性的状态转换到另一个一致性的状态\",{\"1\":{\"627\":1}}],[\"数据库连接库\",{\"1\":{\"263\":1}}],[\"数据库连接池\",{\"1\":{\"40\":1,\"117\":1}}],[\"数据库\",{\"0\":{\"114\":1}}],[\"数据库驱动\",{\"1\":{\"40\":1,\"117\":1}}],[\"数据库表创建及初始化\",{\"0\":{\"39\":1}}],[\"工作流程\",{\"1\":{\"736\":1}}],[\"工作流程如下\",{\"1\":{\"421\":1}}],[\"工作目录\",{\"1\":{\"421\":1}}],[\"工具的核心\",{\"1\":{\"400\":1}}],[\"工资>的关系\",{\"1\":{\"177\":1}}],[\"工欲善其事\",{\"0\":{\"173\":1}}],[\"集线器\",{\"1\":{\"683\":1}}],[\"集中化的版本控制系统都有一个单一的集中管理的服务器\",{\"1\":{\"416\":1}}],[\"集中化的版本控制系统\",{\"0\":{\"416\":1},\"1\":{\"416\":1}}],[\"集中存放镜像文件的地方\",{\"0\":{\"388\":1}}],[\"集群\",{\"1\":{\"400\":1}}],[\"集装箱\",{\"1\":{\"382\":1}}],[\"集\",{\"1\":{\"178\":1,\"299\":1,\"303\":1}}],[\"集合之一\",{\"1\":{\"187\":1}}],[\"集合的元素数量\",{\"1\":{\"178\":1}}],[\"集合的定义是一组可变数量的数据项\",{\"1\":{\"177\":1}}],[\"集合本身就具有元素不可重复的性质\",{\"1\":{\"177\":1}}],[\"集合应用场景\",{\"1\":{\"177\":1}}],[\"集合也可以称为容器\",{\"1\":{\"177\":1}}],[\"集合框架中的一种机制\",{\"1\":{\"178\":1}}],[\"集合框架位于\",{\"1\":{\"177\":1}}],[\"集合框架是一个用来代表和操纵集合的统一架构\",{\"1\":{\"177\":1}}],[\"集合是什么\",{\"0\":{\"177\":1}}],[\"集合\",{\"0\":{\"176\":1},\"1\":{\"276\":1}}],[\"集成测试后\",{\"1\":{\"166\":1}}],[\"集成测试前\",{\"1\":{\"166\":1}}],[\"集成测试\",{\"1\":{\"161\":1,\"166\":1}}],[\"激活指定的\",{\"1\":{\"171\":2}}],[\"加\",{\"1\":{\"695\":1}}],[\"加快了路由速度\",{\"1\":{\"678\":1}}],[\"加强域名账户的安全防护能力\",{\"1\":{\"671\":1}}],[\"加以区别\",{\"1\":{\"652\":1}}],[\"加密数据等等方向都需要依靠tcp\",{\"1\":{\"724\":1}}],[\"加密认证的根文\",{\"1\":{\"648\":1}}],[\"加密通信\",{\"1\":{\"640\":1}}],[\"加密通信算法改变通知\",{\"1\":{\"639\":1,\"640\":1}}],[\"加密解密\",{\"1\":{\"319\":1}}],[\"加大了系统的整个吞吐量\",{\"1\":{\"214\":1}}],[\"加上\",{\"1\":{\"171\":1,\"424\":1}}],[\"加载代码和数据等\",{\"1\":{\"744\":1}}],[\"加载配置在\",{\"1\":{\"256\":1}}],[\"加载\",{\"1\":{\"250\":1,\"744\":1}}],[\"加载本地化过的\",{\"1\":{\"89\":1}}],[\"加载自定义的\",{\"1\":{\"89\":1}}],[\"加载逻辑和\",{\"1\":{\"59\":1}}],[\"种接口类\",{\"1\":{\"178\":1}}],[\"种方式激活\",{\"1\":{\"171\":1}}],[\"种类型的插件\",{\"1\":{\"150\":1}}],[\"能够在所有主流\",{\"1\":{\"383\":1}}],[\"能够在项目构建时\",{\"1\":{\"171\":1}}],[\"能够自动执行重复性任务\",{\"1\":{\"382\":1}}],[\"能被用于\",{\"1\":{\"304\":1}}],[\"能进行运行时刻的类型检查\",{\"1\":{\"233\":1,\"259\":1}}],[\"能很大程度提高并发程序的执行效率\",{\"1\":{\"222\":1}}],[\"能将类似\",{\"1\":{\"97\":1}}],[\"定时器的时间一到\",{\"1\":{\"728\":1}}],[\"定期查看域名账户信息\",{\"1\":{\"671\":1}}],[\"定期对密码进行更换\",{\"1\":{\"671\":1}}],[\"定期断开长连接\",{\"1\":{\"621\":1}}],[\"定制显示的列\",{\"1\":{\"513\":1,\"564\":1}}],[\"定制变的更为容易\",{\"1\":{\"386\":1}}],[\"定制侧边栏\",{\"0\":{\"52\":1}}],[\"定义变量\",{\"1\":{\"574\":1}}],[\"定义版本\",{\"1\":{\"400\":1}}],[\"定义服务使用的卷\",{\"1\":{\"400\":1}}],[\"定义handler的输出格式\",{\"1\":{\"357\":1}}],[\"定义协程\",{\"1\":{\"334\":1}}],[\"定义形式为\",{\"1\":{\"267\":1}}],[\"定义\",{\"1\":{\"252\":1,\"655\":1}}],[\"定义了容器间的网络连接\",{\"1\":{\"400\":1}}],[\"定义了应用中的每个容器\",{\"1\":{\"400\":1}}],[\"定义了如下方法\",{\"1\":{\"178\":1}}],[\"定义了一些集合的基本操作\",{\"1\":{\"178\":1}}],[\"定义自定义的属性值\",{\"1\":{\"170\":1}}],[\"搭建需要的环境\",{\"1\":{\"166\":1}}],[\"搭建一个三层架构案例\",{\"1\":{\"111\":1}}],[\"搭建一个电商平台项目\",{\"1\":{\"24\":1}}],[\"过多如何解决\",{\"0\":{\"718\":1}}],[\"过滤javascript事件的标签\",{\"1\":{\"659\":1}}],[\"过滤或移除特殊的html标签\",{\"1\":{\"659\":1}}],[\"过滤任意值\",{\"1\":{\"166\":2}}],[\"过度使用终接器\",{\"1\":{\"239\":1}}],[\"过去的变量赋值给主内存中的变量\",{\"1\":{\"206\":1}}],[\"过期时间\",{\"1\":{\"93\":1}}],[\"校验和\",{\"0\":{\"689\":1},\"1\":{\"687\":1}}],[\"校验项目是否正确并且所有必要的信息可以完成项目的构建过程\",{\"1\":{\"166\":1}}],[\"校验\",{\"1\":{\"166\":1}}],[\"移位指令\",{\"1\":{\"735\":1}}],[\"移植到\",{\"1\":{\"370\":1}}],[\"移除远程仓库\",{\"1\":{\"427\":1}}],[\"移除文件\",{\"1\":{\"424\":1}}],[\"移除指定索引位置的元素\",{\"1\":{\"179\":1}}],[\"移除所有上一次构建生成的文件\",{\"1\":{\"165\":1}}],[\"移动等操作\",{\"1\":{\"177\":1}}],[\"移到末尾即可\",{\"1\":{\"14\":2}}],[\"易扩展的生命周期\",{\"1\":{\"161\":1}}],[\"华为云镜像地址\",{\"1\":{\"159\":1}}],[\"镜像推送之前\",{\"1\":{\"396\":1}}],[\"镜像推送\",{\"0\":{\"396\":1}}],[\"镜像的名字\",{\"1\":{\"400\":1}}],[\"镜像的\",{\"1\":{\"395\":1}}],[\"镜像就像是集装箱包括文件以及运行环境等等资源\",{\"1\":{\"390\":1}}],[\"镜像上传到指定的\",{\"1\":{\"389\":1,\"396\":1}}],[\"镜像只提供了\",{\"1\":{\"388\":1}}],[\"镜像市场\",{\"1\":{\"388\":1}}],[\"镜像构建完成后\",{\"1\":{\"388\":1}}],[\"镜像构建时\",{\"1\":{\"386\":1}}],[\"镜像运行时的实体\",{\"0\":{\"387\":1}}],[\"镜像实际是由多层文件系统联合组成\",{\"1\":{\"386\":1}}],[\"镜像不包含任何动态数据\",{\"1\":{\"386\":1}}],[\"镜像是静态的定义\",{\"1\":{\"387\":1}}],[\"镜像是一个特殊的文件系统\",{\"1\":{\"386\":1}}],[\"镜像是通过文件系统层进行构造的\",{\"1\":{\"383\":1}}],[\"镜像\",{\"0\":{\"386\":1},\"1\":{\"159\":1,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"395\":1,\"396\":1,\"400\":1}}],[\"镜像仓库是\",{\"1\":{\"388\":1}}],[\"镜像仓库\",{\"1\":{\"158\":1}}],[\"供局域网内的\",{\"1\":{\"158\":1}}],[\"供其他项目使用\",{\"1\":{\"157\":1}}],[\"另外两种浮点类型的包装类则没有实现\",{\"1\":{\"245\":1}}],[\"另外\",{\"1\":{\"233\":2,\"259\":2,\"363\":1,\"396\":1,\"402\":1,\"407\":1}}],[\"另外为了方便查询\",{\"1\":{\"158\":1}}],[\"另一部分用于存储指令\",{\"1\":{\"739\":1}}],[\"另一方选择的序列号则得不到确认\",{\"1\":{\"704\":1}}],[\"另一方面\",{\"1\":{\"233\":1,\"259\":1}}],[\"另一个事务就可以继续执行了\",{\"1\":{\"625\":1}}],[\"另一个\",{\"1\":{\"197\":1}}],[\"另选一个路径\",{\"1\":{\"9\":1}}],[\"社区来维护的\",{\"1\":{\"158\":1}}],[\"私服一般被配置为互联网远程仓库的镜像\",{\"1\":{\"158\":1}}],[\"私服是一种特殊的远程\",{\"1\":{\"158\":1}}],[\"私服\",{\"1\":{\"158\":2}}],[\"仓库目录\",{\"1\":{\"421\":1}}],[\"仓库配置\",{\"1\":{\"170\":1}}],[\"仓库的配置\",{\"0\":{\"159\":1}}],[\"仓库的分类\",{\"0\":{\"158\":1}}],[\"仓库\",{\"0\":{\"157\":1,\"388\":1,\"423\":1},\"1\":{\"158\":2,\"421\":1,\"423\":1}}],[\"仓库导入\",{\"1\":{\"156\":1}}],[\"先回一个\",{\"1\":{\"706\":1}}],[\"先把拥塞窗口\",{\"1\":{\"695\":1}}],[\"先检查它的目的mac地址\",{\"1\":{\"673\":1}}],[\"先用\",{\"1\":{\"424\":1}}],[\"先启动被依赖的服务\",{\"1\":{\"400\":1}}],[\"先来看看容器较为官方的解释\",{\"0\":{\"378\":1}}],[\"先进先出队列\",{\"1\":{\"301\":1}}],[\"先进先出\",{\"1\":{\"243\":1,\"739\":1}}],[\"先判断头结点是不是\",{\"1\":{\"227\":1}}],[\"先比较第一项\",{\"1\":{\"369\":1}}],[\"先比较\",{\"1\":{\"221\":1}}],[\"先申请的先得到\",{\"1\":{\"217\":1}}],[\"先\",{\"1\":{\"203\":1,\"651\":1}}],[\"先减一是为了保证\",{\"1\":{\"189\":1}}],[\"先说结论\",{\"1\":{\"189\":1}}],[\"先去本地仓库找寻\",{\"1\":{\"160\":1}}],[\"先声明的先执行\",{\"1\":{\"156\":1}}],[\"先后顺序\",{\"1\":{\"17\":1}}],[\"任务已经有事件发生\",{\"1\":{\"288\":1}}],[\"任务将取消并引发\",{\"1\":{\"275\":1}}],[\"任务\",{\"0\":{\"268\":1,\"300\":1},\"1\":{\"266\":1}}],[\"任务的互斥锁\",{\"1\":{\"287\":1}}],[\"任务的多个协程\",{\"1\":{\"265\":1}}],[\"任务的唯一标识\",{\"1\":{\"156\":1}}],[\"任何虚拟地址映射都可以放在tlb的任何位置\",{\"1\":{\"736\":1}}],[\"任何请求都可以带\",{\"1\":{\"654\":1}}],[\"任何一处协同工作用的服务器发生故障\",{\"1\":{\"417\":1}}],[\"任何一个线程均有它的\",{\"1\":{\"233\":1,\"259\":1}}],[\"任何一个依赖\",{\"1\":{\"140\":1}}],[\"任何一个坐标都能够唯一标识该平面上的一个点\",{\"1\":{\"139\":1}}],[\"任何保存于容器存储层的信息都会随容器删除而丢失\",{\"1\":{\"387\":1}}],[\"任何额外的东西应该在该层构建结束前清理掉\",{\"1\":{\"386\":1}}],[\"任何的构件都有唯一的坐标\",{\"1\":{\"157\":1}}],[\"任何版本小于或等于\",{\"1\":{\"143\":1}}],[\"任何版本<=1\",{\"1\":{\"143\":1}}],[\"任何大于或等于\",{\"1\":{\"143\":1}}],[\"任何事情都是一团糟\",{\"1\":{\"140\":1}}],[\"任何以前的非\",{\"1\":{\"8\":1}}],[\"阶段都会执行\",{\"1\":{\"165\":1}}],[\"阶段执行\",{\"1\":{\"165\":1}}],[\"阶段时\",{\"1\":{\"165\":3}}],[\"阶段上\",{\"1\":{\"156\":1}}],[\"阶段\",{\"1\":{\"155\":1,\"165\":1,\"166\":1,\"167\":1,\"622\":2}}],[\"阶段将执行\",{\"1\":{\"146\":1}}],[\"生存时间\",{\"1\":{\"750\":1}}],[\"生产环境等\",{\"1\":{\"168\":1}}],[\"生命周期很短暂\",{\"1\":{\"239\":1}}],[\"生命周期定义了项目真正构建时所需要的所有步骤\",{\"1\":{\"166\":1}}],[\"生命周期为例\",{\"1\":{\"165\":1}}],[\"生命周期包含以下\",{\"1\":{\"165\":1,\"166\":1,\"167\":1}}],[\"生命周期的某个阶段\",{\"1\":{\"164\":2}}],[\"生命周期的某个阶段上\",{\"1\":{\"156\":1}}],[\"生命周期的独立性\",{\"0\":{\"164\":1}}],[\"生命周期的阶段需要和\",{\"1\":{\"154\":1}}],[\"生命周期中只列出了绑定了插件目标的阶段\",{\"1\":{\"155\":1}}],[\"生命周期\",{\"0\":{\"165\":1,\"166\":1,\"167\":1},\"1\":{\"155\":1}}],[\"生成项目的站点文档\",{\"1\":{\"167\":1}}],[\"生成项目站点\",{\"1\":{\"155\":1}}],[\"生成测试资源文件\",{\"1\":{\"166\":1}}],[\"生成测试源代码\",{\"1\":{\"166\":1}}],[\"生成包含在编译阶段中的任何测试源代码\",{\"1\":{\"166\":1}}],[\"生成包含在编译阶段中的任何源代码\",{\"1\":{\"166\":1}}],[\"生成将会包含在项目包中的资源文件\",{\"1\":{\"166\":1}}],[\"生成资源文件\",{\"1\":{\"166\":1}}],[\"生成源代码\",{\"1\":{\"166\":1}}],[\"生成\",{\"1\":{\"107\":1}}],[\"生成的路径\",{\"1\":{\"107\":1}}],[\"生成指定目录下的\",{\"1\":{\"107\":1}}],[\"生成命令\",{\"0\":{\"107\":1}}],[\"生成即可\",{\"1\":{\"14\":1}}],[\"每条指令都会经过一系列阶段来完成其执行\",{\"1\":{\"735\":1}}],[\"每条线程都需要有一个独立的程序计数器\",{\"1\":{\"238\":1}}],[\"每隔75s发送一次\",{\"1\":{\"712\":1}}],[\"每发送一次数据\",{\"1\":{\"687\":1}}],[\"每天site网站检查是否存在非个人设定网页\",{\"1\":{\"671\":1}}],[\"每2s显示一次\",{\"1\":{\"480\":1,\"529\":1}}],[\"每2秒刷新一次输出\",{\"1\":{\"475\":1}}],[\"每10s\",{\"1\":{\"474\":1,\"524\":1}}],[\"每秒钟发送出去的字节数\",{\"1\":{\"497\":1,\"547\":1}}],[\"每秒钟发送出去的包数目\",{\"1\":{\"497\":1,\"547\":1}}],[\"每秒钟接收到的字节数\",{\"1\":{\"497\":1,\"547\":1}}],[\"每秒钟接收到的包数目\",{\"1\":{\"497\":1,\"547\":1}}],[\"每秒上下文切换数\",{\"1\":{\"479\":1,\"528\":1}}],[\"每秒中断数\",{\"1\":{\"479\":1,\"528\":1}}],[\"每秒读取的块数\",{\"1\":{\"479\":1,\"528\":1}}],[\"每秒读k字节数\",{\"1\":{\"458\":1,\"557\":1}}],[\"每秒写入的块数\",{\"1\":{\"479\":1,\"528\":1}}],[\"每秒写入交换区的内存大小\",{\"1\":{\"479\":1,\"528\":1}}],[\"每秒写k字节数\",{\"1\":{\"458\":1,\"557\":1}}],[\"每秒从交换区写到内存的大小\",{\"1\":{\"479\":1,\"528\":1}}],[\"每秒完成的写\",{\"1\":{\"458\":1,\"557\":1}}],[\"每秒完成的读\",{\"1\":{\"458\":1,\"557\":1}}],[\"每秒显示一次当前日期\",{\"1\":{\"272\":1}}],[\"每一次按照模糊匹配的前缀字典序来进行比较\",{\"1\":{\"620\":1}}],[\"每一层尽量只包含该层需要添加的东西\",{\"1\":{\"386\":1}}],[\"每一层构建完就不会再发生改变\",{\"1\":{\"386\":1}}],[\"每一个包都有一个id\",{\"1\":{\"709\":1}}],[\"每一个方法从调用直至执行完成的过程\",{\"1\":{\"239\":1}}],[\"每一个结点都有一个颜色\",{\"1\":{\"187\":1}}],[\"每一个\",{\"1\":{\"170\":1}}],[\"每一个功能都是一个插件目标\",{\"1\":{\"151\":1}}],[\"每当数据包经过一个路由器时\",{\"1\":{\"750\":1}}],[\"每当收到一个\",{\"1\":{\"696\":1}}],[\"每当用户使用浏览器打开指定页面时\",{\"1\":{\"657\":1}}],[\"每当说起容器\",{\"1\":{\"380\":1}}],[\"每当消费协程调用\",{\"1\":{\"293\":1}}],[\"每次接收到报文之后将窗口大小翻倍\",{\"1\":{\"695\":1}}],[\"每次请求都要建立连接\",{\"1\":{\"645\":1}}],[\"每次对某条聚簇索引记录进行改动时\",{\"1\":{\"631\":1}}],[\"每次报告的间隔时间\",{\"1\":{\"445\":1,\"457\":1,\"539\":1,\"556\":1}}],[\"每次准备提交前\",{\"1\":{\"424\":1}}],[\"每次你提交更新\",{\"1\":{\"420\":1}}],[\"每次只能一个线程持有锁\",{\"1\":{\"227\":1}}],[\"每次去拿数据的时候都认为别人不会修改\",{\"1\":{\"214\":1}}],[\"每次去拿数据的时候都认为别人会修改\",{\"1\":{\"214\":1}}],[\"每次将项目部署到不同的环境时\",{\"1\":{\"168\":1}}],[\"每个缓存行可以处于以下四种状态之一\",{\"1\":{\"742\":1}}],[\"每个cpu核心都配备了一个或多个层次的缓存\",{\"1\":{\"741\":1}}],[\"每个主内存块可以映射到特定组中的任何位置\",{\"1\":{\"739\":1}}],[\"每个主内存块可以映射到缓存的任何位置\",{\"1\":{\"739\":1}}],[\"每个主内存块只能映射到缓存的一个固定位置\",{\"1\":{\"739\":1}}],[\"每个虚拟地址映射固定地映射到一个位置\",{\"1\":{\"736\":1}}],[\"每个组可以容纳一定数量的映射关系\",{\"1\":{\"736\":1}}],[\"每个部分用于在不同级别的页表中查找\",{\"1\":{\"734\":1}}],[\"每个进程都有一个独立的页表\",{\"1\":{\"734\":1}}],[\"每个进程在操作系统中都有一个唯一的进程标识符\",{\"1\":{\"196\":1}}],[\"每个tcp对应的是点对点的连接\",{\"1\":{\"724\":1}}],[\"每个tcp连接都需要三步握手\",{\"1\":{\"713\":1}}],[\"每个连接方通常都在通信的第一个报文段中指明这个选项\",{\"1\":{\"687\":1}}],[\"每个报文有独一无二的编号\",{\"1\":{\"652\":1}}],[\"每个数据包除了它本身的内容之外还包括了其他数据包的数据\",{\"1\":{\"648\":1}}],[\"每个服务可以使用不同的镜像\",{\"1\":{\"400\":1}}],[\"每个标签对应一个镜像\",{\"1\":{\"388\":1}}],[\"每个仓库可以包含多个标签\",{\"1\":{\"388\":1}}],[\"每个类文件都包含一个常量池表\",{\"1\":{\"246\":1}}],[\"每个\",{\"1\":{\"239\":1,\"380\":1,\"382\":1}}],[\"每个方法在执行的同时都会创建一个栈帧\",{\"1\":{\"239\":1}}],[\"每个线程有自己的\",{\"1\":{\"239\":1}}],[\"每个线程都可以独立执行不同的任务\",{\"1\":{\"196\":1}}],[\"每个对象中都内置了一个\",{\"1\":{\"219\":1}}],[\"每个对象都有对象锁\",{\"1\":{\"204\":1}}],[\"每个饭桌可以点不一样的菜\",{\"1\":{\"196\":1}}],[\"每个叶子结点\",{\"1\":{\"187\":1}}],[\"每个键都映射到一个值\",{\"1\":{\"186\":1}}],[\"每个生命周期包含一系列的构建阶段\",{\"1\":{\"163\":1}}],[\"每个模块只负责单一的功能实现\",{\"1\":{\"149\":1}}],[\"每个模块都是一个独立的功能集合\",{\"1\":{\"22\":1}}],[\"每个元素都包含一个\",{\"1\":{\"145\":1}}],[\"每个构件都有自己的唯一标识\",{\"1\":{\"140\":1}}],[\"每个依赖dependence标签都应该包含以下元素\",{\"1\":{\"20\":1}}],[\"单级页表可能会非常庞大并且浪费内存\",{\"1\":{\"734\":1}}],[\"单个\",{\"1\":{\"677\":1}}],[\"单调递增的设计\",{\"1\":{\"652\":1}}],[\"单位有\",{\"1\":{\"468\":1,\"518\":1}}],[\"单位毫秒\",{\"1\":{\"93\":1}}],[\"单分支开发好还是多分支开发好\",{\"1\":{\"430\":1}}],[\"单点故障\",{\"1\":{\"416\":1}}],[\"单线程爬虫执行路径\",{\"1\":{\"333\":1}}],[\"单线程遍历\",{\"1\":{\"192\":1}}],[\"单核\",{\"1\":{\"198\":1}}],[\"单测覆盖率插件\",{\"1\":{\"150\":1}}],[\"正常连接请求也会被这种方式误释放掉\",{\"1\":{\"717\":1}}],[\"正确无误地按照地址传送给目的端的运输层\",{\"1\":{\"683\":1}}],[\"正在等待其余部分\",{\"1\":{\"642\":1}}],[\"正在运行的线程\",{\"0\":{\"747\":1}}],[\"正在运行的进程数\",{\"1\":{\"440\":1,\"534\":1}}],[\"正在运行\",{\"1\":{\"506\":1}}],[\"正在被\",{\"1\":{\"395\":1}}],[\"正如\",{\"1\":{\"147\":1}}],[\"正则\",{\"1\":{\"82\":1}}],[\"父进程id\",{\"1\":{\"506\":1}}],[\"父结点\",{\"1\":{\"187\":1}}],[\"父结点是红色\",{\"1\":{\"187\":1}}],[\"父结点是黑色\",{\"1\":{\"187\":1}}],[\"父级元素还可以配置子\",{\"1\":{\"148\":1}}],[\"父项目\",{\"1\":{\"146\":1}}],[\"父工程的打包方式为pom\",{\"1\":{\"27\":1}}],[\"父工程可用使用import范围来强制指定子工程必须使用父工程中管理的版本\",{\"1\":{\"21\":1}}],[\"两次握手的机制将会让客户端和服务器再次建立连接\",{\"1\":{\"703\":1}}],[\"两阶段提交\",{\"1\":{\"622\":1}}],[\"两者都是将进程进行分组\",{\"1\":{\"406\":1}}],[\"两者对比\",{\"1\":{\"406\":1}}],[\"两者的不同点\",{\"1\":{\"204\":1}}],[\"两者的相同点\",{\"1\":{\"204\":1}}],[\"两个线程同时获取到\",{\"1\":{\"223\":1}}],[\"两个进程互不抢占\",{\"1\":{\"197\":1}}],[\"两个\",{\"1\":{\"171\":1,\"353\":1}}],[\"两大原则\",{\"1\":{\"144\":1}}],[\"两种方式\",{\"1\":{\"56\":1}}],[\"详情请参考官网说明\",{\"1\":{\"143\":1}}],[\"存取方式的不同\",{\"1\":{\"677\":1}}],[\"存取高效\",{\"1\":{\"188\":1}}],[\"存着每个元素出现的次数\",{\"1\":{\"353\":1}}],[\"存放的数据会很分散\",{\"1\":{\"187\":1}}],[\"存储结果\",{\"1\":{\"744\":1}}],[\"存储了最近使用过的虚拟地址到物理地址的映射关系\",{\"1\":{\"736\":1}}],[\"存储等\",{\"1\":{\"735\":1}}],[\"存储器负责存储计算机程序和数据\",{\"1\":{\"732\":1}}],[\"存储器\",{\"1\":{\"732\":1}}],[\"存储和管理用户的数据文件\",{\"1\":{\"731\":1}}],[\"存储大小不同\",{\"1\":{\"677\":1}}],[\"存储在服务端\",{\"1\":{\"677\":1}}],[\"存储在客户端\",{\"1\":{\"677\":1}}],[\"存储在\",{\"1\":{\"676\":1}}],[\"存储引擎的数据库表\",{\"1\":{\"631\":1}}],[\"存储引擎通过b+树定位数据\",{\"1\":{\"621\":1}}],[\"存储方式\",{\"1\":{\"382\":1}}],[\"存储\",{\"1\":{\"206\":1,\"735\":1}}],[\"存储具有关系的数据\",{\"1\":{\"177\":1}}],[\"存储库字符串\",{\"1\":{\"68\":1,\"69\":1}}],[\"存在\",{\"1\":{\"590\":1}}],[\"存在aba问题\",{\"1\":{\"224\":1}}],[\"存在的问题\",{\"0\":{\"223\":1}}],[\"存在且\",{\"1\":{\"171\":1}}],[\"存在严重漏洞\",{\"1\":{\"143\":1}}],[\"与内存中的数据不一致\",{\"1\":{\"742\":1}}],[\"与内建异常\",{\"1\":{\"305\":1}}],[\"与mesi协议相比\",{\"1\":{\"741\":1}}],[\"与缓存相比\",{\"1\":{\"736\":1}}],[\"与非持久性xss攻击相比\",{\"1\":{\"657\":1}}],[\"与多路复用的概念\",{\"1\":{\"651\":1}}],[\"与多进程\",{\"1\":{\"326\":1}}],[\"与进程关联的终端\",{\"1\":{\"506\":1}}],[\"与其他版本管理系统的主要差别\",{\"1\":{\"420\":1}}],[\"与其他版本管理系统的主要区别\",{\"0\":{\"420\":1}}],[\"与宿主机和其他容器隔离\",{\"1\":{\"382\":1}}],[\"与虚拟机相比\",{\"1\":{\"380\":1}}],[\"与虚拟机栈一样\",{\"1\":{\"240\":1}}],[\"与那些解释型的高级脚本语言相比\",{\"1\":{\"233\":1,\"259\":1}}],[\"与hashmap不同\",{\"1\":{\"193\":1}}],[\"与hashmap相比\",{\"1\":{\"193\":1}}],[\"与键不同\",{\"1\":{\"186\":1}}],[\"与数组相比\",{\"1\":{\"181\":1}}],[\"与构建阶段的前后依赖关系不同\",{\"1\":{\"164\":1}}],[\"与面向对象程序设计中的对象继承类似\",{\"1\":{\"147\":1}}],[\"与可能安装或不安装和使用的可选不同\",{\"1\":{\"145\":1}}],[\"与\",{\"0\":{\"183\":1,\"253\":1,\"284\":1},\"1\":{\"142\":1,\"186\":1,\"210\":1,\"249\":1,\"344\":2,\"353\":1,\"652\":2}}],[\"但其实a与b不会互相影响\",{\"1\":{\"743\":1}}],[\"但容量比l2缓存更大\",{\"1\":{\"740\":1}}],[\"但容量通常比l1缓存大\",{\"1\":{\"740\":1}}],[\"但容量相对较小\",{\"1\":{\"740\":1}}],[\"但需要跟踪每个缓存条目的访问计数\",{\"1\":{\"739\":1}}],[\"但在许多情况下性能较好\",{\"1\":{\"739\":1}}],[\"但实现起来较为复杂\",{\"1\":{\"739\":1}}],[\"但实际上它们不一定非要用tcp\",{\"1\":{\"655\":1}}],[\"但实际开发中一般避免这种情况以免代码发生\",{\"1\":{\"181\":1}}],[\"但可能在其他处理器核心的缓存中也存在\",{\"1\":{\"742\":1}}],[\"但可能导致频繁使用的数据被替换\",{\"1\":{\"739\":2}}],[\"但可能导致缓存冲突\",{\"1\":{\"739\":1}}],[\"但可以有多个相同的值\",{\"1\":{\"186\":1}}],[\"但仍在cpu芯片内部\",{\"1\":{\"739\":1,\"740\":2}}],[\"但仍然位于cpu芯片内部\",{\"1\":{\"739\":1}}],[\"但访问速度略慢\",{\"1\":{\"739\":2}}],[\"但访问速度最快\",{\"1\":{\"739\":1}}],[\"但保证顺序和可靠\",{\"1\":{\"724\":1}}],[\"但ipv6首部结构比ipv4简单\",{\"1\":{\"678\":1}}],[\"但事实上整个会话都被攻击者完全控制\",{\"1\":{\"664\":1}}],[\"但由于它们位于相同的缓存行内\",{\"1\":{\"743\":1}}],[\"但由于是这几年才出来的\",{\"1\":{\"655\":1}}],[\"但由于没有统一的规范\",{\"1\":{\"161\":1}}],[\"但rpc协议一般还会再建个连接池\",{\"1\":{\"655\":1}}],[\"但这并不是永久性的\",{\"1\":{\"642\":1}}],[\"但这些阶段默认没有绑定任何插件目标\",{\"1\":{\"155\":1}}],[\"但至少不会浪费空间\",{\"1\":{\"618\":1}}],[\"但还没保存到数据库中\",{\"1\":{\"421\":1}}],[\"但还是应该将这两个术语分开\",{\"1\":{\"215\":1}}],[\"但也还是存在下面的问题\",{\"1\":{\"416\":1}}],[\"但与直接在宿主执行的进程不同\",{\"1\":{\"387\":1}}],[\"但各自作为独立的进程在用户空间中运行\",{\"1\":{\"380\":1}}],[\"但功能有所不同\",{\"1\":{\"380\":1}}],[\"但包含它有两个好处\",{\"1\":{\"369\":1}}],[\"但任务处理时间较短\",{\"1\":{\"331\":1}}],[\"但有现成库支持的场景\",{\"1\":{\"320\":1}}],[\"但有两个关键注意事项\",{\"1\":{\"286\":1}}],[\"但有其他\",{\"1\":{\"270\":1}}],[\"但无论内部怎么实现\",{\"1\":{\"250\":1}}],[\"但随着链表长度增加\",{\"1\":{\"249\":1}}],[\"但条件非常严苛\",{\"1\":{\"244\":1}}],[\"但只恢复了不到\",{\"1\":{\"239\":1}}],[\"但它没有父类\",{\"1\":{\"236\":1}}],[\"但它们共享进程的资源\",{\"1\":{\"196\":1}}],[\"但支持接口之间的多继承\",{\"1\":{\"233\":1,\"259\":1}}],[\"但扩容阈值大于\",{\"1\":{\"189\":1}}],[\"但使用\",{\"1\":{\"186\":1}}],[\"但\",{\"1\":{\"146\":1,\"193\":1}}],[\"但不包含图形界面\",{\"1\":{\"388\":1}}],[\"但不是一个个应答\",{\"1\":{\"709\":1}}],[\"但不是\",{\"1\":{\"143\":1}}],[\"但不在编译类路径中\",{\"1\":{\"142\":1}}],[\"但必须提供显式包含它的\",{\"1\":{\"142\":1}}],[\"但是客户端不会再次发出确认\",{\"1\":{\"703\":1}}],[\"但是osi对我们实践过程分层有着指导性的意义\",{\"1\":{\"684\":1}}],[\"但是服务器如果向客户端发送数据\",{\"1\":{\"705\":1}}],[\"但是服务器处理时内部发生了错误\",{\"1\":{\"642\":1}}],[\"但是服务端并不会验证客户端的身份\",{\"1\":{\"665\":1}}],[\"但是带来的提升大于丢包导致的数据重传\",{\"1\":{\"648\":1}}],[\"但是没有及时从上游服务器收到请求\",{\"1\":{\"642\":1}}],[\"但是这个资源不是由服务器提供返回给客户端的\",{\"1\":{\"642\":1}}],[\"但是不可能脏读和不可重复读现象\",{\"1\":{\"630\":1}}],[\"但是不可能发生脏读现象\",{\"1\":{\"630\":1}}],[\"但是不保证原子性\",{\"1\":{\"210\":1}}],[\"但是还未提交\",{\"1\":{\"628\":1}}],[\"但是只要破坏任意一个条件就死锁就不会成立\",{\"1\":{\"625\":1}}],[\"但是会将连接恢复到刚刚创建完时的状态\",{\"1\":{\"621\":1}}],[\"但是如果长期超50\",{\"1\":{\"479\":1,\"528\":1}}],[\"但是如果想要更新数据\",{\"1\":{\"214\":1}}],[\"但是si和so也很少\",{\"1\":{\"479\":1,\"528\":1}}],[\"但是si\",{\"1\":{\"479\":1,\"528\":1}}],[\"但是一定要注意换行和句子不要太长\",{\"1\":{\"425\":1}}],[\"但是特别容易犯错\",{\"1\":{\"415\":1}}],[\"但是两者的作用还是有本质区别\",{\"1\":{\"406\":1}}],[\"但是实际上该文件会一直跟随镜像\",{\"1\":{\"386\":1}}],[\"但是实例化的时候是通过遍历将接口的实现类得全部载入\",{\"1\":{\"255\":1}}],[\"但是大家也没有必要完全否定虚拟机技术\",{\"1\":{\"380\":1}}],[\"但是他们是被设计专用于\",{\"1\":{\"292\":1}}],[\"但是编译过程会增加启动时间和内存消耗\",{\"1\":{\"250\":1}}],[\"但是执行效率相对较低\",{\"1\":{\"250\":1}}],[\"但是\",{\"1\":{\"239\":1,\"388\":1,\"417\":1,\"419\":1,\"703\":1}}],[\"但是线程\",{\"1\":{\"223\":1}}],[\"但是线程安全\",{\"1\":{\"181\":1}}],[\"但是并没有任何办法使其变成公平锁\",{\"1\":{\"217\":1}}],[\"但是可以通过创建\",{\"1\":{\"202\":1}}],[\"但是提高并发并不意味着启动更多的线程来执行\",{\"1\":{\"198\":1}}],[\"但是都可以共享饭店的服务员\",{\"1\":{\"196\":1}}],[\"但是依旧不能解决数据丢失的问题\",{\"1\":{\"191\":1}}],[\"但是依旧不建议在多线程中使用\",{\"1\":{\"190\":1}}],[\"但是同一个\",{\"1\":{\"189\":1}}],[\"但是问题是一个\",{\"1\":{\"188\":1}}],[\"但是它可以报告关于进程\",{\"1\":{\"477\":1,\"526\":1}}],[\"但是它能完成类似内存屏障的功能\",{\"1\":{\"211\":1}}],[\"但是它们的原理都不变\",{\"1\":{\"187\":1}}],[\"但是它不是精准的\",{\"1\":{\"97\":1}}],[\"但是它跟我们用到的基础类库没有关系\",{\"1\":{\"16\":1}}],[\"但是此时作为子工程来讲\",{\"1\":{\"21\":1}}],[\"但是为了方便识别以及后续升级版本\",{\"1\":{\"12\":1}}],[\"但是啥都不精通\",{\"1\":{\"1\":1}}],[\"编程有系统函数和自定义函数\",{\"1\":{\"607\":1}}],[\"编译成本地机器代码\",{\"1\":{\"250\":1}}],[\"编译器会首先检查字符串常量池中是否存在相同的字符串\",{\"1\":{\"249\":1}}],[\"编译器技术的发展越来越接近于\",{\"1\":{\"233\":1,\"259\":1}}],[\"编译器是用\",{\"1\":{\"233\":1,\"259\":1}}],[\"编译测试源代码到测试目标目录\",{\"1\":{\"166\":1}}],[\"编译测试源码\",{\"1\":{\"166\":1}}],[\"编译测试代码到测试输出目录\",{\"1\":{\"155\":1}}],[\"编译项目的源代码\",{\"1\":{\"166\":1}}],[\"编译代码到输出目录\",{\"1\":{\"155\":1}}],[\"编译代码有效\",{\"1\":{\"142\":1}}],[\"编译\",{\"1\":{\"142\":2,\"161\":2,\"166\":1,\"744\":2}}],[\"编译依赖项在所有类路径中都可用\",{\"1\":{\"142\":1}}],[\"编译和运行时\",{\"1\":{\"142\":1}}],[\"编写程序的源代码\",{\"1\":{\"744\":1}}],[\"编写源代码\",{\"1\":{\"744\":1}}],[\"编写一个\",{\"1\":{\"571\":1}}],[\"编写\",{\"1\":{\"399\":1,\"580\":1,\"584\":1,\"594\":1}}],[\"编写curd测试类\",{\"1\":{\"41\":1}}],[\"编写测试类\",{\"0\":{\"41\":1,\"125\":1}}],[\"此后客户端和服务器经过两次握手完成连接\",{\"1\":{\"703\":1}}],[\"此包发送完毕\",{\"1\":{\"699\":1}}],[\"此处并非系统的\",{\"1\":{\"373\":1}}],[\"此处存放\",{\"1\":{\"260\":1,\"261\":1,\"373\":1}}],[\"此方法会等待直至锁为\",{\"1\":{\"287\":1}}],[\"此函数要求显式地传入\",{\"1\":{\"278\":1}}],[\"此函数应该从另一个\",{\"1\":{\"278\":1}}],[\"此函数将等待直到\",{\"1\":{\"275\":1}}],[\"此函数总是会创建一个新的事件循环并在结束时关闭之\",{\"1\":{\"270\":1}}],[\"此函数不能被调用\",{\"1\":{\"270\":1}}],[\"此函数确保在每个位位置仅相差恒定倍数的hashcode具有有限数量的冲突\",{\"1\":{\"187\":1}}],[\"此区域的唯一目的就是存放对象实例\",{\"1\":{\"243\":1}}],[\"此类问题比较罕见\",{\"1\":{\"239\":1}}],[\"此内存区域是唯一一个在\",{\"1\":{\"238\":1}}],[\"此范围表示应用程序的正常使用不需要依赖项\",{\"1\":{\"142\":1}}],[\"此范围表示编译不需要依赖项\",{\"1\":{\"142\":1}}],[\"此外\",{\"1\":{\"142\":1,\"147\":1,\"263\":1,\"737\":1}}],[\"此元素指的是手头任务的类路径\",{\"1\":{\"142\":1}}],[\"此时cache的状态已经修改\",{\"1\":{\"743\":1}}],[\"此时这条缓存共享\",{\"1\":{\"743\":1}}],[\"此时这条缓存独占\",{\"1\":{\"743\":1}}],[\"此时tcp连接还没有释放\",{\"1\":{\"705\":1}}],[\"此时客户端进入fin\",{\"1\":{\"705\":1}}],[\"此时客户端状态进入到\",{\"1\":{\"701\":1}}],[\"此时重新向服务器发送这条报文\",{\"1\":{\"703\":1}}],[\"此时事务b插入了与事务a更改前的记录相同的记录行\",{\"1\":{\"628\":1}}],[\"此时即使系统崩溃\",{\"1\":{\"627\":1}}],[\"此时记录的\",{\"1\":{\"622\":1}}],[\"此时已经按照第一个值变成了小顶堆\",{\"1\":{\"352\":1}}],[\"此时若想得到大顶堆\",{\"1\":{\"352\":1}}],[\"此时存储的是对象引用\",{\"1\":{\"249\":1}}],[\"此时常量池存储的是对象\",{\"1\":{\"249\":1}}],[\"此时线程\",{\"1\":{\"223\":1}}],[\"此时又会进入\",{\"1\":{\"181\":1}}],[\"此时函数返回默认容量大小\",{\"1\":{\"181\":1}}],[\"此时可以通过在每个文件夹中添加一个\",{\"1\":{\"53\":1}}],[\"此时可以选择取消安装\",{\"1\":{\"9\":1}}],[\"此时\",{\"1\":{\"35\":1,\"181\":1,\"232\":1,\"239\":1,\"258\":1,\"429\":1,\"571\":1,\"742\":1}}],[\"举个栗子\",{\"1\":{\"142\":1,\"189\":1}}],[\"直到数据包到达目标主机或达到最大跳数限制\",{\"1\":{\"750\":1}}],[\"直到收到正确的回应ack报文再分配tcb\",{\"1\":{\"717\":1}}],[\"直到收到服务端的ack或者达到最大的重传次数\",{\"1\":{\"708\":1}}],[\"直到收到确认ack或者达到最大重传次数\",{\"1\":{\"701\":1}}],[\"直到读完表中所有记录退出循环\",{\"1\":{\"621\":1}}],[\"直到悲观锁被释放\",{\"1\":{\"214\":1}}],[\"直到第11个元素\",{\"1\":{\"181\":1}}],[\"直接映射缓存\",{\"1\":{\"739\":1}}],[\"直接映射tlb中\",{\"1\":{\"736\":1}}],[\"直接关闭\",{\"1\":{\"721\":1}}],[\"直接丢弃tcp段并重新发送\",{\"1\":{\"689\":1}}],[\"直接运行解释器\",{\"1\":{\"571\":1}}],[\"直接对宿主\",{\"1\":{\"387\":1}}],[\"直接对应依赖项的坐标\",{\"1\":{\"142\":1}}],[\"直接比较元素\",{\"1\":{\"363\":1}}],[\"直接以字典的方式去访问\",{\"1\":{\"353\":1}}],[\"直接改个类名就能运行\",{\"1\":{\"326\":1}}],[\"直接创建线程\",{\"0\":{\"324\":1}}],[\"直接访问堆外内存\",{\"1\":{\"239\":1}}],[\"直接内存\",{\"1\":{\"237\":2}}],[\"直接使用tlb中的物理地址\",{\"1\":{\"736\":1}}],[\"直接使用dstat\",{\"1\":{\"567\":1}}],[\"直接使用\",{\"1\":{\"160\":1}}],[\"直译过来是类路径\",{\"1\":{\"15\":1}}],[\"大小\",{\"1\":{\"724\":2}}],[\"大小3\",{\"1\":{\"239\":1}}],[\"大部分版本控制系统\",{\"1\":{\"420\":1}}],[\"大家的修改\",{\"1\":{\"417\":1}}],[\"大多时候是0\",{\"1\":{\"479\":1,\"528\":1}}],[\"大多都是采用某种简单的数据库来记录文件的历次更新差异\",{\"1\":{\"415\":1}}],[\"大多数项目依赖于其他项目来正确构建和运行\",{\"1\":{\"142\":1}}],[\"大大的节约了开发\",{\"1\":{\"384\":1}}],[\"大会召开\",{\"1\":{\"232\":1,\"258\":1}}],[\"大概有\",{\"1\":{\"188\":1}}],[\"大于\",{\"1\":{\"590\":2}}],[\"大于最大容量\",{\"1\":{\"181\":1}}],[\"大于或等于\",{\"1\":{\"143\":1}}],[\"大同小异\",{\"1\":{\"14\":1}}],[\"管理和终止表示层实体之间的通信会话\",{\"1\":{\"683\":1}}],[\"管理的数据存储区域\",{\"1\":{\"397\":1}}],[\"管理的项目都必须遵守这些规则\",{\"1\":{\"136\":1}}],[\"管理程序允许多个\",{\"1\":{\"380\":1}}],[\"管理\",{\"1\":{\"140\":1,\"239\":2,\"240\":2}}],[\"构件始终可用\",{\"1\":{\"142\":1}}],[\"构件\",{\"0\":{\"140\":1},\"1\":{\"140\":1}}],[\"构建一个ip数据包\",{\"1\":{\"673\":1}}],[\"构建目录\",{\"1\":{\"400\":1}}],[\"构建镜像\",{\"0\":{\"394\":1},\"1\":{\"390\":1}}],[\"构建新的镜像\",{\"1\":{\"386\":1}}],[\"构建杰出的软件\",{\"1\":{\"382\":1}}],[\"构建出红黑树\",{\"1\":{\"187\":1}}],[\"构建阶段的依赖性\",{\"0\":{\"163\":1}}],[\"构建生命周期\",{\"0\":{\"161\":1}}],[\"构建项目时\",{\"1\":{\"160\":1}}],[\"构建\",{\"1\":{\"149\":1,\"400\":1}}],[\"构建但内容不同的工件\",{\"1\":{\"142\":1}}],[\"构建元件\",{\"0\":{\"124\":1}}],[\"构建三层架构\",{\"0\":{\"118\":1}}],[\"都必须维护一个序列号\",{\"1\":{\"704\":1}}],[\"都会重新发送数据\",{\"1\":{\"690\":1}}],[\"都会在响应头里使用字段\",{\"1\":{\"642\":1}}],[\"都会生成一个新的\",{\"1\":{\"633\":1}}],[\"都会把旧版本的记录写入到\",{\"1\":{\"631\":1}}],[\"都应该使用数据卷\",{\"1\":{\"387\":1}}],[\"都包含一整套操作系统\",{\"1\":{\"380\":1}}],[\"都被设计为接受\",{\"1\":{\"266\":1}}],[\"都要遵循输入是字节码文件\",{\"1\":{\"250\":1}}],[\"都有实现\",{\"1\":{\"245\":1}}],[\"都只会执行一条线程的指令\",{\"1\":{\"238\":1}}],[\"都可以暂停线程的执行\",{\"1\":{\"204\":1}}],[\"都可以称为\",{\"1\":{\"140\":1}}],[\"都相同\",{\"1\":{\"187\":1}}],[\"都是这层的协议\",{\"1\":{\"683\":1}}],[\"都是独立的\",{\"1\":{\"651\":1}}],[\"都是不可再分的最小数据单元\",{\"1\":{\"617\":1}}],[\"都是以文件变更列表的方式存储信息\",{\"1\":{\"420\":1}}],[\"都是同步的\",{\"1\":{\"193\":1}}],[\"都是黑色的\",{\"1\":{\"187\":1}}],[\"都是支持\",{\"1\":{\"186\":1}}],[\"都是必填字段\",{\"1\":{\"139\":1}}],[\"都不能保证线程安全\",{\"1\":{\"183\":1}}],[\"都不会执行\",{\"1\":{\"181\":1}}],[\"都不会在页面上呈现\",{\"1\":{\"55\":1}}],[\"都需要修改相应的配置\",{\"1\":{\"168\":1}}],[\"规范要求\",{\"1\":{\"250\":1}}],[\"规范中制定了虚拟机字节码执行引擎的概念模型\",{\"1\":{\"250\":1}}],[\"规范定义的内存屏障\",{\"1\":{\"211\":1}}],[\"规定\",{\"1\":{\"139\":1,\"211\":1}}],[\"规划中包括以下内容\",{\"1\":{\"3\":1}}],[\"门牌号等一些列信息唯一地标识一个地址\",{\"1\":{\"139\":1}}],[\"村\",{\"1\":{\"139\":1}}],[\"乡镇\",{\"1\":{\"139\":1}}],[\"县\",{\"1\":{\"139\":1}}],[\"市\",{\"1\":{\"139\":1}}],[\"省略其它分支\",{\"1\":{\"596\":1}}],[\"省\",{\"1\":{\"139\":1}}],[\"轴距离为\",{\"1\":{\"139\":1}}],[\"轴为\",{\"1\":{\"139\":1}}],[\"距离\",{\"1\":{\"139\":1}}],[\"即ascii字符在utf\",{\"1\":{\"751\":1}}],[\"即128个可能值\",{\"1\":{\"751\":1}}],[\"即对内存的操作要么完全执行\",{\"1\":{\"741\":1}}],[\"即关闭本方数据流\",{\"1\":{\"687\":1}}],[\"即将请求数据放置在http报文的请求头中\",{\"1\":{\"653\":1}}],[\"即将暂时获取不到锁的线程加入到队列中\",{\"1\":{\"226\":1}}],[\"即读取同一个资源总是得到相同的数据\",{\"1\":{\"653\":1}}],[\"即返回码是206\",{\"1\":{\"646\":1}}],[\"即mysql\",{\"1\":{\"632\":1}}],[\"即便fin报文不携带数据\",{\"1\":{\"705\":1}}],[\"即便创建连接之后更改了权限也不会影响已连接的权限\",{\"1\":{\"621\":1}}],[\"即便在多核处理器上\",{\"1\":{\"322\":1}}],[\"即限制列的冗余性\",{\"1\":{\"617\":1}}],[\"即要求实体的唯一性\",{\"1\":{\"617\":1}}],[\"即任务队列的平均长度\",{\"1\":{\"440\":1,\"534\":1}}],[\"即使它们访问的是不同的变量\",{\"1\":{\"743\":1}}],[\"即使它们已经存在\",{\"1\":{\"402\":1}}],[\"即使丢包\",{\"1\":{\"648\":1}}],[\"即使你成功进行中间人攻击\",{\"1\":{\"641\":1}}],[\"即使中途有其他事务插入了一条数据\",{\"1\":{\"632\":1}}],[\"即使容器被删除\",{\"1\":{\"397\":1}}],[\"即变成了逆序\",{\"1\":{\"352\":1}}],[\"即执行\",{\"1\":{\"306\":1}}],[\"即经常执行的代码\",{\"1\":{\"250\":1}}],[\"即时编译器支持的触发机制\",{\"1\":{\"250\":1}}],[\"即时编译器的优点是可以将执行效率提高到接近本地应用程序的水平\",{\"1\":{\"250\":1}}],[\"即时编译器将字节码文件中的热点代码\",{\"1\":{\"250\":1}}],[\"即时编译器\",{\"1\":{\"250\":1}}],[\"即时编译器编译后的代码等数据\",{\"1\":{\"244\":1}}],[\"即可运行时报错\",{\"1\":{\"239\":1}}],[\"即允许同一个线程多次获取同一把锁\",{\"1\":{\"216\":1}}],[\"即冲突真的很少发生的时候\",{\"1\":{\"214\":1}}],[\"即红色结点的父子结点都不能是红色\",{\"1\":{\"187\":1}}],[\"即它们的存储和迭代顺序可能与插入顺序不同\",{\"1\":{\"186\":1}}],[\"即键值对\",{\"1\":{\"186\":1}}],[\"即为\",{\"1\":{\"181\":1}}],[\"即\",{\"1\":{\"151\":1,\"189\":1,\"221\":1,\"293\":1}}],[\"即在一个平面坐标系中\",{\"1\":{\"139\":1}}],[\"即项目对象模型\",{\"1\":{\"137\":1}}],[\"说实话关于\",{\"1\":{\"382\":1}}],[\"说白了它就是衡量数组需不需要扩容的一个标准\",{\"1\":{\"187\":1}}],[\"说到坐标\",{\"1\":{\"139\":1}}],[\"说明从\",{\"1\":{\"698\":1}}],[\"说明io等待比较严重\",{\"1\":{\"479\":1,\"528\":1}}],[\"说明系统内核消耗的cpu资源多\",{\"1\":{\"479\":1,\"528\":1}}],[\"说明系统满负荷运行\",{\"1\":{\"440\":1,\"534\":1}}],[\"说明用户进程消耗的cpu时间多\",{\"1\":{\"479\":1,\"528\":1}}],[\"说明cache处的文件数多\",{\"1\":{\"479\":1,\"528\":1}}],[\"说明它可以进行序列化操作\",{\"1\":{\"181\":1,\"182\":1}}],[\"说明它支持拷贝操作\",{\"1\":{\"181\":1,\"182\":1}}],[\"说明它是一个列表\",{\"1\":{\"181\":1,\"182\":1}}],[\"说明实现这个接口的子类是支持\",{\"1\":{\"181\":1}}],[\"说明\",{\"1\":{\"105\":3,\"106\":2,\"107\":1,\"202\":1,\"205\":1,\"211\":1,\"360\":1,\"571\":1}}],[\"坐标\",{\"0\":{\"139\":1},\"1\":{\"139\":1,\"142\":1}}],[\"声明静态变量\",{\"1\":{\"574\":1}}],[\"声明顺序优先\",{\"1\":{\"144\":2}}],[\"声明项目依赖等等\",{\"1\":{\"137\":1}}],[\"声明式事务依赖\",{\"1\":{\"40\":1,\"117\":1}}],[\"全相联映射缓存\",{\"1\":{\"739\":1}}],[\"全连接队列\",{\"1\":{\"714\":1}}],[\"全能系统信息统计工具\",{\"1\":{\"515\":1}}],[\"全部文件系统列表\",{\"1\":{\"452\":1,\"552\":1}}],[\"全局解释器锁\",{\"0\":{\"322\":1},\"1\":{\"322\":1}}],[\"全称为\",{\"1\":{\"205\":1}}],[\"全称是\",{\"1\":{\"137\":1}}],[\"全文搜索插件会根据当前页面上的超链接获取文档内容\",{\"1\":{\"93\":1}}],[\"全文搜索\",{\"0\":{\"93\":1}}],[\"凡是使用\",{\"1\":{\"136\":1}}],[\"介绍一下现代cpu指令周期与指令类型\",{\"0\":{\"735\":1}}],[\"介绍内容来自\",{\"1\":{\"406\":1}}],[\"介绍内容来自https\",{\"1\":{\"406\":1}}],[\"介绍\",{\"0\":{\"381\":1},\"1\":{\"135\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"博客相关\",{\"0\":{\"128\":1}}],[\"博客内容\",{\"0\":{\"3\":1}}],[\"执行指令\",{\"1\":{\"744\":1}}],[\"执行相应的中断处理程序\",{\"1\":{\"738\":1}}],[\"执行相应的操作\",{\"1\":{\"735\":1}}],[\"执行逻辑运算\",{\"1\":{\"735\":1}}],[\"执行基本的算术运算\",{\"1\":{\"735\":1}}],[\"执行速度drop>truncate>delete\",{\"1\":{\"624\":1}}],[\"执行速度快\",{\"1\":{\"624\":1}}],[\"执行删除操作的过程是每次从表中删除一行\",{\"1\":{\"624\":1}}],[\"执行器得到聚簇索引记录后\",{\"1\":{\"622\":1}}],[\"执行器负责具体执行\",{\"1\":{\"622\":1}}],[\"执行器会判断这条数据是否满足条件\",{\"1\":{\"621\":1}}],[\"执行器会与存储引擎交互\",{\"1\":{\"621\":1}}],[\"执行器读到数据之后判断记录是否满足要求\",{\"1\":{\"621\":1}}],[\"执行sql\",{\"1\":{\"621\":1}}],[\"执行完成后的结果会被放入缓存中\",{\"1\":{\"621\":1}}],[\"执行完同步块的逻辑后\",{\"1\":{\"219\":1}}],[\"执行后面的语句\",{\"1\":{\"590\":2}}],[\"执行里面的命令\",{\"1\":{\"575\":1}}],[\"执行初始化脚本等\",{\"1\":{\"400\":1}}],[\"执行爬虫事件列表\",{\"1\":{\"334\":1}}],[\"执行网络\",{\"1\":{\"298\":1}}],[\"执行引擎的统一外观\",{\"1\":{\"250\":1}}],[\"执行引擎也有许多优化措施\",{\"1\":{\"250\":1}}],[\"执行引擎包含两个主要组件\",{\"1\":{\"250\":1}}],[\"执行引擎是\",{\"1\":{\"250\":1}}],[\"执行引擎\",{\"0\":{\"250\":1}}],[\"执行过程中需要的类在联接阶段被载入到运行环境中\",{\"1\":{\"233\":1,\"259\":1}}],[\"执行修改\",{\"1\":{\"223\":1}}],[\"执行的更快\",{\"1\":{\"223\":1}}],[\"执行的任务\",{\"1\":{\"155\":1}}],[\"执行方法会使线程会变成\",{\"1\":{\"204\":2}}],[\"执行一条\",{\"1\":{\"621\":1}}],[\"执行一次命令\",{\"1\":{\"474\":1,\"524\":1}}],[\"执行一个\",{\"1\":{\"302\":1}}],[\"执行一个进程时\",{\"1\":{\"197\":1}}],[\"执行一些需要在生成站点文档之后完成的工作\",{\"1\":{\"167\":1}}],[\"执行一些需要在生成站点文档之前完成的工作\",{\"1\":{\"167\":1}}],[\"执行一些需要在\",{\"1\":{\"165\":2}}],[\"执行\",{\"1\":{\"181\":1,\"239\":1,\"263\":1,\"270\":1,\"735\":1,\"744\":1}}],[\"执行命令\",{\"1\":{\"171\":1}}],[\"执行不同的构建过程\",{\"1\":{\"171\":1}}],[\"执行任何的必要的操作为打包做准备\",{\"1\":{\"166\":1}}],[\"执行插件目标\",{\"0\":{\"153\":1}}],[\"执行测试用例\",{\"1\":{\"155\":1}}],[\"执行测试\",{\"0\":{\"126\":1},\"1\":{\"142\":1}}],[\"执行文件的实现\",{\"1\":{\"16\":1}}],[\"四种状态\",{\"1\":{\"741\":1}}],[\"四\",{\"0\":{\"126\":1}}],[\"黑科技\",{\"1\":{\"124\":1}}],[\"实时性好\",{\"1\":{\"724\":1}}],[\"实时系统监控工具\",{\"1\":{\"515\":1}}],[\"实时显示系统中各个进程的资源占用状况及总体状况\",{\"1\":{\"515\":1}}],[\"实例\",{\"0\":{\"441\":1,\"470\":1,\"480\":1,\"520\":1,\"529\":1,\"535\":1},\"1\":{\"279\":1,\"387\":1,\"515\":1,\"609\":1,\"610\":1}}],[\"实际用到的比较少\",{\"1\":{\"642\":1}}],[\"实际上发送了自己伪造的证书给浏览器\",{\"1\":{\"641\":1}}],[\"实际上都是一次对代码仓库的完整备份\",{\"1\":{\"417\":1}}],[\"实际上是调用\",{\"1\":{\"202\":1}}],[\"实际上是一个空数组\",{\"1\":{\"181\":1}}],[\"实际上是一个依赖插件执行的框架\",{\"1\":{\"150\":1}}],[\"实际不是真的删除前一层的文件\",{\"1\":{\"386\":1}}],[\"实际运行有不同的\",{\"1\":{\"142\":1}}],[\"实体类\",{\"1\":{\"118\":1}}],[\"实践要求\",{\"1\":{\"111\":1}}],[\"实现缓存一致性需要在硬件层面进行支持\",{\"1\":{\"741\":1}}],[\"实现缓存一致性协议\",{\"1\":{\"207\":1}}],[\"实现相对复杂\",{\"1\":{\"739\":1}}],[\"实现起来相对复杂\",{\"1\":{\"739\":1}}],[\"实现全双工的可靠释放连接\",{\"1\":{\"719\":1}}],[\"实现网络不同主机上的用户进程之间的数据通信\",{\"1\":{\"683\":1}}],[\"实现该方法\",{\"1\":{\"353\":1}}],[\"实现一个\",{\"0\":{\"349\":1}}],[\"实现一个用于\",{\"1\":{\"287\":1}}],[\"实现连接池以及发布\",{\"1\":{\"301\":1}}],[\"实现高效率协议\",{\"1\":{\"263\":1}}],[\"实现高速\",{\"1\":{\"239\":1}}],[\"实现分布式任务\",{\"1\":{\"263\":1}}],[\"实现原理\",{\"0\":{\"254\":1}}],[\"实现在独立的包中\",{\"1\":{\"253\":1}}],[\"实现和接口在同一个包中\",{\"1\":{\"253\":1}}],[\"实现共享状态的传播\",{\"1\":{\"227\":1}}],[\"实现的一个\",{\"1\":{\"249\":1}}],[\"实现的包装类\",{\"1\":{\"224\":1}}],[\"实现的\",{\"1\":{\"219\":2,\"221\":1,\"226\":1,\"233\":2,\"236\":2,\"259\":2,\"651\":1,\"728\":2}}],[\"实现类不能通过有参构造器实例化\",{\"1\":{\"255\":1}}],[\"实现类3\",{\"1\":{\"252\":1,\"253\":1}}],[\"实现类2\",{\"1\":{\"252\":1,\"253\":1}}],[\"实现类1\",{\"1\":{\"252\":1,\"253\":1}}],[\"实现类\",{\"1\":{\"216\":1}}],[\"实现类就叫pessimisticlock\",{\"1\":{\"214\":1}}],[\"实现类都允许使用\",{\"1\":{\"186\":1}}],[\"实现了的一些功能\",{\"1\":{\"226\":1}}],[\"实现了\",{\"1\":{\"183\":1}}],[\"实现\",{\"1\":{\"102\":1,\"111\":1,\"187\":1,\"211\":2,\"252\":3,\"253\":3,\"263\":1,\"322\":1,\"627\":1}}],[\"实现多个页面\",{\"1\":{\"51\":1}}],[\"帮助开发检测代码中不合规范的地方的插件\",{\"1\":{\"150\":1}}],[\"帮助\",{\"1\":{\"108\":1}}],[\"将cpu从用户态切换到内核态\",{\"1\":{\"738\":1}}],[\"将新的映射关系添加到tlb中\",{\"1\":{\"736\":1}}],[\"将执行结果写回目标寄存器\",{\"1\":{\"735\":1}}],[\"将指令转换为控制信号和操作数\",{\"1\":{\"735\":1}}],[\"将pfn与offset组合成物理地址\",{\"1\":{\"734\":1}}],[\"将vpn转换为物理页框号\",{\"1\":{\"734\":1}}],[\"将首部的fin标识位置为1\",{\"1\":{\"705\":1}}],[\"将首部的syn和ack标识位置为1\",{\"1\":{\"699\":1}}],[\"将首部的syn标识位置为1\",{\"1\":{\"699\":1}}],[\"将上层数据封装成帧\",{\"1\":{\"683\":1}}],[\"将有用的信息提取后交给icmp协议\",{\"1\":{\"673\":1}}],[\"将ip数据包从帧中提取出来\",{\"1\":{\"673\":1}}],[\"将个人查询重定向到域名服务器dns\",{\"1\":{\"670\":1}}],[\"将查询结果返回给本地域名服务器\",{\"1\":{\"667\":1}}],[\"将所对应的授权域名服务器的ip地址返回给本地域名服务器\",{\"1\":{\"667\":1}}],[\"将重要的cookie标记为http\",{\"1\":{\"659\":1}}],[\"将传输层协议改成udp\",{\"1\":{\"648\":1}}],[\"将参数\",{\"1\":{\"625\":1}}],[\"将事务设置为\",{\"1\":{\"622\":1}}],[\"将数据放在一个指定名字的回调函数的参数位置传回来\",{\"1\":{\"681\":1}}],[\"将数据页从磁盘读入到\",{\"1\":{\"622\":1}}],[\"将数字转换为二进制字符串\",{\"1\":{\"360\":1}}],[\"将分支推送到远端仓库\",{\"1\":{\"430\":1}}],[\"将这些改动提交到远端仓库\",{\"1\":{\"426\":1}}],[\"将快照永久性存储到\",{\"1\":{\"421\":1}}],[\"将文件的快照放入暂存区域\",{\"1\":{\"421\":1}}],[\"将镜像推送到私有镜像仓库\",{\"1\":{\"396\":1}}],[\"将以\",{\"1\":{\"388\":1}}],[\"将其设计为分层存储的架构\",{\"1\":{\"386\":1}}],[\"将其设为\",{\"1\":{\"287\":2}}],[\"将代码从\",{\"1\":{\"370\":1}}],[\"将保留其原始顺序\",{\"1\":{\"368\":1}}],[\"将一个整数转换为\",{\"1\":{\"360\":1}}],[\"将一个整数转换为一个字符\",{\"1\":{\"360\":1}}],[\"将序列\",{\"1\":{\"360\":2}}],[\"将对应的ip发给客户端\",{\"1\":{\"672\":2}}],[\"将对应的顶级域名服务器的ip地址返回给本地域名服务器\",{\"1\":{\"667\":1}}],[\"将对应接口的实现类加载到内存并连接至接入点\",{\"1\":{\"254\":1}}],[\"将对象\",{\"1\":{\"360\":2}}],[\"将logger添加到handler里面\",{\"1\":{\"357\":1}}],[\"将最后一个元素移动到删除的元素位置\",{\"1\":{\"354\":1}}],[\"将最终的项目包复制到远程仓库中与其他开发者和项目共享\",{\"1\":{\"166\":1}}],[\"将剩余部分的代码再一并执行\",{\"1\":{\"333\":1}}],[\"将多个任务分成nums份\",{\"1\":{\"316\":1}}],[\"将阻塞至某个元素被\",{\"1\":{\"293\":1}}],[\"将会发出一条\",{\"1\":{\"306\":1}}],[\"将会通知返回的\",{\"1\":{\"278\":1}}],[\"将会在调用期间阻塞事件循环\",{\"1\":{\"277\":1}}],[\"将会抛出\",{\"1\":{\"243\":1}}],[\"将在指定秒数后被返回\",{\"1\":{\"276\":1}}],[\"将不会取消任何其他可等待对象\",{\"1\":{\"273\":1}}],[\"将提供一个经优化的路径以允许其他任务运行\",{\"1\":{\"272\":1}}],[\"将装配的控制权移到了程序之外\",{\"1\":{\"252\":1}}],[\"将抛出\",{\"1\":{\"239\":1}}],[\"将抛出此异常\",{\"1\":{\"239\":1}}],[\"将运行时内存划分为以下五个区域\",{\"1\":{\"237\":1}}],[\"将字节码编译成本地代码执行\",{\"1\":{\"235\":1}}],[\"将主内存变量解锁\",{\"1\":{\"206\":1}}],[\"将主内存变量加锁\",{\"1\":{\"206\":1}}],[\"将主内存读取到的数据写入工作内存\",{\"1\":{\"206\":1}}],[\"将工作内存数据写入主内存\",{\"1\":{\"206\":1}}],[\"将计算好的值重新赋值到工作内存中\",{\"1\":{\"206\":1}}],[\"将此线程标记为守护线程或用户线程\",{\"1\":{\"202\":1}}],[\"将此选项显示设置为\",{\"1\":{\"106\":1}}],[\"将此选项显式设置为\",{\"1\":{\"105\":1}}],[\"将元素插在链表尾部\",{\"1\":{\"190\":1}}],[\"将元素插在链表头部\",{\"1\":{\"190\":1}}],[\"将元素据右移x位并进行或操作\",{\"1\":{\"189\":1}}],[\"将元素放至指定索引处\",{\"1\":{\"179\":1}}],[\"将链表和数组相结合\",{\"1\":{\"187\":1}}],[\"将链表转换成红黑树前会判断\",{\"1\":{\"187\":1}}],[\"将集合的所有元素都替换成给定操作执行的结果\",{\"1\":{\"179\":1}}],[\"将生成的站点文档部署到特定的服务器上\",{\"1\":{\"167\":1}}],[\"将编译后的代码打包成可分发格式的文件\",{\"1\":{\"166\":1}}],[\"将项目输出的包文件部署到到远程仓库\",{\"1\":{\"155\":1}}],[\"将项目输出的包文件安装到本地仓库\",{\"1\":{\"155\":1}}],[\"将依赖项标记为可选\",{\"1\":{\"142\":1}}],[\"将附加到版本号之后的项目名称中\",{\"1\":{\"142\":1}}],[\"将druid连接池对象存储到ioc容器\",{\"1\":{\"121\":1}}],[\"将\",{\"1\":{\"105\":1,\"156\":1,\"181\":1,\"206\":1,\"223\":4,\"271\":1,\"272\":1,\"310\":2,\"351\":1,\"360\":3,\"427\":1,\"578\":1,\"622\":3}}],[\"将切换到相应的索引\",{\"1\":{\"93\":1}}],[\"类和方法的全限定名\",{\"1\":{\"246\":1}}],[\"类文件加载到\",{\"1\":{\"236\":1}}],[\"类加载器主要分为以下三种类型\",{\"1\":{\"236\":1}}],[\"类加载器还会对类进行校验\",{\"1\":{\"236\":1}}],[\"类加载器是\",{\"1\":{\"236\":1}}],[\"类加载器\",{\"0\":{\"236\":1},\"1\":{\"235\":1}}],[\"类加载器会从该路径中加载所需要的\",{\"1\":{\"142\":1}}],[\"类加载机制等等\",{\"1\":{\"235\":1}}],[\"类已经实现了\",{\"1\":{\"233\":1,\"259\":1}}],[\"类派生出子类并重写\",{\"1\":{\"233\":1,\"259\":1}}],[\"类来创建\",{\"1\":{\"233\":1,\"259\":1}}],[\"类或其子\",{\"1\":{\"233\":1,\"259\":1}}],[\"类而言\",{\"1\":{\"217\":1}}],[\"类的\",{\"1\":{\"382\":1}}],[\"类的实例存在安全隐患\",{\"1\":{\"255\":1}}],[\"类的引用\",{\"1\":{\"244\":1}}],[\"类的本地方法\",{\"1\":{\"204\":1}}],[\"类的静态本地方法\",{\"1\":{\"204\":1}}],[\"类中\",{\"1\":{\"204\":2}}],[\"类中的方法\",{\"0\":{\"202\":1}}],[\"类中定义了一个枚举类\",{\"1\":{\"201\":1}}],[\"类等等\",{\"1\":{\"200\":1}}],[\"类\",{\"1\":{\"193\":1,\"200\":1,\"233\":2,\"236\":2,\"259\":2,\"387\":1}}],[\"类似线程的同步基元组件\",{\"1\":{\"304\":1}}],[\"类似于数学中的集合\",{\"1\":{\"184\":1}}],[\"类似\",{\"1\":{\"105\":1,\"239\":2,\"280\":1,\"305\":1,\"311\":1,\"388\":1,\"400\":1}}],[\"类型的方法信息\",{\"1\":{\"244\":1}}],[\"类型的字段信息\",{\"1\":{\"244\":1}}],[\"类型的修饰符\",{\"1\":{\"244\":1}}],[\"类型的父类全名\",{\"1\":{\"244\":1}}],[\"类型的全名\",{\"1\":{\"244\":1}}],[\"类型信息包括什么\",{\"1\":{\"244\":1}}],[\"类型需要是\",{\"1\":{\"146\":1}}],[\"类型\",{\"1\":{\"64\":1,\"66\":1,\"68\":1,\"70\":1,\"72\":1,\"74\":1,\"77\":1,\"79\":1,\"81\":1,\"83\":1,\"85\":1,\"87\":1,\"105\":3,\"106\":2,\"107\":1,\"169\":1,\"276\":1,\"739\":1}}],[\"离线模式\",{\"1\":{\"103\":1}}],[\"添加\",{\"1\":{\"658\":1}}],[\"添加到左侧\",{\"1\":{\"345\":1}}],[\"添加到右侧\",{\"1\":{\"345\":1}}],[\"添加一个回调\",{\"1\":{\"280\":1}}],[\"添加一个类型为e的元素集合\",{\"1\":{\"178\":1}}],[\"添加一个类型为e的元素\",{\"1\":{\"178\":1}}],[\"添加元素后的数组长度大于扩容阈值了会触发\",{\"1\":{\"187\":1}}],[\"添加元素的方法\",{\"1\":{\"181\":1}}],[\"添加元素到指定索引位置\",{\"1\":{\"179\":1}}],[\"添加整个集合的元素到指定索引位置\",{\"1\":{\"179\":1}}],[\"添加值\",{\"1\":{\"146\":1}}],[\"添加新的数据库\",{\"0\":{\"115\":1}}],[\"添加不同的语法文件\",{\"1\":{\"102\":1}}],[\"添加额外的语法支持需要只通过\",{\"1\":{\"102\":1}}],[\"由发送方计算校验和\",{\"1\":{\"689\":1}}],[\"由发送端填充\",{\"1\":{\"687\":1}}],[\"由数据链路层构建一个数据帧\",{\"1\":{\"673\":1}}],[\"由icmp协议将这个数据包连同服务端ip一起交给ip层\",{\"1\":{\"673\":1}}],[\"由客户端向服务端发起加密通信请求\",{\"1\":{\"637\":1}}],[\"由内存调入磁盘\",{\"1\":{\"479\":1,\"528\":1}}],[\"由磁盘调入内存\",{\"1\":{\"479\":1,\"528\":1}}],[\"由可等待对象所引发的\",{\"1\":{\"273\":1}}],[\"由于其兼容性和高效的存储方式\",{\"1\":{\"751\":1}}],[\"由于频繁的缓存同步操作\",{\"1\":{\"743\":1}}],[\"由于程序在执行过程中倾向于访问相邻的虚拟地址\",{\"1\":{\"737\":1}}],[\"由于程序在执行过程中倾向于访问局部的\",{\"1\":{\"737\":1}}],[\"由于tlb需要在每次地址翻译过程中进行查找\",{\"1\":{\"736\":1}}],[\"由于tcp的重传机制\",{\"1\":{\"719\":1}}],[\"由于tcp的客户端迟迟没有收到确认报文\",{\"1\":{\"703\":1}}],[\"由于地址翻译过程需要多次访问内存\",{\"1\":{\"734\":1}}],[\"由于在半关闭状态\",{\"1\":{\"705\":1}}],[\"由于服务器收不到确认\",{\"1\":{\"703\":1}}],[\"由于dns也是服务发现的一种\",{\"1\":{\"655\":1}}],[\"由于推断的失效时间也许会降低语义透明度\",{\"1\":{\"645\":1}}],[\"由于现在的浏览器都会对状态码500做一定的处理\",{\"1\":{\"642\":1}}],[\"由于隔离的进程独立于宿主和其它的隔离的进程\",{\"1\":{\"382\":1}}],[\"由于io\",{\"1\":{\"322\":1}}],[\"由于\",{\"1\":{\"238\":1}}],[\"由于hashtable的同步机制\",{\"1\":{\"193\":1}}],[\"由于之前已经进行过\",{\"1\":{\"191\":1}}],[\"由于时间片耗尽挂起\",{\"1\":{\"191\":1}}],[\"由于数组容量是确定的\",{\"1\":{\"177\":1}}],[\"由此经过三次握手之后双方就可以都知道自己的发送和接收消息的能力是正常的\",{\"1\":{\"700\":1}}],[\"由此引入\",{\"1\":{\"421\":1}}],[\"由此\",{\"1\":{\"140\":1,\"406\":1}}],[\"由\",{\"1\":{\"102\":1,\"140\":1,\"219\":1,\"232\":1,\"258\":1}}],[\"字\",{\"1\":{\"431\":1}}],[\"字符\",{\"1\":{\"360\":1}}],[\"字符串常量池是\",{\"1\":{\"249\":1}}],[\"字符串常量池是一块特殊的内存区域\",{\"1\":{\"248\":1}}],[\"字符串常量池的本质\",{\"1\":{\"249\":1}}],[\"字符串常量池从永久代移到了堆内存中\",{\"1\":{\"249\":1}}],[\"字符串常量池位于永久代\",{\"1\":{\"249\":1}}],[\"字符串常量池\",{\"0\":{\"248\":1},\"1\":{\"237\":2,\"245\":1}}],[\"字符串\",{\"1\":{\"97\":1}}],[\"字典的遍历是遍历key\",{\"1\":{\"325\":1}}],[\"字段则会变长的\",{\"1\":{\"724\":1}}],[\"字段时是\",{\"1\":{\"724\":1}}],[\"字段声明了一个网页或\",{\"1\":{\"645\":1}}],[\"字段\",{\"1\":{\"623\":2,\"750\":1}}],[\"字段说明\",{\"0\":{\"440\":1,\"458\":1,\"469\":1,\"479\":1,\"497\":1,\"519\":1,\"528\":1,\"534\":1,\"547\":1,\"557\":1}}],[\"字段的名称和描述符\",{\"1\":{\"246\":1}}],[\"字段信息\",{\"1\":{\"244\":1,\"652\":1}}],[\"字面量包括\",{\"1\":{\"246\":1}}],[\"字面量\",{\"1\":{\"246\":1}}],[\"字节\",{\"1\":{\"678\":1,\"729\":1,\"743\":1}}],[\"字节码文件时\",{\"1\":{\"250\":1}}],[\"字节码文件中的指令\",{\"1\":{\"250\":1}}],[\"字节码的虚拟机\",{\"1\":{\"235\":1}}],[\"字节代码检查\",{\"1\":{\"233\":1,\"259\":1}}],[\"字数统计\",{\"0\":{\"95\":1}}],[\"💯\",{\"1\":{\"97\":1}}],[\"😂\",{\"1\":{\"3\":1,\"243\":1}}],[\"解释\",{\"1\":{\"744\":1}}],[\"解释器的参数\",{\"1\":{\"571\":1}}],[\"解释器的优点是可以快速启动和执行代码\",{\"1\":{\"250\":1}}],[\"解释器会逐行解释执行字节码文件中的指令\",{\"1\":{\"250\":1}}],[\"解释器\",{\"1\":{\"250\":1}}],[\"解释器对这些字节码进行解释执行\",{\"1\":{\"233\":1,\"259\":1}}],[\"解码指令\",{\"1\":{\"744\":1}}],[\"解码\",{\"1\":{\"735\":1}}],[\"解密\",{\"1\":{\"683\":1}}],[\"解读\",{\"1\":{\"310\":6}}],[\"解锁后其他线程可以锁定该变量\",{\"1\":{\"206\":1}}],[\"解锁\",{\"1\":{\"206\":1}}],[\"解决方法\",{\"0\":{\"671\":1,\"681\":1}}],[\"解决方案也应该从这个方面入手\",{\"1\":{\"659\":1}}],[\"解决方案2\",{\"1\":{\"121\":1}}],[\"解决方案1\",{\"1\":{\"121\":1}}],[\"解决幻读\",{\"1\":{\"630\":1}}],[\"解决不可重复读\",{\"1\":{\"630\":1}}],[\"解决脏读现象\",{\"1\":{\"630\":1}}],[\"解决办法\",{\"0\":{\"669\":1,\"727\":1},\"1\":{\"625\":1}}],[\"解决办法是\",{\"1\":{\"2\":1}}],[\"解决这个问题的过程也被称为\",{\"1\":{\"144\":1}}],[\"解析指令\",{\"1\":{\"732\":1}}],[\"解析和初始化\",{\"1\":{\"236\":1}}],[\"解析器是\",{\"1\":{\"100\":1}}],[\"解析成\",{\"1\":{\"97\":1}}],[\"解析的\",{\"1\":{\"97\":1}}],[\"等性能优化技术的基础\",{\"1\":{\"737\":1}}],[\"等再次收到前面被网络延迟的数据包时\",{\"1\":{\"707\":1}}],[\"等服务端不再发送数据时\",{\"1\":{\"706\":1}}],[\"等到渲染树构建完成后\",{\"1\":{\"672\":1}}],[\"等语句\",{\"1\":{\"632\":1}}],[\"等于\",{\"1\":{\"590\":1}}],[\"等号两侧不能有空格\",{\"1\":{\"574\":1}}],[\"等技术\",{\"1\":{\"382\":1}}],[\"等价于反引号\",{\"1\":{\"575\":1}}],[\"等价于docker\",{\"1\":{\"395\":1}}],[\"等价于\",{\"1\":{\"310\":2,\"392\":1,\"400\":5}}],[\"等函数在超时时候被引发\",{\"1\":{\"305\":1}}],[\"等函数被封装为了一个\",{\"1\":{\"268\":1}}],[\"等3\",{\"1\":{\"239\":1}}],[\"等工具拦截该方法进行排查2\",{\"1\":{\"239\":1}}],[\"等等时候会选择创建分支\",{\"1\":{\"430\":1}}],[\"等等\",{\"1\":{\"226\":1,\"263\":1,\"406\":1,\"420\":1}}],[\"等方法\",{\"1\":{\"219\":1}}],[\"等方法也都依赖\",{\"1\":{\"219\":1}}],[\"等待进程调用\",{\"1\":{\"714\":1}}],[\"等待客户端返回\",{\"1\":{\"708\":1}}],[\"等待客户端确认\",{\"1\":{\"705\":1}}],[\"等待服务器发送释放报文\",{\"1\":{\"705\":1}}],[\"等待服务器确认\",{\"1\":{\"699\":1}}],[\"等待新数据包等步骤的时间消耗\",{\"1\":{\"648\":1}}],[\"等待资源的进程数\",{\"1\":{\"479\":1,\"528\":1}}],[\"等待结束\",{\"1\":{\"324\":1}}],[\"等待完成\",{\"1\":{\"306\":1}}],[\"等待多件事运行超时的公共集\",{\"1\":{\"300\":1}}],[\"等待直至事件被设置\",{\"1\":{\"288\":1}}],[\"等待\",{\"1\":{\"275\":1,\"333\":1}}],[\"等待的机制被称为自旋锁\",{\"1\":{\"215\":1}}],[\"等待当前线程终止\",{\"1\":{\"202\":1}}],[\"等待状态\",{\"1\":{\"201\":1}}],[\"等集合不同\",{\"1\":{\"186\":1}}],[\"等信息构成\",{\"1\":{\"140\":1}}],[\"等\",{\"1\":{\"95\":1,\"178\":1,\"198\":1,\"233\":1,\"243\":1,\"259\":1,\"724\":1,\"731\":1,\"736\":1}}],[\"等目录\",{\"1\":{\"11\":1}}],[\"它确保了各个核之间的数据一致性\",{\"1\":{\"741\":1}}],[\"它很可能在不久的将来访问相邻的内存地址\",{\"1\":{\"737\":1}}],[\"它基于冯\",{\"1\":{\"732\":1}}],[\"它基于哈希表的\",{\"1\":{\"187\":1}}],[\"它负责进程的创建\",{\"1\":{\"731\":1}}],[\"它负责协调\",{\"1\":{\"731\":1}}],[\"它由传输层的\",{\"1\":{\"729\":1}}],[\"它表示本端所能接受的最大报文段的长度\",{\"1\":{\"687\":1}}],[\"它用于告知服务器两个请求是否来自同一浏览器\",{\"1\":{\"675\":1}}],[\"它允许服务端推送资源给浏览器\",{\"1\":{\"647\":1}}],[\"它允许只请求资源的某个部分\",{\"1\":{\"646\":1}}],[\"它允许使用者像数组一样添加和删除元素\",{\"1\":{\"179\":1}}],[\"它做的变更才能被其他事务看到\",{\"1\":{\"629\":1}}],[\"它做的变更就能被其他事务看到\",{\"1\":{\"629\":1}}],[\"它为用户提供了一个向\",{\"1\":{\"570\":1}}],[\"它使用1到4个字节表示一个字符\",{\"1\":{\"751\":1}}],[\"它使用7位二进制数\",{\"1\":{\"751\":1}}],[\"它使用json来序列化结构体数据\",{\"1\":{\"655\":1}}],[\"它使用\",{\"1\":{\"515\":1}}],[\"它使得任何时刻仅有一个线程在执行\",{\"1\":{\"322\":1}}],[\"它还支持自定义的文本输出\",{\"1\":{\"515\":1}}],[\"它还有很多其他的阶段\",{\"1\":{\"155\":1}}],[\"它能让你实时查看数据库以及正在处理哪些查询\",{\"1\":{\"515\":1}}],[\"它和top命令十分相似\",{\"1\":{\"515\":1}}],[\"它显示各个可用cpu的状态系你想\",{\"1\":{\"444\":1,\"538\":1}}],[\"它主要对当时的全部文件制作一个快照并保存这个快照的索引\",{\"1\":{\"420\":1}}],[\"它也是内部\",{\"1\":{\"400\":1}}],[\"它也是一种非公平锁\",{\"1\":{\"217\":1}}],[\"它也可被用来取消事件循环中的任务\",{\"1\":{\"278\":1}}],[\"它必须为以下常数之一\",{\"1\":{\"276\":1}}],[\"它必须由\",{\"1\":{\"233\":1,\"259\":1}}],[\"它将ttl值减1\",{\"1\":{\"750\":1}}],[\"它将指定的操作系统状态计数器显示到标准输出设备\",{\"1\":{\"496\":1,\"546\":1}}],[\"它将应用软件系统打包成一个软件容器\",{\"1\":{\"406\":1}}],[\"它将复制当前上下文\",{\"1\":{\"280\":1}}],[\"它将自动被作为任务调度\",{\"1\":{\"274\":1,\"275\":1}}],[\"它将自动被作为一个任务调度\",{\"1\":{\"273\":1}}],[\"它将被当作引发了\",{\"1\":{\"273\":1}}],[\"它将使用\",{\"1\":{\"271\":1}}],[\"它将由其子级继承\",{\"1\":{\"146\":1}}],[\"它应当用作\",{\"1\":{\"270\":1}}],[\"它所实现的是一种服务的发现机制\",{\"1\":{\"252\":1}}],[\"它只是包装类里面实现的一个内部类\",{\"1\":{\"245\":1}}],[\"它只能声明以下范围较为宽泛的元素\",{\"1\":{\"170\":1}}],[\"它可以帮助识别和定位网络延迟和问题的来源\",{\"1\":{\"750\":1}}],[\"它可以实时的显示\",{\"1\":{\"515\":1}}],[\"它可以执行\",{\"1\":{\"250\":1}}],[\"它可以看做是当前线程所执行的字节码的行号指示器\",{\"1\":{\"238\":1}}],[\"它可能由\",{\"1\":{\"240\":1}}],[\"它会去通知cpu2这条缓存失效\",{\"1\":{\"743\":1}}],[\"它会向其他拥有该数据的核心发出请求\",{\"1\":{\"742\":1}}],[\"它会发送请求到其他核心\",{\"1\":{\"742\":1}}],[\"它会给配置128位的地址带来很大的方便\",{\"1\":{\"678\":1}}],[\"它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上\",{\"1\":{\"675\":1}}],[\"它会在可用内存极低的情况下\",{\"1\":{\"239\":1}}],[\"它会告知服务器若if\",{\"1\":{\"645\":1}}],[\"它会报告与cpu相关的统计信息\",{\"1\":{\"515\":1}}],[\"它会锁定这块内存区域的缓存\",{\"1\":{\"208\":1}}],[\"它不由\",{\"1\":{\"239\":1,\"240\":1}}],[\"它不是一个具体的协议\",{\"1\":{\"655\":1}}],[\"它不是\",{\"1\":{\"236\":1}}],[\"它不是可传递的\",{\"1\":{\"142\":1}}],[\"它通过\",{\"1\":{\"236\":1}}],[\"它有自己的内存管理机制\",{\"1\":{\"235\":1}}],[\"它保存着线程的引用\",{\"1\":{\"226\":1}}],[\"它指在线程里面运行的那一段代码逻辑\",{\"1\":{\"200\":1}}],[\"它在自己的帧会携带\",{\"1\":{\"651\":1}}],[\"它在程序调用或\",{\"1\":{\"240\":1}}],[\"它在单线程环境下的性能通常不如hashmap\",{\"1\":{\"193\":1}}],[\"它在运行时和测试类路径中\",{\"1\":{\"142\":1}}],[\"它定义了一种特定的数据结构\",{\"1\":{\"186\":1}}],[\"它初始的\",{\"1\":{\"181\":1}}],[\"它的访问速度略慢于l2缓存\",{\"1\":{\"740\":1}}],[\"它的访问速度稍慢于l1缓存\",{\"1\":{\"740\":1}}],[\"它的访问速度非常快\",{\"1\":{\"740\":1}}],[\"它的聚簇索引记录中都包含下面两个隐藏列\",{\"1\":{\"631\":1}}],[\"它的生命周期与线程一致\",{\"1\":{\"239\":1}}],[\"它的主要职责是将编译后的\",{\"1\":{\"236\":1}}],[\"它的长度能动态增长\",{\"1\":{\"181\":1}}],[\"它的取值一般是项目所属公司或组织的网址或\",{\"1\":{\"139\":1}}],[\"它提供了各种安全机制\",{\"1\":{\"731\":1}}],[\"它提供了运行时所需的一些与类有关的信息\",{\"1\":{\"246\":1}}],[\"它提供了用于网络应用编程的类库\",{\"1\":{\"233\":1,\"259\":1}}],[\"它提供了更高的并发性能\",{\"1\":{\"193\":1}}],[\"它提供了线程安全的哈希表实现\",{\"1\":{\"193\":1}}],[\"它提供了一种统一的方式来访问集合中的元素\",{\"1\":{\"178\":1}}],[\"它提供了一套性能优良\",{\"1\":{\"177\":1}}],[\"它提供了标准的迭代器模型\",{\"1\":{\"178\":1}}],[\"它提供了统计中文汉字和英文单词的功能\",{\"1\":{\"95\":1}}],[\"它们之间的区别如下\",{\"1\":{\"751\":1}}],[\"它们已经在高速缓存中\",{\"1\":{\"737\":1}}],[\"它们就已经在cache中了\",{\"1\":{\"737\":1}}],[\"它们都会导致处理器暂停当前正在执行的任务\",{\"1\":{\"733\":1}}],[\"它们都只是定义了不同消息格式的应用层协议而已\",{\"1\":{\"655\":1}}],[\"它们都必须指定为关键字参数\",{\"1\":{\"363\":1}}],[\"它们能够迅速启动\",{\"1\":{\"383\":1}}],[\"它们的顺序将保留在排序列表中\",{\"1\":{\"369\":1}}],[\"它们的作用范围也各不相同\",{\"1\":{\"169\":1}}],[\"它们分别是\",{\"1\":{\"245\":1}}],[\"它们会随着竞争的激烈而逐渐升级\",{\"1\":{\"220\":1}}],[\"它们各有优缺点\",{\"1\":{\"214\":1}}],[\"它们以不同的方式操作集合对象\",{\"1\":{\"178\":1}}],[\"它们以独立构件的形式存在\",{\"1\":{\"150\":1}}],[\"它缓存远程下载的构件并包含尚未发布的临时构件\",{\"1\":{\"158\":1}}],[\"它执行的每个任务实际上都由插件完成的\",{\"1\":{\"150\":1}}],[\"它仅在编译和测试类路径上可用\",{\"1\":{\"142\":1}}],[\"它是最接近cpu的缓存层级\",{\"1\":{\"739\":1}}],[\"它是由浏览器的同源策略造成的\",{\"1\":{\"680\":1}}],[\"它是一种设计思想\",{\"1\":{\"254\":1}}],[\"它是一种用于存储常量\",{\"1\":{\"246\":1}}],[\"它是一个叫做\",{\"1\":{\"249\":1}}],[\"它是一个\",{\"1\":{\"226\":1}}],[\"它是一些可选的任意字符串\",{\"1\":{\"142\":1}}],[\"它是进程中的一个实体\",{\"1\":{\"196\":1}}],[\"它是所有生命周期中最核心\",{\"1\":{\"166\":1}}],[\"它是架设在局域网内的仓库服务\",{\"1\":{\"158\":1}}],[\"它是保存在名为\",{\"1\":{\"137\":1}}],[\"它是\",{\"1\":{\"16\":1,\"226\":1,\"236\":1}}],[\"基础知识\",{\"0\":{\"138\":1}}],[\"基于tcp造出来的http和各类rpc协议\",{\"1\":{\"655\":1}}],[\"基于udp\",{\"1\":{\"650\":1}}],[\"基于使用\",{\"1\":{\"419\":1}}],[\"基于回调的库和代码\",{\"1\":{\"263\":1}}],[\"基于项目对象模型的概念\",{\"1\":{\"135\":1}}],[\"基于配置类方式管理组件bean\",{\"0\":{\"121\":1}}],[\"基于注解+配置类方式整合三层架构组件\",{\"0\":{\"110\":1}}],[\"基于\",{\"1\":{\"94\":1,\"256\":1,\"382\":1,\"399\":1}}],[\"基本工作原理\",{\"1\":{\"750\":1}}],[\"基本语法\",{\"1\":{\"579\":1,\"609\":1,\"610\":1}}],[\"基本的\",{\"1\":{\"421\":1}}],[\"基本命令\",{\"0\":{\"392\":1}}],[\"基本上能够表示镜像被使用的频度\",{\"1\":{\"388\":1}}],[\"基本排序\",{\"0\":{\"364\":1}}],[\"基本类型包装类的\",{\"1\":{\"245\":1}}],[\"基本类型的数据存放在栈中的特性主要适用于局部变量和方法参数\",{\"1\":{\"239\":1}}],[\"基本类型\",{\"1\":{\"224\":1}}],[\"基本概念\",{\"0\":{\"195\":1,\"385\":1}}],[\"基本用法\",{\"0\":{\"65\":1,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"82\":1,\"84\":1,\"86\":1,\"88\":1}}],[\"基本坐标是最重要的\",{\"1\":{\"20\":1}}],[\"z\",{\"1\":{\"506\":1}}],[\"zombie\",{\"1\":{\"440\":1,\"534\":1}}],[\"zoom\",{\"0\":{\"94\":1},\"1\":{\"94\":3}}],[\"zero\",{\"1\":{\"189\":1,\"353\":1}}],[\"zh\",{\"1\":{\"53\":2,\"57\":1,\"59\":2,\"76\":3,\"80\":1,\"86\":1,\"93\":6,\"267\":1,\"280\":1,\"287\":1,\"289\":1}}],[\"像乐观锁适用于写比较少的情况下\",{\"1\":{\"214\":1}}],[\"像\",{\"1\":{\"93\":1}}],[\"像这样\",{\"1\":{\"78\":1}}],[\"匹配到的字符串将被用来识别索引\",{\"1\":{\"93\":1}}],[\"模块中\",{\"1\":{\"370\":1}}],[\"模块有\",{\"1\":{\"366\":1}}],[\"模块函数\",{\"0\":{\"366\":1}}],[\"模块类似\",{\"1\":{\"292\":1}}],[\"模块的类似\",{\"1\":{\"286\":1}}],[\"模块\",{\"1\":{\"280\":1}}],[\"模块之间不对实现类进行硬编码\",{\"1\":{\"252\":1}}],[\"模块是这些项目的目录或\",{\"1\":{\"149\":1}}],[\"模块是此\",{\"1\":{\"149\":1}}],[\"模版方法\",{\"0\":{\"229\":1}}],[\"模拟查询全部用户\",{\"1\":{\"111\":1}}],[\"模式是多个容器的逻辑抽象\",{\"1\":{\"400\":1}}],[\"模式\",{\"1\":{\"93\":1,\"325\":1}}],[\"模仿\",{\"1\":{\"90\":1}}],[\"搜索与字符串匹配的进程\",{\"0\":{\"511\":1},\"1\":{\"507\":1}}],[\"搜索的结果是一致的\",{\"1\":{\"388\":1}}],[\"搜索标题的最大层级\",{\"1\":{\"93\":1}}],[\"搜索\",{\"1\":{\"93\":1}}],[\"内的不同数据时\",{\"1\":{\"743\":1}}],[\"内部包含了\",{\"1\":{\"651\":1}}],[\"内部的应用程序请求创建一个新的\",{\"1\":{\"239\":1}}],[\"内容会有冗余\",{\"1\":{\"655\":1}}],[\"内容全面且附带详细的图解\",{\"1\":{\"431\":1}}],[\"内容非常详细\",{\"1\":{\"407\":1}}],[\"内容如下\",{\"1\":{\"78\":1}}],[\"内含应用软件本身的代码\",{\"1\":{\"406\":1}}],[\"内核数据结构等\",{\"1\":{\"738\":1}}],[\"内核里的\",{\"1\":{\"728\":1}}],[\"内核里会记录包括该连接对应五元组的一些统计数据\",{\"1\":{\"721\":1}}],[\"内核态主要执行操作系统的内核代码\",{\"1\":{\"738\":1}}],[\"内核态具有执行所有指令和访问所有内存空间的权限\",{\"1\":{\"738\":1}}],[\"内核态\",{\"1\":{\"728\":1}}],[\"内核会随机找一个\",{\"1\":{\"721\":1}}],[\"内核会把连接从半连接队列移除\",{\"1\":{\"714\":1}}],[\"内核会把该连接存储到半连接队列\",{\"1\":{\"714\":1}}],[\"内核会发出\",{\"1\":{\"708\":1}}],[\"内核发送请求以便运行程序界面系统级程序\",{\"1\":{\"570\":1}}],[\"内核系统进程执行时间百分比\",{\"1\":{\"479\":1,\"528\":1}}],[\"内核进程消耗的cpu百分比\",{\"1\":{\"440\":1,\"534\":1}}],[\"内核社区免费使用\",{\"1\":{\"419\":1}}],[\"内核开源社区的合作关系结束\",{\"1\":{\"419\":1}}],[\"内核项目组当时使用分布式版本控制系统\",{\"1\":{\"419\":1}}],[\"内核提供的一种可以限制\",{\"1\":{\"406\":1}}],[\"内核用来隔离内核资源的方式\",{\"1\":{\"406\":1}}],[\"内核中提供的\",{\"1\":{\"406\":1}}],[\"内核容器功能的一个用户空间接口\",{\"1\":{\"406\":1}}],[\"内核启动后\",{\"1\":{\"386\":1}}],[\"内核\",{\"1\":{\"382\":1}}],[\"内核允许进程申请的内存总量大于系统可用内存\",{\"1\":{\"239\":1}}],[\"内省\",{\"0\":{\"279\":1}}],[\"内存使用情况等\",{\"1\":{\"747\":1}}],[\"内存和i\",{\"1\":{\"735\":1}}],[\"内存管理包括内存分配\",{\"1\":{\"731\":1}}],[\"内存管理\",{\"1\":{\"731\":1,\"744\":1}}],[\"内存资源\",{\"1\":{\"720\":1}}],[\"内存监控\",{\"0\":{\"516\":1}}],[\"内存监控主要有free\",{\"1\":{\"465\":1}}],[\"内存够用的时候\",{\"1\":{\"479\":1,\"528\":1}}],[\"内存总数\",{\"1\":{\"469\":1,\"519\":1}}],[\"内存开销最少\",{\"1\":{\"320\":1}}],[\"内存区中\",{\"1\":{\"249\":1}}],[\"内存分配\",{\"1\":{\"239\":1}}],[\"内存不足解决方案\",{\"1\":{\"239\":1}}],[\"内存泄露\",{\"1\":{\"239\":1}}],[\"内存中\",{\"1\":{\"236\":1}}],[\"内存中运行\",{\"1\":{\"236\":1}}],[\"内存值\",{\"1\":{\"221\":1}}],[\"内存屏障\",{\"0\":{\"211\":1}}],[\"内存模型\",{\"0\":{\"205\":1}}],[\"内存\",{\"1\":{\"196\":1,\"406\":1,\"477\":1,\"479\":1,\"515\":3,\"526\":1,\"528\":1,\"731\":1}}],[\"内存也是放不下的\",{\"1\":{\"188\":1}}],[\"内存空间占用\",{\"1\":{\"183\":1}}],[\"内存地址不连续\",{\"1\":{\"182\":1}}],[\"内置函数\",{\"1\":{\"363\":1}}],[\"内置绑定\",{\"0\":{\"155\":1}}],[\"内置的类加载器\",{\"1\":{\"236\":1}}],[\"内置的\",{\"1\":{\"100\":1,\"363\":1}}],[\"内建立文档索引\",{\"1\":{\"93\":1}}],[\"可根据处理器不同而变化\",{\"1\":{\"743\":1}}],[\"可靠与不可靠的传输\",{\"1\":{\"683\":1}}],[\"可存储数据远高于\",{\"1\":{\"677\":1}}],[\"可设置为长时间保持\",{\"1\":{\"677\":1}}],[\"可选\",{\"1\":{\"400\":13}}],[\"可选配置\",{\"1\":{\"91\":1}}],[\"可执行的独立软件包\",{\"1\":{\"378\":1}}],[\"可将老式的\",{\"1\":{\"363\":1}}],[\"可重复读隔离级别并没有彻底解决幻读\",{\"1\":{\"632\":1}}],[\"可重复读隔离级别下\",{\"1\":{\"632\":1}}],[\"可重复读指的是在一个事务内\",{\"1\":{\"628\":1}}],[\"可重复读\",{\"1\":{\"628\":1,\"629\":1,\"630\":1}}],[\"可重用线程\",{\"1\":{\"330\":1}}],[\"可重入锁的字面意思是\",{\"1\":{\"216\":1}}],[\"可重入锁\",{\"0\":{\"216\":1}}],[\"可启动数目比线程少\",{\"1\":{\"320\":1}}],[\"可通过确认首部字段last\",{\"1\":{\"645\":1}}],[\"可通过\",{\"1\":{\"288\":1}}],[\"可被用来检测\",{\"1\":{\"280\":1}}],[\"可被标记为已完成\",{\"1\":{\"273\":1}}],[\"可运行\",{\"1\":{\"280\":1}}],[\"可迭代对象必须不为空\",{\"1\":{\"276\":1}}],[\"可迭代对象中的\",{\"1\":{\"276\":2}}],[\"可能包括算术运算\",{\"1\":{\"744\":1}}],[\"可能包括以下操作\",{\"1\":{\"744\":1}}],[\"可能导致性能下降\",{\"1\":{\"743\":1}}],[\"可能是因为其他处理器核心修改了数据\",{\"1\":{\"742\":1}}],[\"可能客户端发送的第一个请求连接并且没有丢失\",{\"1\":{\"703\":1}}],[\"可能发生幻读现象\",{\"1\":{\"630\":1}}],[\"可能发生不可重复读和幻读现象\",{\"1\":{\"630\":1}}],[\"可能发生脏读\",{\"1\":{\"630\":1}}],[\"可能会丢包和乱序\",{\"1\":{\"724\":1}}],[\"可能会受到其他事务的影响\",{\"1\":{\"628\":1}}],[\"可能会有冲突\",{\"1\":{\"430\":1}}],[\"可能会有解释执行和编译执行两种执行方式\",{\"1\":{\"250\":1}}],[\"可能会比较慢国内也有一些云服务商提供类似于\",{\"1\":{\"388\":1}}],[\"可能这个协程没有被执行完毕就被垃圾回收给清理了\",{\"1\":{\"271\":1}}],[\"可用于替换vmstat\",{\"1\":{\"515\":1}}],[\"可用于创建\",{\"1\":{\"178\":1}}],[\"可用使用\",{\"1\":{\"509\":1}}],[\"可用来表示两个紧密关联的概念\",{\"1\":{\"267\":1}}],[\"可等待\",{\"1\":{\"266\":1}}],[\"可等待对象\",{\"0\":{\"266\":1},\"1\":{\"269\":1,\"273\":1,\"274\":1,\"276\":2}}],[\"可见性\",{\"1\":{\"210\":1,\"218\":1}}],[\"可以高效地存储和处理unicode字符\",{\"1\":{\"751\":1}}],[\"可以高效的利用系统资源\",{\"1\":{\"196\":1}}],[\"可以表示世界上所有语言的字符\",{\"1\":{\"751\":1}}],[\"可以表示超过110\",{\"1\":{\"751\":1}}],[\"可以观察哪些进程占用了较多的cpu和内存资源\",{\"1\":{\"748\":1}}],[\"可以采取以下方法\",{\"1\":{\"743\":1}}],[\"可以采用体积更小的protobuf或其他序列化协议去保存结构体数据\",{\"1\":{\"655\":1}}],[\"可以采用以下方案\",{\"1\":{\"239\":1}}],[\"可以使旧tcp产生的数据包全部在网路中消亡\",{\"1\":{\"719\":1}}],[\"可以使用kill或pkill命令\",{\"1\":{\"748\":1}}],[\"可以使用f键进行排序\",{\"1\":{\"748\":1}}],[\"可以使用netstat或lsof命令\",{\"1\":{\"747\":1}}],[\"可以使用一个函数来指定排序使用的键\",{\"1\":{\"365\":1}}],[\"可以使用方法返回值+\",{\"1\":{\"121\":1}}],[\"可以使用相对路径\",{\"1\":{\"105\":1}}],[\"可以使用\",{\"1\":{\"97\":1,\"145\":1,\"219\":1,\"335\":1,\"350\":1}}],[\"可以调大队列大小\",{\"1\":{\"717\":1}}],[\"可以调用它来进行比较\",{\"1\":{\"370\":1}}],[\"可以回到恢复之前的状态了\",{\"1\":{\"698\":1}}],[\"可以存任意数据类型\",{\"1\":{\"677\":1}}],[\"可以存在多个\",{\"1\":{\"400\":1}}],[\"可以让数据包不再像\",{\"1\":{\"652\":1}}],[\"可以让一些进程只能看到与自己相关的一部分资源\",{\"1\":{\"406\":1}}],[\"可以减少整体的响应时间\",{\"1\":{\"646\":1}}],[\"可以用truncate跟上reuse\",{\"1\":{\"624\":1}}],[\"可以用来启用框架扩展和替换组件\",{\"1\":{\"252\":1}}],[\"可以扫描你服务器开放的端口并且可以检测正在使用哪个操作系统\",{\"1\":{\"515\":1}}],[\"可以考虑增加cpu\",{\"1\":{\"479\":1,\"528\":1}}],[\"可以考虑添加机器资源或者限流降级3\",{\"1\":{\"239\":1}}],[\"可以实时动态地查看系统的整体运行情况\",{\"1\":{\"438\":1,\"532\":1}}],[\"可以实现保留文本最后\",{\"1\":{\"347\":1}}],[\"可以到服务器上获取最新的版本历史\",{\"1\":{\"429\":1}}],[\"可以运行带有\",{\"1\":{\"429\":1}}],[\"可以把\",{\"1\":{\"426\":1}}],[\"可以随时改进\",{\"1\":{\"407\":1}}],[\"可以同时指定多个服务\",{\"1\":{\"402\":1,\"403\":1}}],[\"可以同时进行\",{\"1\":{\"197\":1}}],[\"可以是存储仓库\",{\"1\":{\"400\":1}}],[\"可以是一个\",{\"1\":{\"64\":1}}],[\"可以轻松地启动和停止整个应用程序\",{\"1\":{\"399\":1}}],[\"可以看到\",{\"1\":{\"395\":1}}],[\"可以看到生成了一个新的目录\",{\"1\":{\"48\":1}}],[\"可以直接使用做为私有\",{\"1\":{\"388\":1}}],[\"可以很容易的在当前宿主上运行\",{\"1\":{\"388\":1}}],[\"可以很轻易的将在一个平台上运行的应用\",{\"1\":{\"384\":1}}],[\"可以做到秒级\",{\"1\":{\"384\":1}}],[\"可以传入迭代对象构建一个新的排序列表\",{\"1\":{\"363\":1}}],[\"可以相减\",{\"1\":{\"353\":1}}],[\"可以干其他事情\",{\"1\":{\"333\":1}}],[\"可以知道future对应的入参\",{\"1\":{\"325\":1}}],[\"可以利用多核\",{\"1\":{\"320\":1}}],[\"可以指定网段\",{\"1\":{\"515\":1}}],[\"可以指定任何位置的任何文件作为\",{\"1\":{\"394\":1}}],[\"可以指定搜索时使用的具体的键\",{\"1\":{\"311\":1}}],[\"可以指定需要缓存的文件列表或者配置过期时间\",{\"1\":{\"93\":1}}],[\"可以加上\",{\"1\":{\"275\":1}}],[\"可以为软件提供一个独立的操作系统运行环境\",{\"1\":{\"406\":1}}],[\"可以为\",{\"1\":{\"275\":1}}],[\"可以支持乱序确认而不影响数据包的正确组装\",{\"1\":{\"652\":1}}],[\"可以支持\",{\"1\":{\"241\":1}}],[\"可以设置\",{\"1\":{\"239\":1}}],[\"可以参考一下情况\",{\"1\":{\"239\":1}}],[\"可以动态地加载类\",{\"1\":{\"236\":1}}],[\"可以根据具体情况优化程序代码\",{\"1\":{\"748\":1}}],[\"可以根据需要编写额外的类加载器来完成特定的加载任务\",{\"1\":{\"236\":1}}],[\"可以根据某些文件存在与否\",{\"1\":{\"171\":1}}],[\"可以解决使用\",{\"1\":{\"224\":1}}],[\"可以于原子的更新数据和数据的版本号\",{\"1\":{\"224\":1}}],[\"可以保证原子性\",{\"1\":{\"218\":1}}],[\"可以重新进入的锁\",{\"1\":{\"216\":1}}],[\"可以重复\",{\"1\":{\"178\":1}}],[\"可以先看一个简单的\",{\"1\":{\"205\":1}}],[\"可以认为\",{\"1\":{\"200\":1}}],[\"可以执行另一个进程\",{\"1\":{\"197\":1}}],[\"可以想象一下\",{\"1\":{\"196\":1}}],[\"可以有多个键值对具有相同的值\",{\"1\":{\"186\":1}}],[\"可以分为\",{\"1\":{\"169\":1}}],[\"可以从一个中心信息中管理项目的构建\",{\"1\":{\"135\":1}}],[\"可以修改它的配置来实现自定义\",{\"1\":{\"100\":1}}],[\"可以引入这个插件\",{\"1\":{\"97\":1}}],[\"可以自由管理路由规则\",{\"1\":{\"81\":1}}],[\"可以定制侧边栏\",{\"1\":{\"77\":1}}],[\"可以开启渲染封面功能\",{\"1\":{\"74\":1}}],[\"可以开启渲染封面的功能\",{\"1\":{\"60\":1}}],[\"可以对不同的目录设置不同的封面\",{\"1\":{\"62\":1}}],[\"可以写成嵌套的列表\",{\"1\":{\"59\":1}}],[\"可以通过标签名称或者镜像\",{\"1\":{\"395\":1}}],[\"可以通过定制应用镜像来实现持续集成\",{\"1\":{\"384\":1}}],[\"可以通过调用\",{\"1\":{\"293\":1}}],[\"可以通过以下\",{\"1\":{\"171\":1}}],[\"可以通过以下网站搜索可用的构件\",{\"1\":{\"140\":1}}],[\"可以通过创建一个最小的\",{\"1\":{\"147\":1}}],[\"可以通过在\",{\"1\":{\"61\":1}}],[\"可以通过\",{\"1\":{\"56\":1,\"402\":1,\"403\":1,\"512\":1}}],[\"可以添加一些参数来查看自己希望看到的内容\",{\"1\":{\"428\":1}}],[\"可以添加\",{\"1\":{\"55\":1}}],[\"可以在同一条连接上并发传输多个\",{\"1\":{\"651\":1}}],[\"可以在容器之间共享和重用\",{\"1\":{\"397\":1}}],[\"可以在指定的时间后自行返回而不是像\",{\"1\":{\"201\":1}}],[\"可以在指定文件后面指定页面标题\",{\"1\":{\"54\":1}}],[\"可以在用户空间内实现写作式多任务助理\",{\"1\":{\"196\":1}}],[\"可以在搜索引擎上查询关键字\",{\"1\":{\"190\":1}}],[\"可以在声明\",{\"1\":{\"171\":1}}],[\"可以在此处找到\",{\"1\":{\"8\":1}}],[\"可以方便的实时预览效果\",{\"1\":{\"49\":1}}],[\"可以方便地创建及在本地预览生成的文档\",{\"1\":{\"47\":1}}],[\"可以快速帮你生成文档网站\",{\"1\":{\"44\":1}}],[\"可以配置多个环境\",{\"1\":{\"40\":1}}],[\"可以明确配置version\",{\"1\":{\"21\":1}}],[\"可以不用添加\",{\"1\":{\"16\":1}}],[\"可以尝试以下步骤\",{\"1\":{\"14\":1}}],[\"官网\",{\"1\":{\"380\":1,\"390\":1}}],[\"官网是这么\",{\"1\":{\"135\":1}}],[\"官网定制的主题样式等\",{\"1\":{\"90\":1}}],[\"官方编排\",{\"1\":{\"399\":1}}],[\"官方提供了\",{\"1\":{\"388\":1}}],[\"官方提供和维护\",{\"1\":{\"388\":1}}],[\"官方提供的一项服务\",{\"1\":{\"388\":1}}],[\"官方是这样介绍\",{\"1\":{\"388\":1}}],[\"官方给的\",{\"1\":{\"187\":1}}],[\"官方或者其他组织维护的\",{\"1\":{\"158\":1}}],[\"官方文档\",{\"0\":{\"109\":1},\"1\":{\"374\":1}}],[\"官方推荐使用直接放在\",{\"1\":{\"50\":1}}],[\"主机名\",{\"1\":{\"750\":1}}],[\"主机b会构建一个icmp回送响应消息数据包\",{\"1\":{\"673\":1}}],[\"主机和仓库间运输\",{\"1\":{\"390\":1}}],[\"主动关闭放会发送rst包来响应\",{\"1\":{\"719\":1}}],[\"主动关闭方都需要维护这条连接状态\",{\"1\":{\"719\":1}}],[\"主动回滚死锁链条中的某一个事务\",{\"1\":{\"625\":1}}],[\"主动死锁检测在发现死锁后\",{\"1\":{\"625\":1}}],[\"主动让出\",{\"1\":{\"198\":1}}],[\"主键\",{\"1\":{\"623\":2}}],[\"主体部分当然也可以有几段\",{\"1\":{\"425\":1}}],[\"主体部分可以是很少的几行\",{\"1\":{\"425\":1}}],[\"主内存ram\",{\"1\":{\"205\":1}}],[\"主线程是\",{\"1\":{\"202\":1}}],[\"主要保存4个东西\",{\"1\":{\"738\":1}}],[\"主要由两个部分组成\",{\"1\":{\"732\":1}}],[\"主要由两大接口派生而来\",{\"1\":{\"177\":1}}],[\"主要解决用户信息的语法表示问题\",{\"1\":{\"683\":1}}],[\"主要包括状态码\",{\"1\":{\"672\":1}}],[\"主要包含三个参数\",{\"1\":{\"221\":1}}],[\"主要用来显示内核信息\",{\"1\":{\"515\":1}}],[\"主要用来存放键值对\",{\"1\":{\"187\":1}}],[\"主要用于非交互式模式\",{\"1\":{\"462\":1,\"561\":1}}],[\"主要用于执行\",{\"1\":{\"240\":1}}],[\"主要用作记录到文件\",{\"1\":{\"462\":1,\"561\":1}}],[\"主要特性\",{\"0\":{\"233\":1,\"259\":1}}],[\"主要有三种使用方式\",{\"1\":{\"218\":1}}],[\"主要存放\",{\"1\":{\"177\":1}}],[\"主要存放单个的数据对象\",{\"1\":{\"177\":1}}],[\"主要是因为\",{\"1\":{\"635\":1}}],[\"主要是prepare预处理\",{\"1\":{\"621\":1}}],[\"主要是用来装载一系列的\",{\"1\":{\"254\":1}}],[\"主要是\",{\"1\":{\"16\":1}}],[\"主题等\",{\"1\":{\"675\":1}}],[\"主题\",{\"0\":{\"90\":1}}],[\"冲突\",{\"1\":{\"89\":1}}],[\"显示器\",{\"1\":{\"731\":1}}],[\"显示器会定时从读缓冲区队列读取数据放到写缓冲区队列\",{\"1\":{\"672\":1}}],[\"显示端口信息等\",{\"1\":{\"515\":1}}],[\"显示的是各种系统资源\",{\"1\":{\"515\":1}}],[\"显示进程的启动时间\",{\"1\":{\"513\":2,\"564\":2}}],[\"显示进程的用户信息\",{\"1\":{\"505\":1}}],[\"显示进程<pid>\",{\"1\":{\"513\":1,\"564\":1}}],[\"显示当前所在路径\",{\"1\":{\"745\":1}}],[\"显示当前\",{\"1\":{\"573\":1}}],[\"显示当前常驻内存的程序的k字节数\",{\"1\":{\"506\":1}}],[\"显示当前终端的所有进程\",{\"1\":{\"505\":1}}],[\"显示程序间的关系\",{\"1\":{\"505\":1}}],[\"显示所有运行的进程\",{\"0\":{\"509\":1},\"1\":{\"507\":1}}],[\"显示所有进程\",{\"1\":{\"505\":1}}],[\"显示所有文件系统及其磁盘使用情况\",{\"1\":{\"454\":1}}],[\"显示监听给定协议监听的\",{\"1\":{\"487\":1}}],[\"显示与网络相关的信息\",{\"1\":{\"487\":1}}],[\"显示正在使用socket的程序识别码和程序名称\",{\"1\":{\"486\":1}}],[\"显示路由表信息\",{\"1\":{\"486\":1,\"544\":1}}],[\"显示网卡列表\",{\"1\":{\"486\":1,\"544\":1}}],[\"显示各个协议的网络统计信息\",{\"1\":{\"486\":1,\"544\":1}}],[\"显示指定的硬盘分区状态\",{\"1\":{\"478\":1,\"527\":1}}],[\"显示slab信息\",{\"1\":{\"478\":1,\"527\":1}}],[\"显示启动后创建的进程总数\",{\"1\":{\"478\":1,\"527\":1}}],[\"显示活动内页\",{\"1\":{\"478\":1,\"527\":1}}],[\"显示系统内存\",{\"1\":{\"475\":1}}],[\"显示系统中可用和已使用的内存量\",{\"1\":{\"475\":1}}],[\"显示内存使用情况\",{\"0\":{\"471\":1,\"521\":1}}],[\"显示内存总和列\",{\"1\":{\"468\":1,\"518\":1}}],[\"显示版本信息\",{\"1\":{\"468\":1,\"518\":1}}],[\"显示版号并退出\",{\"1\":{\"457\":1,\"556\":1}}],[\"显示累积使用量\",{\"1\":{\"463\":1,\"562\":1}}],[\"显示num次\",{\"1\":{\"462\":1,\"561\":1}}],[\"显示扩展状态\",{\"1\":{\"457\":1,\"556\":1}}],[\"显示每个报告产生时的时间\",{\"1\":{\"457\":1,\"556\":1}}],[\"显示状态以兆字节每秒为单位\",{\"1\":{\"457\":1,\"556\":1}}],[\"显示状态以千字节每秒为单位\",{\"1\":{\"457\":1,\"556\":1}}],[\"显示包含指定文件或目录的文件系统及其磁盘使用情况\",{\"1\":{\"454\":1}}],[\"显示文件系统类型\",{\"1\":{\"452\":1,\"552\":1}}],[\"显示inode信息\",{\"1\":{\"452\":1,\"552\":1}}],[\"显示报告的次数\",{\"1\":{\"445\":1,\"457\":1,\"478\":1,\"527\":1,\"539\":1,\"556\":1}}],[\"显示完整的治命令\",{\"1\":{\"439\":1,\"533\":1}}],[\"显示\",{\"1\":{\"85\":1}}],[\"尝试访问\",{\"1\":{\"85\":1}}],[\"请求\",{\"1\":{\"728\":1}}],[\"请求后\",{\"1\":{\"714\":1,\"728\":1}}],[\"请求体三个部分组成\",{\"1\":{\"672\":1}}],[\"请求头\",{\"1\":{\"672\":1}}],[\"请求包含请求行\",{\"1\":{\"672\":1}}],[\"请求网站a的api接口时\",{\"1\":{\"661\":1}}],[\"请求的\",{\"1\":{\"654\":1}}],[\"请求的响应码304\",{\"1\":{\"643\":1}}],[\"请求是获取资源\",{\"1\":{\"654\":1}}],[\"请求重传\",{\"1\":{\"648\":1}}],[\"请求成功并且服务器创建了新的资源\",{\"1\":{\"642\":1}}],[\"请求者已要求服务器切换协议\",{\"1\":{\"642\":1}}],[\"请求者应当继续提出请求\",{\"1\":{\"642\":1}}],[\"请输入第二个参数n2\",{\"1\":{\"613\":1}}],[\"请输入第一个参数n1\",{\"1\":{\"613\":1}}],[\"请输入一个数num1=10\",{\"1\":{\"606\":1}}],[\"请输入一个数num1=\",{\"1\":{\"606\":1}}],[\"请在10秒内输入一个数num2=20\",{\"1\":{\"606\":1}}],[\"请在10秒内输入一个数num2=\",{\"1\":{\"606\":1}}],[\"请先\",{\"1\":{\"368\":1}}],[\"请参阅完整的\",{\"1\":{\"305\":1}}],[\"请参阅\",{\"1\":{\"301\":1,\"302\":1,\"303\":1,\"305\":1}}],[\"请主要参阅\",{\"1\":{\"300\":1}}],[\"请使用\",{\"1\":{\"143\":1,\"286\":1,\"292\":1}}],[\"请确保相应地更新侧边栏\",{\"1\":{\"84\":1}}],[\"请注意此函数不会引发\",{\"1\":{\"276\":1}}],[\"请注意\",{\"1\":{\"81\":1,\"305\":1}}],[\"并切换回用户态\",{\"1\":{\"738\":1}}],[\"并转向执行一个特定的处理程序\",{\"1\":{\"733\":1}}],[\"并控制计算机系统的各个部件按照指令进行操作\",{\"1\":{\"732\":1}}],[\"并立即转为syn\",{\"1\":{\"716\":1}}],[\"并向源主机发送一个icmp\",{\"1\":{\"750\":1}}],[\"并向源主机发送一条icmp\",{\"1\":{\"750\":1}}],[\"并向客户端发syn+ack\",{\"1\":{\"714\":1}}],[\"并向操作系统请求创建一个\",{\"1\":{\"239\":1}}],[\"并带上自己的序列号v\",{\"1\":{\"705\":1}}],[\"并停止发送数据\",{\"1\":{\"705\":1}}],[\"并确认对方已经收到了序列号起始值的必经步骤\",{\"1\":{\"704\":1}}],[\"并进入syn\",{\"1\":{\"699\":1}}],[\"并进入阻塞状态直到满足\",{\"1\":{\"276\":1}}],[\"并开始传输数据\",{\"1\":{\"695\":1}}],[\"并开启多轮循环同时进行的局面\",{\"1\":{\"333\":1}}],[\"并由错误检测和修正\",{\"1\":{\"683\":1}}],[\"并可根据需要随时引入新选项\",{\"1\":{\"678\":1}}],[\"并可能提供收费服务供用户管理私有镜像\",{\"1\":{\"388\":1}}],[\"并和本机的mac地址对比\",{\"1\":{\"673\":1}}],[\"并更改本地dns设置以将用户重定向到恶意站点\",{\"1\":{\"670\":1}}],[\"并交换其所收到的数据\",{\"1\":{\"664\":1}}],[\"并提交了事务\",{\"1\":{\"633\":1}}],[\"并提供了文件保护\",{\"1\":{\"731\":1}}],[\"并提供了自动分配和回收内存空间\",{\"1\":{\"233\":1,\"259\":1}}],[\"并提供指向恶意站点的不同目标ip地址\",{\"1\":{\"670\":1}}],[\"并提供多线程之间的同步机制\",{\"1\":{\"233\":1,\"259\":1}}],[\"并提供安全管理机制\",{\"1\":{\"233\":1,\"259\":1}}],[\"并没有执行当前读\",{\"1\":{\"632\":1}}],[\"并能以友好的交互方式来深度分析日志\",{\"1\":{\"515\":1}}],[\"并能更快地下载镜像\",{\"1\":{\"383\":1}}],[\"并欲将你的仓库连接到某个远程服务器\",{\"1\":{\"426\":1}}],[\"并根据其中定义的服务启动应用程序\",{\"1\":{\"402\":1}}],[\"并拥有大量的高质量的官方镜像\",{\"1\":{\"388\":1}}],[\"并共享一些公共文件\",{\"1\":{\"383\":1}}],[\"并通过中央处理器\",{\"1\":{\"732\":1}}],[\"并通过不同的web服务器进行处理\",{\"1\":{\"672\":1}}],[\"并通过\",{\"1\":{\"288\":1}}],[\"并聚合至结果列表\",{\"1\":{\"273\":1}}],[\"并继续运行\",{\"1\":{\"273\":1}}],[\"并调度其执行\",{\"1\":{\"271\":1}}],[\"并关闭线程池\",{\"1\":{\"270\":1}}],[\"并等待其完成\",{\"1\":{\"265\":1}}],[\"并对其执行过程实现完全控制\",{\"1\":{\"263\":1}}],[\"并装载实例化\",{\"1\":{\"254\":1}}],[\"并按照约定将实现类放在调用方可达的位置\",{\"1\":{\"254\":1}}],[\"并为其分配内存\",{\"1\":{\"239\":1}}],[\"并将程序退出状态返回给用户\",{\"1\":{\"744\":1}}],[\"并将你本地主分支指向它\",{\"1\":{\"429\":1}}],[\"并将它们连接到默认的网络中\",{\"1\":{\"402\":1}}],[\"并将\",{\"1\":{\"351\":1}}],[\"并将其添加到全连接队列\",{\"1\":{\"714\":1}}],[\"并将其缓冲存在寄存器中\",{\"1\":{\"672\":1}}],[\"并将其保存在本地\",{\"1\":{\"389\":1,\"394\":1}}],[\"并将其引用返回\",{\"1\":{\"249\":1}}],[\"并将其\",{\"1\":{\"239\":1}}],[\"并将该节点设置为头结点\",{\"1\":{\"227\":1}}],[\"并加载到\",{\"1\":{\"236\":1}}],[\"并加载下一个将要占用\",{\"1\":{\"198\":1}}],[\"并支持类与接口之间的实现机制\",{\"1\":{\"233\":1,\"259\":1}}],[\"并在访问之前将这些地址对应的数据和指令加载到cache中\",{\"1\":{\"737\":1}}],[\"并在本地生成cookie\",{\"1\":{\"661\":1}}],[\"并在主干服务中设置接入点\",{\"1\":{\"254\":1}}],[\"并在\",{\"1\":{\"232\":1,\"258\":1}}],[\"并在命令行上执行来查看\",{\"1\":{\"147\":1}}],[\"并写回到主内存\",{\"1\":{\"208\":1}}],[\"并不会进入到time\",{\"1\":{\"707\":1}}],[\"并不会在新的线程中执行\",{\"1\":{\"203\":1}}],[\"并不能完全避免幻读现象\",{\"1\":{\"632\":1}}],[\"并不涉及一些像\",{\"1\":{\"375\":1}}],[\"并不是https不够安全\",{\"1\":{\"641\":1}}],[\"并不是\",{\"1\":{\"254\":1}}],[\"并不是停止线程\",{\"1\":{\"202\":1}}],[\"并不是执行了方法就会变成红黑树\",{\"1\":{\"187\":1}}],[\"并清除中断标记\",{\"1\":{\"202\":1}}],[\"并行运算\",{\"1\":{\"320\":1}}],[\"并行运行\",{\"1\":{\"300\":1}}],[\"并行地\",{\"1\":{\"268\":1}}],[\"并行就是饭店里面的3个厨师分别给3桌做菜\",{\"1\":{\"197\":1}}],[\"并行\",{\"0\":{\"197\":1},\"1\":{\"197\":1}}],[\"并发事务会出现什么问题\",{\"0\":{\"628\":1}}],[\"并发编程实战\",{\"1\":{\"332\":1}}],[\"并发编程的三大特性\",{\"1\":{\"210\":1}}],[\"并发执行\",{\"1\":{\"322\":1}}],[\"并发执行所有事件的调度和等待\",{\"1\":{\"300\":1}}],[\"并发运行任务\",{\"0\":{\"273\":1}}],[\"并发代码\",{\"1\":{\"263\":1}}],[\"并发地运行\",{\"1\":{\"276\":2}}],[\"并发地\",{\"1\":{\"263\":1}}],[\"并发访问共享资源\",{\"1\":{\"227\":1}}],[\"并发就是饭店里面一个厨师给很多桌做菜\",{\"1\":{\"197\":1}}],[\"并发\",{\"0\":{\"194\":1,\"197\":1},\"1\":{\"197\":1,\"263\":1,\"273\":1},\"2\":{\"308\":1,\"338\":1}}],[\"并返回另一个icmp\",{\"1\":{\"750\":1}}],[\"并返回一个syn\",{\"1\":{\"716\":1}}],[\"并返回一个对象\",{\"1\":{\"360\":1}}],[\"并返回结果\",{\"1\":{\"270\":1}}],[\"并返回\",{\"1\":{\"187\":1,\"287\":2}}],[\"并且自己的seq为x+1\",{\"1\":{\"699\":1}}],[\"并且发送方定期会发送探测报文\",{\"1\":{\"693\":1}}],[\"并且发生了哈希冲突\",{\"1\":{\"191\":1}}],[\"并且严格递增\",{\"1\":{\"652\":1}}],[\"并且将内容返回给客户端\",{\"1\":{\"642\":1}}],[\"并且将共享资源设置为锁定状态\",{\"1\":{\"226\":1}}],[\"并且同时将该行的删除操作作为事务记录在日志中保存以便进行进行回滚操作\",{\"1\":{\"624\":1}}],[\"并且除了主键以外的其他列都依赖于主键列\",{\"1\":{\"617\":1}}],[\"并且除了主键以外的其他列全部都依赖于该主键\",{\"1\":{\"617\":1}}],[\"并且在事务a提交之前先提交了\",{\"1\":{\"628\":1}}],[\"并且在执行时会把操作日志记录下来\",{\"1\":{\"624\":1}}],[\"并且在删除的过程中不会激活与表有关的删除触发器\",{\"1\":{\"624\":1}}],[\"并且在高负载的情况下进行了彩色标注\",{\"1\":{\"515\":1}}],[\"并且在整个生命周期中都存在\",{\"1\":{\"246\":1}}],[\"并且不进行阻塞\",{\"1\":{\"334\":1}}],[\"并且不是可传递的\",{\"1\":{\"142\":1}}],[\"并且堆也无法在扩展时\",{\"1\":{\"243\":1}}],[\"并且可以提供热部署和插件化等机制\",{\"1\":{\"236\":1}}],[\"并且由于采用的是二进制位操作\",{\"1\":{\"188\":1}}],[\"并且\",{\"1\":{\"187\":1,\"277\":1}}],[\"并且支持通过下标访问\",{\"1\":{\"181\":1,\"182\":1}}],[\"并且是固定不变的\",{\"1\":{\"724\":1}}],[\"并且是单向遍历的机制\",{\"1\":{\"178\":1}}],[\"并且是作为\",{\"1\":{\"158\":1}}],[\"并且为部署做准备\",{\"1\":{\"167\":1}}],[\"并且只使用\",{\"1\":{\"143\":1}}],[\"并且仅适用于测试编译和执行阶段\",{\"1\":{\"142\":1}}],[\"并且始终是必需的\",{\"1\":{\"137\":1}}],[\"并且排除了一些\",{\"1\":{\"95\":1}}],[\"并编写相关代码\",{\"0\":{\"118\":1}}],[\"并希望它在访问根网址时显示为活动状态\",{\"1\":{\"84\":1}}],[\"并自动加载\",{\"1\":{\"15\":1}}],[\"别名\",{\"1\":{\"82\":1}}],[\"$sum\",{\"1\":{\"600\":1,\"603\":1}}],[\"$sum+$i\",{\"1\":{\"600\":1,\"603\":1}}],[\"$j\",{\"1\":{\"600\":1}}],[\"$i+1\",{\"1\":{\"603\":1}}],[\"$i\",{\"1\":{\"600\":1,\"603\":1}}],[\"$temp\",{\"1\":{\"587\":1}}],[\"$$\",{\"1\":{\"583\":1}}],[\"$2\",{\"1\":{\"580\":1}}],[\"$2^3$\",{\"1\":{\"189\":1}}],[\"$2^\",{\"1\":{\"189\":1}}],[\"$2^m$\",{\"1\":{\"189\":1}}],[\"$9\",{\"1\":{\"579\":1}}],[\"$0\",{\"1\":{\"579\":1,\"580\":1}}],[\"$n2\",{\"1\":{\"613\":1}}],[\"$n1\",{\"1\":{\"613\":1}}],[\"$n1+$n2\",{\"1\":{\"613\":1}}],[\"$num2\",{\"1\":{\"606\":1}}],[\"$num1\",{\"1\":{\"606\":1}}],[\"$n\",{\"1\":{\"579\":1}}],[\"$变量名\",{\"1\":{\"574\":1,\"578\":1,\"596\":1}}],[\"$user等\",{\"1\":{\"573\":1}}],[\"$pwd\",{\"1\":{\"573\":1}}],[\"$7\",{\"1\":{\"494\":1}}],[\"$m$\",{\"1\":{\"189\":1}}],[\"$\",{\"1\":{\"121\":4,\"124\":1,\"158\":1,\"182\":4,\"183\":8,\"189\":1,\"507\":2,\"579\":4,\"580\":2,\"583\":2,\"586\":2,\"587\":4,\"600\":4}}],[\"$1\",{\"1\":{\"82\":1,\"579\":1,\"580\":1,\"594\":2,\"597\":1,\"603\":1}}],[\"$docsify\",{\"1\":{\"53\":1,\"62\":1,\"65\":1,\"67\":2,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"76\":3,\"78\":2,\"80\":1,\"82\":1,\"84\":1,\"86\":1,\"88\":1,\"89\":2,\"93\":3,\"95\":1,\"100\":2,\"101\":1}}],[\"设立中间层防火墙\",{\"1\":{\"717\":1}}],[\"设备驱动\",{\"1\":{\"738\":1}}],[\"设备发生错误等\",{\"1\":{\"733\":1}}],[\"设备之间比特流的传输\",{\"1\":{\"683\":1}}],[\"设备次数\",{\"1\":{\"458\":2,\"557\":2}}],[\"设为\",{\"1\":{\"272\":1,\"697\":1}}],[\"设置为第一步中的\",{\"1\":{\"698\":1}}],[\"设置为1\",{\"1\":{\"695\":1}}],[\"设置为\",{\"1\":{\"625\":1}}],[\"设置事务等待锁的超时时间\",{\"1\":{\"625\":1}}],[\"设置事件\",{\"1\":{\"288\":1}}],[\"设置间隔时间\",{\"1\":{\"439\":1,\"533\":1}}],[\"设置服务运行所需的环境变量\",{\"1\":{\"400\":1}}],[\"设置\",{\"1\":{\"347\":1}}],[\"设置超时后自动苏醒\",{\"1\":{\"204\":1}}],[\"设置当前线程优先级\",{\"1\":{\"202\":1}}],[\"设置一个主题\",{\"1\":{\"105\":1}}],[\"设置别名\",{\"1\":{\"81\":1}}],[\"设计时\",{\"1\":{\"386\":1}}],[\"设计\",{\"1\":{\"15\":1}}],[\"简化了路由\",{\"1\":{\"678\":1}}],[\"简化了多容器应用程序的开发\",{\"1\":{\"399\":1}}],[\"简介\",{\"0\":{\"435\":1,\"438\":1,\"444\":1,\"448\":1,\"451\":1,\"456\":1,\"461\":1,\"465\":1,\"477\":1,\"482\":1,\"485\":1,\"496\":1,\"501\":1,\"504\":1,\"515\":1,\"526\":1,\"532\":1,\"538\":1,\"543\":1,\"546\":1,\"551\":1,\"555\":1,\"560\":1,\"570\":1}}],[\"简明指南\",{\"1\":{\"431\":1}}],[\"简史\",{\"0\":{\"419\":1}}],[\"简称\",{\"1\":{\"416\":1,\"417\":1}}],[\"简洁方便\",{\"1\":{\"331\":1}}],[\"简写\",{\"1\":{\"105\":4,\"106\":3,\"107\":2,\"108\":2}}],[\"简体中文\",{\"1\":{\"80\":1}}],[\"简单点来说\",{\"1\":{\"406\":1}}],[\"简单来说\",{\"1\":{\"380\":1}}],[\"简单来说这个算法是将给定的值的二进制的最高位通过不断右移使其后面的值全部为\",{\"1\":{\"189\":1}}],[\"简单等待\",{\"0\":{\"276\":1}}],[\"简单地调用一个协程并不会使其被调度执行\",{\"1\":{\"265\":1}}],[\"简单使用\",{\"1\":{\"93\":1}}],[\"简单到令人愉悦的主题系统\",{\"1\":{\"91\":1}}],[\"简单\",{\"1\":{\"75\":1}}],[\"子域名不同\",{\"1\":{\"680\":1}}],[\"子进程集\",{\"0\":{\"302\":1}}],[\"子进程\",{\"1\":{\"263\":2,\"302\":1}}],[\"子类实现的方法\",{\"0\":{\"229\":1}}],[\"子目录中的\",{\"1\":{\"78\":1}}],[\"子工程通过parent标签指向父工程\",{\"1\":{\"21\":1}}],[\"众多主题\",{\"1\":{\"75\":1}}],[\"或将共享数据的访问频率降低\",{\"1\":{\"743\":1}}],[\"或发生丢包重传时慢启动结束\",{\"1\":{\"695\":1}}],[\"或锁机制来保证的\",{\"1\":{\"627\":1}}],[\"或在队列中的进程\",{\"1\":{\"506\":1}}],[\"或在\",{\"1\":{\"420\":1}}],[\"或许还会改名加上备份时间以示区别\",{\"1\":{\"415\":1}}],[\"或网络存储\",{\"1\":{\"387\":1}}],[\"或更高版本\",{\"1\":{\"370\":1}}],[\"或负的元素\",{\"1\":{\"353\":1}}],[\"或是受到\",{\"1\":{\"239\":1}}],[\"或其他自定义的类加载路径搜索\",{\"1\":{\"236\":1}}],[\"或通过即时编译技术\",{\"1\":{\"235\":1}}],[\"或值\",{\"1\":{\"193\":1}}],[\"或容器在运行时提供它\",{\"1\":{\"142\":1}}],[\"或\",{\"1\":{\"97\":1,\"161\":1,\"186\":1,\"214\":1,\"273\":1,\"275\":1,\"276\":2,\"280\":1,\"394\":1,\"515\":1,\"586\":1,\"735\":1}}],[\"或用户名\",{\"1\":{\"68\":1}}],[\"或者当前处理器核心失去了对该数据的独占权限\",{\"1\":{\"742\":1}}],[\"或者终止程序执行\",{\"1\":{\"733\":1}}],[\"或者命令行界面\",{\"1\":{\"731\":1}}],[\"或者用于拒绝非法的报文段和拒绝连接请求\",{\"1\":{\"687\":1}}],[\"或者是redis\",{\"1\":{\"655\":1}}],[\"或者请求的ip地址被封掉了\",{\"1\":{\"642\":1}}],[\"或者想触发trigger\",{\"1\":{\"624\":1}}],[\"或者每个属性值\",{\"1\":{\"617\":1}}],[\"或者提交信息写错了\",{\"1\":{\"429\":1}}],[\"或者详细配置对象\",{\"1\":{\"400\":1}}],[\"或者绑定宿主目录\",{\"1\":{\"387\":1}}],[\"或者你可反转比较的顺序\",{\"1\":{\"370\":1}}],[\"或者返回大于大于的正值\",{\"1\":{\"370\":1}}],[\"或者协程没有通过\",{\"1\":{\"306\":1}}],[\"或者说服务器找不到客户端请求的资源\",{\"1\":{\"642\":1}}],[\"或者说一秒中有多少时间\",{\"1\":{\"458\":1,\"557\":1}}],[\"或者说\",{\"1\":{\"249\":1}}],[\"或者其他语言编写\",{\"1\":{\"240\":1}}],[\"或者通过放射调用\",{\"1\":{\"239\":1}}],[\"或者通过传递性依赖\",{\"1\":{\"20\":1}}],[\"或者部分构件不存在于中央仓库中\",{\"1\":{\"158\":1}}],[\"或者指向仓库的\",{\"1\":{\"71\":1}}],[\"或者使用仓库\",{\"1\":{\"69\":1}}],[\"或者需要多级路由的网站都是很容易实现的\",{\"1\":{\"51\":1}}],[\"或者\",{\"1\":{\"50\":1,\"105\":1,\"166\":1,\"189\":2,\"204\":1,\"395\":3,\"509\":1,\"593\":1,\"676\":1}}],[\"或者从父项目继承\",{\"1\":{\"20\":1}}],[\"或者因为高版本没有生成\",{\"1\":{\"14\":1}}],[\"还包括下一次消息从哪里发送\",{\"1\":{\"690\":1}}],[\"还包括控制位\",{\"1\":{\"687\":1}}],[\"还包含了一些为运行时准备的一些配置参数\",{\"1\":{\"386\":1}}],[\"还要附加上一些控制信息\",{\"1\":{\"673\":1}}],[\"还要加上ssl握手的消耗\",{\"1\":{\"635\":1}}],[\"还要结合si和so\",{\"1\":{\"479\":1,\"528\":1}}],[\"还给行记录两边的空隙也加上了间隙锁\",{\"1\":{\"625\":1}}],[\"还没提交事务\",{\"1\":{\"631\":1}}],[\"还没被使用的时候\",{\"1\":{\"621\":1}}],[\"还没有运行完成\",{\"1\":{\"202\":1}}],[\"还可以通过\",{\"1\":{\"397\":1}}],[\"还可以根据操作系统环境自动激活指定的\",{\"1\":{\"171\":1}}],[\"还独立于底层的基础设施\",{\"1\":{\"383\":1}}],[\"还有这几种情况\",{\"1\":{\"631\":1}}],[\"还有一些\",{\"1\":{\"263\":1}}],[\"还有一些三方提供的插件比如\",{\"1\":{\"150\":1}}],[\"还有用户自定义的类加载器\",{\"1\":{\"236\":1}}],[\"还严格规定了各个基本数据类型的长度\",{\"1\":{\"233\":1,\"259\":1}}],[\"还是要看具体场景来说\",{\"1\":{\"430\":1}}],[\"还是一个接口\",{\"1\":{\"244\":1}}],[\"还是\",{\"1\":{\"189\":1}}],[\"还是配置一下比较好\",{\"1\":{\"12\":1}}],[\"还容易出错\",{\"1\":{\"168\":1}}],[\"还提供了一个查询地址\",{\"1\":{\"158\":1}}],[\"还支持自定义\",{\"1\":{\"67\":1}}],[\"无锁数据结构能够减少对共享数据的争用\",{\"1\":{\"743\":1}}],[\"无锁状态\",{\"1\":{\"220\":1}}],[\"无效\",{\"1\":{\"741\":2,\"742\":1}}],[\"无效连接监视释放\",{\"1\":{\"717\":1}}],[\"无队头阻塞\",{\"1\":{\"651\":1}}],[\"无论网络环境如何变化\",{\"1\":{\"648\":1}}],[\"无连接\",{\"1\":{\"645\":1}}],[\"无交互\",{\"1\":{\"462\":1,\"561\":1}}],[\"无关\",{\"1\":{\"305\":1}}],[\"无符号右移\",{\"1\":{\"187\":1}}],[\"无序性\",{\"1\":{\"186\":1}}],[\"无参构造函数创建的\",{\"1\":{\"189\":1}}],[\"无参构造函数\",{\"1\":{\"181\":1}}],[\"无法表示其他语言的字符\",{\"1\":{\"751\":1}}],[\"无法成功插入\",{\"1\":{\"632\":1}}],[\"无法利用多核\",{\"1\":{\"322\":1}}],[\"无法保证操作的原子性\",{\"1\":{\"223\":1}}],[\"无法预测存储数据的数量\",{\"1\":{\"177\":1}}],[\"无法直接使用\",{\"1\":{\"121\":1}}],[\"无需生成\",{\"1\":{\"75\":1}}],[\"无需构建\",{\"1\":{\"45\":1}}],[\"无\",{\"1\":{\"66\":1,\"68\":1,\"81\":1,\"85\":1,\"87\":1}}],[\"描述\",{\"1\":{\"64\":1,\"66\":1,\"68\":1,\"70\":1,\"72\":1,\"74\":1,\"77\":1,\"79\":1,\"81\":1,\"83\":1,\"85\":1,\"87\":1,\"165\":1,\"166\":1,\"167\":1,\"276\":1,\"342\":1,\"343\":1}}],[\"多核处理器系统中通常包含一个或多个总线嗅探器\",{\"1\":{\"741\":1}}],[\"多核处理器系统中的缓存一致性需要满足事务性\",{\"1\":{\"741\":1}}],[\"多核处理器系统中的缓存一致性问题主要涉及以下几个方面\",{\"1\":{\"741\":1}}],[\"多核处理器就是一个内核\",{\"1\":{\"238\":1}}],[\"多级缓存的目的是在速度与容量之间取得平衡\",{\"1\":{\"740\":1}}],[\"多级页表可以有效减少内存消耗\",{\"1\":{\"734\":1}}],[\"多级页表被引入\",{\"1\":{\"734\":1}}],[\"多对多等多种方式的通讯\",{\"1\":{\"724\":1}}],[\"多对一\",{\"1\":{\"724\":1}}],[\"多路复用\",{\"1\":{\"647\":1,\"648\":1}}],[\"多路复用原理\",{\"1\":{\"333\":1}}],[\"多可供选择的缓存头来控制缓存策略\",{\"1\":{\"646\":1}}],[\"多容器管理\",{\"1\":{\"399\":1}}],[\"多协程加速程序运行\",{\"1\":{\"332\":1}}],[\"多进程优雅退出\",{\"0\":{\"327\":1}}],[\"多进程代码\",{\"0\":{\"326\":1}}],[\"多进程\",{\"0\":{\"318\":1,\"320\":1},\"1\":{\"320\":1,\"332\":1}}],[\"多进程程序例子\",{\"0\":{\"316\":1}}],[\"多继承\",{\"1\":{\"233\":1,\"259\":1}}],[\"多任务系统往往需要同时执行多道作业\",{\"1\":{\"198\":1}}],[\"多线程代码\",{\"0\":{\"323\":1},\"1\":{\"326\":1}}],[\"多线程机制在\",{\"1\":{\"322\":1}}],[\"多线程只能并发执行\",{\"1\":{\"320\":1}}],[\"多线程\",{\"0\":{\"318\":1,\"320\":1},\"1\":{\"320\":1,\"326\":1,\"506\":1}}],[\"多线程并发使用\",{\"1\":{\"255\":1}}],[\"多线程内存模型跟\",{\"1\":{\"205\":1}}],[\"多线程往往会比单线程更快\",{\"1\":{\"198\":1}}],[\"多线程遍历\",{\"1\":{\"192\":1}}],[\"多线程操作导致死循环\",{\"0\":{\"190\":1}}],[\"多模块管理简单地来说就是将一个项目分为多个模块\",{\"1\":{\"149\":1}}],[\"多模块\",{\"0\":{\"149\":1},\"1\":{\"146\":1}}],[\"多模块项目由管理一组子模块的聚合器\",{\"1\":{\"149\":1}}],[\"多模块项目\",{\"1\":{\"140\":1}}],[\"多个处理器核心都可以读取该数据\",{\"1\":{\"742\":1}}],[\"多个容器可以在同一台机器上运行\",{\"1\":{\"380\":1}}],[\"多个线程同时访问共享资源会出现一些问题\",{\"1\":{\"218\":1}}],[\"多个线程同时对链表进行操作\",{\"1\":{\"190\":1}}],[\"多个线程可以安全地同时访问和修改hashtable\",{\"1\":{\"193\":1}}],[\"多个\",{\"1\":{\"171\":1,\"207\":1}}],[\"多个要求用逗号分隔\",{\"1\":{\"143\":1}}],[\"多个封面\",{\"0\":{\"62\":1}}],[\"多页文档\",{\"0\":{\"51\":1}}],[\"背景色\",{\"1\":{\"61\":1}}],[\"背景图片\",{\"1\":{\"61\":1}}],[\"末尾添加图片的\",{\"1\":{\"61\":1}}],[\"参见下面的\",{\"1\":{\"292\":1}}],[\"参见\",{\"1\":{\"278\":1}}],[\"参数来指定\",{\"1\":{\"728\":1}}],[\"参数来处理用户指定的比较函数\",{\"1\":{\"370\":1}}],[\"参数之间以\",{\"1\":{\"653\":1}}],[\"参数建立长连接\",{\"1\":{\"645\":1}}],[\"参数2\",{\"1\":{\"612\":1}}],[\"参数1\",{\"1\":{\"612\":1}}],[\"参数个数=2\",{\"1\":{\"580\":1}}],[\"参数个数=$\",{\"1\":{\"580\":1}}],[\"参数指定\",{\"1\":{\"402\":1,\"403\":1}}],[\"参数被完全删除\",{\"1\":{\"370\":1}}],[\"参数的旧方法\",{\"0\":{\"370\":1}}],[\"参数的构造方法创建\",{\"1\":{\"189\":1}}],[\"参数是否有\",{\"1\":{\"239\":1}}],[\"参数减少线程栈大小5\",{\"1\":{\"239\":1}}],[\"参数调高\",{\"1\":{\"239\":1}}],[\"参数\",{\"1\":{\"60\":1,\"74\":1,\"77\":1,\"202\":1,\"278\":1,\"286\":1,\"311\":1,\"445\":2,\"452\":2,\"457\":2,\"478\":2,\"505\":1,\"527\":2,\"539\":2,\"552\":2,\"556\":2,\"605\":2,\"625\":1}}],[\"参考文章\",{\"0\":{\"499\":1,\"568\":1,\"614\":1}}],[\"参考借鉴\",{\"1\":{\"111\":2}}],[\"参考\",{\"0\":{\"408\":1},\"1\":{\"47\":1,\"98\":1,\"99\":1}}],[\"嵌套\",{\"0\":{\"59\":1}}],[\"嵌套的侧边栏\",{\"0\":{\"53\":1}}],[\"方便后续优化\",{\"1\":{\"621\":1}}],[\"方便实现栈和队列等数据结构\",{\"1\":{\"182\":1}}],[\"方便以后遇到不清楚的时候可以查阅一下\",{\"1\":{\"2\":1}}],[\"方法2\",{\"1\":{\"571\":2}}],[\"方法1\",{\"1\":{\"571\":2}}],[\"方法按\",{\"1\":{\"369\":1}}],[\"方法可以直接修改列表\",{\"1\":{\"363\":1}}],[\"方法二\",{\"1\":{\"336\":1}}],[\"方法一\",{\"1\":{\"336\":1}}],[\"方法返回\",{\"1\":{\"293\":1}}],[\"方法返回地址\",{\"1\":{\"239\":1}}],[\"方法被再次调用\",{\"1\":{\"288\":1}}],[\"方法被调用后\",{\"1\":{\"204\":1}}],[\"方法会阻塞直至该旗标被设为\",{\"1\":{\"288\":1}}],[\"方法会启动一个线程并使线程进入就绪状态\",{\"1\":{\"203\":1}}],[\"方法将其重设为\",{\"1\":{\"288\":1}}],[\"方法将其设为\",{\"1\":{\"288\":1}}],[\"方法的名称和描述符\",{\"1\":{\"246\":1}}],[\"方法的源码\",{\"1\":{\"187\":1}}],[\"方法服务\",{\"1\":{\"240\":1}}],[\"方法代理了该次请求\",{\"1\":{\"239\":1}}],[\"方法使用\",{\"1\":{\"239\":1}}],[\"方法出口信息等\",{\"1\":{\"239\":1}}],[\"方法执行的内存模型\",{\"1\":{\"239\":1}}],[\"方法执行完成后\",{\"1\":{\"204\":1}}],[\"方法栈\",{\"1\":{\"239\":1}}],[\"方法区也可以被垃圾回收\",{\"1\":{\"244\":1}}],[\"方法区改用和\",{\"1\":{\"244\":1}}],[\"方法区是所有线程共享的\",{\"1\":{\"244\":1}}],[\"方法区\",{\"0\":{\"244\":1},\"1\":{\"237\":3,\"247\":1}}],[\"方法中包含了线程所要运行的代码\",{\"1\":{\"233\":1,\"259\":1}}],[\"方法判断是否已经释放了共享同步状态\",{\"1\":{\"230\":1}}],[\"方法判断是否释放了独占式同步状态\",{\"1\":{\"230\":1}}],[\"方法判断是否获取同步状态\",{\"1\":{\"230\":1}}],[\"方法判断是否获取到锁\",{\"1\":{\"230\":1}}],[\"方法尝试唤醒节点\",{\"1\":{\"227\":1}}],[\"方法不定义在\",{\"1\":{\"204\":2}}],[\"方法释放了锁\",{\"1\":{\"204\":1}}],[\"方法没有释放锁\",{\"1\":{\"204\":1}}],[\"方法里面的逻辑\",{\"1\":{\"203\":1}}],[\"方法让线程进入就绪状态\",{\"1\":{\"202\":1}}],[\"方法等待运行的状态\",{\"1\":{\"201\":1}}],[\"方法体里面的逻辑\",{\"1\":{\"200\":1}}],[\"方法最后会判断一次\",{\"1\":{\"189\":1}}],[\"方法后数组的容量为\",{\"1\":{\"189\":1}}],[\"方法计算出来的初始容量都为\",{\"1\":{\"189\":1}}],[\"方法时会触发两次\",{\"1\":{\"189\":1}}],[\"方法时才会真正的分配容量\",{\"1\":{\"181\":1}}],[\"方法相比于\",{\"1\":{\"187\":1}}],[\"方法对比\",{\"1\":{\"187\":1}}],[\"方法进行扩容\",{\"1\":{\"181\":1}}],[\"方法\",{\"0\":{\"203\":1,\"345\":1},\"1\":{\"181\":5,\"187\":2,\"189\":1,\"201\":1,\"202\":3,\"204\":1,\"233\":2,\"238\":2,\"240\":2,\"259\":2,\"277\":1,\"280\":1}}],[\"方法来主动释放被\",{\"1\":{\"239\":1}}],[\"方法来比较\",{\"1\":{\"181\":1}}],[\"方法来删除当前元素\",{\"1\":{\"178\":1}}],[\"方式解决了幻读\",{\"1\":{\"632\":2}}],[\"方式2\",{\"1\":{\"325\":1}}],[\"方式1\",{\"1\":{\"325\":1}}],[\"方式\",{\"0\":{\"57\":1}}],[\"导致\",{\"1\":{\"651\":1}}],[\"导致额外的\",{\"1\":{\"277\":1}}],[\"导致加载了多份\",{\"1\":{\"239\":1}}],[\"导致其他线程或者进程饿死\",{\"1\":{\"198\":1}}],[\"导入依赖组件\",{\"0\":{\"123\":1}}],[\"导入spring相关依赖和需求相关技术的依赖\",{\"0\":{\"117\":1}}],[\"导入脚本和样式\",{\"1\":{\"101\":1}}],[\"导入相关技术依赖\",{\"1\":{\"40\":1}}],[\"导航二\",{\"1\":{\"59\":1}}],[\"导航一\",{\"1\":{\"59\":1}}],[\"导航栏\",{\"0\":{\"56\":1}}],[\"当第一个路由器收到此数据包时\",{\"1\":{\"750\":1}}],[\"当ttl值耗尽时\",{\"1\":{\"750\":1}}],[\"当ttl值变为0时\",{\"1\":{\"750\":1}}],[\"当tlb满载时\",{\"1\":{\"736\":1}}],[\"当文件内容发生更改时\",{\"1\":{\"749\":1}}],[\"当找到占用大量cpu或内存资源的进程时\",{\"1\":{\"748\":1}}],[\"当可执行程序准备好后\",{\"1\":{\"744\":1}}],[\"当两个处理器核心访问的数据恰好位于同一个缓存行内时\",{\"1\":{\"743\":1}}],[\"当两个不同的键具有相同的哈希码时\",{\"1\":{\"193\":1}}],[\"当多个处理器核心频繁访问位于同一个缓存行\",{\"1\":{\"743\":1}}],[\"当缓存已满\",{\"1\":{\"739\":1}}],[\"当程序执行完毕\",{\"1\":{\"744\":1}}],[\"当程序执行过程中出现错误或异常情况\",{\"1\":{\"738\":1}}],[\"当程序访问一个内存地址时\",{\"1\":{\"737\":1}}],[\"当cpu实际访问这些地址时\",{\"1\":{\"737\":1}}],[\"当cpu访问虚拟地址时\",{\"1\":{\"737\":1}}],[\"当cpu访问内存时\",{\"1\":{\"737\":1}}],[\"当cpu需要进行地址翻译时\",{\"1\":{\"736\":1}}],[\"当处理器需要执行地址翻译时\",{\"1\":{\"734\":1}}],[\"当异常发生时\",{\"1\":{\"733\":1}}],[\"当外部中断发生时\",{\"1\":{\"733\":1}}],[\"当某一个\",{\"1\":{\"729\":1}}],[\"当某个流中的一个数据包丢失了\",{\"1\":{\"651\":1}}],[\"当系统中处于\",{\"1\":{\"721\":1}}],[\"当系统有一个以上\",{\"1\":{\"197\":1}}],[\"当有新的数据包到达\",{\"1\":{\"721\":1}}],[\"当有一个以上的协程在\",{\"1\":{\"287\":1}}],[\"当连接进入time\",{\"1\":{\"721\":1}}],[\"当开启之后内核会快速回收time\",{\"1\":{\"721\":1}}],[\"当旧的tcp数据包到达时\",{\"1\":{\"721\":1}}],[\"当网卡接收数据包的速度大于内核处理的速度时\",{\"1\":{\"717\":1}}],[\"当网络出现拥塞\",{\"1\":{\"697\":1}}],[\"当达到一定阈值时拆除这些连接\",{\"1\":{\"717\":1}}],[\"当被动关闭方在tcp挥手过程中\",{\"1\":{\"710\":1}}],[\"当等待\",{\"1\":{\"708\":1}}],[\"当发生用户态到内核态的切换时\",{\"1\":{\"738\":1}}],[\"当发生超时后\",{\"1\":{\"625\":1}}],[\"当发送端一个\",{\"1\":{\"695\":1}}],[\"当接收端收到比期望号大的seq时候\",{\"1\":{\"694\":1}}],[\"当用户程序需要请求操作系统提供的服务时\",{\"1\":{\"738\":1}}],[\"当用户在应用程序的\",{\"1\":{\"676\":1}}],[\"当用户调用\",{\"1\":{\"165\":3}}],[\"当用户调用这些阶段时\",{\"1\":{\"155\":1}}],[\"当客户端撤销tcb\",{\"1\":{\"705\":1}}],[\"当客户端关闭会话\",{\"1\":{\"676\":1}}],[\"当客户端和服务器端在进行一个会话时\",{\"1\":{\"664\":1}}],[\"当客户端执行了一个很大的操作后\",{\"1\":{\"621\":1}}],[\"当数据包packet\",{\"1\":{\"652\":1}}],[\"当数量超过了\",{\"1\":{\"187\":1}}],[\"当事务\",{\"1\":{\"632\":1}}],[\"当检测到死锁后\",{\"1\":{\"625\":1}}],[\"当命令行参数为1时输出\",{\"1\":{\"597\":1}}],[\"当你切换分支的时候\",{\"1\":{\"430\":1}}],[\"当你修改了某个文件后\",{\"1\":{\"417\":1}}],[\"当你执行\",{\"1\":{\"393\":1}}],[\"当然\",{\"1\":{\"388\":1,\"394\":1}}],[\"当然也允许更新失败的线程放弃操作\",{\"1\":{\"214\":1}}],[\"当然也可以完全定制\",{\"1\":{\"100\":1}}],[\"当然也可以指定搜索的路径\",{\"1\":{\"93\":1}}],[\"当计数器为\",{\"1\":{\"336\":1}}],[\"当线程完成一次对改\",{\"1\":{\"336\":2}}],[\"当协程函数被调用而不是被等待时\",{\"1\":{\"306\":1}}],[\"当未完成计数降到零的时候\",{\"1\":{\"293\":1}}],[\"当条目添加到队列的时候\",{\"1\":{\"293\":1}}],[\"当锁为\",{\"1\":{\"287\":1}}],[\"当锁释放的时候\",{\"1\":{\"217\":1}}],[\"当该\",{\"1\":{\"280\":1}}],[\"当没有引发任何异常时它就相当于\",{\"1\":{\"276\":1}}],[\"当超时发生时\",{\"1\":{\"276\":1}}],[\"当服务的提供者提供了服务接口的一种实现之后\",{\"1\":{\"254\":1}}],[\"当要扩展时空间不足\",{\"1\":{\"244\":1}}],[\"当前cpu的栈指针sp\",{\"1\":{\"738\":1}}],[\"当前的一个tcp四元组因为某些原因关闭之后\",{\"1\":{\"719\":1}}],[\"当前的进程号=41752\",{\"1\":{\"584\":1}}],[\"当前的进程号=$$\",{\"1\":{\"584\":1}}],[\"当前窗口就会继续向右滑动\",{\"1\":{\"652\":1}}],[\"当前读\",{\"1\":{\"632\":1}}],[\"当前数据库中活跃事务中事务\",{\"1\":{\"631\":1}}],[\"当前数据库中活跃事务的事务\",{\"1\":{\"631\":1}}],[\"当前路径\",{\"1\":{\"610\":1}}],[\"当前进程的\",{\"1\":{\"583\":1}}],[\"当前已经废弃不用\",{\"1\":{\"469\":1,\"519\":1}}],[\"当前登录用户个数\",{\"1\":{\"440\":1,\"534\":1}}],[\"当前任务放弃\",{\"1\":{\"334\":1}}],[\"当前\",{\"1\":{\"277\":1}}],[\"当前同步器是否在独占模式下被线程占用\",{\"1\":{\"229\":1}}],[\"当前线程处在共享模式下\",{\"1\":{\"226\":1}}],[\"当前线程1执行完哈希冲突判断后\",{\"1\":{\"191\":1}}],[\"当前节点在队列中的状态\",{\"1\":{\"226\":1}}],[\"当其中某个\",{\"1\":{\"207\":1}}],[\"当将变量\",{\"1\":{\"205\":1}}],[\"当分配到时间片后就可以开始运行了\",{\"1\":{\"203\":1}}],[\"当一个处理器核心需要修改一份共享数据时\",{\"1\":{\"742\":1}}],[\"当一个处理器核心需要执行读或写操作时\",{\"1\":{\"742\":1}}],[\"当一个处理器对内存中的某个地址进行写操作时\",{\"1\":{\"741\":1}}],[\"当一个事务对某条聚簇索引记录进行改动时\",{\"1\":{\"631\":1}}],[\"当一个事务的等待时间超过该值后\",{\"1\":{\"625\":1}}],[\"当一个协程通过\",{\"1\":{\"268\":1}}],[\"当一个线程尝试去获取某一把锁的时候\",{\"1\":{\"215\":1}}],[\"当一个线程对共享变量进行修改后\",{\"1\":{\"210\":1}}],[\"当一个\",{\"1\":{\"197\":1,\"269\":1,\"280\":1,\"305\":1}}],[\"当新的链表长度小于\",{\"1\":{\"189\":1}}],[\"当链表元素个数大于等于8个的时候\",{\"1\":{\"187\":1}}],[\"当链表长度大于阈值\",{\"1\":{\"187\":1}}],[\"当存在\",{\"1\":{\"171\":1}}],[\"当通过\",{\"1\":{\"160\":1}}],[\"当\",{\"1\":{\"157\":1,\"187\":1,\"239\":2,\"250\":1,\"695\":1}}],[\"当插件目标绑定到生命周期的不同阶段时\",{\"1\":{\"156\":1}}],[\"当此项目本身是依赖项时\",{\"1\":{\"142\":1}}],[\"当执行全文搜索时\",{\"1\":{\"93\":1}}],[\"当请求的语言中缺少页面时\",{\"1\":{\"85\":1}}],[\"当设置了\",{\"1\":{\"55\":1}}],[\"当我们开发的工程拥有2个以上模块的时候\",{\"1\":{\"22\":1}}],[\"忽略失效过程\",{\"1\":{\"439\":1,\"533\":1}}],[\"忽略文件\",{\"1\":{\"424\":1}}],[\"忽略符号位\",{\"1\":{\"187\":1}}],[\"忽略副标题\",{\"0\":{\"55\":1}}],[\"忽略掉下划线开头的文件\",{\"1\":{\"48\":1}}],[\"则可以避免查询页表\",{\"1\":{\"737\":1}}],[\"则可以直接使用\",{\"1\":{\"673\":1}}],[\"则不需要访问页表\",{\"1\":{\"736\":1}}],[\"则不需要显式定义它们\",{\"1\":{\"139\":1}}],[\"则访问内存\",{\"1\":{\"735\":1}}],[\"则需要访问内存中的页表来进行地址翻译\",{\"1\":{\"736\":1}}],[\"则需要访问内存中的页表进行地址翻译\",{\"1\":{\"734\":1}}],[\"则需要发送arp协议查询mac地址\",{\"1\":{\"673\":1}}],[\"则改用避免拥塞算法\",{\"1\":{\"695\":1}}],[\"则说明目标主机可达\",{\"1\":{\"673\":1}}],[\"则说明目标主机不可达\",{\"1\":{\"673\":1}}],[\"则接收\",{\"1\":{\"673\":1}}],[\"则与上一步骤相反\",{\"1\":{\"667\":1}}],[\"则以dns客户的身份向根域名服务器发出解析请求\",{\"1\":{\"667\":1}}],[\"则希望能处理该请求\",{\"1\":{\"645\":1}}],[\"则直接使用浏览器的本地缓存\",{\"1\":{\"643\":1}}],[\"则关闭加密通信\",{\"1\":{\"638\":1}}],[\"则其所做的修改就会永久保存到数据库中\",{\"1\":{\"627\":1}}],[\"则其他人无法使用\",{\"1\":{\"416\":1}}],[\"则满足第三范式\",{\"1\":{\"617\":1}}],[\"则执行此处程序\",{\"1\":{\"596\":1}}],[\"则执行此处程序2\",{\"1\":{\"596\":1}}],[\"则执行此处程序1\",{\"1\":{\"596\":1}}],[\"则表示系统磁盘io性能瓶颈\",{\"1\":{\"479\":1,\"528\":1}}],[\"则显示当前所有被挂载的文件系统\",{\"1\":{\"451\":1,\"551\":1}}],[\"则每个列表元素将按反向顺序比较进行排序\",{\"1\":{\"363\":1}}],[\"则当队列达到\",{\"1\":{\"293\":1}}],[\"则当协程完成时\",{\"1\":{\"272\":1}}],[\"则队列尺寸是无限的\",{\"1\":{\"293\":1}}],[\"则立即返回\",{\"1\":{\"288\":1}}],[\"则会在\",{\"1\":{\"724\":1}}],[\"则会在传输层进行分片\",{\"1\":{\"724\":1}}],[\"则会覆盖默认镜像里的\",{\"1\":{\"400\":1}}],[\"则会出现这种情况\",{\"1\":{\"370\":1}}],[\"则会引发\",{\"1\":{\"287\":1}}],[\"则会使用\",{\"1\":{\"279\":2}}],[\"则返回状态码304\",{\"1\":{\"645\":1}}],[\"则返回\",{\"1\":{\"280\":1,\"287\":1,\"610\":1}}],[\"则它将被用于控制返回之前等待的最长秒数\",{\"1\":{\"276\":1}}],[\"则等待直到完成\",{\"1\":{\"275\":1}}],[\"则在\",{\"1\":{\"273\":1}}],[\"则是等待这个任务运行完成\",{\"1\":{\"265\":1}}],[\"则基本确认为\",{\"1\":{\"239\":1}}],[\"则还是由\",{\"1\":{\"239\":1}}],[\"则将当前请求资源的线程设置为有效的工作线程\",{\"1\":{\"226\":1}}],[\"则将冲突的值加到链表中即可\",{\"1\":{\"187\":1}}],[\"则该节点在新数组的下标为原数组下标\",{\"1\":{\"189\":1}}],[\"则该节点在新数组的下标与原数组一致都为\",{\"1\":{\"189\":1}}],[\"则通过新容量计算\",{\"1\":{\"189\":1}}],[\"则新容量则为\",{\"1\":{\"181\":1}}],[\"则\",{\"1\":{\"165\":1,\"275\":1,\"697\":1}}],[\"则只有\",{\"1\":{\"165\":1}}],[\"则构建失败\",{\"1\":{\"143\":1}}],[\"则从\",{\"1\":{\"53\":1}}],[\"则代表projectb默认依赖projecta依赖的所有资源\",{\"1\":{\"21\":1}}],[\"来表示128个不同字符\",{\"1\":{\"751\":1}}],[\"来负责超时和重传\",{\"1\":{\"729\":1}}],[\"来确认连接关闭\",{\"1\":{\"708\":1}}],[\"来获取缓冲区大小\",{\"1\":{\"693\":1}}],[\"来标记自己\",{\"1\":{\"651\":1}}],[\"来启动\",{\"1\":{\"570\":1}}],[\"来加入更多的细节来解释提交\",{\"1\":{\"425\":1}}],[\"来管理和维护代码\",{\"1\":{\"419\":1}}],[\"来分配不同软件容器的可用硬件资源\",{\"1\":{\"406\":1}}],[\"来轻松删除第\",{\"1\":{\"350\":1}}],[\"来进行控制\",{\"1\":{\"335\":1}}],[\"来设为任务的名称\",{\"1\":{\"271\":1}}],[\"来代替\",{\"1\":{\"244\":1}}],[\"来降低\",{\"1\":{\"242\":1}}],[\"来完成获取资源线程的排队工作\",{\"1\":{\"226\":1}}],[\"来查看下面代码的字节码指令\",{\"1\":{\"219\":1}}],[\"来判断是否是守护线程\",{\"1\":{\"202\":1}}],[\"来创建\",{\"1\":{\"189\":1}}],[\"来使其变成大于\",{\"1\":{\"189\":1}}],[\"来得到一个大于\",{\"1\":{\"189\":1}}],[\"来比较各个结点的\",{\"1\":{\"187\":1}}],[\"来减少扩容的分配次数\",{\"1\":{\"181\":1}}],[\"来处理\",{\"1\":{\"177\":1,\"623\":1}}],[\"来决定是否激活\",{\"1\":{\"171\":1}}],[\"来激活\",{\"1\":{\"171\":1}}],[\"来自父\",{\"1\":{\"146\":1}}],[\"来自南方沿海城市的男孩\",{\"1\":{\"1\":1}}],[\"来声明依赖\",{\"1\":{\"142\":1}}],[\"来初始化文档\",{\"1\":{\"105\":1}}],[\"来忽略双音符\",{\"1\":{\"93\":1}}],[\"来实现的\",{\"1\":{\"382\":1,\"406\":1}}],[\"来实现锁的分配\",{\"1\":{\"226\":1}}],[\"来实现\",{\"1\":{\"53\":1}}],[\"想要访问某个服务\",{\"1\":{\"655\":1}}],[\"想只显示这个目录自己的侧边栏\",{\"1\":{\"53\":1}}],[\"想整出点玩意儿的时候\",{\"1\":{\"1\":1}}],[\"有了time\",{\"1\":{\"719\":1}}],[\"有了它你就可以将某个文件回溯到之前的状态\",{\"1\":{\"414\":1}}],[\"有get\",{\"1\":{\"672\":1}}],[\"有什么解决办法\",{\"0\":{\"656\":1,\"660\":1}}],[\"有什么用\",{\"0\":{\"399\":1}}],[\"有header和body\",{\"1\":{\"655\":1}}],[\"有效期不同\",{\"1\":{\"677\":1}}],[\"有效地降低了安全风险\",{\"1\":{\"648\":1}}],[\"有效范围\",{\"1\":{\"169\":1}}],[\"有四个重要的字段\",{\"1\":{\"631\":1}}],[\"有些页被锁进内存\",{\"1\":{\"506\":1}}],[\"有些朋友看到空闲内存\",{\"1\":{\"479\":1,\"528\":1}}],[\"有些区域则依赖用户线程的启动和结束而建立和销毁\",{\"1\":{\"237\":1}}],[\"有趣的讲解\",{\"1\":{\"431\":1}}],[\"有两种取得\",{\"1\":{\"423\":1}}],[\"有三种状态\",{\"1\":{\"421\":1}}],[\"有三种方式来初始化\",{\"1\":{\"181\":1}}],[\"有时候我们提交完了才发现漏掉了几个文件没有添加\",{\"1\":{\"429\":1}}],[\"有时候会混淆所在的工作目录\",{\"1\":{\"415\":1}}],[\"有时浏览到一个目录时\",{\"1\":{\"53\":1}}],[\"有如下这些特点\",{\"1\":{\"397\":1}}],[\"有几项关键的信息有助于我们选择合适的镜像\",{\"1\":{\"388\":1}}],[\"有线程切换开销\",{\"1\":{\"320\":1}}],[\"有序数组\",{\"1\":{\"310\":2}}],[\"有序性\",{\"1\":{\"210\":1,\"218\":1}}],[\"有界的信号量\",{\"1\":{\"304\":1}}],[\"有超时控制的运行\",{\"1\":{\"300\":1}}],[\"有的区域随着虚拟机进程的启动而存在\",{\"1\":{\"237\":1}}],[\"有的话\",{\"1\":{\"160\":1}}],[\"有的话删掉再保存就可以了\",{\"1\":{\"17\":1}}],[\"有个特殊情况需要注意下\",{\"1\":{\"189\":1}}],[\"有以下三个标准的生命周期\",{\"1\":{\"161\":1}}],[\"有一种内核作业\",{\"1\":{\"239\":1}}],[\"有一些公共仓库是为了加速访问\",{\"1\":{\"158\":1}}],[\"有一个第三方的\",{\"1\":{\"156\":1}}],[\"有模块的项目称为多模块或聚合项目\",{\"1\":{\"149\":1}}],[\"有内置的代码高亮工具\",{\"1\":{\"102\":1}}],[\"默认80端口\",{\"1\":{\"655\":1}}],[\"默认就开启\",{\"1\":{\"625\":1}}],[\"默认以\",{\"1\":{\"451\":1,\"551\":1}}],[\"默认top\",{\"0\":{\"442\":1,\"536\":1}}],[\"默认\",{\"1\":{\"430\":1}}],[\"默认使用的是\",{\"1\":{\"567\":1}}],[\"默认使用\",{\"1\":{\"389\":1}}],[\"默认提供最强的隔离\",{\"1\":{\"383\":1}}],[\"默认不会卸载\",{\"1\":{\"239\":1}}],[\"默认容量为\",{\"1\":{\"187\":1}}],[\"默认初始容量大小\",{\"1\":{\"181\":1}}],[\"默认激活\",{\"1\":{\"171\":1}}],[\"默认本地仓库路径是在\",{\"1\":{\"158\":1}}],[\"默认生成文件\",{\"1\":{\"107\":1}}],[\"默认设置为\",{\"1\":{\"106\":1}}],[\"默认是1s显示一条信息\",{\"1\":{\"567\":1}}],[\"默认是按io排序\",{\"1\":{\"463\":1,\"562\":1}}],[\"默认是非公平锁\",{\"1\":{\"217\":1}}],[\"默认是黑色\",{\"1\":{\"187\":1}}],[\"默认是\",{\"1\":{\"105\":1,\"202\":1}}],[\"默认是当前目录\",{\"1\":{\"105\":1}}],[\"默认是提供\",{\"1\":{\"97\":1}}],[\"默认支持以下语言\",{\"1\":{\"102\":1}}],[\"默认一天\",{\"1\":{\"93\":1}}],[\"默认过期时间为一天\",{\"1\":{\"93\":1}}],[\"默认值时\",{\"1\":{\"625\":1}}],[\"默认值为\",{\"1\":{\"187\":1,\"363\":1}}],[\"默认值\",{\"1\":{\"64\":1,\"66\":1,\"68\":1,\"70\":1,\"72\":1,\"74\":1,\"77\":1,\"79\":1,\"81\":1,\"83\":1,\"85\":1,\"87\":1,\"93\":1,\"105\":3,\"106\":2,\"107\":1}}],[\"默认为一些核心的生命周期阶段绑定了插件目标\",{\"1\":{\"155\":1}}],[\"默认为\",{\"1\":{\"64\":1,\"105\":1,\"106\":1,\"142\":1}}],[\"默认的结果集是未排好序的\",{\"1\":{\"512\":1}}],[\"默认的初始化大小为\",{\"1\":{\"187\":1}}],[\"默认的背景是随机生成的渐变色\",{\"1\":{\"61\":1}}],[\"默认的访问地址是\",{\"1\":{\"49\":1}}],[\"默认情况下\",{\"1\":{\"70\":1,\"239\":1}}],[\"默认情况下每个标题都会自动添加到目录中\",{\"1\":{\"55\":1}}],[\"默认情况下侧边栏会通过\",{\"1\":{\"52\":1}}],[\"├──\",{\"1\":{\"51\":3,\"62\":4}}],[\"└──\",{\"1\":{\"51\":3,\"62\":4}}],[\"文本字符串\",{\"1\":{\"246\":1}}],[\"文档\",{\"0\":{\"507\":1},\"1\":{\"303\":1}}],[\"文档助手\",{\"1\":{\"103\":1}}],[\"文档的链接必须要以\",{\"1\":{\"57\":1}}],[\"文档网站不能只有一个页面吧\",{\"1\":{\"51\":1}}],[\"文件句柄等\",{\"1\":{\"744\":1}}],[\"文件管理\",{\"1\":{\"731\":1}}],[\"文件扩展名\",{\"1\":{\"571\":1}}],[\"文件名称不是\",{\"1\":{\"402\":1,\"403\":1}}],[\"文件格式的版本\",{\"1\":{\"400\":1}}],[\"文件是\",{\"1\":{\"400\":1}}],[\"文件基本结构如下\",{\"1\":{\"400\":1}}],[\"文件基本结构\",{\"0\":{\"400\":1}}],[\"文件来配置应用的所有服务\",{\"1\":{\"399\":1}}],[\"文件来定义\",{\"1\":{\"58\":1}}],[\"文件来定义侧边栏\",{\"1\":{\"52\":1}}],[\"文件系统等\",{\"1\":{\"738\":1}}],[\"文件系统在磁盘上存储数据时\",{\"1\":{\"737\":1}}],[\"文件系统允许用户创建\",{\"1\":{\"731\":1}}],[\"文件系统及网络资源\",{\"1\":{\"515\":1}}],[\"文件系统\",{\"1\":{\"386\":1,\"515\":1}}],[\"文件系统为其提供用户空间支持\",{\"1\":{\"386\":1}}],[\"文件处理等\",{\"1\":{\"319\":1}}],[\"文件存在与否激活\",{\"1\":{\"171\":1}}],[\"文件存放的位置\",{\"1\":{\"142\":1}}],[\"文件显示激活\",{\"1\":{\"171\":1}}],[\"文件做字节码改善优化\",{\"1\":{\"166\":1}}],[\"文件中定义的服务来创建和启动容器\",{\"1\":{\"402\":1}}],[\"文件中定义和管理多个容器\",{\"1\":{\"399\":1}}],[\"文件中添加如下配置\",{\"1\":{\"171\":1}}],[\"文件中可以看到\",{\"1\":{\"158\":1}}],[\"文件中声明了这些构件的坐标\",{\"1\":{\"157\":1}}],[\"文件中的\",{\"1\":{\"137\":1}}],[\"文件的相对路径\",{\"1\":{\"149\":1}}],[\"文件的路径\",{\"1\":{\"15\":1}}],[\"文件到内存中\",{\"1\":{\"142\":1}}],[\"文件一般长这样\",{\"1\":{\"137\":1}}],[\"文件一致\",{\"1\":{\"59\":1}}],[\"文件复制到文档路径\",{\"1\":{\"105\":1}}],[\"文件嵌入\",{\"1\":{\"103\":1}}],[\"文件可以作为路由的默认网页\",{\"1\":{\"78\":1}}],[\"文件自动生成\",{\"1\":{\"52\":1}}],[\"文件夹\",{\"1\":{\"48\":1}}],[\"文件\",{\"1\":{\"15\":1,\"16\":1,\"44\":1,\"75\":1,\"80\":1,\"107\":2,\"144\":1,\"159\":1,\"166\":1,\"236\":1,\"402\":1,\"403\":1,\"424\":2,\"452\":1,\"552\":1,\"622\":1}}],[\"you\",{\"1\":{\"507\":1}}],[\"your\",{\"1\":{\"50\":2}}],[\"yml\",{\"1\":{\"400\":1,\"402\":4,\"403\":3}}],[\"yaml\",{\"1\":{\"399\":2,\"400\":2}}],[\"yay\",{\"1\":{\"275\":1}}],[\"yield\",{\"1\":{\"348\":1,\"349\":1}}],[\"yiddish\",{\"1\":{\"135\":1}}],[\"ypt9vt\",{\"1\":{\"329\":1}}],[\"yeild\",{\"1\":{\"202\":1}}],[\"y\",{\"1\":{\"139\":3,\"357\":1,\"370\":4}}],[\"yuesievzjm\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"yuning\",{\"1\":{\"39\":1,\"41\":5,\"115\":1,\"126\":1}}],[\"选定一个监听端口\",{\"1\":{\"106\":1}}],[\"选项和填充\",{\"1\":{\"687\":1}}],[\"选项的提交命令尝试重新提交\",{\"1\":{\"429\":1}}],[\"选项指定端口映射\",{\"1\":{\"400\":1}}],[\"选项指定网络\",{\"1\":{\"400\":1}}],[\"选项设置环境变量\",{\"1\":{\"400\":1}}],[\"选项\",{\"1\":{\"52\":1,\"239\":1,\"394\":1,\"400\":1,\"424\":1,\"439\":2,\"445\":2,\"452\":2,\"457\":2,\"462\":2,\"478\":2,\"527\":2,\"533\":2,\"539\":2,\"552\":2,\"556\":2,\"561\":2,\"605\":2,\"724\":2}}],[\"选主分支\",{\"1\":{\"50\":1}}],[\"选择合适的路由和交换节点\",{\"1\":{\"683\":1}}],[\"选择使用rpc的最主要原因\",{\"1\":{\"655\":1}}],[\"选择满足该项目依赖项的所有硬要求的每个项目的最高版本\",{\"1\":{\"143\":1}}],[\"选择器\",{\"1\":{\"64\":1}}],[\"选择\",{\"1\":{\"50\":2}}],[\"分页是一种将虚拟内存和物理内存分成固定大小的单元\",{\"1\":{\"734\":1}}],[\"分页系统的任务就是将虚拟页映射到物理页框\",{\"1\":{\"734\":1}}],[\"分页系统\",{\"1\":{\"734\":1}}],[\"分页与分段\",{\"1\":{\"734\":1}}],[\"分页导航\",{\"0\":{\"96\":1}}],[\"分片丢失后\",{\"1\":{\"729\":1}}],[\"分片丢失\",{\"1\":{\"729\":1}}],[\"分类\",{\"0\":{\"657\":1}}],[\"分类器区分从同一\",{\"1\":{\"142\":1}}],[\"分割url和传输数据\",{\"1\":{\"653\":1}}],[\"分为应用层\",{\"1\":{\"683\":1}}],[\"分为long\",{\"1\":{\"652\":1}}],[\"分为三个体系\",{\"1\":{\"232\":1,\"258\":1}}],[\"分层\",{\"1\":{\"651\":1}}],[\"分层存储的特征还使得镜像的复用\",{\"1\":{\"386\":1}}],[\"分别属于内核实现的传输层\",{\"1\":{\"651\":1}}],[\"分别代表乘\",{\"1\":{\"586\":1}}],[\"分别显示cpu\",{\"1\":{\"567\":1}}],[\"分别是\",{\"1\":{\"178\":1}}],[\"分布式版本控制系统的优势不单是不必联网这么简单\",{\"1\":{\"417\":1}}],[\"分布式版本控制系统可以不用联网就可以工作\",{\"1\":{\"417\":1}}],[\"分布式版本控制系统\",{\"0\":{\"417\":1}}],[\"分布式任务队列等等\",{\"1\":{\"263\":1}}],[\"分发镜像的服务\",{\"1\":{\"388\":1}}],[\"分享\",{\"1\":{\"382\":1}}],[\"分批执行\",{\"1\":{\"239\":1}}],[\"分配给各个任务\",{\"1\":{\"198\":1}}],[\"分配后的容量为\",{\"1\":{\"181\":1}}],[\"分析代码质量的\",{\"1\":{\"150\":1}}],[\"分支预测\",{\"1\":{\"735\":1}}],[\"分支和函数调用等\",{\"1\":{\"735\":1}}],[\"分支是用来将特性开发绝缘开来的\",{\"1\":{\"430\":1}}],[\"分支\",{\"0\":{\"430\":1},\"1\":{\"50\":2,\"238\":1}}],[\"分成了\",{\"1\":{\"16\":1}}],[\"目的是为了验证tcp首部和数据在发送过程中没有任何改动\",{\"1\":{\"689\":1}}],[\"目的是为了协商连接id\",{\"1\":{\"652\":1}}],[\"目的端口\",{\"1\":{\"687\":1}}],[\"目的收到这个数据帧后\",{\"1\":{\"673\":1}}],[\"目的地址是ip层传过来的mac地址\",{\"1\":{\"673\":1}}],[\"目标主机收到后\",{\"1\":{\"724\":2}}],[\"目标绑定到\",{\"1\":{\"156\":1}}],[\"目标名\",{\"1\":{\"153\":1}}],[\"目标的通用写法如下\",{\"1\":{\"152\":1}}],[\"目标\",{\"1\":{\"146\":1,\"153\":1}}],[\"目前可以使用的有官方和社区制作的\",{\"1\":{\"90\":1}}],[\"目前已经有的模块是烂笔头\",{\"1\":{\"3\":1}}],[\"目录里同时创建一个以服务接口命名的文件\",{\"1\":{\"254\":1}}],[\"目录下的方式\",{\"1\":{\"50\":1}}],[\"目录\",{\"1\":{\"50\":1,\"78\":1}}],[\"上下文\",{\"1\":{\"672\":1}}],[\"上下文切换更频繁\",{\"1\":{\"198\":1}}],[\"上下文切换\",{\"0\":{\"198\":1},\"1\":{\"222\":1}}],[\"上创建的一个仓库关联可以这样git\",{\"1\":{\"426\":1}}],[\"上创建的仓库名字是叫\",{\"1\":{\"50\":1}}],[\"上来非常浪费时间\",{\"1\":{\"241\":1}}],[\"上会被加上\",{\"1\":{\"219\":1}}],[\"上层应用会不断的进行重试\",{\"1\":{\"214\":1}}],[\"上面2个值越大\",{\"1\":{\"479\":1,\"528\":1}}],[\"上面两条命令的合写\",{\"1\":{\"430\":1}}],[\"上面涉及到了一些\",{\"1\":{\"389\":1}}],[\"上面显示的键函数模式非常常见\",{\"1\":{\"366\":1}}],[\"上面三种情况都会发生线程切换\",{\"1\":{\"198\":1}}],[\"上面的式子不就是\",{\"1\":{\"189\":1}}],[\"上面代码可以看到\",{\"1\":{\"178\":1}}],[\"上表中\",{\"1\":{\"155\":1}}],[\"上\",{\"1\":{\"50\":1,\"64\":1}}],[\"我后面会详细介绍这两种方式的差别\",{\"1\":{\"420\":1}}],[\"我觉得容器就是一个存放东西的地方\",{\"1\":{\"379\":1}}],[\"我们应该检查原因\",{\"1\":{\"479\":1,\"528\":1}}],[\"我们通常在开发新功能\",{\"1\":{\"430\":1}}],[\"我们只需要将这些原文件和这些增加进行相加就行了\",{\"1\":{\"420\":1}}],[\"我们只需要在\",{\"1\":{\"254\":1}}],[\"我们怎样才能得到一个文件的最终版本呢\",{\"1\":{\"420\":1}}],[\"我们需要首先通过\",{\"1\":{\"395\":1}}],[\"我们也常常将\",{\"1\":{\"390\":1}}],[\"我们再来谈谈\",{\"1\":{\"390\":1}}],[\"我们还可以通过\",{\"1\":{\"388\":1}}],[\"我们就需要一个集中的存储\",{\"1\":{\"388\":1}}],[\"我们就称之为仓库\",{\"1\":{\"157\":1}}],[\"我们知道了这么多\",{\"1\":{\"380\":1}}],[\"我们知道位运算的速度远远快于整除运算\",{\"1\":{\"181\":1}}],[\"我们不得不将其与虚拟机做一个比较\",{\"1\":{\"380\":1}}],[\"我们现在所说的容器存放的东西可能更偏向于应用比如网站\",{\"1\":{\"379\":1}}],[\"我们把它从empty\",{\"1\":{\"181\":1}}],[\"我们可以通过<仓库名>\",{\"1\":{\"388\":1}}],[\"我们可以这样做\",{\"1\":{\"370\":1}}],[\"我们可以在不同的线程中运行它从而不会阻塞事件循环\",{\"1\":{\"277\":1}}],[\"我们可以把插件理解为一个类\",{\"1\":{\"151\":1}}],[\"我们可以直接把文档网站部署到\",{\"1\":{\"50\":1}}],[\"我们建议使用\",{\"1\":{\"97\":1}}],[\"我们从侧边栏查找第一个路径\",{\"1\":{\"93\":1}}],[\"我的文档网站\",{\"1\":{\"67\":1}}],[\"我下不下来不清楚还会不会\",{\"1\":{\"9\":1}}],[\"个字节\",{\"1\":{\"724\":2}}],[\"个数据包被收到了\",{\"1\":{\"698\":1}}],[\"个性化设置\",{\"1\":{\"675\":1}}],[\"个最小的元素\",{\"1\":{\"351\":1}}],[\"个最大的元素\",{\"1\":{\"351\":1}}],[\"个包装类的范围都是\",{\"1\":{\"245\":1}}],[\"个元素\",{\"0\":{\"350\":1},\"1\":{\"182\":1,\"350\":1}}],[\"个\",{\"1\":{\"177\":1,\"651\":1}}],[\"个类型\",{\"1\":{\"169\":1}}],[\"个阶段中\",{\"1\":{\"165\":1}}],[\"个阶段\",{\"1\":{\"165\":1,\"166\":1,\"167\":1}}],[\"个文件\",{\"1\":{\"48\":1}}],[\"个部分\",{\"1\":{\"16\":1}}],[\"新连接建立后\",{\"1\":{\"722\":1}}],[\"新的日志行将自动显示在终端上\",{\"1\":{\"749\":1}}],[\"新的二进制帧格式\",{\"1\":{\"647\":1}}],[\"新的容量\",{\"1\":{\"189\":1}}],[\"新的容量是通过\",{\"1\":{\"181\":1}}],[\"新扩容阈值为\",{\"1\":{\"189\":1}}],[\"新容量为旧容量的两倍\",{\"1\":{\"189\":1}}],[\"新容量大小则为\",{\"1\":{\"181\":1}}],[\"新建一个项目\",{\"1\":{\"48\":1}}],[\"新功能版本发布后\",{\"1\":{\"8\":1}}],[\"兼容\",{\"1\":{\"45\":1,\"103\":1}}],[\"支持管道\",{\"1\":{\"646\":1}}],[\"支持通配符\",{\"1\":{\"424\":1}}],[\"支持的库有限制\",{\"1\":{\"320\":1}}],[\"支持的语法\",{\"1\":{\"143\":1}}],[\"支持从两端插入和删除元素\",{\"1\":{\"182\":1}}],[\"支持从三个地方读取文件\",{\"1\":{\"50\":1}}],[\"支持添加\",{\"1\":{\"181\":1,\"182\":1}}],[\"支持图片和颜色\",{\"1\":{\"61\":1}}],[\"支持服务器渲染\",{\"1\":{\"45\":1}}],[\"支持\",{\"1\":{\"45\":1,\"624\":1}}],[\"支持路线图\",{\"1\":{\"8\":1}}],[\"丰富的\",{\"1\":{\"45\":1}}],[\"提交的标题行描述应该尽量的清晰和尽量的一句话概括\",{\"1\":{\"425\":1}}],[\"提交消息如下\",{\"1\":{\"425\":1}}],[\"提交消息\",{\"0\":{\"425\":1}}],[\"提交更新\",{\"1\":{\"421\":1,\"424\":1}}],[\"提出更改\",{\"1\":{\"424\":1}}],[\"提高cpu性能和效率\",{\"1\":{\"740\":1}}],[\"提高处理器的性能\",{\"1\":{\"739\":1}}],[\"提高系统性能\",{\"1\":{\"736\":1}}],[\"提高了开发团队的生产力\",{\"1\":{\"399\":1}}],[\"提高程序的性能等都可以使用\",{\"1\":{\"241\":1}}],[\"提升性能\",{\"1\":{\"331\":1}}],[\"提供更大的数据和指令缓存空间\",{\"1\":{\"740\":1}}],[\"提供的\",{\"1\":{\"382\":1}}],[\"提供的所有现成的\",{\"1\":{\"216\":1}}],[\"提供一组\",{\"1\":{\"263\":1}}],[\"提供了更丰富的视图和更多的交互功能\",{\"1\":{\"748\":1}}],[\"提供了便利功能\",{\"1\":{\"366\":1}}],[\"提供了三种主要机制\",{\"1\":{\"265\":1}}],[\"提供了一个安全机制以防恶意代码的攻击\",{\"1\":{\"233\":1,\"259\":1}}],[\"提供了如下\",{\"1\":{\"150\":1}}],[\"提供内存屏障功能\",{\"1\":{\"208\":1}}],[\"提供要作为\",{\"1\":{\"105\":1}}],[\"提供文字统计的插件\",{\"1\":{\"95\":1}}],[\"提供配置语言列表的可能性\",{\"1\":{\"85\":1}}],[\"提供多套主题\",{\"1\":{\"45\":1}}],[\"提示当前线程调度器尽量让出当前线程对\",{\"1\":{\"202\":1}}],[\"提示\",{\"1\":{\"14\":1,\"78\":1,\"90\":1,\"93\":1,\"97\":1,\"143\":1,\"155\":1,\"156\":1,\"177\":1,\"181\":1,\"182\":1,\"187\":1,\"190\":1,\"630\":1,\"642\":1,\"645\":1,\"673\":1,\"701\":1,\"718\":1}}],[\"智能的全文搜索\",{\"1\":{\"45\":1}}],[\"+x\",{\"1\":{\"571\":1,\"580\":1}}],[\"+available\",{\"1\":{\"469\":1,\"519\":1}}],[\"+c\",{\"1\":{\"353\":2}}],[\"+=\",{\"1\":{\"296\":1,\"311\":1,\"316\":1,\"348\":1,\"353\":1}}],[\"+1\",{\"1\":{\"189\":2}}],[\"++\",{\"1\":{\"219\":2}}],[\"++j\",{\"1\":{\"189\":1}}],[\"++size\",{\"1\":{\"187\":1,\"189\":1}}],[\"++modcount\",{\"1\":{\"187\":1}}],[\"++bincount\",{\"1\":{\"187\":1}}],[\"+\",{\"1\":{\"41\":5,\"101\":3,\"118\":1,\"125\":1,\"181\":4,\"189\":8,\"193\":5,\"221\":1,\"272\":2,\"273\":1,\"311\":1,\"342\":1,\"353\":2,\"357\":3,\"506\":1,\"586\":1,\"587\":1,\"631\":1,\"651\":1,\"698\":1,\"729\":2}}],[\"三种状态\",{\"1\":{\"741\":1}}],[\"三种方式\",{\"0\":{\"318\":1}}],[\"三次握手的过程即是通信双方相互告知序列号起始值\",{\"1\":{\"704\":1}}],[\"三次握手和四次挥手得以实现\",{\"1\":{\"692\":1}}],[\"三次握手建立连接\",{\"1\":{\"635\":1}}],[\"三个数值分别为最近1分钟\",{\"1\":{\"440\":1,\"534\":1}}],[\"三个阶段都会执行\",{\"1\":{\"165\":1}}],[\"三级缓存\",{\"1\":{\"740\":1}}],[\"三级\",{\"1\":{\"170\":1}}],[\"三套生命周期本身是相互独立的\",{\"1\":{\"164\":1}}],[\"三\",{\"0\":{\"41\":1,\"122\":1}}],[\"指示接收方在接收到该报文段以后\",{\"1\":{\"687\":1}}],[\"指示节点在独占模式下等待的标记\",{\"1\":{\"226\":1}}],[\"指示节点在共享模式下等待的标记\",{\"1\":{\"226\":1}}],[\"指下一次期望收到的数据的序列号\",{\"1\":{\"687\":1}}],[\"指明接收方计算机上的应用程序接口\",{\"1\":{\"687\":1}}],[\"指明后续要跳转的\",{\"1\":{\"642\":1}}],[\"指攻击者与通讯的两端分别创建独立的联系\",{\"1\":{\"664\":1}}],[\"指xss攻击代码存储在网站数据库\",{\"1\":{\"657\":1}}],[\"指的是浏览器不能执行其他网站的脚本\",{\"1\":{\"680\":1}}],[\"指的是创建该\",{\"1\":{\"631\":1}}],[\"指的是在创建\",{\"1\":{\"631\":2}}],[\"指一个事务执行过程中看到的数据\",{\"1\":{\"629\":1}}],[\"指一个事务提交之后\",{\"1\":{\"629\":1}}],[\"指一个事务还没提交时\",{\"1\":{\"629\":1}}],[\"指针的内存对齐等\",{\"1\":{\"250\":1}}],[\"指令类型\",{\"1\":{\"735\":1}}],[\"指令周期\",{\"1\":{\"735\":1}}],[\"指令主要用于多cpu环境下\",{\"1\":{\"444\":1,\"538\":1}}],[\"指令来实现原子性操作的\",{\"1\":{\"221\":1}}],[\"指令来释放所持有的\",{\"1\":{\"219\":1}}],[\"指令获取到当前对象的\",{\"1\":{\"219\":1}}],[\"指令不是一种内存屏障\",{\"1\":{\"211\":1}}],[\"指令示例\",{\"1\":{\"211\":1}}],[\"指令重排序\",{\"0\":{\"210\":1},\"1\":{\"210\":1}}],[\"指令重排序与内存屏障\",{\"0\":{\"209\":1}}],[\"指令的解释\",{\"1\":{\"208\":1}}],[\"指向每一个旧版本记录\",{\"1\":{\"631\":1}}],[\"指向旧的头结点\",{\"1\":{\"190\":1}}],[\"指向的前一个节点\",{\"1\":{\"182\":1}}],[\"指向的下一个节点\",{\"1\":{\"182\":1}}],[\"指向的是\",{\"1\":{\"11\":1}}],[\"指定读取值时等待的时间\",{\"1\":{\"605\":1}}],[\"指定读取值时的提示符\",{\"1\":{\"605\":1}}],[\"指定文件系统上的文件\",{\"1\":{\"452\":1,\"552\":1}}],[\"指定cpu编号\",{\"1\":{\"445\":1,\"539\":1}}],[\"指定进程\",{\"1\":{\"439\":1,\"533\":1}}],[\"指定用户名\",{\"1\":{\"439\":1,\"533\":1}}],[\"指定要停止和移除的特定服务\",{\"1\":{\"403\":1}}],[\"指定要启动的服务名称\",{\"1\":{\"402\":1}}],[\"指定构建镜像的\",{\"1\":{\"400\":1}}],[\"指定为只读\",{\"1\":{\"397\":1}}],[\"指定带有单个参数的函数\",{\"1\":{\"363\":1}}],[\"指定此函数应在何时返回\",{\"1\":{\"276\":1}}],[\"指定的对象也会被取消\",{\"1\":{\"275\":1}}],[\"指定的秒数\",{\"1\":{\"272\":1}}],[\"指定\",{\"1\":{\"275\":1,\"400\":1}}],[\"指定位置插入\",{\"1\":{\"182\":1}}],[\"指定其默认激活\",{\"1\":{\"171\":1}}],[\"指定本地仓库地址\",{\"1\":{\"159\":1}}],[\"指定mapper映射文件的实际存储位置\",{\"1\":{\"40\":1}}],[\"指定mybatis映射文件的具体位置\",{\"1\":{\"40\":1}}],[\"rpc其实比http出现的要早\",{\"1\":{\"655\":1}}],[\"rpc因为定制化程度更高\",{\"1\":{\"655\":1}}],[\"rpc协议也是通过建立tcp长链接进行数据交互\",{\"1\":{\"655\":1}}],[\"rpc一般会有专门的中间服务去保存服务名和ip信息\",{\"1\":{\"655\":1}}],[\"rpc是远程过程调用\",{\"1\":{\"655\":1}}],[\"rfc793指出msl为2分钟\",{\"1\":{\"711\":1}}],[\"rfc规范并没有规定get请求不能带\",{\"1\":{\"654\":1}}],[\"rfc告诉我们\",{\"1\":{\"645\":1}}],[\"rtt\",{\"1\":{\"648\":1,\"651\":2,\"695\":1}}],[\"rxkb\",{\"1\":{\"497\":1,\"547\":1}}],[\"rxpck\",{\"1\":{\"497\":1,\"547\":1}}],[\"rst\",{\"1\":{\"687\":1}}],[\"rsect\",{\"1\":{\"458\":1,\"557\":1}}],[\"rss\",{\"1\":{\"102\":1,\"506\":1}}],[\"rkb\",{\"1\":{\"458\":1,\"557\":1}}],[\"rm\",{\"1\":{\"395\":1,\"397\":1,\"405\":1,\"424\":2,\"427\":1}}],[\"rmi\",{\"1\":{\"233\":1,\"259\":1,\"395\":3}}],[\"rq\",{\"1\":{\"357\":2}}],[\"r\",{\"1\":{\"278\":2,\"285\":5,\"316\":5,\"324\":2,\"353\":1,\"354\":2,\"458\":1,\"463\":1,\"479\":1,\"486\":1,\"506\":1,\"528\":1,\"544\":1,\"557\":1,\"562\":1}}],[\"rightmost\",{\"1\":{\"312\":2}}],[\"right\",{\"1\":{\"187\":1,\"310\":6,\"312\":2,\"619\":1}}],[\"ram\",{\"1\":{\"731\":1,\"739\":1}}],[\"raise\",{\"1\":{\"312\":5}}],[\"raised\",{\"1\":{\"278\":1}}],[\"randal\",{\"1\":{\"369\":1}}],[\"randomizedqueue\",{\"0\":{\"354\":1},\"1\":{\"354\":1}}],[\"random\",{\"1\":{\"296\":3,\"351\":1,\"354\":4,\"637\":1,\"638\":1,\"736\":1}}],[\"randomaccess\",{\"1\":{\"181\":2,\"182\":2,\"183\":1}}],[\"range参数指定范围\",{\"1\":{\"720\":1}}],[\"range\",{\"1\":{\"271\":1,\"273\":1,\"296\":2,\"311\":4,\"316\":1,\"351\":1,\"352\":1}}],[\"rawvalue\",{\"1\":{\"327\":2}}],[\"rawtypes\",{\"1\":{\"189\":1}}],[\"raw\",{\"1\":{\"71\":1,\"82\":1}}],[\"rgb\",{\"1\":{\"95\":1}}],[\"runoob\",{\"1\":{\"343\":2}}],[\"running\",{\"1\":{\"271\":1,\"272\":1,\"279\":2,\"327\":3,\"440\":1,\"507\":3,\"534\":1}}],[\"runnable\",{\"1\":{\"200\":2,\"201\":1,\"202\":2,\"233\":3,\"259\":3}}],[\"run\",{\"0\":{\"203\":1,\"390\":1},\"1\":{\"200\":1,\"202\":3,\"203\":2,\"233\":3,\"259\":3,\"265\":3,\"267\":2,\"268\":2,\"269\":1,\"270\":2,\"272\":1,\"273\":1,\"275\":1,\"277\":1,\"278\":2,\"285\":2,\"288\":1,\"296\":1,\"298\":1,\"300\":2,\"306\":1,\"327\":2,\"334\":2,\"335\":1,\"387\":1,\"389\":1,\"390\":4,\"397\":1,\"400\":5,\"507\":1}}],[\"runtimewarning\",{\"1\":{\"306\":2}}],[\"runtimeerror\",{\"1\":{\"271\":1,\"287\":1}}],[\"runtime\",{\"1\":{\"8\":1,\"17\":1,\"142\":1,\"237\":2}}],[\"ru\",{\"1\":{\"93\":5}}],[\"reuse调用\",{\"1\":{\"721\":1}}],[\"reuse和tcp\",{\"1\":{\"721\":1}}],[\"referer验证\",{\"1\":{\"662\":1}}],[\"references\",{\"1\":{\"271\":1}}],[\"reference\",{\"1\":{\"244\":2,\"246\":1,\"267\":1,\"271\":2,\"287\":1,\"737\":1}}],[\"refresh\",{\"1\":{\"475\":1}}],[\"rename\",{\"1\":{\"427\":1}}],[\"render\",{\"1\":{\"101\":1}}],[\"renderer\",{\"1\":{\"100\":3,\"101\":1}}],[\"remote\",{\"1\":{\"426\":2,\"427\":2}}],[\"remove等\",{\"1\":{\"193\":1}}],[\"removeall\",{\"1\":{\"178\":1}}],[\"remove\",{\"1\":{\"178\":4,\"179\":1,\"271\":1,\"341\":1,\"345\":1,\"349\":1,\"353\":1,\"354\":2}}],[\"removed\",{\"1\":{\"41\":4}}],[\"real\",{\"1\":{\"360\":1}}],[\"readable\",{\"1\":{\"454\":1,\"475\":1}}],[\"readonly\",{\"1\":{\"397\":1,\"574\":1}}],[\"reader\",{\"1\":{\"285\":4}}],[\"read\",{\"1\":{\"206\":1,\"285\":2,\"605\":1,\"606\":2,\"613\":2,\"629\":3,\"631\":10,\"633\":1}}],[\"readme\",{\"1\":{\"48\":2,\"51\":4,\"62\":2,\"70\":2,\"71\":2,\"78\":3,\"93\":2,\"424\":6}}],[\"registry\",{\"1\":{\"388\":13,\"389\":3,\"393\":2,\"396\":1}}],[\"register\",{\"1\":{\"237\":4,\"238\":1}}],[\"regular\",{\"1\":{\"353\":1}}],[\"reverse=true\",{\"1\":{\"367\":1,\"368\":1}}],[\"reverse=false\",{\"1\":{\"341\":1,\"351\":1,\"363\":1}}],[\"reverse\",{\"1\":{\"341\":1,\"345\":1,\"363\":1,\"370\":2}}],[\"recycle和tcp\",{\"1\":{\"721\":1}}],[\"recv\",{\"1\":{\"717\":1}}],[\"recv半开连接状态\",{\"1\":{\"716\":1}}],[\"recv状态\",{\"1\":{\"699\":1}}],[\"recreate\",{\"1\":{\"402\":1}}],[\"recipes\",{\"0\":{\"346\":1}}],[\"received\",{\"1\":{\"285\":2}}],[\"records\",{\"1\":{\"39\":1,\"115\":1}}],[\"requests\",{\"1\":{\"320\":1,\"324\":1,\"334\":1}}],[\"requested\",{\"1\":{\"239\":1}}],[\"requirenonnull\",{\"1\":{\"178\":1}}],[\"reentrantreadwritelock\",{\"1\":{\"227\":1}}],[\"reentrantlock\",{\"1\":{\"217\":1,\"226\":1,\"227\":1}}],[\"reentrant\",{\"1\":{\"216\":1}}],[\"redo\",{\"1\":{\"622\":6,\"627\":1}}],[\"redis\",{\"1\":{\"316\":5,\"492\":1}}],[\"red\",{\"1\":{\"187\":3,\"353\":1}}],[\"repeatable\",{\"1\":{\"629\":1}}],[\"repr\",{\"1\":{\"360\":1}}],[\"replaced\",{\"1\":{\"277\":1}}],[\"replacementtreenode\",{\"1\":{\"187\":1}}],[\"replaceall\",{\"1\":{\"179\":1}}],[\"reporting\",{\"1\":{\"146\":1,\"150\":1,\"170\":1}}],[\"repositories\",{\"1\":{\"146\":1,\"170\":2}}],[\"repository<\",{\"1\":{\"159\":1}}],[\"repositorylayout>\",{\"1\":{\"156\":1}}],[\"repository\",{\"0\":{\"388\":1,\"389\":1},\"1\":{\"50\":2,\"118\":2,\"140\":2,\"158\":1,\"159\":2,\"385\":1,\"388\":1,\"395\":2}}],[\"repo\",{\"0\":{\"68\":1},\"1\":{\"69\":2,\"159\":1}}],[\"relation\",{\"1\":{\"388\":1}}],[\"relativepath>\",{\"1\":{\"149\":1}}],[\"releaseshared\",{\"1\":{\"230\":1}}],[\"release\",{\"1\":{\"230\":1,\"287\":2,\"336\":3}}],[\"release<\",{\"1\":{\"144\":2}}],[\"rel=\",{\"1\":{\"90\":10,\"101\":1}}],[\"returned\",{\"1\":{\"278\":1}}],[\"returns\",{\"1\":{\"269\":2}}],[\"return\",{\"1\":{\"100\":1,\"101\":2,\"118\":2,\"121\":2,\"124\":1,\"178\":4,\"181\":3,\"187\":5,\"189\":3,\"267\":1,\"268\":1,\"273\":5,\"276\":2,\"296\":1,\"311\":3,\"312\":5,\"347\":2,\"353\":2,\"354\":7,\"370\":9,\"612\":1}}],[\"restart\",{\"1\":{\"400\":2}}],[\"reset\",{\"1\":{\"353\":1,\"429\":2,\"621\":1}}],[\"resp\",{\"1\":{\"334\":2,\"335\":2}}],[\"res\",{\"1\":{\"274\":2}}],[\"resize\",{\"1\":{\"187\":5,\"189\":5}}],[\"result=3\",{\"1\":{\"278\":1}}],[\"result=none\",{\"1\":{\"272\":1}}],[\"result\",{\"1\":{\"272\":2,\"276\":1,\"278\":5,\"280\":2,\"325\":5,\"334\":2,\"335\":2}}],[\"results\",{\"1\":{\"93\":2,\"325\":1}}],[\"resulttype=\",{\"1\":{\"40\":2}}],[\"resources\",{\"1\":{\"41\":3,\"155\":5,\"166\":4,\"170\":1,\"171\":2}}],[\"resources目录下的内容会直接放入类路径\",{\"1\":{\"40\":1}}],[\"resource\",{\"1\":{\"41\":4,\"336\":2}}],[\"resource=\",{\"1\":{\"40\":1}}],[\"resource属性\",{\"1\":{\"40\":1}}],[\"roll\",{\"1\":{\"631\":1}}],[\"robin\",{\"0\":{\"349\":1}}],[\"roundrobin\",{\"1\":{\"349\":2}}],[\"round\",{\"0\":{\"349\":1}}],[\"rotate\",{\"1\":{\"345\":1,\"349\":1,\"350\":3}}],[\"root\",{\"1\":{\"40\":1,\"186\":1,\"386\":2,\"590\":2}}],[\"rodriguez\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"row\",{\"1\":{\"39\":1,\"41\":13,\"115\":1}}],[\"gui\",{\"1\":{\"731\":1}}],[\"guide\",{\"1\":{\"93\":2}}],[\"gpl\",{\"1\":{\"566\":1}}],[\"glances\",{\"0\":{\"566\":1},\"1\":{\"515\":2,\"566\":2}}],[\"global\",{\"0\":{\"322\":1},\"1\":{\"169\":1}}],[\"gb为单位显示内存\",{\"1\":{\"475\":1}}],[\"gb\",{\"1\":{\"475\":1}}],[\"gnu\",{\"1\":{\"454\":1,\"566\":1}}],[\"gigas\",{\"1\":{\"468\":1,\"518\":1}}],[\"gives\",{\"1\":{\"454\":1}}],[\"given\",{\"1\":{\"278\":1,\"454\":1}}],[\"gil\",{\"0\":{\"322\":1},\"1\":{\"320\":1,\"322\":4}}],[\"gitignore\",{\"1\":{\"424\":1}}],[\"git\",{\"0\":{\"418\":1,\"419\":1,\"420\":1,\"421\":1,\"422\":1,\"423\":1,\"425\":1,\"757\":1},\"1\":{\"417\":2,\"420\":8,\"421\":6,\"423\":6,\"424\":15,\"425\":3,\"426\":3,\"427\":2,\"428\":3,\"429\":5,\"430\":9,\"431\":9},\"2\":{\"433\":1}}],[\"git核心概念总结\",{\"0\":{\"411\":1}}],[\"githubusercontent\",{\"1\":{\"71\":1,\"82\":1}}],[\"github\",{\"1\":{\"44\":1,\"48\":1,\"50\":10,\"61\":3,\"68\":1,\"69\":3,\"71\":1,\"75\":3,\"139\":1,\"144\":2,\"146\":1,\"388\":1,\"399\":1,\"426\":2}}],[\"gitbook\",{\"1\":{\"44\":1}}],[\"gallahad\",{\"1\":{\"353\":1}}],[\"gather\",{\"1\":{\"269\":1,\"273\":9,\"277\":1,\"296\":1,\"300\":2}}],[\"garbage\",{\"1\":{\"243\":1}}],[\"gc4\",{\"1\":{\"239\":1}}],[\"gc\",{\"1\":{\"239\":6,\"240\":1,\"243\":1}}],[\"go\",{\"1\":{\"382\":1}}],[\"google\",{\"1\":{\"382\":1}}],[\"got\",{\"1\":{\"288\":1}}],[\"gosling\",{\"1\":{\"232\":1,\"258\":1}}],[\"goal\",{\"1\":{\"156\":1}}],[\"goals\",{\"1\":{\"156\":1}}],[\"goals>\",{\"1\":{\"156\":1}}],[\"goal>\",{\"1\":{\"156\":1}}],[\"gt\",{\"1\":{\"178\":3,\"186\":6,\"312\":1,\"370\":1,\"590\":1}}],[\"grep\",{\"1\":{\"492\":1,\"493\":1,\"494\":1,\"507\":1,\"511\":1,\"513\":1,\"515\":2,\"564\":1,\"745\":1,\"747\":1}}],[\"greater\",{\"1\":{\"312\":2}}],[\"groups\",{\"1\":{\"406\":2}}],[\"groupid<\",{\"1\":{\"156\":1}}],[\"groupid>\",{\"1\":{\"27\":5,\"30\":5,\"32\":2,\"35\":2,\"40\":12,\"117\":11,\"123\":1,\"137\":3,\"142\":1,\"144\":2,\"145\":2,\"146\":1,\"149\":3,\"156\":2}}],[\"groupid\",{\"1\":{\"20\":1,\"139\":3,\"140\":1,\"142\":2,\"144\":1,\"145\":1,\"146\":1}}],[\"grow\",{\"1\":{\"181\":7}}],[\"grade\",{\"1\":{\"366\":1,\"368\":3,\"369\":3}}],[\"gradle\",{\"0\":{\"130\":1}}],[\"graph\",{\"1\":{\"158\":1}}],[\"g\",{\"1\":{\"107\":1,\"237\":4,\"352\":1,\"468\":2,\"518\":2}}],[\"gh\",{\"1\":{\"50\":1}}],[\"ge\",{\"1\":{\"312\":1,\"370\":1,\"594\":1}}],[\"generatepom>\",{\"1\":{\"156\":1}}],[\"generate\",{\"0\":{\"107\":1},\"1\":{\"107\":1,\"166\":4,\"296\":1}}],[\"general\",{\"1\":{\"39\":3,\"115\":3}}],[\"get请求可以带body吗\",{\"0\":{\"654\":1}}],[\"get请求的长度受限于浏览器或服务器对url长度的限制\",{\"1\":{\"653\":1}}],[\"get请求的数据会附在url之后\",{\"1\":{\"653\":1}}],[\"get不会改变服务器上的资源\",{\"1\":{\"653\":1}}],[\"get是幂等的\",{\"1\":{\"653\":1}}],[\"get一般用来从服务器上获取资源\",{\"1\":{\"653\":1}}],[\"getlogger\",{\"1\":{\"357\":1}}],[\"getrandom\",{\"1\":{\"354\":1}}],[\"getresourceasstream\",{\"1\":{\"41\":2}}],[\"getsum\",{\"1\":{\"613\":3}}],[\"getsockname\",{\"1\":{\"285\":1}}],[\"getstate\",{\"1\":{\"202\":1}}],[\"getid\",{\"1\":{\"202\":1}}],[\"getpriority\",{\"1\":{\"202\":1}}],[\"getvalue\",{\"1\":{\"193\":1}}],[\"getkey\",{\"1\":{\"193\":1}}],[\"getname\",{\"1\":{\"187\":1,\"202\":1}}],[\"getconf\",{\"1\":{\"746\":1}}],[\"getcollegename\",{\"1\":{\"124\":1,\"125\":2,\"126\":1}}],[\"getcwd\",{\"1\":{\"357\":1}}],[\"getclass\",{\"1\":{\"187\":1}}],[\"get\",{\"1\":{\"61\":1,\"75\":1,\"93\":2,\"179\":1,\"193\":2,\"221\":1,\"271\":1,\"272\":1,\"279\":2,\"285\":1,\"293\":3,\"296\":2,\"324\":1,\"334\":4,\"335\":2,\"507\":1,\"654\":2}}],[\"getmapper\",{\"1\":{\"41\":5}}],[\"n2\",{\"1\":{\"613\":1}}],[\"n1\",{\"1\":{\"613\":1}}],[\"nmap\",{\"1\":{\"515\":2}}],[\"nmon\",{\"1\":{\"515\":2}}],[\"nmon等大多数是只能统计到per设备的读写情况\",{\"1\":{\"461\":1,\"560\":1}}],[\"ngrep\",{\"1\":{\"515\":2}}],[\"nginx\",{\"1\":{\"511\":1,\"681\":1}}],[\"nfsstat和ifstat这些命令的工具\",{\"1\":{\"515\":1,\"567\":1}}],[\"nk\",{\"1\":{\"512\":1}}],[\"nr\",{\"1\":{\"487\":1}}],[\"nruntime\",{\"1\":{\"237\":2}}],[\"ni\",{\"1\":{\"440\":1,\"506\":1,\"534\":1}}],[\"nio\",{\"1\":{\"239\":1}}],[\"n<次数>\",{\"1\":{\"439\":1,\"533\":1}}],[\"nsmallest\",{\"1\":{\"351\":1}}],[\"nstring\",{\"1\":{\"237\":2}}],[\"nlargest\",{\"1\":{\"351\":1}}],[\"nth\",{\"1\":{\"350\":1}}],[\"nterned\",{\"1\":{\"249\":1}}],[\"n=3\",{\"1\":{\"348\":1}}],[\"n=10\",{\"1\":{\"347\":1}}],[\"n=1\",{\"1\":{\"345\":1}}],[\"ndirect\",{\"1\":{\"237\":2}}],[\"nnative\",{\"1\":{\"237\":4}}],[\"nvm\",{\"1\":{\"237\":4}}],[\"n是数组长度\",{\"1\":{\"187\":1,\"188\":1}}],[\"n\",{\"0\":{\"350\":1},\"1\":{\"182\":2,\"183\":2,\"187\":8,\"188\":2,\"189\":17,\"202\":1,\"252\":3,\"327\":4,\"347\":3,\"348\":2,\"350\":5,\"351\":6,\"353\":3,\"462\":1,\"478\":1,\"506\":1,\"515\":1,\"527\":1,\"561\":1,\"586\":2,\"652\":1}}],[\"nprogram\",{\"1\":{\"237\":4}}],[\"npe\",{\"1\":{\"181\":1}}],[\"npm\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"90\":10,\"93\":6,\"94\":1,\"96\":1,\"97\":1,\"101\":2,\"102\":2}}],[\"num2\",{\"1\":{\"606\":1}}],[\"num1\",{\"1\":{\"606\":1}}],[\"numeric\",{\"1\":{\"370\":4}}],[\"nums\",{\"1\":{\"316\":4}}],[\"nums=16\",{\"1\":{\"316\":1}}],[\"num++\",{\"1\":{\"101\":1,\"218\":3}}],[\"num\",{\"1\":{\"101\":1,\"218\":2,\"462\":1,\"561\":1}}],[\"number\",{\"1\":{\"83\":1,\"106\":1,\"273\":4,\"294\":1,\"454\":1,\"652\":2,\"717\":1,\"734\":2}}],[\"null\",{\"1\":{\"39\":3,\"41\":1,\"111\":3,\"115\":3,\"181\":1,\"186\":9,\"187\":21,\"189\":16,\"190\":1,\"226\":1}}],[\"neumann\",{\"1\":{\"732\":1}}],[\"ne\",{\"1\":{\"370\":1}}],[\"negative\",{\"1\":{\"353\":1}}],[\"never\",{\"0\":{\"306\":1},\"1\":{\"306\":2}}],[\"nested\",{\"1\":{\"267\":4,\"268\":4}}],[\"needed\",{\"1\":{\"187\":1,\"327\":1}}],[\"nextwaiter\",{\"1\":{\"226\":1}}],[\"next\",{\"1\":{\"178\":1,\"179\":1,\"182\":4,\"187\":7,\"189\":9,\"190\":2,\"226\":2,\"349\":1,\"632\":4}}],[\"netstat命令一般用于检验本机各端口的网络连接情况\",{\"1\":{\"485\":1,\"543\":1}}],[\"netstat\",{\"0\":{\"484\":1,\"542\":1},\"1\":{\"486\":10,\"487\":7,\"489\":1,\"490\":1,\"491\":1,\"492\":1,\"493\":1,\"494\":1,\"515\":3,\"544\":9,\"567\":1,\"747\":1}}],[\"network\",{\"0\":{\"761\":1},\"1\":{\"400\":2,\"515\":1}}],[\"networks\",{\"1\":{\"400\":4}}],[\"netty\",{\"1\":{\"239\":1}}],[\"net\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"90\":10,\"93\":6,\"94\":1,\"96\":1,\"97\":1,\"101\":2,\"102\":2,\"105\":1,\"233\":1,\"259\":1,\"567\":1,\"720\":1}}],[\"newl\",{\"1\":{\"352\":5}}],[\"newvalue\",{\"1\":{\"221\":2}}],[\"newtab\",{\"1\":{\"189\":7}}],[\"newthr\",{\"1\":{\"189\":6}}],[\"newcap\",{\"1\":{\"189\":11}}],[\"newcapacity\",{\"1\":{\"181\":7}}],[\"newnode\",{\"1\":{\"187\":2}}],[\"new\",{\"1\":{\"41\":3,\"118\":1,\"121\":2,\"178\":1,\"189\":3,\"193\":1,\"200\":2,\"201\":1,\"203\":1,\"205\":2,\"226\":1,\"239\":2,\"353\":4}}],[\"native\",{\"1\":{\"238\":1,\"239\":9,\"240\":2}}],[\"navigableset\",{\"1\":{\"178\":2}}],[\"navigableset~e~\",{\"1\":{\"178\":1}}],[\"navigablemap\",{\"1\":{\"178\":1,\"186\":3}}],[\"navbar\",{\"1\":{\"58\":2,\"59\":4,\"80\":2}}],[\"nav>\",{\"1\":{\"57\":1}}],[\"name只能为字母数字组合\",{\"1\":{\"659\":1}}],[\"name>\",{\"1\":{\"137\":1,\"149\":1,\"159\":2,\"171\":2}}],[\"name\",{\"0\":{\"66\":1},\"1\":{\"41\":1,\"50\":2,\"67\":3,\"124\":1,\"244\":2,\"271\":2,\"273\":3,\"296\":2,\"357\":2,\"388\":1,\"400\":1,\"402\":1,\"403\":1,\"404\":1}}],[\"name=none\",{\"1\":{\"271\":1,\"280\":1}}],[\"name=usth\",{\"1\":{\"119\":1}}],[\"name=\",{\"1\":{\"40\":6}}],[\"namespaces\",{\"1\":{\"93\":1,\"406\":1}}],[\"namespace\",{\"1\":{\"93\":1,\"382\":1,\"406\":13,\"408\":1}}],[\"namespace=\",{\"1\":{\"40\":1}}],[\"names\",{\"1\":{\"39\":1,\"115\":1,\"244\":1,\"395\":1}}],[\"nonsignaled\",{\"1\":{\"336\":1}}],[\"none\",{\"1\":{\"271\":1,\"275\":2,\"279\":3,\"363\":1}}],[\"nowait\",{\"1\":{\"293\":2,\"296\":1}}],[\"now\",{\"1\":{\"267\":1,\"268\":1,\"272\":1,\"368\":1}}],[\"normalize\",{\"1\":{\"93\":2}}],[\"no\",{\"1\":{\"93\":2,\"94\":1,\"105\":1,\"106\":1}}],[\"node<k\",{\"1\":{\"187\":11,\"189\":8}}],[\"node<e>\",{\"1\":{\"182\":5}}],[\"node\",{\"1\":{\"182\":1,\"186\":1,\"189\":1,\"226\":14}}],[\"node~e~\",{\"1\":{\"178\":2}}],[\"nodejs\",{\"1\":{\"46\":1}}],[\"nodata\",{\"1\":{\"93\":3}}],[\"nojekyll\",{\"1\":{\"48\":2}}],[\"notes\",{\"0\":{\"754\":1}}],[\"note\",{\"1\":{\"277\":1}}],[\"nothing\",{\"1\":{\"267\":1}}],[\"notifyall\",{\"1\":{\"204\":1}}],[\"notify\",{\"1\":{\"204\":1,\"219\":2,\"296\":1}}],[\"notfoundpage\",{\"0\":{\"87\":1},\"1\":{\"88\":1,\"89\":3}}],[\"not\",{\"1\":{\"39\":3,\"111\":3,\"115\":3,\"181\":1,\"244\":1,\"267\":1,\"645\":1,\"752\":1}}],[\"=count\",{\"1\":{\"623\":1}}],[\"==\",{\"1\":{\"181\":1,\"187\":12,\"188\":1,\"189\":9,\"278\":1,\"311\":1,\"312\":1,\"316\":2,\"354\":2,\"370\":1}}],[\"====\",{\"1\":{\"296\":1}}],[\"==================\",{\"1\":{\"600\":2}}],[\"=====\",{\"1\":{\"205\":1}}],[\"===\",{\"1\":{\"101\":1}}],[\"==>\",{\"1\":{\"41\":16}}],[\"=>\",{\"1\":{\"51\":4,\"93\":4,\"667\":3}}],[\"=\",{\"1\":{\"39\":7,\"40\":3,\"41\":35,\"53\":1,\"62\":1,\"65\":1,\"67\":2,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"76\":3,\"78\":2,\"80\":1,\"82\":1,\"84\":1,\"86\":1,\"88\":1,\"89\":2,\"93\":3,\"95\":1,\"100\":2,\"101\":2,\"115\":7,\"118\":5,\"121\":3,\"124\":1,\"125\":3,\"126\":2,\"179\":2,\"181\":13,\"182\":3,\"187\":40,\"189\":50,\"193\":3,\"205\":2,\"211\":2,\"218\":2,\"219\":1,\"221\":2,\"223\":1,\"226\":6,\"265\":2,\"268\":1,\"271\":2,\"272\":2,\"273\":7,\"274\":2,\"276\":2,\"278\":3,\"285\":7,\"287\":2,\"288\":2,\"296\":8,\"306\":1,\"310\":1,\"311\":1,\"312\":8,\"316\":13,\"324\":2,\"325\":3,\"327\":5,\"334\":5,\"335\":4,\"336\":2,\"348\":3,\"349\":1,\"351\":2,\"352\":5,\"353\":10,\"354\":4,\"357\":7,\"360\":4,\"364\":1,\"365\":1,\"368\":1,\"369\":1,\"370\":2,\"468\":5,\"469\":1,\"518\":5,\"519\":1,\"590\":2,\"695\":2,\"697\":2,\"698\":1}}],[\"kb\",{\"1\":{\"451\":1,\"475\":2,\"551\":1}}],[\"kwargs\",{\"1\":{\"277\":2}}],[\"kwan\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"kilos\",{\"1\":{\"468\":1,\"518\":1}}],[\"killer\",{\"1\":{\"239\":5}}],[\"kill\",{\"1\":{\"239\":3,\"405\":1,\"745\":1,\"748\":1}}],[\"kit\",{\"1\":{\"7\":1}}],[\"keepalive是指建立tcp连接的两端一直没有数据交互达到触发\",{\"1\":{\"728\":1}}],[\"keepalive\",{\"0\":{\"728\":1},\"1\":{\"728\":2}}],[\"keep\",{\"1\":{\"645\":1,\"655\":1,\"728\":2}}],[\"keeping\",{\"1\":{\"271\":1,\"353\":1}}],[\"kernel\",{\"1\":{\"239\":2,\"515\":1,\"738\":1}}],[\"key是sql语句\",{\"1\":{\"621\":1}}],[\"keyword\",{\"1\":{\"353\":1}}],[\"key=cmp\",{\"1\":{\"370\":1}}],[\"key=caneatall\",{\"1\":{\"311\":1}}],[\"key=\",{\"1\":{\"370\":1}}],[\"key=attrgetter\",{\"1\":{\"366\":2,\"368\":2}}],[\"key=itemgetter\",{\"1\":{\"366\":2,\"367\":1}}],[\"key=lambda\",{\"1\":{\"365\":1}}],[\"key=str\",{\"1\":{\"363\":1,\"365\":1}}],[\"key=none\",{\"1\":{\"341\":1,\"351\":3,\"363\":1}}],[\"keyset\",{\"1\":{\"192\":2}}],[\"keyproperty=\",{\"1\":{\"40\":1}}],[\"key\",{\"0\":{\"311\":1,\"365\":1},\"1\":{\"39\":3,\"111\":1,\"115\":3,\"177\":1,\"186\":1,\"187\":26,\"189\":1,\"193\":2,\"311\":1,\"363\":3,\"368\":2,\"370\":3,\"632\":4,\"640\":1}}],[\"k\",{\"1\":{\"186\":6,\"187\":9,\"311\":3,\"316\":4,\"352\":1,\"370\":2,\"452\":1,\"457\":1,\"468\":2,\"515\":1,\"518\":2,\"552\":1,\"556\":1}}],[\"knowledge\",{\"0\":{\"759\":1},\"1\":{\"135\":1}}],[\"kqbmcokwxa\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"kuen\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"kasumi\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"会导致缓存一致性协议\",{\"1\":{\"743\":1}}],[\"会恢复应用储蓄的现场\",{\"1\":{\"738\":1}}],[\"会通过系统调用进入内核态\",{\"1\":{\"738\":1}}],[\"会报告该\",{\"1\":{\"728\":1}}],[\"会报错\",{\"1\":{\"160\":1}}],[\"会有一定的开销\",{\"1\":{\"724\":1}}],[\"会有一个队列保存这些数据包\",{\"1\":{\"717\":1}}],[\"会立该发送一个rst标志给对端\",{\"1\":{\"721\":1}}],[\"会触发超时重传\",{\"1\":{\"708\":1}}],[\"会判断乱序队列有没有数据\",{\"1\":{\"707\":1}}],[\"会发送确认报文\",{\"1\":{\"705\":1}}],[\"会发生丢包和超时重传\",{\"1\":{\"695\":1}}],[\"会发现好像刚刚的更改对于某些数据未起作用\",{\"1\":{\"628\":1}}],[\"会发现如下的字样\",{\"1\":{\"390\":1}}],[\"会发现第\",{\"1\":{\"205\":1}}],[\"会发现其中已经自动聚合了子工程\",{\"1\":{\"35\":1}}],[\"会调用socket函数建立tcp连接\",{\"1\":{\"672\":1}}],[\"会调用存储引擎的接口\",{\"1\":{\"622\":1}}],[\"会话层就是负责建立\",{\"1\":{\"683\":1}}],[\"会话层\",{\"1\":{\"683\":2}}],[\"会话状态管理\",{\"1\":{\"675\":1}}],[\"会话中包含了很多重要信息\",{\"1\":{\"664\":1}}],[\"会话劫持\",{\"1\":{\"664\":1}}],[\"会话秘钥\",{\"1\":{\"640\":1}}],[\"会提示你登录\",{\"1\":{\"661\":1}}],[\"会进行全表扫描\",{\"1\":{\"623\":1}}],[\"会进行线程的上下文切换\",{\"1\":{\"222\":1}}],[\"会先把cache写回内存\",{\"1\":{\"743\":1}}],[\"会先更新内存\",{\"1\":{\"622\":1}}],[\"会先尝试从\",{\"1\":{\"389\":1}}],[\"会写入\",{\"1\":{\"622\":1}}],[\"会看一下更新前的记录和更新后的记录是否一样\",{\"1\":{\"622\":1}}],[\"会看到由内核消耗的cpu时间会越大\",{\"1\":{\"479\":1,\"528\":1}}],[\"会在存储引擎层分别判断每个索引是否满足条件\",{\"1\":{\"621\":1}}],[\"会在更新前检查在读取至更新这段时间别人有没有修改过这个数据\",{\"1\":{\"214\":1}}],[\"会用一下几种颜色来代表状态\",{\"1\":{\"566\":1}}],[\"会重置定时器\",{\"1\":{\"708\":1}}],[\"会重置你的工作目录\",{\"1\":{\"430\":1}}],[\"会重新\",{\"1\":{\"187\":1}}],[\"会按提交时间列出所有的更新\",{\"1\":{\"428\":1}}],[\"会从\",{\"1\":{\"393\":1}}],[\"会读取\",{\"1\":{\"389\":1,\"394\":1}}],[\"会一层层构建\",{\"1\":{\"386\":1}}],[\"会挂载\",{\"1\":{\"386\":1}}],[\"会忽略数量为\",{\"1\":{\"353\":1}}],[\"会同时开始计算下一个循环的\",{\"1\":{\"333\":1}}],[\"会慢很多\",{\"1\":{\"322\":1}}],[\"会出现\",{\"1\":{\"244\":1}}],[\"会检查要分配的数据结构在系统中是否可寻址\",{\"1\":{\"239\":1}}],[\"会对记录加上读写锁\",{\"1\":{\"629\":1}}],[\"会对所有进程进行打分\",{\"1\":{\"239\":1}}],[\"会对机器指令重排序优化\",{\"1\":{\"210\":1}}],[\"会被当作正常数据而向上传输\",{\"1\":{\"719\":1}}],[\"会被保存到\",{\"1\":{\"622\":1}}],[\"会被传播\",{\"1\":{\"277\":1}}],[\"会被直接传给\",{\"1\":{\"277\":1}}],[\"会被自动释放掉\",{\"1\":{\"239\":1,\"240\":1}}],[\"会被作为网站的首页\",{\"1\":{\"70\":1}}],[\"会由用户态切换到内核态\",{\"1\":{\"222\":1}}],[\"会阻塞线程\",{\"1\":{\"222\":1}}],[\"会将\",{\"1\":{\"695\":1}}],[\"会将收到的http报文封装成http的request对象\",{\"1\":{\"672\":1}}],[\"会将星号参数转化为参数\",{\"1\":{\"623\":1}}],[\"会将当前处理缓存行的数据立即写回到系统内存\",{\"1\":{\"208\":1}}],[\"会将其渲染成下拉列表的样式\",{\"1\":{\"59\":1}}],[\"会存在数据覆盖\",{\"1\":{\"190\":1}}],[\"会再次执行\",{\"1\":{\"189\":1}}],[\"会执行一个\",{\"1\":{\"189\":1}}],[\"会激活\",{\"1\":{\"171\":1}}],[\"会去远程仓库找寻\",{\"1\":{\"160\":1}}],[\"会遵循\",{\"1\":{\"144\":1}}],[\"会自动添加\",{\"1\":{\"430\":1}}],[\"会自动释放当前线程占有的对象锁\",{\"1\":{\"204\":1}}],[\"会自动创建默认项目结构\",{\"1\":{\"136\":1}}],[\"会自动搜索当前路径下的\",{\"1\":{\"15\":1}}],[\"会回退成默认语言文件\",{\"1\":{\"85\":1}}],[\"会做为主页内容渲染\",{\"1\":{\"48\":1}}],[\"仅仅表示客户端不再发送数据了但是还能接收数据\",{\"1\":{\"706\":1}}],[\"仅显示块设备和所有被使用的其他分区的状态\",{\"1\":{\"457\":1,\"556\":1}}],[\"仅显示设备利用率\",{\"1\":{\"457\":1,\"556\":1}}],[\"仅显示cpu使用情况\",{\"1\":{\"457\":1,\"556\":1}}],[\"仅存在结点之间的关联关系\",{\"1\":{\"226\":1}}],[\"仅当依赖项范围为\",{\"1\":{\"142\":1}}],[\"仅当受到\",{\"1\":{\"8\":1}}],[\"仅适用于\",{\"1\":{\"93\":1}}],[\"仅限compile范围\",{\"1\":{\"32\":1}}],[\"所谓的粘包拆包就是tcp流的特性导致的\",{\"1\":{\"726\":1}}],[\"所谓的扰动函数就是\",{\"1\":{\"187\":1}}],[\"所进行的访问行动都是跨域的\",{\"1\":{\"680\":1}}],[\"所独有的\",{\"1\":{\"654\":1}}],[\"所使用的物理资源\",{\"1\":{\"406\":1}}],[\"所返回的每个协程可被等待以从剩余的可等待对象的可迭代对象中获得最早的下一个结果\",{\"1\":{\"276\":1}}],[\"所返回的对象\",{\"1\":{\"267\":1}}],[\"所指定的条件\",{\"1\":{\"276\":1}}],[\"所引发的首个异常会立即传播给等待\",{\"1\":{\"273\":1}}],[\"所包含的元素个数\",{\"1\":{\"181\":1}}],[\"所有报文头部都是经过认证的\",{\"1\":{\"648\":1}}],[\"所有索引有一个不成立就跳过\",{\"1\":{\"621\":1}}],[\"所有参数个数\",{\"1\":{\"579\":1}}],[\"所有文件\",{\"1\":{\"424\":1}}],[\"所有\",{\"1\":{\"370\":1,\"424\":1}}],[\"所有任务一起提交\",{\"1\":{\"325\":1}}],[\"所有等待事件被设置的任务将被立即唤醒\",{\"1\":{\"288\":1}}],[\"所有被提交\",{\"1\":{\"273\":1}}],[\"所有静态变量\",{\"1\":{\"244\":1}}],[\"所有父接口的列表\",{\"1\":{\"244\":1}}],[\"所有可用的虚拟内存已被耗尽\",{\"1\":{\"239\":1}}],[\"所有的无效连接均无法到达内部的服务器\",{\"1\":{\"717\":1}}],[\"所有的文件写入操作\",{\"1\":{\"387\":1}}],[\"所有的异步对象也需要使用\",{\"1\":{\"334\":1}}],[\"所有的\",{\"1\":{\"186\":1}}],[\"所有的转换工作都是在运行时\",{\"1\":{\"44\":1}}],[\"所有项目对象模型都继承自基本的\",{\"1\":{\"147\":1}}],[\"所选的依赖项类型\",{\"1\":{\"142\":1}}],[\"所需依赖会传递到当前工程\",{\"1\":{\"32\":1}}],[\"所以当cpu需要访问某个数据时\",{\"1\":{\"739\":1}}],[\"所以会触发超时重传\",{\"1\":{\"729\":1}}],[\"所以会调用\",{\"1\":{\"181\":1}}],[\"所以接收方不会响应\",{\"1\":{\"729\":1}}],[\"所以没法区分新旧连接\",{\"1\":{\"719\":1}}],[\"所以并发量大\",{\"1\":{\"713\":1}}],[\"所以每个操作完后都不断开\",{\"1\":{\"713\":1}}],[\"所以每次在拿数据的时候都会上锁\",{\"1\":{\"214\":1}}],[\"所以需要慢启动算法\",{\"1\":{\"695\":1}}],[\"所以需要额外的维护头结点的引用\",{\"1\":{\"190\":1}}],[\"所以tcp报头的长度是不确定的\",{\"1\":{\"687\":1}}],[\"所以也不太可能取代掉rpc\",{\"1\":{\"655\":1}}],[\"所以也有基于dns去做服务发现的组件\",{\"1\":{\"655\":1}}],[\"所以大部分公司内部都还在使用rpc\",{\"1\":{\"655\":1}}],[\"所以根据这个语义不需要用到\",{\"1\":{\"654\":1}}],[\"所以在一般情况下会返回一个定制的错误页面\",{\"1\":{\"642\":1}}],[\"所以就发生幻读\",{\"1\":{\"632\":2}}],[\"所以该版本的记录对当前事务不可见\",{\"1\":{\"631\":2}}],[\"所以该版本的记录对当前事务可见\",{\"1\":{\"631\":2}}],[\"所以count\",{\"1\":{\"623\":1}}],[\"所以char类型适合存储长度固定的数据\",{\"1\":{\"618\":1}}],[\"所以varchar类型适合存储长度不固定的数据\",{\"1\":{\"618\":1}}],[\"所以说\",{\"1\":{\"388\":1}}],[\"所以想要搞懂\",{\"1\":{\"376\":1}}],[\"所以代码去看\",{\"1\":{\"326\":1}}],[\"所以总等待时间可能超过\",{\"1\":{\"275\":1}}],[\"所以本地方法的运行不受\",{\"1\":{\"240\":1}}],[\"所以多核\",{\"1\":{\"198\":1}}],[\"所以此时会直接进行插入\",{\"1\":{\"191\":1}}],[\"所以遍历是按照插入的相反顺序进行的\",{\"1\":{\"190\":1}}],[\"所以插入速度快\",{\"1\":{\"190\":1}}],[\"所以\",{\"1\":{\"189\":1,\"198\":1,\"390\":1,\"624\":1,\"635\":1,\"652\":1}}],[\"所以初始化\",{\"1\":{\"189\":1}}],[\"所以这个散列值不能拿来直接用\",{\"1\":{\"188\":1}}],[\"所以这里可以以resources目录为基准\",{\"1\":{\"40\":1}}],[\"所以它的执行速度居中\",{\"1\":{\"624\":1}}],[\"所以它是线程私有的\",{\"1\":{\"239\":1}}],[\"所以它比\",{\"1\":{\"183\":1}}],[\"所以它适用于频繁的查找工作\",{\"1\":{\"181\":1}}],[\"所以时间复杂度为\",{\"1\":{\"183\":2}}],[\"所以不会上锁\",{\"1\":{\"214\":1}}],[\"所以不会执行\",{\"1\":{\"181\":1}}],[\"所以不能实现\",{\"1\":{\"182\":1}}],[\"所以我们常常讨论到安装\",{\"1\":{\"7\":1}}],[\"所以把自己在其他地方记录的知识都搬过来放到一起\",{\"1\":{\"2\":1}}],[\"同轴电缆\",{\"1\":{\"683\":1}}],[\"同\",{\"1\":{\"505\":1}}],[\"同样地\",{\"1\":{\"403\":1}}],[\"同步原语\",{\"1\":{\"735\":1}}],[\"同步原语被设计为与\",{\"1\":{\"286\":1}}],[\"同步双方初始序列号\",{\"0\":{\"704\":1}}],[\"同步\",{\"1\":{\"263\":1}}],[\"同步队列中\",{\"1\":{\"226\":1}}],[\"同步块时\",{\"1\":{\"219\":1}}],[\"同一域下的多个网站之间\",{\"1\":{\"93\":1}}],[\"同时搜索缓存的速度相对较慢\",{\"1\":{\"739\":1}}],[\"同时保活时间重置\",{\"1\":{\"728\":1}}],[\"同时连接进入\",{\"1\":{\"708\":1}}],[\"同时连接处于\",{\"1\":{\"708\":1}}],[\"同时会撤销tcb\",{\"1\":{\"705\":1}}],[\"同时自己也要初始化一个seq=y\",{\"1\":{\"699\":1}}],[\"同时返回给客户机\",{\"1\":{\"667\":1}}],[\"同时也不需要像http那样考虑各种浏览器行为\",{\"1\":{\"655\":1}}],[\"同时也提了一个\",{\"1\":{\"142\":1}}],[\"同时我们鼓励原始服务器尽可能提供确切的失效时间\",{\"1\":{\"645\":1}}],[\"同时标记为脏页\",{\"1\":{\"622\":1}}],[\"同时降低了应用程序的部署复杂度和管理成本\",{\"1\":{\"399\":1}}],[\"同时允许的任务数目要求不多\",{\"1\":{\"320\":1}}],[\"同时对一个共享变量\",{\"1\":{\"223\":1}}],[\"同时只能执行一项任务\",{\"1\":{\"198\":1}}],[\"同时\",{\"1\":{\"67\":1}}],[\"同时在父项目的pom\",{\"1\":{\"22\":1}}],[\"同上\",{\"1\":{\"31\":1,\"34\":1}}],[\"自创数据结构\",{\"1\":{\"354\":1}}],[\"自动计算对应的单位值\",{\"1\":{\"468\":1,\"518\":1}}],[\"自动装配\",{\"1\":{\"256\":1}}],[\"自动的强制类型转换\",{\"1\":{\"233\":1,\"259\":1}}],[\"自动传递\",{\"1\":{\"30\":2}}],[\"自旋时间过长会给\",{\"1\":{\"223\":1}}],[\"自旋\",{\"1\":{\"215\":1}}],[\"自旋锁\",{\"0\":{\"215\":1}}],[\"自然是要操作对象\",{\"1\":{\"204\":1}}],[\"自带的插件之外\",{\"1\":{\"150\":1}}],[\"自己接收消息的能力是正常的\",{\"1\":{\"700\":1}}],[\"自己的序列号是u+1\",{\"1\":{\"705\":1}}],[\"自己的\",{\"1\":{\"135\":1}}],[\"自己又有了一些理解\",{\"1\":{\"2\":1}}],[\"自定义本地仓库的名字\",{\"1\":{\"423\":1}}],[\"自定义绑定能够让\",{\"1\":{\"156\":1}}],[\"自定义绑定\",{\"0\":{\"156\":1}}],[\"自定义插件\",{\"0\":{\"99\":1},\"1\":{\"99\":1}}],[\"自定义导航栏\",{\"1\":{\"79\":1}}],[\"自定义背景\",{\"0\":{\"61\":1}}],[\"f选项使命令持续输出文件的新增内容\",{\"1\":{\"749\":1}}],[\"fdisk\",{\"1\":{\"515\":2}}],[\"f1\",{\"1\":{\"494\":1}}],[\"fec\",{\"1\":{\"648\":1}}],[\"feature\",{\"1\":{\"430\":2}}],[\"features=string\",{\"1\":{\"93\":1}}],[\"fetch\",{\"1\":{\"429\":1,\"735\":1}}],[\"f6509bac4980\",{\"1\":{\"395\":2}}],[\"fs\",{\"1\":{\"386\":1}}],[\"fh\",{\"1\":{\"357\":4}}],[\"freebsd\",{\"1\":{\"566\":1}}],[\"free指令会显示内存的使用情况\",{\"1\":{\"467\":1,\"517\":1}}],[\"free命令用于显示内存状态\",{\"1\":{\"467\":1,\"517\":1}}],[\"free\",{\"0\":{\"467\":1,\"517\":1},\"1\":{\"440\":2,\"454\":1,\"468\":1,\"469\":1,\"471\":1,\"473\":1,\"474\":1,\"475\":7,\"479\":2,\"515\":3,\"518\":1,\"519\":1,\"521\":1,\"523\":1,\"524\":1,\"528\":2,\"534\":2,\"748\":1}}],[\"frame有stream\",{\"1\":{\"652\":1}}],[\"frame\",{\"1\":{\"239\":1,\"652\":3,\"734\":1}}],[\"fromkeys\",{\"1\":{\"353\":1}}],[\"from\",{\"1\":{\"40\":3,\"41\":6,\"50\":1,\"118\":1,\"159\":1,\"179\":2,\"243\":1,\"271\":1,\"285\":1,\"316\":2,\"325\":2,\"327\":1,\"351\":2,\"353\":4,\"365\":2,\"366\":1}}],[\"flow\",{\"1\":{\"735\":1}}],[\"flowchart\",{\"1\":{\"237\":2,\"252\":1,\"253\":1}}],[\"float\",{\"1\":{\"189\":5,\"275\":1,\"276\":1,\"360\":1}}],[\"flag\",{\"1\":{\"205\":4,\"219\":1}}],[\"f\",{\"1\":{\"205\":5,\"237\":4,\"265\":4,\"273\":6,\"277\":4,\"278\":2,\"285\":5,\"296\":4,\"347\":2,\"349\":1,\"352\":1,\"394\":1,\"402\":2,\"403\":2,\"478\":1,\"505\":1,\"507\":2,\"513\":1,\"527\":1,\"564\":1,\"749\":1}}],[\"ftp\",{\"1\":{\"683\":1}}],[\"ft\",{\"1\":{\"189\":3}}],[\"f0f0f0\",{\"1\":{\"61\":1}}],[\"f0wfooyay2\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"found\",{\"1\":{\"752\":1}}],[\"four~~~five\",{\"1\":{\"237\":1}}],[\"four\",{\"1\":{\"237\":4}}],[\"foward\",{\"1\":{\"648\":1}}],[\"fontsize\",{\"1\":{\"95\":1}}],[\"folder\",{\"1\":{\"50\":1}}],[\"for>\",{\"1\":{\"659\":1}}],[\"form\",{\"1\":{\"454\":1}}],[\"formatter\",{\"1\":{\"357\":3}}],[\"format\",{\"1\":{\"39\":1,\"115\":1,\"507\":1}}],[\"force\",{\"1\":{\"402\":1}}],[\"forcefully\",{\"1\":{\"41\":4}}],[\"fork\",{\"1\":{\"388\":1}}],[\"forname\",{\"1\":{\"256\":1}}],[\"forest\",{\"1\":{\"513\":1,\"564\":1}}],[\"forever\",{\"1\":{\"271\":1,\"285\":1}}],[\"foreach方式遍历\",{\"1\":{\"192\":1}}],[\"foreach\",{\"1\":{\"178\":1,\"192\":2}}],[\"foreign\",{\"1\":{\"39\":2,\"115\":2}}],[\"for\",{\"1\":{\"39\":1,\"115\":1,\"149\":1,\"178\":1,\"179\":1,\"181\":1,\"187\":4,\"189\":1,\"193\":1,\"244\":1,\"271\":1,\"273\":1,\"275\":4,\"276\":1,\"278\":1,\"285\":1,\"286\":1,\"288\":2,\"292\":1,\"296\":15,\"300\":4,\"305\":1,\"311\":1,\"316\":4,\"324\":3,\"325\":4,\"327\":1,\"334\":2,\"335\":1,\"342\":1,\"348\":1,\"351\":1,\"352\":1,\"369\":2,\"507\":1,\"599\":2,\"600\":3,\"632\":3,\"659\":1}}],[\"fi\",{\"1\":{\"590\":4,\"593\":2,\"594\":1}}],[\"fields表\",{\"1\":{\"647\":1}}],[\"field\",{\"1\":{\"244\":1}}],[\"five\",{\"1\":{\"237\":4}}],[\"firstwaiter\",{\"1\":{\"226\":1}}],[\"first\",{\"1\":{\"226\":1,\"276\":2}}],[\"fifo\",{\"1\":{\"226\":1,\"293\":1,\"739\":1}}],[\"filters\",{\"1\":{\"170\":1}}],[\"filehandler\",{\"1\":{\"357\":1}}],[\"filename\",{\"1\":{\"347\":2,\"357\":1,\"424\":2,\"429\":2}}],[\"file>\",{\"1\":{\"156\":1,\"171\":1}}],[\"file<\",{\"1\":{\"156\":1}}],[\"file\",{\"1\":{\"156\":1,\"239\":1,\"277\":1,\"316\":7,\"347\":1,\"394\":1,\"454\":2}}],[\"filesystems\",{\"1\":{\"454\":3}}],[\"filesystem\",{\"1\":{\"454\":2}}],[\"files\",{\"1\":{\"12\":1,\"14\":2,\"17\":1,\"135\":1}}],[\"fin时\",{\"1\":{\"706\":1}}],[\"fin标识位置为1\",{\"1\":{\"705\":1}}],[\"finish标志\",{\"1\":{\"687\":1}}],[\"finished\",{\"1\":{\"41\":1,\"126\":2,\"265\":4,\"271\":1,\"277\":2,\"288\":1}}],[\"fin\",{\"0\":{\"707\":1},\"1\":{\"687\":1,\"706\":1,\"708\":5,\"722\":2}}],[\"find\",{\"1\":{\"312\":8,\"745\":1}}],[\"findall\",{\"1\":{\"118\":4,\"125\":1}}],[\"finally\",{\"1\":{\"287\":1,\"336\":1}}],[\"finalizer\",{\"1\":{\"239\":1}}],[\"final\",{\"1\":{\"181\":4,\"187\":8,\"189\":2,\"226\":7,\"246\":1}}],[\"finalname\",{\"1\":{\"170\":1}}],[\"factorial\",{\"1\":{\"273\":15}}],[\"factories\",{\"1\":{\"256\":1}}],[\"factor\",{\"1\":{\"189\":2}}],[\"factory\",{\"1\":{\"118\":3,\"121\":2,\"124\":1,\"125\":2}}],[\"family>\",{\"1\":{\"171\":1}}],[\"fallbacklanguages\",{\"0\":{\"85\":1},\"1\":{\"86\":1,\"89\":1}}],[\"false\",{\"1\":{\"41\":5,\"72\":1,\"74\":1,\"77\":1,\"79\":1,\"93\":1,\"101\":1,\"105\":8,\"106\":5,\"178\":1,\"187\":1,\"202\":1,\"205\":1,\"273\":2,\"288\":2,\"311\":1,\"327\":1,\"589\":1,\"743\":1}}],[\"fasterxml\",{\"1\":{\"27\":1,\"30\":1}}],[\"funname\",{\"1\":{\"612\":2}}],[\"functools\",{\"1\":{\"363\":1,\"370\":2}}],[\"function\",{\"1\":{\"100\":2,\"101\":1,\"269\":2,\"370\":2,\"612\":1,\"613\":1}}],[\"func\",{\"1\":{\"277\":4}}],[\"futures\",{\"0\":{\"269\":1},\"1\":{\"278\":2,\"325\":6}}],[\"future\",{\"1\":{\"266\":1,\"269\":8,\"273\":3,\"275\":1,\"276\":3,\"278\":6,\"280\":13,\"325\":6}}],[\"fully\",{\"1\":{\"244\":3,\"296\":1}}],[\"full\",{\"1\":{\"239\":1,\"293\":1,\"507\":2}}],[\"fu\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"知识点\",{\"1\":{\"27\":1,\"30\":1}}],[\"wchan\",{\"1\":{\"506\":1}}],[\"wsect\",{\"1\":{\"458\":1,\"557\":1}}],[\"wkb\",{\"1\":{\"458\":1,\"557\":1}}],[\"w\",{\"1\":{\"357\":1,\"458\":1,\"506\":1,\"557\":1}}],[\"won\",{\"1\":{\"267\":1}}],[\"working\",{\"1\":{\"421\":1}}],[\"workload\",{\"1\":{\"296\":1}}],[\"work\",{\"1\":{\"296\":2,\"336\":2}}],[\"workers\",{\"1\":{\"296\":1}}],[\"worker\",{\"1\":{\"296\":6,\"316\":1}}],[\"world\",{\"1\":{\"265\":7,\"285\":1,\"571\":2,\"584\":1,\"590\":1}}],[\"word\",{\"1\":{\"135\":1}}],[\"writer\",{\"1\":{\"285\":8}}],[\"write\",{\"1\":{\"206\":1,\"285\":2,\"735\":1}}],[\"wa的值高时\",{\"1\":{\"479\":1,\"528\":1}}],[\"wa\",{\"1\":{\"440\":1,\"479\":1,\"528\":1,\"534\":1}}],[\"wait的解决办法是\",{\"1\":{\"723\":1}}],[\"wait表示被动关闭\",{\"1\":{\"718\":1}}],[\"wait表示主动关闭\",{\"1\":{\"718\":1}}],[\"wait作用\",{\"0\":{\"718\":1}}],[\"wait状态过多如何解决\",{\"0\":{\"723\":1}}],[\"wait状态需要经过2msl\",{\"1\":{\"722\":1}}],[\"wait状态为什么需要经过2msl\",{\"0\":{\"722\":1}}],[\"wait状态后\",{\"1\":{\"721\":1}}],[\"wait状态的连接\",{\"1\":{\"721\":1}}],[\"wait状态之后\",{\"1\":{\"719\":1}}],[\"wait状态\",{\"0\":{\"707\":1},\"1\":{\"705\":1,\"707\":2,\"719\":2,\"721\":1,\"723\":1}}],[\"wait关闭等待持续的时间\",{\"1\":{\"705\":1}}],[\"wait关闭等待状态\",{\"1\":{\"705\":1}}],[\"waiter\",{\"1\":{\"288\":5}}],[\"waitstatus\",{\"1\":{\"226\":2}}],[\"waiting\",{\"1\":{\"201\":3,\"204\":3,\"205\":1,\"288\":1}}],[\"wait\",{\"0\":{\"204\":1,\"707\":1},\"1\":{\"198\":1,\"204\":7,\"219\":2,\"265\":1,\"268\":1,\"275\":3,\"276\":1,\"278\":1,\"286\":1,\"288\":6,\"292\":1,\"296\":2,\"299\":1,\"300\":3,\"305\":1,\"327\":1,\"334\":2,\"335\":1,\"336\":1,\"625\":1,\"705\":2,\"707\":1,\"708\":3,\"721\":3,\"722\":1}}],[\"was\",{\"1\":{\"189\":1,\"306\":1}}],[\"warning=70\",{\"1\":{\"566\":1}}],[\"warning\",{\"1\":{\"357\":2,\"566\":1}}],[\"war\",{\"1\":{\"155\":2,\"166\":1}}],[\"way\",{\"1\":{\"135\":3}}],[\"wanted\",{\"1\":{\"135\":1}}],[\"wan\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"weeks\",{\"1\":{\"395\":1}}],[\"we\",{\"1\":{\"135\":1,\"267\":1,\"296\":1}}],[\"were\",{\"1\":{\"135\":3}}],[\"web网站的http服务一般都用短链接\",{\"1\":{\"713\":1}}],[\"web\",{\"1\":{\"397\":1,\"676\":1,\"728\":2}}],[\"web<\",{\"1\":{\"149\":1}}],[\"website\",{\"1\":{\"93\":1}}],[\"web工程打包方式为war\",{\"1\":{\"32\":1,\"35\":1}}],[\"why\",{\"1\":{\"408\":1}}],[\"when\",{\"1\":{\"276\":2}}],[\"whether\",{\"1\":{\"244\":1}}],[\"where\",{\"1\":{\"40\":3,\"41\":6,\"624\":2,\"625\":1}}],[\"while\",{\"1\":{\"187\":1,\"189\":1,\"205\":1,\"215\":1,\"221\":1,\"272\":1,\"296\":1,\"327\":1,\"333\":1,\"349\":2,\"352\":1,\"602\":1,\"603\":1}}],[\"white233\",{\"1\":{\"61\":1}}],[\"whitechen233<\",{\"1\":{\"144\":2,\"146\":1}}],[\"whitechen233\",{\"1\":{\"61\":2,\"69\":4,\"71\":2,\"75\":2,\"139\":1}}],[\"what\",{\"1\":{\"135\":2,\"265\":2}}],[\"widely\",{\"1\":{\"388\":1}}],[\"wiki\",{\"1\":{\"348\":1}}],[\"wikipedia\",{\"1\":{\"348\":1}}],[\"will\",{\"1\":{\"267\":1,\"296\":1,\"353\":1}}],[\"with\",{\"1\":{\"41\":1,\"126\":2,\"135\":1,\"146\":1,\"268\":1,\"277\":1,\"278\":1,\"285\":1,\"287\":3,\"325\":2,\"334\":2,\"335\":3,\"336\":3,\"347\":1}}],[\"window\",{\"1\":{\"53\":1,\"62\":1,\"65\":1,\"67\":2,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"76\":3,\"78\":2,\"80\":1,\"82\":1,\"84\":1,\"86\":1,\"88\":1,\"89\":2,\"93\":3,\"95\":1,\"100\":2,\"101\":1}}],[\"windows\",{\"1\":{\"13\":1,\"14\":1,\"17\":1,\"378\":1,\"383\":1}}],[\"wing\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"win\",{\"1\":{\"14\":1,\"181\":1}}],[\"w3\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"www\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":7,\"137\":1,\"146\":1,\"149\":2,\"159\":1,\"406\":2,\"454\":1,\"487\":1,\"667\":2}}],[\"4位首部长度字段所能表示最大长度为60字节\",{\"1\":{\"687\":1}}],[\"4位\",{\"1\":{\"687\":1}}],[\"4k\",{\"1\":{\"677\":1}}],[\"4`\",{\"1\":{\"587\":1}}],[\"43\",{\"1\":{\"348\":1}}],[\"45\",{\"1\":{\"348\":1}}],[\"443\",{\"1\":{\"635\":1}}],[\"44\",{\"1\":{\"348\":1}}],[\"42\",{\"1\":{\"267\":2,\"268\":1,\"348\":1}}],[\"4096字节\",{\"1\":{\"746\":1}}],[\"403\",{\"1\":{\"642\":1}}],[\"400\",{\"1\":{\"642\":1}}],[\"400类状态码表示客户端发送的报文有误\",{\"1\":{\"642\":1}}],[\"40\",{\"1\":{\"188\":2,\"348\":2,\"431\":1,\"678\":1}}],[\"404\",{\"1\":{\"85\":1,\"87\":1,\"88\":1,\"89\":4,\"642\":1,\"752\":1}}],[\"46\",{\"1\":{\"41\":1,\"348\":1}}],[\"4\",{\"0\":{\"120\":1,\"350\":1,\"441\":1,\"442\":1,\"454\":1,\"459\":1,\"474\":1,\"475\":1,\"480\":1,\"488\":1,\"489\":1,\"490\":1,\"491\":1,\"492\":2,\"493\":1,\"494\":1,\"507\":1,\"512\":1,\"513\":1,\"524\":1,\"529\":1,\"535\":1,\"536\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"558\":1,\"576\":1,\"577\":1,\"578\":1,\"579\":1,\"580\":2,\"601\":1,\"602\":1,\"603\":1},\"1\":{\"27\":3,\"30\":3,\"32\":3,\"35\":3,\"39\":1,\"40\":1,\"41\":1,\"59\":1,\"111\":1,\"115\":1,\"117\":3,\"137\":3,\"146\":3,\"149\":6,\"167\":1,\"187\":1,\"189\":2,\"245\":1,\"256\":1,\"273\":5,\"310\":3,\"324\":1,\"342\":3,\"351\":2,\"353\":5,\"363\":1,\"364\":4,\"370\":7,\"587\":2,\"743\":1}}],[\"hi\",{\"1\":{\"310\":2,\"342\":5}}],[\"hi=len\",{\"1\":{\"310\":6}}],[\"histo\",{\"1\":{\"239\":1}}],[\"hitail\",{\"1\":{\"189\":6}}],[\"hihead\",{\"1\":{\"189\":3}}],[\"high\",{\"1\":{\"189\":2}}],[\"hideothersidebarcontent\",{\"1\":{\"93\":1}}],[\"hd\",{\"1\":{\"187\":4}}],[\"human\",{\"1\":{\"454\":1,\"475\":1}}],[\"hub\",{\"1\":{\"388\":9,\"389\":4,\"393\":4,\"396\":1}}],[\"hugecapacity\",{\"1\":{\"181\":1}}],[\"huaweicloud\",{\"1\":{\"159\":1}}],[\"huaweicloud<\",{\"1\":{\"159\":1}}],[\"hard\",{\"1\":{\"429\":1}}],[\"harbor\",{\"1\":{\"396\":3}}],[\"harrison\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"handle\",{\"1\":{\"285\":2}}],[\"hagersten\",{\"1\":{\"226\":1}}],[\"happens\",{\"1\":{\"210\":1,\"267\":1}}],[\"has\",{\"1\":{\"193\":2,\"296\":2}}],[\"hasbanana\",{\"1\":{\"193\":2}}],[\"hash\",{\"1\":{\"187\":24,\"188\":4,\"189\":16,\"191\":1,\"249\":2}}],[\"hashcode\",{\"1\":{\"187\":5}}],[\"hashtable<>\",{\"1\":{\"193\":1}}],[\"hashtable<string\",{\"1\":{\"193\":1}}],[\"hashtableexample\",{\"1\":{\"193\":1}}],[\"hashtable会将这些键存储在不同的桶\",{\"1\":{\"193\":1}}],[\"hashtable会抛出nullpointerexception\",{\"1\":{\"193\":1}}],[\"hashtable使用了一种称为\",{\"1\":{\"193\":1}}],[\"hashtable不允许使用null作为键\",{\"1\":{\"193\":1}}],[\"hashtable是线程安全的\",{\"1\":{\"193\":1}}],[\"hashtable的一些特点和使用方法\",{\"1\":{\"193\":1}}],[\"hashtable的主要区别在于它的线程安全性\",{\"1\":{\"193\":1}}],[\"hashtable类也是实现map接口的一个类\",{\"1\":{\"193\":1}}],[\"hashtable\",{\"0\":{\"193\":1},\"1\":{\"186\":3,\"193\":2,\"249\":3}}],[\"hashmap\",{\"0\":{\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1},\"1\":{\"178\":1,\"186\":5,\"187\":15,\"188\":2,\"189\":7,\"190\":4,\"191\":1,\"249\":1}}],[\"hashset~e~\",{\"1\":{\"178\":1}}],[\"hashset\",{\"1\":{\"178\":3}}],[\"hasnext\",{\"1\":{\"178\":1}}],[\"h\",{\"1\":{\"108\":1,\"187\":10,\"237\":1,\"311\":2,\"352\":1,\"357\":1,\"452\":1,\"454\":1,\"468\":1,\"475\":1,\"515\":1,\"518\":1,\"552\":1,\"609\":4,\"610\":1}}],[\"href=\",{\"1\":{\"57\":2,\"90\":10,\"101\":1}}],[\"htop会显示资源占用情况\",{\"1\":{\"748\":1}}],[\"htop是top命令的一个增强版\",{\"1\":{\"748\":1}}],[\"htop\",{\"1\":{\"515\":2,\"748\":1}}],[\"html文件构建dom树\",{\"1\":{\"672\":1}}],[\"html\",{\"0\":{\"57\":1},\"1\":{\"44\":2,\"48\":2,\"56\":1,\"57\":2,\"65\":1,\"67\":3,\"69\":2,\"71\":2,\"73\":2,\"75\":3,\"78\":2,\"80\":2,\"102\":1,\"105\":1,\"267\":1,\"280\":1,\"287\":1,\"289\":1,\"406\":2}}],[\"http请求\",{\"1\":{\"672\":2}}],[\"http设计初是用于做网页文本展示的\",{\"1\":{\"655\":1}}],[\"http协议标准发送一个索要网页的请求\",{\"1\":{\"672\":1}}],[\"http协议是建立在tcp协议之上的应用层协议\",{\"1\":{\"672\":1}}],[\"http协议是超文本传输协议\",{\"1\":{\"655\":1}}],[\"http协议默认在建立底层tcp连接之后会一直保持这个连接\",{\"1\":{\"655\":1}}],[\"http中知道服务的域名\",{\"1\":{\"655\":1}}],[\"http主要用于b\",{\"1\":{\"655\":1}}],[\"http的get和post方法区别\",{\"0\":{\"653\":1}}],[\"http3\",{\"0\":{\"648\":1}}],[\"http2\",{\"0\":{\"644\":1,\"647\":1},\"1\":{\"647\":3,\"655\":1}}],[\"http1的header带有大量信息\",{\"1\":{\"647\":1}}],[\"http1\",{\"0\":{\"644\":2,\"645\":1,\"646\":1},\"1\":{\"645\":2,\"646\":2}}],[\"http缓存有哪些实现方式\",{\"0\":{\"643\":1}}],[\"http状态码的含义\",{\"0\":{\"642\":1}}],[\"http和https的区别\",{\"0\":{\"635\":1}}],[\"http面试常见题\",{\"0\":{\"634\":1}}],[\"https协议本身到目前为止还是没有任何漏洞的\",{\"1\":{\"641\":1}}],[\"https一定安全可靠吗\",{\"0\":{\"641\":1}}],[\"https的加密与认证过程\",{\"0\":{\"636\":1}}],[\"https除了\",{\"1\":{\"635\":1}}],[\"https\",{\"1\":{\"40\":4,\"50\":2,\"61\":2,\"69\":1,\"71\":1,\"75\":1,\"82\":1,\"117\":4,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"267\":1,\"280\":1,\"287\":1,\"289\":1,\"388\":1,\"399\":1,\"406\":1,\"426\":1,\"454\":1,\"487\":1,\"635\":5,\"641\":1,\"665\":2,\"683\":1,\"724\":1}}],[\"http\",{\"1\":{\"27\":4,\"30\":4,\"32\":4,\"35\":4,\"40\":2,\"49\":1,\"51\":4,\"117\":4,\"124\":6,\"137\":3,\"146\":3,\"149\":6,\"159\":4,\"348\":1,\"635\":5,\"640\":1,\"642\":2,\"648\":1,\"650\":1,\"651\":8,\"652\":1,\"675\":1,\"683\":1,\"724\":1,\"728\":7}}],[\"here\",{\"1\":{\"335\":1}}],[\"hello\",{\"1\":{\"265\":7,\"270\":1,\"285\":1,\"571\":8,\"584\":2,\"590\":2}}],[\"help=\",{\"1\":{\"316\":2}}],[\"help\",{\"0\":{\"753\":1},\"1\":{\"108\":1,\"147\":1}}],[\"heapreplace\",{\"1\":{\"351\":1}}],[\"heapify\",{\"1\":{\"351\":1,\"352\":2}}],[\"heappop\",{\"1\":{\"351\":1,\"352\":1}}],[\"heappush\",{\"1\":{\"351\":3}}],[\"heapq\",{\"0\":{\"351\":1},\"1\":{\"351\":1,\"352\":4}}],[\"heap\",{\"1\":{\"237\":2,\"239\":3,\"243\":1,\"351\":9,\"352\":2}}],[\"header用于日常传输数据\",{\"1\":{\"652\":1}}],[\"header用于首次建立连接\",{\"1\":{\"652\":1}}],[\"header\",{\"1\":{\"652\":3}}],[\"header压缩\",{\"1\":{\"647\":1}}],[\"head\",{\"1\":{\"226\":1,\"227\":1}}],[\"headline\",{\"1\":{\"61\":1,\"75\":1}}],[\"hexo\",{\"1\":{\"44\":1}}],[\"henderson\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"howto\",{\"1\":{\"370\":1}}],[\"how\",{\"1\":{\"363\":1}}],[\"host=host\",{\"1\":{\"316\":2}}],[\"host\",{\"1\":{\"316\":1}}],[\"hour\",{\"1\":{\"275\":1}}],[\"hope\",{\"1\":{\"128\":1}}],[\"hotspot\",{\"1\":{\"17\":1,\"249\":2}}],[\"homepage\",{\"0\":{\"70\":1},\"1\":{\"71\":2}}],[\"home\",{\"0\":{\"11\":1},\"1\":{\"11\":1,\"12\":3,\"14\":7,\"16\":2,\"17\":1,\"54\":1,\"71\":1,\"84\":1,\"158\":1,\"169\":2}}],[\">3306\",{\"1\":{\"395\":1}}],[\">最终执行的指令序列\",{\"1\":{\"210\":1}}],[\">内存系统重排序\",{\"1\":{\"210\":1}}],[\">指令级并行重排序\",{\"1\":{\"210\":1}}],[\">编译器优化重排序\",{\"1\":{\"210\":1}}],[\">=\",{\"1\":{\"187\":1,\"189\":3,\"272\":1,\"354\":1,\"370\":1,\"695\":1}}],[\">>>\",{\"1\":{\"187\":6,\"189\":6,\"265\":4,\"310\":4,\"351\":9,\"353\":16,\"364\":4,\"365\":3,\"366\":5,\"367\":1,\"368\":2,\"369\":3,\"370\":5}}],[\">>\",{\"1\":{\"181\":3}}],[\">f\",{\"1\":{\"158\":1}}],[\">e\",{\"1\":{\"158\":1}}],[\">en<\",{\"1\":{\"57\":1}}],[\">d\",{\"1\":{\"158\":1}}],[\">count\",{\"1\":{\"623\":2}}],[\">c\",{\"1\":{\"158\":1}}],[\">b\",{\"1\":{\"158\":1}}],[\"><\",{\"1\":{\"57\":1,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"93\":7,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"101\":1,\"102\":2}}],[\">中文<\",{\"1\":{\"57\":1}}],[\">\",{\"1\":{\"27\":8,\"30\":7,\"32\":4,\"35\":3,\"40\":42,\"50\":1,\"54\":1,\"55\":6,\"57\":1,\"59\":1,\"61\":3,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":3,\"78\":1,\"80\":2,\"90\":11,\"101\":4,\"117\":11,\"121\":1,\"123\":1,\"124\":4,\"137\":3,\"142\":2,\"143\":2,\"144\":1,\"146\":1,\"149\":4,\"150\":2,\"159\":5,\"170\":3,\"171\":1,\"178\":1,\"181\":9,\"187\":3,\"189\":4,\"205\":10,\"215\":1,\"220\":3,\"223\":2,\"252\":4,\"253\":1,\"311\":1,\"327\":1,\"348\":1,\"349\":1,\"370\":1,\"490\":1,\"659\":1}}],[\"urg\",{\"1\":{\"687\":2}}],[\"url解析\",{\"1\":{\"672\":1}}],[\"url地址a还可能向url地址c上跳转\",{\"1\":{\"642\":1}}],[\"url地址a可以向url地址b上跳转\",{\"1\":{\"642\":1}}],[\"urls\",{\"1\":{\"324\":1,\"325\":2,\"334\":2,\"335\":1}}],[\"urlconnection\",{\"1\":{\"233\":1,\"259\":1}}],[\"url>\",{\"1\":{\"159\":2}}],[\"url=jdbc\",{\"1\":{\"120\":1}}],[\"url\",{\"1\":{\"40\":1,\"68\":1,\"69\":1,\"121\":3,\"139\":1,\"146\":1,\"233\":1,\"259\":1,\"324\":4,\"325\":7,\"334\":10,\"335\":5,\"423\":2,\"642\":3,\"645\":1,\"654\":2}}],[\"udp用于包总量较少的通信\",{\"1\":{\"724\":1}}],[\"udp对系统资源要求较少\",{\"1\":{\"724\":1}}],[\"udp支持一对一\",{\"1\":{\"724\":1}}],[\"udp尽最大努力交付\",{\"1\":{\"724\":1}}],[\"udp不需要进行连接建立\",{\"1\":{\"724\":1}}],[\"udp就这层\",{\"1\":{\"683\":1}}],[\"udp将每个数据包都有一个序号唯一标识\",{\"1\":{\"651\":1}}],[\"udp计数\",{\"1\":{\"515\":1}}],[\"udp\",{\"1\":{\"486\":1,\"544\":1,\"651\":1,\"724\":3}}],[\"udp和icmp协议相关的统计数据\",{\"1\":{\"485\":1,\"515\":1,\"543\":1}}],[\"u\",{\"1\":{\"462\":1,\"505\":1,\"507\":2,\"561\":1}}],[\"u<用户名>\",{\"1\":{\"439\":1,\"533\":1}}],[\"ubuntu\",{\"1\":{\"396\":1}}],[\"ubuntu是镜像的名称\",{\"1\":{\"396\":1}}],[\"ulimit\",{\"1\":{\"239\":1}}],[\"uptime\",{\"1\":{\"515\":2}}],[\"up会根据\",{\"1\":{\"402\":1}}],[\"up和docker\",{\"1\":{\"399\":1}}],[\"up\",{\"1\":{\"395\":1,\"402\":6,\"403\":1,\"404\":1,\"440\":1,\"534\":1}}],[\"upon\",{\"1\":{\"187\":1}}],[\"update的执行过程\",{\"0\":{\"622\":1}}],[\"update>\",{\"1\":{\"40\":1}}],[\"updateuser\",{\"1\":{\"40\":2,\"41\":1}}],[\"updates\",{\"1\":{\"8\":2,\"41\":3}}],[\"update\",{\"1\":{\"8\":1,\"40\":1,\"41\":1,\"221\":3,\"353\":2,\"507\":1,\"625\":1,\"632\":3}}],[\"uncommitted\",{\"1\":{\"629\":1}}],[\"unchecked\",{\"1\":{\"189\":1}}],[\"undo\",{\"1\":{\"622\":5,\"627\":1,\"631\":1}}],[\"undecorate\",{\"1\":{\"369\":2}}],[\"undefined\",{\"1\":{\"238\":1}}],[\"unpause\",{\"1\":{\"405\":1}}],[\"unpkg\",{\"1\":{\"95\":1}}],[\"unit\",{\"1\":{\"732\":3}}],[\"units\",{\"1\":{\"475\":1}}],[\"uninterruptible\",{\"1\":{\"506\":1}}],[\"unicode是一种广泛的字符集\",{\"1\":{\"751\":1}}],[\"unicode是一种字符集\",{\"1\":{\"751\":1}}],[\"unicode本身不是一种编码方案\",{\"1\":{\"751\":1}}],[\"unicode为每个字符分配一个唯一的数字代码点\",{\"1\":{\"751\":1}}],[\"unicode应运而生\",{\"1\":{\"751\":1}}],[\"unicode\",{\"0\":{\"751\":1},\"1\":{\"360\":1,\"751\":2}}],[\"unichr\",{\"1\":{\"360\":1}}],[\"unionfs\",{\"1\":{\"382\":1}}],[\"union\",{\"1\":{\"353\":1,\"386\":1}}],[\"unique\",{\"1\":{\"353\":1}}],[\"uniform\",{\"1\":{\"296\":1}}],[\"unix\",{\"0\":{\"283\":1},\"1\":{\"283\":2,\"303\":4,\"486\":1,\"487\":1,\"544\":1}}],[\"until\",{\"1\":{\"265\":1,\"268\":1,\"288\":2,\"296\":2,\"334\":2,\"335\":1}}],[\"uname\",{\"1\":{\"513\":1,\"564\":1}}],[\"unable\",{\"1\":{\"239\":2}}],[\"unaryoperator<e>\",{\"1\":{\"179\":1}}],[\"unset\",{\"1\":{\"574\":1}}],[\"unsafe\",{\"1\":{\"224\":1}}],[\"unsupportedoperationexception\",{\"1\":{\"178\":1}}],[\"unlocked\",{\"1\":{\"287\":3}}],[\"unlock\",{\"1\":{\"206\":1}}],[\"unlink\",{\"1\":{\"187\":1}}],[\"util\",{\"1\":{\"40\":1,\"41\":1,\"118\":5,\"177\":3,\"178\":3,\"193\":1,\"224\":1,\"458\":1,\"557\":1}}],[\"utf8mb3\",{\"1\":{\"39\":6,\"115\":6}}],[\"utf8mb4\",{\"1\":{\"39\":1,\"115\":1}}],[\"utf\",{\"0\":{\"751\":1},\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"40\":2,\"117\":1,\"124\":1,\"137\":1,\"149\":2,\"751\":6}}],[\"usr\",{\"1\":{\"609\":1,\"610\":2}}],[\"us的值比较高时\",{\"1\":{\"479\":1,\"528\":1}}],[\"usage\",{\"1\":{\"454\":4}}],[\"usvtjr\",{\"1\":{\"321\":1}}],[\"usually\",{\"1\":{\"181\":1,\"506\":1}}],[\"usth\",{\"1\":{\"126\":1}}],[\"us\",{\"1\":{\"57\":1,\"76\":2,\"440\":1,\"479\":1,\"528\":1,\"534\":1}}],[\"used\",{\"1\":{\"268\":1,\"388\":1,\"440\":2,\"469\":2,\"475\":1,\"519\":2,\"534\":2}}],[\"useconcmarksweepgc\",{\"1\":{\"239\":1}}],[\"use\",{\"1\":{\"206\":1,\"296\":1}}],[\"usegeneratedkeys=\",{\"1\":{\"40\":1}}],[\"usercontroller\",{\"1\":{\"118\":3,\"125\":4}}],[\"userlist\",{\"1\":{\"118\":7,\"126\":1}}],[\"userdaoimpl\",{\"1\":{\"118\":3}}],[\"userdao\",{\"1\":{\"118\":8}}],[\"userserviceimpl\",{\"1\":{\"118\":3}}],[\"userservice\",{\"1\":{\"118\":8}}],[\"users\",{\"1\":{\"40\":5,\"41\":12,\"118\":1,\"440\":1,\"534\":1}}],[\"usermis\",{\"0\":{\"115\":1},\"1\":{\"40\":1,\"120\":1}}],[\"usermapper\",{\"1\":{\"40\":6,\"41\":24}}],[\"usermapper接口\",{\"1\":{\"40\":1}}],[\"username=root\",{\"1\":{\"120\":1}}],[\"username=margaret\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=valerie\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=fu\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=juan\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=ernest\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=lui\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=lau\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=bruce\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=takahashi\",{\"1\":{\"41\":1,\"126\":1}}],[\"username=peng\",{\"1\":{\"41\":2,\"126\":1}}],[\"username=admin\",{\"1\":{\"41\":2}}],[\"username=\",{\"1\":{\"40\":1,\"41\":1}}],[\"username\",{\"1\":{\"39\":1,\"40\":5,\"41\":5,\"50\":4,\"111\":1,\"115\":1,\"118\":1,\"121\":3}}],[\"user\",{\"1\":{\"39\":14,\"40\":11,\"41\":43,\"111\":1,\"115\":14,\"118\":9,\"126\":10,\"158\":1,\"169\":2,\"462\":1,\"479\":1,\"506\":1,\"507\":4,\"528\":1,\"561\":1,\"738\":1}}],[\"using\",{\"1\":{\"39\":1,\"115\":1,\"189\":1}}],[\"<间隔秒数>\",{\"1\":{\"468\":2,\"518\":2}}],[\"<标签>的格式来指定具体是这个软件哪个版本的镜像\",{\"1\":{\"388\":1}}],[\"<<\",{\"1\":{\"189\":3}}],[\"<<interface>>\",{\"1\":{\"178\":7,\"186\":4}}],[\"<=\",{\"1\":{\"189\":1,\"311\":1,\"370\":1}}],[\"<==\",{\"1\":{\"41\":25}}],[\"<|\",{\"1\":{\"178\":17,\"186\":8}}],[\"<file>\",{\"1\":{\"171\":1}}],[\"<file>$\",{\"1\":{\"156\":1}}],[\"<family>windows<\",{\"1\":{\"171\":1}}],[\"<os>\",{\"1\":{\"171\":1}}],[\"<optional>true<\",{\"1\":{\"142\":1}}],[\"<value>prod<\",{\"1\":{\"171\":1}}],[\"<version\",{\"1\":{\"143\":1}}],[\"<version>xxx<\",{\"1\":{\"145\":2}}],[\"<version>4\",{\"1\":{\"137\":1,\"142\":1}}],[\"<version>0\",{\"1\":{\"137\":1,\"149\":3}}],[\"<version>3\",{\"1\":{\"40\":1,\"137\":1,\"149\":1}}],[\"<version>8\",{\"1\":{\"40\":1,\"117\":1}}],[\"<version>2\",{\"1\":{\"40\":2,\"117\":1,\"156\":1}}],[\"<version>5\",{\"1\":{\"40\":1,\"117\":1}}],[\"<version>6\",{\"1\":{\"40\":5,\"117\":5,\"123\":1}}],[\"<version>$\",{\"1\":{\"27\":4}}],[\"<version>10\",{\"1\":{\"171\":1}}],[\"<version>1\",{\"1\":{\"27\":1,\"30\":1,\"32\":2,\"35\":2,\"40\":2,\"117\":3,\"144\":2,\"146\":1,\"156\":1}}],[\"<url>https\",{\"1\":{\"159\":2}}],[\"<update\",{\"1\":{\"40\":1}}],[\"<localrepository>d\",{\"1\":{\"159\":1}}],[\"<link\",{\"1\":{\"90\":10,\"101\":1}}],[\"<generatepom>true<\",{\"1\":{\"156\":1}}],[\"<goal>install\",{\"1\":{\"156\":1}}],[\"<goals>\",{\"1\":{\"156\":1}}],[\"<groupid>third\",{\"1\":{\"156\":1}}],[\"<groupid>io\",{\"1\":{\"144\":2,\"146\":1}}],[\"<groupid>junit<\",{\"1\":{\"137\":1,\"142\":1}}],[\"<groupid>javax\",{\"1\":{\"40\":1}}],[\"<groupid>jakarta\",{\"1\":{\"40\":1,\"117\":1}}],[\"<groupid>mysql<\",{\"1\":{\"40\":1,\"117\":1}}],[\"<groupid>commons\",{\"1\":{\"27\":1,\"30\":1}}],[\"<groupid>com\",{\"1\":{\"27\":1,\"30\":1,\"40\":1,\"117\":1,\"137\":1,\"149\":2}}],[\"<groupid>org\",{\"1\":{\"27\":3,\"30\":3,\"32\":2,\"35\":2,\"40\":8,\"117\":8,\"123\":1,\"137\":1,\"145\":2,\"149\":1,\"156\":1}}],[\"<iframe>\",{\"1\":{\"659\":1}}],[\"<id>env\",{\"1\":{\"170\":2}}],[\"<id>huaweicloud<\",{\"1\":{\"159\":1}}],[\"<id>aliyun<\",{\"1\":{\"159\":1}}],[\"<id>install\",{\"1\":{\"156\":1}}],[\"<insert\",{\"1\":{\"40\":1}}],[\"<repositorylayout>default<\",{\"1\":{\"156\":1}}],[\"<reporting\",{\"1\":{\"150\":1}}],[\"<relativepath>\",{\"1\":{\"149\":1}}],[\"<exists>\",{\"1\":{\"171\":1}}],[\"<execution>\",{\"1\":{\"156\":1}}],[\"<executions>\",{\"1\":{\"156\":1}}],[\"<exclusion>\",{\"1\":{\"145\":1}}],[\"<exclusions>\",{\"1\":{\"145\":1}}],[\"<encoding>utf\",{\"1\":{\"137\":1,\"149\":1}}],[\"<environment\",{\"1\":{\"40\":1}}],[\"<environments\",{\"1\":{\"40\":1}}],[\"<classifier>jdk11<\",{\"1\":{\"142\":1}}],[\"<coroutine\",{\"1\":{\"265\":1}}],[\"<context\",{\"1\":{\"124\":2}}],[\"<configuration>\",{\"1\":{\"40\":1,\"137\":1,\"149\":1,\"156\":1}}],[\"<commons\",{\"1\":{\"27\":1}}],[\"<name>\",{\"1\":{\"513\":2,\"564\":2}}],[\"<name>windows\",{\"1\":{\"171\":1}}],[\"<name>user<\",{\"1\":{\"171\":1}}],[\"<name>mirror\",{\"1\":{\"159\":1}}],[\"<name>aliyun<\",{\"1\":{\"159\":1}}],[\"<name>demo<\",{\"1\":{\"137\":1,\"149\":1}}],[\"<nav>\",{\"1\":{\"57\":1}}],[\"<build\",{\"1\":{\"150\":1}}],[\"<build>\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"<beans\",{\"1\":{\"124\":1}}],[\"<body>\",{\"1\":{\"57\":1}}],[\"<arch>amd64<\",{\"1\":{\"171\":1}}],[\"<artifactid>third\",{\"1\":{\"156\":1}}],[\"<artifactid>flyway\",{\"1\":{\"144\":2}}],[\"<artifactid>demo\",{\"1\":{\"146\":1,\"149\":1}}],[\"<artifactid>demo<\",{\"1\":{\"137\":1,\"149\":2}}],[\"<artifactid>druid<\",{\"1\":{\"40\":1,\"117\":1}}],[\"<artifactid>weblesson<\",{\"1\":{\"117\":1}}],[\"<artifactid>servlet\",{\"1\":{\"40\":1}}],[\"<artifactid>spring\",{\"1\":{\"27\":1,\"30\":1,\"40\":5,\"117\":5,\"123\":1,\"145\":2}}],[\"<artifactid>lombok<\",{\"1\":{\"40\":1,\"117\":1}}],[\"<artifactid>maven\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"<artifactid>mybatis<\",{\"1\":{\"40\":1}}],[\"<artifactid>mysql\",{\"1\":{\"40\":1,\"117\":1}}],[\"<artifactid>micro\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1}}],[\"<artifactid>order\",{\"1\":{\"35\":1}}],[\"<artifactid>user\",{\"1\":{\"32\":1}}],[\"<artifactid>common\",{\"1\":{\"30\":1,\"32\":1,\"35\":1}}],[\"<artifactid>commons\",{\"1\":{\"27\":1,\"30\":1}}],[\"<artifactid>jakarta\",{\"1\":{\"40\":1,\"117\":1}}],[\"<artifactid>jackson\",{\"1\":{\"27\":1,\"30\":1}}],[\"<artifactid>junit<\",{\"1\":{\"137\":1,\"142\":1}}],[\"<artifactid>junit\",{\"1\":{\"27\":1,\"30\":1,\"40\":1,\"117\":1}}],[\"<activebydefault>true<\",{\"1\":{\"171\":1}}],[\"<activeprofile>test<\",{\"1\":{\"171\":1}}],[\"<activeprofiles>\",{\"1\":{\"171\":1}}],[\"<activation>\",{\"1\":{\"171\":4}}],[\"<a\",{\"1\":{\"57\":2}}],[\"<div\",{\"1\":{\"57\":1,\"101\":1}}],[\"<description>demo\",{\"1\":{\"137\":1,\"149\":1}}],[\"<delete\",{\"1\":{\"40\":1}}],[\"<dependencies\",{\"1\":{\"142\":1}}],[\"<dependencies>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"<dependency\",{\"1\":{\"142\":1,\"143\":1}}],[\"<dependency>\",{\"1\":{\"27\":4,\"30\":4,\"32\":1,\"35\":1,\"40\":12,\"117\":10,\"123\":1,\"137\":1,\"142\":1,\"144\":2,\"145\":1}}],[\"<dependencymanagement>\",{\"1\":{\"27\":1}}],[\"<datasource\",{\"1\":{\"40\":1}}],[\"<t>\",{\"1\":{\"178\":1}}],[\"<type>jar<\",{\"1\":{\"142\":1}}],[\"<typealiases>\",{\"1\":{\"40\":1}}],[\"<target>1\",{\"1\":{\"137\":1,\"149\":1}}],[\"<transactionmanager\",{\"1\":{\"40\":1}}],[\"<source>1\",{\"1\":{\"137\":1,\"149\":1}}],[\"<small>3\",{\"1\":{\"75\":1}}],[\"<span>name<\",{\"1\":{\"67\":1}}],[\"<spring\",{\"1\":{\"27\":1}}],[\"<script\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"93\":7,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"101\":1,\"102\":2}}],[\"<script>\",{\"1\":{\"53\":1,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"93\":3,\"95\":1,\"101\":1,\"105\":1,\"659\":1}}],[\"<scope>test<\",{\"1\":{\"27\":1,\"30\":1,\"40\":1,\"117\":1,\"137\":1,\"142\":1}}],[\"<server>\",{\"1\":{\"426\":1}}],[\"<select\",{\"1\":{\"40\":2}}],[\"<settings\",{\"1\":{\"159\":1}}],[\"<settings>\",{\"1\":{\"40\":1}}],[\"<setting\",{\"1\":{\"40\":1}}],[\"<missing>\",{\"1\":{\"171\":1}}],[\"<mirrorof>central<\",{\"1\":{\"159\":2}}],[\"<mirror>\",{\"1\":{\"159\":2}}],[\"<mirrors>\",{\"1\":{\"159\":1}}],[\"<mapper\",{\"1\":{\"40\":2}}],[\"<mappers>\",{\"1\":{\"40\":1}}],[\"<maven\",{\"1\":{\"27\":2,\"30\":2,\"32\":2,\"35\":2,\"117\":2}}],[\"<module>start<\",{\"1\":{\"149\":1}}],[\"<module>spring\",{\"1\":{\"117\":1}}],[\"<module>demo\",{\"1\":{\"149\":5}}],[\"<module>order\",{\"1\":{\"35\":1}}],[\"<module>user\",{\"1\":{\"35\":1}}],[\"<module>common\",{\"1\":{\"27\":1,\"35\":1}}],[\"<modules>\",{\"1\":{\"27\":1,\"35\":1,\"117\":1,\"149\":1}}],[\"<modelversion>4\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"146\":1,\"149\":2}}],[\"<java\",{\"1\":{\"137\":1,\"149\":1}}],[\"<jackson\",{\"1\":{\"27\":1}}],[\"<junit\",{\"1\":{\"27\":1}}],[\"<pid>\",{\"1\":{\"239\":1,\"513\":3,\"564\":3}}],[\"<phase>clean<\",{\"1\":{\"156\":1}}],[\"<plugin>\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"<plugins>\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"<path>\",{\"1\":{\"105\":3,\"106\":2,\"107\":3}}],[\"<package\",{\"1\":{\"40\":1}}],[\"<packaging>war<\",{\"1\":{\"32\":1,\"35\":1}}],[\"<packaging>jar<\",{\"1\":{\"30\":1,\"156\":1}}],[\"<packaging>pom<\",{\"1\":{\"27\":1,\"117\":1,\"146\":1,\"149\":1}}],[\"<parent>\",{\"1\":{\"30\":1,\"32\":1,\"35\":1,\"149\":1}}],[\"<profile>\",{\"1\":{\"170\":2}}],[\"<profiles>\",{\"1\":{\"170\":1}}],[\"<property>\",{\"1\":{\"171\":1}}],[\"<property\",{\"1\":{\"40\":4,\"170\":2}}],[\"<properties>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"149\":1,\"170\":2}}],[\"<project\",{\"1\":{\"27\":2,\"30\":2,\"32\":2,\"35\":2,\"117\":2,\"137\":1,\"146\":1,\"149\":2}}],[\"<\",{\"1\":{\"27\":20,\"30\":14,\"32\":8,\"35\":8,\"40\":50,\"53\":1,\"54\":1,\"55\":6,\"57\":3,\"59\":1,\"61\":3,\"67\":2,\"69\":2,\"71\":2,\"73\":2,\"75\":3,\"78\":2,\"80\":3,\"90\":1,\"93\":3,\"95\":1,\"101\":4,\"117\":24,\"123\":2,\"124\":2,\"137\":10,\"142\":2,\"144\":4,\"145\":4,\"146\":1,\"149\":11,\"156\":7,\"159\":9,\"170\":8,\"171\":9,\"181\":1,\"187\":1,\"189\":6,\"252\":3,\"253\":3,\"370\":1,\"506\":1,\"659\":2}}],[\"9365405\",{\"1\":{\"406\":1}}],[\"98\",{\"1\":{\"239\":1}}],[\"90\",{\"1\":{\"95\":3}}],[\"9em\",{\"1\":{\"95\":1}}],[\"9\",{\"0\":{\"591\":1,\"592\":1,\"593\":1,\"594\":1,\"595\":1,\"596\":1,\"597\":1,\"598\":1,\"599\":1,\"600\":1,\"601\":1,\"602\":1,\"603\":1},\"1\":{\"24\":1,\"27\":1,\"39\":1,\"40\":2,\"41\":2,\"115\":1,\"205\":2,\"310\":1,\"351\":2,\"751\":1}}],[\"5w\",{\"1\":{\"431\":1}}],[\"54\",{\"1\":{\"277\":2}}],[\"53\",{\"1\":{\"277\":2}}],[\"5倍\",{\"1\":{\"181\":1}}],[\"55\",{\"1\":{\"125\":1,\"265\":1}}],[\"56\",{\"1\":{\"118\":2}}],[\"58\",{\"1\":{\"97\":3,\"118\":1}}],[\"52\",{\"1\":{\"125\":1,\"265\":1}}],[\"52d10fb8\",{\"1\":{\"41\":1}}],[\"52c8295b\",{\"1\":{\"41\":1}}],[\"5<\",{\"1\":{\"40\":1,\"75\":1}}],[\"505\",{\"1\":{\"642\":1}}],[\"504\",{\"1\":{\"642\":1}}],[\"503\",{\"1\":{\"642\":1}}],[\"502\",{\"1\":{\"642\":1}}],[\"501\",{\"1\":{\"642\":1}}],[\"500\",{\"1\":{\"642\":1}}],[\"500类状态码表示客户端请求报文正确\",{\"1\":{\"642\":1}}],[\"50\",{\"1\":{\"39\":2,\"111\":2,\"115\":2,\"277\":4,\"348\":1,\"625\":1}}],[\"5\",{\"0\":{\"121\":1,\"493\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"513\":1,\"549\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"560\":1,\"561\":1,\"562\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1},\"1\":{\"24\":1,\"39\":1,\"40\":4,\"41\":2,\"59\":1,\"115\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2,\"143\":2,\"156\":1,\"181\":1,\"193\":1,\"202\":1,\"224\":1,\"232\":1,\"239\":1,\"258\":1,\"272\":2,\"310\":2,\"324\":1,\"327\":1,\"342\":2,\"351\":4,\"353\":1,\"364\":4,\"370\":6,\"393\":1,\"395\":2}}],[\"6位\",{\"1\":{\"687\":1}}],[\"60\",{\"1\":{\"594\":2,\"728\":2}}],[\"6开始无效\",{\"1\":{\"506\":1}}],[\"6379\",{\"1\":{\"493\":1,\"494\":1}}],[\"650\",{\"1\":{\"388\":1}}],[\"65\",{\"1\":{\"360\":2}}],[\"6bzpnzerac\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"6<\",{\"1\":{\"27\":1,\"40\":5,\"117\":5,\"123\":1}}],[\"6\",{\"0\":{\"494\":1,\"563\":1,\"564\":1,\"585\":1,\"586\":1,\"587\":1},\"1\":{\"24\":14,\"39\":1,\"41\":1,\"59\":1,\"93\":1,\"115\":1,\"171\":1,\"183\":1,\"189\":1,\"205\":1,\"220\":1,\"232\":2,\"249\":2,\"258\":2,\"273\":2,\"310\":1,\"342\":2,\"351\":2,\"353\":1}}],[\"64\",{\"1\":{\"17\":1,\"187\":5,\"207\":1,\"208\":1,\"239\":1,\"743\":1}}],[\"该处理器核心负责将数据写回主内存\",{\"1\":{\"742\":1}}],[\"该模式称为累计应答\",{\"1\":{\"709\":1}}],[\"该恢复过程已经结束\",{\"1\":{\"698\":1}}],[\"该报文应该优先传送\",{\"1\":{\"687\":1}}],[\"该层的通信由不同设备中的应用程序之间的服务请求和响应组成\",{\"1\":{\"683\":1}}],[\"该流的其他数据包到达了\",{\"1\":{\"651\":1}}],[\"该随机数会被服务端公钥加密\",{\"1\":{\"639\":1}}],[\"该命令将创建一个名为\",{\"1\":{\"423\":1}}],[\"该函数应该采用两个参数进行比较\",{\"1\":{\"370\":1}}],[\"该计数器加一\",{\"1\":{\"336\":1}}],[\"该计数器减一\",{\"1\":{\"336\":1}}],[\"该条目所有工作已经完成\",{\"1\":{\"293\":1}}],[\"该旗标初始时会被设为\",{\"1\":{\"288\":1}}],[\"该对象不是线程安全的\",{\"1\":{\"288\":1}}],[\"该对象没有立即被\",{\"1\":{\"239\":1}}],[\"该方法将返回\",{\"1\":{\"280\":1}}],[\"该方法只是给线程设置中断标记\",{\"1\":{\"202\":1}}],[\"该方法只能调用一次\",{\"1\":{\"202\":1}}],[\"该事件循环会运行其他\",{\"1\":{\"280\":1}}],[\"该任务会在\",{\"1\":{\"271\":1}}],[\"该任务的配置\",{\"1\":{\"156\":1}}],[\"该协程会被自动调度执行\",{\"1\":{\"268\":1}}],[\"该文件内容就是实现该服务接口的具体实现类\",{\"1\":{\"254\":1}}],[\"该参数会使\",{\"1\":{\"239\":1}}],[\"该错误表示程序请求创建的数组超过最大长度限制\",{\"1\":{\"239\":1}}],[\"该字段才会使用\",{\"1\":{\"226\":1}}],[\"该类将整数值与引用关联起来\",{\"1\":{\"224\":1}}],[\"该线程将会等待\",{\"1\":{\"215\":1}}],[\"该数据会马上同步回主内存\",{\"1\":{\"207\":1}}],[\"该\",{\"1\":{\"171\":1,\"280\":1,\"721\":1}}],[\"该键值对可以在\",{\"1\":{\"170\":1}}],[\"该坐标定义了构件在仓库中的唯一存储路径\",{\"1\":{\"157\":1}}],[\"该插件会忽略双音符\",{\"1\":{\"93\":1}}],[\"该平台包括用户服务\",{\"1\":{\"24\":1}}],[\"该路径下包含\",{\"1\":{\"11\":1}}],[\"需求案例\",{\"1\":{\"24\":1,\"37\":1,\"111\":1}}],[\"需要采用一种协议来规定处理器如何操作缓存\",{\"1\":{\"741\":1}}],[\"需要采取特殊处理\",{\"1\":{\"733\":1}}],[\"需要确保它们的操作有一个明确的顺序\",{\"1\":{\"741\":1}}],[\"需要确保其他处理器对该地址的访问能够看到这次写操作的结果\",{\"1\":{\"741\":1}}],[\"需要根据某种替换策略选择一个现有的映射进行替换\",{\"1\":{\"736\":1}}],[\"需要等到2msl\",{\"1\":{\"722\":1}}],[\"需要等待锁释放\",{\"1\":{\"201\":1}}],[\"需要做域名解析都要通过服务商来完成\",{\"1\":{\"671\":1}}],[\"需要分批次来握手\",{\"1\":{\"651\":1}}],[\"需要客户端用新的\",{\"1\":{\"642\":1}}],[\"需要判断\",{\"1\":{\"631\":1}}],[\"需要判断主键是否为空值\",{\"1\":{\"623\":1}}],[\"需要记录对应的\",{\"1\":{\"622\":1}}],[\"需要把被更新的列的旧值记下来\",{\"1\":{\"622\":1}}],[\"需要先了解一下ps命令输出各字段的含义\",{\"1\":{\"506\":1}}],[\"需要注意\",{\"1\":{\"394\":1,\"566\":1}}],[\"需要注意的是\",{\"1\":{\"8\":1,\"241\":1}}],[\"需要额外小心\",{\"1\":{\"386\":1}}],[\"需要使用不同的编码方案\",{\"1\":{\"751\":1}}],[\"需要使用\",{\"1\":{\"334\":1,\"645\":1}}],[\"需要使用某个插件时\",{\"1\":{\"150\":1}}],[\"需要超多任务运行\",{\"1\":{\"320\":1}}],[\"需要给返回的结果添加偏置\",{\"1\":{\"311\":1}}],[\"需要保存这个方法返回值\",{\"1\":{\"271\":1}}],[\"需要保证本地代码能工作在任何\",{\"1\":{\"241\":1}}],[\"需要找到持有的对象\",{\"1\":{\"239\":1}}],[\"需要通过\",{\"1\":{\"219\":1,\"239\":1}}],[\"需要实现的内存屏障\",{\"1\":{\"211\":1}}],[\"需要别的线程用同一个对象上的\",{\"1\":{\"204\":1}}],[\"需要配合\",{\"1\":{\"204\":1}}],[\"需要遍历链表直到某个结点的\",{\"1\":{\"190\":1}}],[\"需要将原数据转移至新数组\",{\"1\":{\"189\":1}}],[\"需要移动到指定位置\",{\"1\":{\"182\":1}}],[\"需要以某种操作方式一起进行操作\",{\"1\":{\"177\":1}}],[\"需要创建的数据卷\",{\"1\":{\"400\":1}}],[\"需要创建\",{\"1\":{\"52\":1}}],[\"需要在a工程的pom\",{\"1\":{\"20\":1}}],[\"二分查找\",{\"2\":{\"314\":1}}],[\"二分查找模块\",{\"0\":{\"310\":1}}],[\"二级缓存\",{\"1\":{\"740\":1}}],[\"二级\",{\"1\":{\"170\":1}}],[\"二级标题\",{\"1\":{\"55\":2}}],[\"二\",{\"0\":{\"23\":1,\"40\":1,\"116\":1}}],[\"测试和部署过程\",{\"1\":{\"399\":1}}],[\"测试环境\",{\"1\":{\"168\":1}}],[\"测试及部署\",{\"1\":{\"161\":1}}],[\"测试等\",{\"1\":{\"142\":1}}],[\"测试用例命名方式等内容都做了规定\",{\"1\":{\"136\":1}}],[\"测试通过\",{\"1\":{\"41\":1,\"126\":1}}],[\"测试\",{\"1\":{\"22\":1,\"135\":1,\"142\":1,\"161\":1,\"166\":1,\"384\":1}}],[\"考试平台等\",{\"1\":{\"22\":1}}],[\"聚合时多个项目的本质还是一个项目\",{\"1\":{\"22\":1}}],[\"聚合包含了继承的特性\",{\"1\":{\"22\":1}}],[\"聚合项目必须是一个pom类型的项目\",{\"1\":{\"22\":1}}],[\"聚合\",{\"0\":{\"22\":1,\"149\":1},\"1\":{\"146\":1}}],[\"聚合三大工程关系\",{\"0\":{\"19\":1}}],[\"i++\",{\"1\":{\"600\":1}}],[\"i<=100\",{\"1\":{\"600\":1}}],[\"i<时间>\",{\"1\":{\"439\":1,\"533\":1}}],[\"icmp主要的功能包括\",{\"1\":{\"673\":1}}],[\"icmp和ospf信息\",{\"1\":{\"515\":1}}],[\"iconfont精选图标\",{\"1\":{\"128\":1}}],[\"icon\",{\"1\":{\"75\":1}}],[\"ip有限制其生存的时间ttl\",{\"1\":{\"711\":1}}],[\"ip的四层网络模型\",{\"0\":{\"684\":1}}],[\"ip就是这层\",{\"1\":{\"683\":1}}],[\"ipv4\",{\"1\":{\"678\":1,\"720\":1,\"721\":1}}],[\"ipv4和ipv6的区别\",{\"0\":{\"678\":1}}],[\"ipv6支持无状态地址自动配置和状态地址自动配置两种地址自动配置方式\",{\"1\":{\"678\":1}}],[\"ipv6节点通过地址自动配置得到ipv6地址和网关地址\",{\"1\":{\"678\":1}}],[\"ipv6协议支持地址自动配置\",{\"1\":{\"678\":1}}],[\"ipv6\",{\"1\":{\"678\":4}}],[\"ipv6的首部长度是40个字节\",{\"1\":{\"678\":1}}],[\"ip层会分片\",{\"0\":{\"729\":1}}],[\"ip层检查后\",{\"1\":{\"673\":1}}],[\"ip层将以服务端ip作为目的地址\",{\"1\":{\"673\":1}}],[\"ip设置\",{\"1\":{\"670\":1}}],[\"ip给客户机\",{\"1\":{\"667\":1}}],[\"ip面试常见题\",{\"0\":{\"666\":1}}],[\"ip\",{\"1\":{\"651\":1,\"678\":1,\"720\":1,\"724\":2,\"729\":6}}],[\"ip校验和错误等等统计数据\",{\"1\":{\"515\":1}}],[\"iptraf\",{\"1\":{\"515\":2}}],[\"ip包\",{\"1\":{\"515\":1}}],[\"ipc\",{\"1\":{\"263\":1}}],[\"ibm\",{\"1\":{\"406\":1}}],[\"ibatis\",{\"1\":{\"41\":4}}],[\"i=$\",{\"1\":{\"603\":1}}],[\"i=0\",{\"1\":{\"603\":1}}],[\"i=1\",{\"1\":{\"600\":1}}],[\"i=4\",{\"1\":{\"273\":1}}],[\"i=3\",{\"1\":{\"273\":2}}],[\"i=2\",{\"1\":{\"273\":3}}],[\"i=\",{\"1\":{\"273\":1}}],[\"ia\",{\"1\":{\"207\":1,\"208\":1}}],[\"illegalmonitorstateexception\",{\"1\":{\"219\":1}}],[\"illegal\",{\"1\":{\"189\":2}}],[\"illegalargumentexception\",{\"1\":{\"189\":2}}],[\"its\",{\"1\":{\"271\":1,\"454\":1}}],[\"iter=\",{\"1\":{\"354\":1}}],[\"iters\",{\"1\":{\"351\":1}}],[\"itertools\",{\"1\":{\"348\":1}}],[\"iter\",{\"1\":{\"316\":3,\"345\":2,\"348\":1,\"349\":1,\"351\":4,\"354\":1}}],[\"iterators\",{\"1\":{\"349\":5}}],[\"iterator\",{\"1\":{\"178\":3,\"255\":1,\"349\":1,\"353\":1}}],[\"iterator<e>\",{\"1\":{\"178\":2}}],[\"iterables\",{\"1\":{\"349\":2}}],[\"iterable~e~\",{\"1\":{\"178\":1}}],[\"iterable\",{\"1\":{\"178\":2,\"344\":1,\"348\":2,\"353\":5,\"363\":3}}],[\"iterable<e>\",{\"1\":{\"178\":2}}],[\"itemgetter\",{\"1\":{\"366\":2}}],[\"items\",{\"1\":{\"325\":1,\"353\":1}}],[\"item\",{\"1\":{\"182\":2,\"293\":2,\"296\":2,\"312\":1}}],[\"it\",{\"1\":{\"181\":1,\"267\":3,\"268\":1,\"288\":2,\"348\":3}}],[\"ignore\",{\"1\":{\"55\":6}}],[\"i\",{\"0\":{\"263\":1},\"1\":{\"48\":1,\"105\":1,\"179\":2,\"187\":3,\"219\":3,\"237\":2,\"271\":1,\"273\":3,\"296\":2,\"312\":16,\"316\":8,\"319\":1,\"345\":1,\"352\":4,\"369\":4,\"406\":1,\"439\":1,\"452\":1,\"454\":1,\"458\":4,\"461\":1,\"477\":1,\"486\":1,\"515\":5,\"526\":1,\"533\":1,\"544\":1,\"552\":1,\"557\":4,\"560\":1,\"600\":1,\"747\":1}}],[\"ie11\",{\"1\":{\"45\":1,\"93\":1}}],[\"isolation\",{\"1\":{\"627\":1}}],[\"islice\",{\"1\":{\"348\":1}}],[\"isheldexclusively\",{\"1\":{\"229\":1}}],[\"isdaemon\",{\"1\":{\"202\":1}}],[\"isalive\",{\"1\":{\"202\":1}}],[\"isinterrupted\",{\"1\":{\"202\":1}}],[\"isnan\",{\"1\":{\"189\":1}}],[\"isempty\",{\"1\":{\"178\":1}}],[\"issuemanagement\",{\"1\":{\"146\":1}}],[\"is\",{\"1\":{\"41\":1,\"135\":1,\"181\":2,\"244\":1,\"267\":1,\"268\":1,\"269\":1,\"288\":3,\"296\":1,\"357\":5,\"365\":2,\"388\":2,\"408\":1,\"507\":1,\"600\":6}}],[\"imag\",{\"1\":{\"360\":1}}],[\"imagename\",{\"1\":{\"394\":2}}],[\"images\",{\"1\":{\"388\":1,\"392\":1,\"395\":1,\"405\":1}}],[\"image\",{\"0\":{\"94\":1,\"386\":1,\"389\":1},\"1\":{\"37\":1,\"94\":2,\"113\":1,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"392\":2,\"393\":1,\"395\":6,\"400\":3,\"439\":1,\"442\":1,\"446\":1,\"453\":1,\"459\":1,\"463\":1,\"468\":1,\"471\":1,\"472\":1,\"473\":1,\"474\":1,\"478\":1,\"480\":1,\"489\":1,\"490\":1,\"491\":1,\"492\":1,\"493\":1,\"494\":1,\"498\":1,\"509\":1,\"510\":1,\"511\":1,\"518\":1,\"521\":1,\"522\":1,\"523\":1,\"524\":1,\"527\":1,\"529\":1,\"533\":1,\"536\":1,\"540\":1,\"548\":1,\"553\":1,\"558\":1,\"562\":1,\"570\":1,\"577\":1}}],[\"implements\",{\"1\":{\"118\":2,\"181\":1,\"182\":1,\"187\":1,\"226\":2,\"233\":1,\"259\":1}}],[\"import\",{\"1\":{\"40\":3,\"41\":10,\"118\":21,\"121\":9,\"124\":2,\"125\":8,\"193\":1,\"265\":3,\"267\":1,\"268\":1,\"272\":2,\"273\":1,\"285\":2,\"296\":3,\"306\":1,\"316\":4,\"324\":1,\"325\":2,\"327\":3,\"334\":2,\"335\":1,\"351\":2,\"352\":1,\"357\":3,\"366\":1}}],[\"invalid\",{\"1\":{\"742\":2}}],[\"input\",{\"1\":{\"732\":1}}],[\"inputstream\",{\"1\":{\"41\":7}}],[\"inodes\",{\"1\":{\"454\":1}}],[\"info\",{\"1\":{\"285\":1,\"316\":2,\"357\":3}}],[\"information\",{\"1\":{\"135\":1,\"244\":2,\"454\":1,\"507\":1}}],[\"inf\",{\"1\":{\"254\":2,\"256\":1}}],[\"infinite\",{\"1\":{\"190\":1}}],[\"include\",{\"1\":{\"609\":2}}],[\"including\",{\"1\":{\"507\":1}}],[\"inceptionyear\",{\"1\":{\"146\":1}}],[\"increments\",{\"1\":{\"181\":1}}],[\"increment=1\",{\"1\":{\"111\":1}}],[\"increment\",{\"1\":{\"39\":2,\"111\":1,\"115\":2}}],[\"in\",{\"1\":{\"135\":1,\"189\":1,\"233\":1,\"244\":1,\"259\":1,\"269\":1,\"271\":1,\"273\":1,\"276\":1,\"285\":1,\"296\":4,\"300\":1,\"311\":1,\"316\":3,\"324\":3,\"325\":4,\"334\":2,\"335\":1,\"342\":2,\"348\":1,\"351\":1,\"352\":1,\"369\":2,\"454\":1,\"475\":3,\"479\":1,\"507\":1,\"528\":1,\"596\":1,\"597\":1,\"599\":1,\"600\":2}}],[\"initial\",{\"1\":{\"189\":6}}],[\"initialcapacity\",{\"1\":{\"189\":8}}],[\"initialize\",{\"1\":{\"101\":1,\"166\":1}}],[\"inited\",{\"1\":{\"126\":1}}],[\"init\",{\"0\":{\"105\":1},\"1\":{\"105\":2,\"327\":1,\"354\":1,\"370\":1,\"423\":1}}],[\"index=\",{\"1\":{\"341\":1}}],[\"indexof\",{\"1\":{\"179\":1}}],[\"index\",{\"1\":{\"44\":1,\"48\":2,\"57\":1,\"65\":1,\"67\":2,\"69\":2,\"71\":2,\"73\":2,\"75\":2,\"78\":3,\"80\":2,\"105\":1,\"179\":6,\"187\":3,\"189\":5,\"249\":2,\"312\":1,\"341\":2,\"345\":1,\"406\":1}}],[\"instructions\",{\"1\":{\"735\":6}}],[\"instances\",{\"1\":{\"316\":1}}],[\"instanceof\",{\"1\":{\"187\":1,\"189\":1}}],[\"instance\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"install\",{\"1\":{\"9\":1,\"155\":3,\"156\":3,\"166\":1,\"171\":1}}],[\"inspect\",{\"1\":{\"397\":1}}],[\"insort\",{\"1\":{\"310\":3}}],[\"insert>\",{\"1\":{\"40\":1}}],[\"insertuser\",{\"1\":{\"40\":2,\"41\":1}}],[\"insert\",{\"1\":{\"39\":10,\"40\":1,\"41\":1,\"115\":10,\"310\":2,\"341\":1,\"345\":1}}],[\"innodb\",{\"1\":{\"39\":1,\"115\":1,\"622\":3,\"625\":3,\"629\":1,\"631\":1}}],[\"intel\",{\"1\":{\"207\":1,\"208\":1,\"211\":1}}],[\"intellij\",{\"0\":{\"132\":1}}],[\"intersection\",{\"1\":{\"353\":1}}],[\"interpreter\",{\"0\":{\"322\":1}}],[\"internet\",{\"1\":{\"233\":1,\"259\":1}}],[\"interruptedexception\",{\"1\":{\"205\":1}}],[\"interrupted\",{\"1\":{\"202\":1}}],[\"interrupt\",{\"1\":{\"202\":1,\"733\":1,\"738\":1}}],[\"intergrationtest2\",{\"1\":{\"125\":1}}],[\"intergrationtest1\",{\"1\":{\"125\":1}}],[\"interface\",{\"1\":{\"40\":1,\"118\":2,\"178\":3,\"179\":1,\"240\":1,\"252\":1,\"253\":1,\"254\":1}}],[\"integration\",{\"1\":{\"166\":3}}],[\"integrationtest2运行结果\",{\"1\":{\"126\":1}}],[\"integrationtest2\",{\"1\":{\"125\":2}}],[\"integrationtest1运行结果\",{\"1\":{\"126\":1}}],[\"integrationtest1\",{\"1\":{\"125\":2}}],[\"integer>\",{\"1\":{\"193\":2}}],[\"integer\",{\"1\":{\"40\":3,\"41\":6,\"118\":1,\"181\":1,\"189\":2,\"239\":1,\"245\":1}}],[\"into\",{\"1\":{\"39\":10,\"40\":1,\"41\":1,\"115\":10,\"135\":1,\"296\":1,\"370\":1}}],[\"int\",{\"1\":{\"39\":1,\"40\":3,\"111\":1,\"115\":1,\"178\":1,\"179\":10,\"181\":12,\"187\":12,\"189\":11,\"193\":1,\"202\":1,\"218\":2,\"219\":1,\"221\":2,\"226\":6,\"229\":4,\"230\":4,\"275\":1,\"276\":1,\"311\":3,\"354\":2,\"360\":2,\"612\":1}}],[\"iftop\",{\"1\":{\"515\":3}}],[\"iface\",{\"1\":{\"497\":1,\"547\":1}}],[\"if\",{\"1\":{\"39\":1,\"41\":1,\"101\":1,\"115\":1,\"181\":6,\"187\":14,\"189\":17,\"210\":1,\"221\":1,\"267\":1,\"272\":1,\"311\":1,\"312\":5,\"316\":2,\"327\":1,\"354\":3,\"590\":4,\"593\":2,\"594\":1,\"645\":3}}],[\"io等待时间百分比\",{\"1\":{\"479\":1,\"528\":1}}],[\"io等待消耗的cpu百分比\",{\"1\":{\"440\":1,\"534\":1}}],[\"iotop常用快捷键\",{\"0\":{\"463\":1,\"562\":1}}],[\"iotop具有与top相似的ui\",{\"1\":{\"461\":1,\"560\":1}}],[\"iotop命令\",{\"1\":{\"461\":1,\"560\":1}}],[\"iotop\",{\"0\":{\"460\":1,\"559\":1},\"1\":{\"448\":1,\"462\":1,\"561\":1}}],[\"iostat命令\",{\"1\":{\"456\":1,\"555\":1}}],[\"iostat\",{\"0\":{\"455\":1,\"554\":1},\"1\":{\"448\":1,\"457\":1,\"515\":3,\"556\":1,\"567\":1}}],[\"ioc容器管理的新对象\",{\"1\":{\"121\":1}}],[\"ioc配置\",{\"0\":{\"119\":1}}],[\"ioc\",{\"1\":{\"111\":2,\"252\":1}}],[\"ioexception\",{\"1\":{\"41\":3}}],[\"io<\",{\"1\":{\"27\":2,\"30\":2}}],[\"io\",{\"0\":{\"319\":1,\"334\":1},\"1\":{\"24\":1,\"27\":1,\"30\":1,\"41\":3,\"50\":3,\"61\":1,\"69\":2,\"71\":1,\"75\":1,\"93\":1,\"139\":1,\"181\":1,\"182\":1,\"198\":1,\"226\":2,\"239\":1,\"263\":2,\"277\":9,\"280\":1,\"298\":1,\"303\":1,\"319\":1,\"320\":2,\"322\":3,\"333\":5,\"334\":5,\"479\":1,\"506\":1,\"528\":1}}],[\"id用于多个并发传输的\",{\"1\":{\"652\":1}}],[\"id来标记通信的两个端点\",{\"1\":{\"651\":1}}],[\"id之间\",{\"1\":{\"631\":1}}],[\"id和max\",{\"1\":{\"631\":1}}],[\"id和artifact\",{\"1\":{\"21\":1}}],[\"idx\",{\"1\":{\"310\":1,\"354\":6}}],[\"identityhashcode\",{\"1\":{\"187\":1}}],[\"idea\",{\"0\":{\"132\":1}}],[\"id>\",{\"1\":{\"156\":1,\"159\":2,\"170\":2}}],[\"ids\",{\"1\":{\"146\":1,\"631\":5}}],[\"id=9\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=8\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=7\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=6\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=5\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=4\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=3\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=2\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=10\",{\"1\":{\"41\":1,\"126\":1}}],[\"id=11\",{\"1\":{\"41\":1}}],[\"id=1\",{\"1\":{\"41\":3,\"126\":1}}],[\"id=\",{\"1\":{\"40\":6,\"57\":1}}],[\"id\",{\"1\":{\"39\":2,\"40\":10,\"41\":10,\"111\":2,\"115\":2,\"118\":1,\"156\":1,\"170\":1,\"171\":2,\"202\":2,\"316\":1,\"395\":6,\"400\":1,\"440\":1,\"479\":1,\"506\":1,\"507\":2,\"528\":1,\"534\":1,\"631\":19,\"651\":4,\"652\":5}}],[\"id即可\",{\"1\":{\"21\":1}}],[\"不保证可靠交付\",{\"1\":{\"724\":1}}],[\"不重复\",{\"1\":{\"724\":1}}],[\"不丢失\",{\"1\":{\"724\":1}}],[\"不停监视系统的半开连接和不活动连接\",{\"1\":{\"717\":1}}],[\"不必等待超时再重传\",{\"1\":{\"697\":1}}],[\"不必等其回来\",{\"1\":{\"646\":1}}],[\"不合法\",{\"1\":{\"662\":1}}],[\"不关心数据包的顺序\",{\"1\":{\"651\":1}}],[\"不用建立tcp连接\",{\"1\":{\"713\":1}}],[\"不用经过tcp三次握手\",{\"1\":{\"668\":1}}],[\"不用再通过网络\",{\"1\":{\"647\":1}}],[\"不用调整\",{\"1\":{\"187\":1}}],[\"不安全是因为用户点击接受了中间人服务器的证书\",{\"1\":{\"641\":1}}],[\"不在\",{\"1\":{\"631\":1}}],[\"不建议将隔离级别升级到串行化\",{\"1\":{\"630\":1}}],[\"不建议手动实例化\",{\"1\":{\"280\":1}}],[\"不仅告诉接收到哪些数据\",{\"1\":{\"690\":1}}],[\"不仅客户端会验证服务端的身份\",{\"1\":{\"665\":1}}],[\"不仅给行记录加上了行锁\",{\"1\":{\"625\":1}}],[\"不仅浪费劳动力\",{\"1\":{\"168\":1}}],[\"不支持post请求\",{\"1\":{\"681\":1}}],[\"不支持添加\",{\"1\":{\"624\":1}}],[\"不支持随机元素访问\",{\"1\":{\"183\":1}}],[\"不支持随机快速访问\",{\"1\":{\"182\":1}}],[\"不及格\",{\"1\":{\"594\":2}}],[\"不显示缓冲区调节列\",{\"1\":{\"468\":1,\"518\":1}}],[\"不再重新存储该文件\",{\"1\":{\"420\":1}}],[\"不按照以上方式对待或保存数据\",{\"1\":{\"420\":1}}],[\"不影响使用\",{\"1\":{\"388\":1}}],[\"不一定在所有情况下都要在装饰列表中包含索引\",{\"1\":{\"369\":1}}],[\"不一定要用\",{\"1\":{\"12\":1}}],[\"不相当于\",{\"1\":{\"310\":1}}],[\"不相同就通过拉链法解决冲突\",{\"1\":{\"187\":1}}],[\"不阻塞的入队\",{\"1\":{\"293\":1}}],[\"不阻塞的出队\",{\"1\":{\"293\":1}}],[\"不像标准库中的并发型\",{\"1\":{\"293\":1}}],[\"不为\",{\"1\":{\"271\":1}}],[\"不做处理\",{\"0\":{\"229\":1}}],[\"不是强制要求的\",{\"1\":{\"571\":1}}],[\"不是\",{\"1\":{\"215\":1}}],[\"不会立即将脏页写入磁盘\",{\"1\":{\"622\":1}}],[\"不会有查询缓存这个阶段了\",{\"1\":{\"621\":1}}],[\"不会影响镜像\",{\"1\":{\"397\":1}}],[\"不会\",{\"1\":{\"273\":1}}],[\"不会被取消\",{\"1\":{\"273\":1}}],[\"不会上锁\",{\"1\":{\"214\":1}}],[\"不会在存储库中查找\",{\"1\":{\"142\":1}}],[\"不过在内存修改该\",{\"1\":{\"622\":1}}],[\"不过当前主流的虚拟机都是按照可扩展来实现的\",{\"1\":{\"243\":1}}],[\"不过可以使用\",{\"1\":{\"204\":1}}],[\"不过这些方式并没有真正创建出线程\",{\"1\":{\"200\":1}}],[\"不清除中断标记\",{\"1\":{\"202\":1}}],[\"不允许通过dns服务商网站修改记录\",{\"1\":{\"671\":1}}],[\"不允许null键和值\",{\"1\":{\"193\":1}}],[\"不允许用户在该类型的\",{\"1\":{\"170\":1}}],[\"不准确的问题\",{\"1\":{\"190\":1}}],[\"不就是原本的数组长度吗\",{\"1\":{\"189\":1}}],[\"不等于\",{\"1\":{\"189\":1}}],[\"不断的向\",{\"1\":{\"187\":1}}],[\"不成立\",{\"1\":{\"181\":1}}],[\"不能直接访问内核地址空间或执行特权指令\",{\"1\":{\"738\":1}}],[\"不能直接修改集合中的元素\",{\"1\":{\"178\":1}}],[\"不能回滚\",{\"1\":{\"624\":1}}],[\"不能以数字开头\",{\"1\":{\"573\":1}}],[\"不能光看这一点\",{\"1\":{\"479\":1,\"528\":1}}],[\"不能利用多\",{\"1\":{\"320\":1}}],[\"不能根据某个参数来获取对应的实现类\",{\"1\":{\"255\":1}}],[\"不能按需加载且获取某个实现类的方式不够灵活\",{\"1\":{\"255\":1}}],[\"不能认为一种一定好于另一种\",{\"1\":{\"214\":1}}],[\"不能有两个相同的键\",{\"1\":{\"186\":1}}],[\"不能往回遍历\",{\"1\":{\"178\":1}}],[\"不存在时\",{\"1\":{\"171\":1}}],[\"不同关联性的tlb具有不同的查找速度\",{\"1\":{\"736\":1}}],[\"不同类型的指令在执行过程中可能需要不同的时间\",{\"1\":{\"735\":1}}],[\"不同与其他\",{\"1\":{\"278\":1}}],[\"不同之处\",{\"1\":{\"274\":1}}],[\"不同的时刻读到的同一批数据可能是不一样的\",{\"1\":{\"628\":1}}],[\"不同的表现形式\",{\"1\":{\"239\":1}}],[\"不同的线程可能在不同的时间片获得cpu执行的机会\",{\"1\":{\"191\":1}}],[\"不同\",{\"0\":{\"249\":1},\"1\":{\"211\":1}}],[\"不同公司甚至不同项目之间的构建的方式都不尽相同\",{\"1\":{\"161\":1}}],[\"不同于其他的\",{\"1\":{\"239\":1}}],[\"不同于\",{\"1\":{\"44\":1}}],[\"不需要重传整个连接\",{\"1\":{\"648\":1}}],[\"不需要操作系统的介入\",{\"1\":{\"196\":1}}],[\"不需要开发者额外配置\",{\"1\":{\"158\":1}}],[\"不需要此依赖项即可正常工作\",{\"1\":{\"142\":1}}],[\"不包括\",{\"1\":{\"143\":1}}],[\"不可重复读和幻读现象都不可能会发生\",{\"1\":{\"630\":1}}],[\"不可重复读和幻读现象\",{\"1\":{\"630\":1}}],[\"不可重复读指的是在同一事务内\",{\"1\":{\"628\":1}}],[\"不可重复读\",{\"1\":{\"628\":1}}],[\"不可能只执行其中的一部分操作\",{\"1\":{\"627\":1}}],[\"不可强占用\",{\"1\":{\"625\":1}}],[\"不可中断\",{\"1\":{\"506\":1}}],[\"不可自作主张随意使用版本\",{\"1\":{\"21\":1}}],[\"不可以直接使用\",{\"1\":{\"21\":1}}],[\"而缓存行一般大小为\",{\"1\":{\"743\":1}}],[\"而用户态则受到限制\",{\"1\":{\"738\":1}}],[\"而内核态\",{\"1\":{\"738\":1}}],[\"而内核态恢复到用户态\",{\"1\":{\"222\":1}}],[\"而无需每次都访问内存中的页表\",{\"1\":{\"736\":1}}],[\"而防火墙采用的验证连接有效性的方法则可以是cookie或cathe等其他技术\",{\"1\":{\"717\":1}}],[\"而web网站成千上万客户端的连接用短连接会更省一些资源\",{\"1\":{\"713\":1}}],[\"而服务端可能还有数据需要处理和发送\",{\"1\":{\"706\":1}}],[\"而浏览器为了安全问题一般都限制了跨域访问\",{\"1\":{\"680\":1}}],[\"而rpc更多用于c\",{\"1\":{\"655\":1}}],[\"而post请求则是没有大小限制的\",{\"1\":{\"653\":1}}],[\"而post请求会把提交的数据则放置在是http请求报文的请求体中\",{\"1\":{\"653\":1}}],[\"而post会对服务器资源进行改变\",{\"1\":{\"653\":1}}],[\"而post不是幂等的\",{\"1\":{\"653\":1}}],[\"而其他流的数据报文只要被完整接收\",{\"1\":{\"651\":1}}],[\"而quic是通过id识别链接\",{\"1\":{\"648\":1}}],[\"而协同工作的人们都通过客户端连到这台服务器\",{\"1\":{\"416\":1}}],[\"而另外一些进程也只能看到与它们自己相关的资源\",{\"1\":{\"406\":1}}],[\"而标签就常用于对应该软件的各个版本\",{\"1\":{\"388\":1}}],[\"而容器内的应用进程直接运行于宿主的内核\",{\"1\":{\"380\":1}}],[\"而应当使用\",{\"1\":{\"286\":1}}],[\"而一个\",{\"1\":{\"280\":1}}],[\"而通过改用\",{\"1\":{\"277\":1}}],[\"而当外部程序装配这个模块的时候\",{\"1\":{\"254\":1}}],[\"而后通过反射逐个实例化对象\",{\"1\":{\"254\":1}}],[\"而本地方法栈为虚拟机使用的\",{\"1\":{\"240\":1}}],[\"而这时\",{\"1\":{\"628\":1}}],[\"而这些\",{\"1\":{\"239\":1}}],[\"而这个伪造的证书是能被浏览器\",{\"1\":{\"641\":1}}],[\"而这个计算下标的方法是\",{\"1\":{\"188\":1}}],[\"而这个库又依赖于其他库\",{\"1\":{\"20\":1}}],[\"而共享锁不一样\",{\"1\":{\"227\":1}}],[\"而言\",{\"1\":{\"217\":1,\"386\":1}}],[\"而且根本不能说是问题\",{\"1\":{\"726\":1}}],[\"而且同时有成千上万的用户\",{\"1\":{\"713\":1}}],[\"而且连接数不能太多情况\",{\"1\":{\"713\":1}}],[\"而且服务端也会验证客户端的身份\",{\"1\":{\"665\":1}}],[\"而且post请求参数则被包装到请求体中\",{\"1\":{\"653\":1}}],[\"而且并发请求的数量比http1\",{\"1\":{\"647\":1}}],[\"而且每次都要重复发送\",{\"1\":{\"647\":1}}],[\"而且wa值比较大\",{\"1\":{\"479\":1,\"528\":1}}],[\"而且对新的版本控制系统做了很多改进\",{\"1\":{\"419\":1}}],[\"而且也没有进行硬件虚拟\",{\"1\":{\"380\":1}}],[\"而且它可以通过\",{\"1\":{\"254\":1}}],[\"而且栈的大小可以动态调整\",{\"1\":{\"239\":1}}],[\"而且\",{\"1\":{\"216\":1,\"380\":1}}],[\"而且性能也更好\",{\"1\":{\"187\":1}}],[\"而非差异比较\",{\"1\":{\"420\":1}}],[\"而非事件循环运行所在线程\",{\"1\":{\"278\":1}}],[\"而非当前线程\",{\"1\":{\"204\":1}}],[\"而非创建\",{\"1\":{\"200\":1}}],[\"而纤程就可以理解为座椅\",{\"1\":{\"196\":1}}],[\"而线程2先完成了插入操作\",{\"1\":{\"191\":1}}],[\"而此时条件成立\",{\"1\":{\"189\":1}}],[\"而新旧\",{\"1\":{\"189\":1}}],[\"而红黑树就是为了解决二叉查找树的缺陷\",{\"1\":{\"187\":1}}],[\"而在指定if\",{\"1\":{\"645\":1}}],[\"而在指定位置插入和删除的话\",{\"1\":{\"183\":2}}],[\"而在栈内创建的引用类型实例\",{\"1\":{\"239\":1}}],[\"而在一个位置上有多个元素需要进行扩容时\",{\"1\":{\"190\":1}}],[\"而在\",{\"1\":{\"187\":1}}],[\"而在它们的基础上还有不同的实现类\",{\"1\":{\"178\":1}}],[\"而是为字符分配代码点的标准\",{\"1\":{\"751\":1}}],[\"而是在运行时由解释器逐行解释并执行\",{\"1\":{\"744\":1}}],[\"而是在整个用户会话中一直存在下去\",{\"1\":{\"676\":1}}],[\"而是会应答某个之前的id\",{\"1\":{\"709\":1}}],[\"而是等待一段时间发送ack\",{\"1\":{\"709\":1}}],[\"而是应该先发一小部分探测数据\",{\"1\":{\"695\":1}}],[\"而是放在一个个独立的扩展头部\",{\"1\":{\"678\":1}}],[\"而是一种调用方式\",{\"1\":{\"655\":1}}],[\"而是一种访问集合的方法\",{\"1\":{\"178\":1}}],[\"而是通过连接\",{\"1\":{\"651\":1}}],[\"而是客户端本地浏览器缓存中就有的这个资源\",{\"1\":{\"642\":1}}],[\"而是客户端跳转\",{\"1\":{\"642\":1}}],[\"而是先快照读\",{\"1\":{\"632\":1}}],[\"而是只保留一个链接指向之前存储的文件\",{\"1\":{\"420\":1}}],[\"而是使用一台充当\",{\"1\":{\"417\":1}}],[\"而是把代码仓库完整地镜像下来\",{\"1\":{\"417\":1}}],[\"而是仅在当前层标记为该文件已删除\",{\"1\":{\"386\":1}}],[\"而是两者可以和谐共存\",{\"1\":{\"380\":2}}],[\"而是直接在超级循环直接进入下一个任务的执行\",{\"1\":{\"334\":1}}],[\"而是由操作系统层面触发的\",{\"1\":{\"239\":1}}],[\"而是引用\",{\"1\":{\"233\":1,\"259\":1}}],[\"而是需要使用迭代器的\",{\"1\":{\"178\":1}}],[\"而是执行需要依赖项\",{\"1\":{\"142\":1}}],[\"而\",{\"1\":{\"177\":2,\"181\":3,\"187\":2,\"189\":4,\"218\":2,\"233\":2,\"237\":1,\"241\":1,\"255\":1,\"259\":2,\"265\":1,\"380\":1,\"386\":1,\"406\":1,\"624\":3,\"635\":1}}],[\"而不先执行回表\",{\"1\":{\"621\":1}}],[\"而不使用块每秒\",{\"1\":{\"457\":1,\"556\":1}}],[\"而不仅仅是临时文件\",{\"1\":{\"392\":1}}],[\"而不用担心运行环境的变化导致应用无法正常运行的情况\",{\"1\":{\"384\":1}}],[\"而不会波及到整台机器\",{\"1\":{\"383\":1}}],[\"而不会对其他生命周期造成任何影响\",{\"1\":{\"164\":1}}],[\"而不是在缓冲区排队\",{\"1\":{\"687\":1}}],[\"而不是间接相关\",{\"1\":{\"617\":1}}],[\"而不是停止和移除所有服务\",{\"1\":{\"403\":1}}],[\"而不是启动所有服务\",{\"1\":{\"402\":1}}],[\"而不是硬件\",{\"1\":{\"380\":1}}],[\"而不是\",{\"1\":{\"306\":1}}],[\"而不是转换为红黑树\",{\"1\":{\"187\":1}}],[\"而不需要使用回调或低级协议和传输\",{\"1\":{\"281\":1}}],[\"而不需要额外的同步措施\",{\"1\":{\"193\":1}}],[\"而不需要了解底层集合的具体实现细节\",{\"1\":{\"178\":1}}],[\"而不同环境的构建过程很可能是不同的\",{\"1\":{\"168\":1}}],[\"而插件目标是类中的方法\",{\"1\":{\"151\":1}}],[\"而被继承的工程\",{\"1\":{\"21\":1}}],[\"且与ascii兼容\",{\"1\":{\"751\":1}}],[\"且此数据只在当前缓存中存在\",{\"1\":{\"742\":1}}],[\"且需要存储新的数据或指令时\",{\"1\":{\"739\":1}}],[\"且比目前主流的http1\",{\"1\":{\"655\":1}}],[\"且把每个参数区分对待\",{\"1\":{\"579\":1}}],[\"且把所有参数看成一个整体\",{\"1\":{\"579\":1}}],[\"且如果使用\",{\"1\":{\"311\":1}}],[\"且该动作连续重复了\",{\"1\":{\"239\":1}}],[\"且\",{\"1\":{\"187\":1}}],[\"且一个\",{\"1\":{\"186\":1}}],[\"且键是唯一的\",{\"1\":{\"186\":1}}],[\"且它不能有重复的元素\",{\"1\":{\"184\":1}}],[\"且后面的阶段依赖于前面的阶段\",{\"1\":{\"163\":1}}],[\"且支持正则表达式\",{\"1\":{\"81\":1}}],[\"且这几个程序都是在同一个处理机上运行\",{\"1\":{\"197\":1}}],[\"且这时父项目类型为pom类型\",{\"1\":{\"22\":1}}],[\"且这里的回显并不是配置的\",{\"1\":{\"17\":1}}],[\"且可以应用projecta中定义的所有资源信息\",{\"1\":{\"21\":1}}],[\"你输入num2的值是\",{\"1\":{\"606\":2}}],[\"你输入num1的值是\",{\"1\":{\"606\":2}}],[\"你也可以直接这样创建分支并切换过去\",{\"1\":{\"430\":1}}],[\"你也可以自定义名字\",{\"1\":{\"76\":1}}],[\"你也许想回顾下提交历史\",{\"1\":{\"428\":1}}],[\"你的文件可能处于其中之一\",{\"1\":{\"421\":1}}],[\"你只需要将自己的修改推送给别人就可以了\",{\"1\":{\"417\":1}}],[\"你只需要加上你直接依赖的库\",{\"1\":{\"20\":1}}],[\"你将丢失所有数据\",{\"1\":{\"416\":1}}],[\"你可以使用如下命令添加\",{\"1\":{\"426\":1}}],[\"你可以比较文件的变化细节\",{\"1\":{\"414\":1}}],[\"你可以对任何类型的文件进行版本控制\",{\"1\":{\"413\":1}}],[\"你不能有两个相同的键\",{\"1\":{\"186\":1}}],[\"你不必自己去找出所有这些依赖\",{\"1\":{\"20\":1}}],[\"标点符号以及一些控制字符\",{\"1\":{\"751\":1}}],[\"标志置\",{\"1\":{\"687\":1}}],[\"标题行\",{\"1\":{\"425\":1}}],[\"标准\",{\"1\":{\"383\":1}}],[\"标准化\",{\"1\":{\"382\":1}}],[\"标准版\",{\"1\":{\"7\":1}}],[\"标记将宿主机上的文件或目录挂载到容器中\",{\"1\":{\"397\":1}}],[\"标记来将一个或多个数据卷挂载到容器里\",{\"1\":{\"397\":1}}],[\"标记就可以了\",{\"1\":{\"223\":1}}],[\"标记\",{\"1\":{\"219\":1}}],[\"标识报文的返回地址\",{\"1\":{\"687\":1}}],[\"标识为线程独占状态\",{\"1\":{\"206\":1}}],[\"标识必填\",{\"1\":{\"170\":1}}],[\"标签以及镜像\",{\"1\":{\"400\":1}}],[\"标签添加如下配置\",{\"1\":{\"171\":4}}],[\"标签来声明一组\",{\"1\":{\"170\":1}}],[\"标签配置远程仓库\",{\"1\":{\"159\":1}}],[\"标签定义版本要求\",{\"1\":{\"143\":1}}],[\"标签插入到\",{\"1\":{\"105\":1}}],[\"标签是由侧边栏中选中条目的名称所生成的\",{\"1\":{\"54\":1}}],[\"标签为父工程的位置\",{\"1\":{\"30\":1}}],[\"标签下前几个\",{\"1\":{\"27\":1}}],[\"标签内可以包含多个\",{\"1\":{\"20\":1}}],[\"通讯效率高\",{\"1\":{\"724\":1}}],[\"通讯双方各自cache一份header\",{\"1\":{\"647\":1}}],[\"通信之后断开连接时需要四次挥手\",{\"1\":{\"724\":1}}],[\"通信都能被中间人监听了\",{\"1\":{\"641\":1}}],[\"通信\",{\"1\":{\"204\":1}}],[\"通知或者中断\",{\"1\":{\"201\":1}}],[\"通常位于cpu内部\",{\"1\":{\"740\":1}}],[\"通常会将相关的数据块放在相邻的磁盘扇区上\",{\"1\":{\"737\":1}}],[\"通常会顺序地访问相邻的元素\",{\"1\":{\"737\":1}}],[\"通常与正在执行的程序或指令有关\",{\"1\":{\"733\":1}}],[\"通常与硬件设备相关\",{\"1\":{\"733\":1}}],[\"通常计时器设置为两小时\",{\"1\":{\"712\":1}}],[\"通常在刚刚开始发送报文段时\",{\"1\":{\"695\":1}}],[\"通常针对数据更新操作\",{\"1\":{\"628\":1}}],[\"通常\",{\"1\":{\"388\":1,\"675\":1}}],[\"通常的修复方法是\",{\"1\":{\"306\":1}}],[\"通常情况下\",{\"1\":{\"243\":1,\"269\":1}}],[\"通常为几mb至几十mb\",{\"1\":{\"740\":1}}],[\"通常为几百kb至几mb\",{\"1\":{\"740\":1}}],[\"通常为几十kb\",{\"1\":{\"739\":1,\"740\":1}}],[\"通常为\",{\"1\":{\"239\":1}}],[\"通常需要检查代码\",{\"1\":{\"239\":1}}],[\"通常是icmp\",{\"1\":{\"750\":1}}],[\"通常是二进制文件\",{\"1\":{\"744\":1}}],[\"通常是服务器作为网关或代理时返回的错误码\",{\"1\":{\"642\":1}}],[\"通常是一组接口或者抽象类\",{\"1\":{\"254\":1}}],[\"通常是因为加载的\",{\"1\":{\"239\":2}}],[\"通常是唯一的\",{\"1\":{\"139\":1}}],[\"通常只需要通过\",{\"1\":{\"239\":1}}],[\"通常有两种方法来创建线程\",{\"1\":{\"233\":1,\"259\":1}}],[\"通常被用在网络环境中\",{\"1\":{\"233\":1,\"259\":1}}],[\"通常用于隔离不同的应用\",{\"1\":{\"380\":1}}],[\"通常用于线程交互\",{\"1\":{\"204\":1}}],[\"通常用于暂停执行\",{\"1\":{\"204\":1}}],[\"通常一个\",{\"1\":{\"151\":1}}],[\"通常表示依赖项文件名上的扩展名\",{\"1\":{\"142\":1}}],[\"通用实现的方法\",{\"0\":{\"230\":1}}],[\"通用写法\",{\"0\":{\"152\":1}}],[\"通用模块\",{\"1\":{\"24\":1}}],[\"通用工具模块等\",{\"1\":{\"24\":1}}],[\"通俗理解就是在a中导入b工程jar包\",{\"1\":{\"20\":1}}],[\"通过充分利用局部性原理\",{\"1\":{\"737\":1}}],[\"通过将常用的地址映射存储在tlb中\",{\"1\":{\"736\":1}}],[\"通过管理这些硬件资源\",{\"1\":{\"731\":1}}],[\"通过tcp传输数据可以保证数据无差错\",{\"1\":{\"724\":1}}],[\"通过对齐数据结构或在数据结构之间添加填充\",{\"1\":{\"743\":1}}],[\"通过对方的ip\",{\"1\":{\"717\":1}}],[\"通过对象锁\",{\"1\":{\"219\":1}}],[\"通过窗口告诉对方本端的tcp接收缓冲区还能容纳多少字节的数据\",{\"1\":{\"687\":1}}],[\"通过覆盖计算机的tcp\",{\"1\":{\"670\":1}}],[\"通过单向递增的\",{\"1\":{\"652\":1}}],[\"通过比较两个数据包的stream\",{\"1\":{\"652\":1}}],[\"通过不同的\",{\"1\":{\"652\":1}}],[\"通过不停地切换线程执行\",{\"1\":{\"198\":1}}],[\"通过服务端告知客户端是否可以使用缓存的方式被称为协商缓存\",{\"1\":{\"643\":1}}],[\"通过协商的加密算法\",{\"1\":{\"640\":1}}],[\"通过持久性+原子性+隔离性来保证\",{\"1\":{\"627\":1}}],[\"通过主键索引树搜索获取一行记录\",{\"1\":{\"622\":1}}],[\"通过端口找进程id\",{\"0\":{\"494\":1}}],[\"通过统一的名字空间和共用\",{\"1\":{\"406\":1}}],[\"通过简单的命令\",{\"1\":{\"399\":1}}],[\"通过我们前面讲的docker\",{\"1\":{\"395\":1}}],[\"通过这种\",{\"1\":{\"239\":1}}],[\"通过子类的\",{\"1\":{\"230\":1}}],[\"通过内置的\",{\"1\":{\"226\":1}}],[\"通过构造函数传参可以指定该锁是否是公平锁\",{\"1\":{\"217\":1}}],[\"通过总线嗅探机制可以感知到数据的变化而将自己缓存里的数据失效\",{\"1\":{\"207\":1}}],[\"通过时间片分配算法来循环执行线程任务\",{\"1\":{\"198\":1}}],[\"通过它可以为不同的环境定制不同的构建过程\",{\"1\":{\"168\":1}}],[\"通过一个通用的本地存储库解决了这两个问题\",{\"1\":{\"140\":1}}],[\"通过设置\",{\"1\":{\"60\":1,\"74\":1,\"77\":1}}],[\"通过用\",{\"1\":{\"57\":1}}],[\"通过配置\",{\"1\":{\"52\":1}}],[\"通过\",{\"1\":{\"49\":1,\"58\":2,\"156\":1,\"159\":2,\"170\":1,\"187\":1,\"202\":1,\"219\":1,\"230\":3,\"239\":1,\"243\":1,\"249\":1,\"256\":1,\"263\":2,\"265\":1,\"288\":1,\"380\":1,\"395\":2,\"399\":1,\"406\":2,\"627\":3,\"665\":1,\"687\":1}}],[\"通过maven可以更加方便的实现导包\",{\"1\":{\"19\":1}}],[\"通过解压工具一看就知道了\",{\"1\":{\"16\":1}}],[\"xx\",{\"1\":{\"239\":6,\"249\":1}}],[\"xxxcache\",{\"1\":{\"245\":1}}],[\"xxx\",{\"1\":{\"27\":1,\"440\":1,\"534\":1}}],[\"xxx那就不用输入\",{\"1\":{\"14\":1}}],[\"xms\",{\"1\":{\"243\":1}}],[\"xmx\",{\"1\":{\"239\":1,\"243\":1}}],[\"xml<\",{\"1\":{\"149\":1}}],[\"xml方式可以使用<bean>标签\",{\"1\":{\"121\":1}}],[\"xmlschema\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"xmlns\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":2,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"xmlns=\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"xml\",{\"1\":{\"27\":1,\"30\":2,\"32\":1,\"35\":3,\"40\":6,\"41\":2,\"102\":1,\"117\":1,\"124\":2,\"125\":1,\"137\":3,\"147\":1,\"149\":4,\"150\":2,\"158\":1,\"159\":1,\"169\":3,\"170\":3,\"171\":3}}],[\"xml配置\",{\"1\":{\"27\":1,\"32\":1}}],[\"xml中出现modules表示包含的所有子模块\",{\"1\":{\"22\":1}}],[\"xml文件\",{\"1\":{\"20\":1}}],[\"xml文件中增加配置定义依赖关系\",{\"1\":{\"20\":1}}],[\"x\",{\"1\":{\"139\":3,\"189\":1,\"265\":4,\"277\":4,\"310\":17,\"312\":16,\"342\":2,\"344\":2,\"345\":7,\"351\":4,\"353\":6,\"360\":13,\"370\":8,\"430\":2,\"454\":2,\"457\":1,\"506\":1,\"515\":1,\"556\":1}}],[\"xss是指恶意攻击者利用网站没有对用户提交数据进行转义处理或者过滤不足的缺点\",{\"1\":{\"656\":1}}],[\"xss\",{\"1\":{\"239\":1}}],[\"xsd\",{\"1\":{\"27\":2,\"30\":2,\"32\":2,\"35\":2,\"117\":2,\"124\":2,\"137\":2,\"146\":2,\"149\":4,\"159\":2}}],[\"xsi\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"xsi=\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"a页面想获取b页面资源\",{\"1\":{\"680\":1}}],[\"amount\",{\"1\":{\"475\":1}}],[\"amend\",{\"1\":{\"429\":2}}],[\"avgqu\",{\"1\":{\"458\":1,\"557\":1}}],[\"avgrq\",{\"1\":{\"458\":1,\"557\":1}}],[\"average\",{\"1\":{\"348\":3,\"440\":1,\"534\":1}}],[\"ain\",{\"1\":{\"400\":1}}],[\"aiohtttp\",{\"1\":{\"334\":1,\"335\":1}}],[\"aiohttp\",{\"1\":{\"320\":1,\"334\":2,\"335\":1}}],[\"ago\",{\"1\":{\"395\":2}}],[\"age\",{\"1\":{\"365\":1,\"366\":2,\"368\":3}}],[\"auxww\",{\"1\":{\"507\":1}}],[\"aux\",{\"1\":{\"507\":2,\"509\":2,\"511\":1,\"512\":1,\"513\":1,\"515\":1,\"564\":1,\"748\":2}}],[\"au\",{\"1\":{\"491\":1}}],[\"aup\",{\"1\":{\"486\":1,\"544\":1}}],[\"aufs\",{\"1\":{\"382\":1}}],[\"author=bob\",{\"1\":{\"428\":1}}],[\"author\",{\"1\":{\"40\":2,\"41\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2}}],[\"automated\",{\"1\":{\"388\":1}}],[\"autowired\",{\"1\":{\"118\":6,\"125\":4}}],[\"auto2top\",{\"0\":{\"72\":1},\"1\":{\"73\":1}}],[\"autocommit\",{\"1\":{\"41\":5}}],[\"auto\",{\"1\":{\"39\":2,\"93\":3,\"111\":2,\"115\":2}}],[\"a=$\",{\"1\":{\"575\":1}}],[\"a=`\",{\"1\":{\"575\":1}}],[\"a=2\",{\"1\":{\"353\":1}}],[\"a=3\",{\"1\":{\"353\":1}}],[\"a=1\",{\"1\":{\"353\":2}}],[\"a=4\",{\"1\":{\"353\":2}}],[\"awk\",{\"1\":{\"494\":1}}],[\"aw可等待对象\",{\"1\":{\"275\":1}}],[\"aw\",{\"1\":{\"274\":2,\"275\":3}}],[\"aws\",{\"1\":{\"273\":6,\"276\":6}}],[\"awaited\",{\"0\":{\"306\":1},\"1\":{\"267\":1,\"268\":1,\"306\":1}}],[\"awaitable\",{\"0\":{\"266\":1},\"1\":{\"266\":2,\"273\":1,\"274\":1}}],[\"await\",{\"1\":{\"263\":2,\"265\":10,\"266\":1,\"267\":2,\"268\":1,\"269\":3,\"270\":1,\"272\":1,\"273\":2,\"274\":3,\"275\":2,\"276\":2,\"277\":1,\"281\":1,\"285\":6,\"287\":1,\"288\":3,\"292\":1,\"293\":1,\"296\":4,\"300\":5,\"302\":2,\"303\":6,\"306\":4,\"334\":2,\"335\":1,\"336\":1,\"458\":1,\"557\":1}}],[\"awesome\",{\"1\":{\"98\":1}}],[\"aquire\",{\"1\":{\"230\":1}}],[\"aqs\",{\"0\":{\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1},\"1\":{\"226\":6,\"227\":1}}],[\"ab刚好在一条缓存行里\",{\"1\":{\"743\":1}}],[\"about\",{\"1\":{\"507\":1}}],[\"abracadabra\",{\"1\":{\"353\":1}}],[\"abecgfidhjk\",{\"1\":{\"352\":1}}],[\"aba\",{\"1\":{\"223\":4,\"224\":1}}],[\"aba问题\",{\"1\":{\"223\":1}}],[\"abc\",{\"1\":{\"189\":1,\"349\":1}}],[\"abstractownablesynchronizer\",{\"1\":{\"226\":1}}],[\"abstract\",{\"1\":{\"226\":1}}],[\"abstractqueuedsynchronizer\",{\"1\":{\"226\":2}}],[\"abstractsequentiallist<e>\",{\"1\":{\"182\":1}}],[\"abstractlist<e>\",{\"1\":{\"181\":1}}],[\"afternodeinsertion\",{\"1\":{\"187\":1}}],[\"afternodeaccess\",{\"1\":{\"187\":1}}],[\"after\",{\"1\":{\"187\":1,\"265\":5,\"271\":1}}],[\"ack报文\",{\"1\":{\"716\":2}}],[\"ack报文发生了丢包是不会重传的\",{\"1\":{\"701\":1}}],[\"ack值为服务器发送的序列号w+1\",{\"1\":{\"705\":1}}],[\"ack值为客户端发送的序列号u+1\",{\"1\":{\"705\":1}}],[\"ack状态\",{\"1\":{\"705\":1}}],[\"ack的值为客户端的序列号u+1\",{\"1\":{\"705\":1}}],[\"ack标识位置为1\",{\"1\":{\"705\":2}}],[\"ack和syn一起发送客户端\",{\"1\":{\"699\":1}}],[\"ack\",{\"1\":{\"687\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":4,\"701\":4,\"706\":1,\"708\":5,\"714\":1,\"717\":1,\"722\":2,\"729\":2}}],[\"acid\",{\"0\":{\"627\":1}}],[\"actual\",{\"1\":{\"327\":1}}],[\"action\",{\"1\":{\"178\":3,\"612\":1}}],[\"activebydefault>\",{\"1\":{\"171\":1}}],[\"activeprofiles>\",{\"1\":{\"171\":1}}],[\"activeprofile>\",{\"1\":{\"171\":1}}],[\"activation>\",{\"1\":{\"171\":4}}],[\"acquire\",{\"1\":{\"287\":3,\"336\":1}}],[\"acquireshared\",{\"1\":{\"230\":1}}],[\"access\",{\"1\":{\"287\":2,\"735\":1}}],[\"accept\",{\"1\":{\"178\":1,\"714\":2}}],[\"accumulator\",{\"1\":{\"135\":1}}],[\"across\",{\"1\":{\"135\":1}}],[\"atop\",{\"1\":{\"515\":2}}],[\"atomicity\",{\"1\":{\"627\":1}}],[\"atomicintegerfieldupdater\",{\"1\":{\"224\":1}}],[\"atomicintegerarray\",{\"1\":{\"224\":1}}],[\"atomicinteger\",{\"1\":{\"221\":4,\"224\":1}}],[\"atomicmarkablereference\",{\"1\":{\"224\":1}}],[\"atomicstampedreference\",{\"1\":{\"224\":1}}],[\"atomicreferencefieldupdater\",{\"1\":{\"224\":1}}],[\"atomicreference\",{\"1\":{\"224\":1}}],[\"atomicreferencearray\",{\"1\":{\"224\":1}}],[\"atomicboolean\",{\"1\":{\"224\":1}}],[\"atomiclongfieldupdater\",{\"1\":{\"224\":1}}],[\"atomiclongarray\",{\"1\":{\"224\":1}}],[\"atomiclong\",{\"1\":{\"224\":1}}],[\"atomic\",{\"1\":{\"224\":2}}],[\"atom\",{\"1\":{\"102\":1}}],[\"atp\",{\"1\":{\"486\":1,\"544\":1}}],[\"attrgetter\",{\"1\":{\"366\":2}}],[\"attempt\",{\"1\":{\"135\":1}}],[\"at\",{\"1\":{\"181\":1,\"265\":9,\"267\":1,\"275\":1,\"277\":8,\"296\":2,\"490\":1}}],[\"arithmetic\",{\"1\":{\"732\":1,\"735\":1}}],[\"architecture\",{\"1\":{\"732\":1}}],[\"arch>\",{\"1\":{\"171\":1}}],[\"arr\",{\"1\":{\"354\":13}}],[\"array\",{\"1\":{\"181\":5,\"239\":1}}],[\"arrays\",{\"1\":{\"179\":1,\"181\":1}}],[\"arraydeque\",{\"1\":{\"178\":1}}],[\"arraydeque~e~\",{\"1\":{\"178\":1}}],[\"arraylist<e>\",{\"1\":{\"181\":1}}],[\"arraylist~e~\",{\"1\":{\"178\":1}}],[\"arraylist\",{\"0\":{\"181\":1,\"183\":1},\"1\":{\"178\":2,\"181\":10,\"183\":6}}],[\"array<string>\",{\"1\":{\"85\":1}}],[\"around\",{\"1\":{\"265\":1}}],[\"are\",{\"1\":{\"265\":1,\"296\":1}}],[\"area\",{\"1\":{\"237\":3,\"421\":1}}],[\"arthas\",{\"1\":{\"239\":1}}],[\"artifact\",{\"1\":{\"40\":4,\"117\":4}}],[\"artifactid<\",{\"1\":{\"156\":1}}],[\"artifactid>\",{\"1\":{\"27\":5,\"30\":6,\"32\":3,\"35\":3,\"40\":12,\"117\":11,\"123\":1,\"137\":3,\"142\":1,\"144\":2,\"145\":2,\"146\":1,\"149\":4,\"156\":2}}],[\"artifactid\",{\"1\":{\"20\":1,\"139\":2,\"140\":1,\"142\":2,\"144\":1,\"145\":1}}],[\"argparse\",{\"1\":{\"316\":2}}],[\"argumentparser\",{\"1\":{\"316\":1}}],[\"argument\",{\"1\":{\"278\":1,\"316\":2}}],[\"arguments\",{\"1\":{\"101\":1}}],[\"arg\",{\"1\":{\"229\":4,\"230\":3,\"600\":6}}],[\"args=\",{\"1\":{\"316\":1,\"324\":1,\"327\":1}}],[\"args\",{\"1\":{\"193\":1,\"205\":1,\"230\":1,\"277\":2,\"316\":4,\"353\":1,\"370\":1}}],[\"ans\",{\"1\":{\"311\":2}}],[\"ans+1\",{\"1\":{\"311\":2}}],[\"ansi\",{\"1\":{\"233\":1,\"259\":1}}],[\"anywhere\",{\"1\":{\"390\":1}}],[\"any\",{\"1\":{\"181\":1,\"244\":1,\"277\":1,\"390\":1}}],[\"andrew\",{\"1\":{\"365\":2}}],[\"and\",{\"0\":{\"390\":1},\"1\":{\"135\":1,\"221\":1,\"226\":1,\"267\":1,\"278\":1,\"288\":1,\"296\":1,\"312\":1,\"327\":1,\"353\":1,\"390\":3,\"454\":3,\"475\":1}}],[\"ant\",{\"1\":{\"135\":1,\"146\":1}}],[\"an\",{\"1\":{\"135\":2,\"244\":1,\"278\":2,\"288\":1,\"349\":1,\"353\":1,\"454\":1}}],[\"another\",{\"1\":{\"84\":1}}],[\"annotation<\",{\"1\":{\"40\":1,\"117\":1}}],[\"annotation\",{\"1\":{\"40\":3,\"117\":3,\"118\":3,\"121\":5,\"124\":1,\"125\":2}}],[\"annotations\",{\"1\":{\"27\":1,\"30\":1}}],[\"a>\",{\"1\":{\"57\":2}}],[\"a\",{\"1\":{\"50\":1,\"135\":4,\"158\":2,\"178\":1,\"179\":3,\"181\":1,\"205\":4,\"211\":3,\"223\":5,\"237\":5,\"239\":1,\"244\":3,\"252\":4,\"253\":4,\"267\":1,\"269\":2,\"271\":1,\"273\":3,\"278\":2,\"288\":1,\"296\":2,\"310\":28,\"311\":1,\"312\":18,\"347\":1,\"349\":1,\"352\":1,\"353\":20,\"357\":5,\"360\":2,\"364\":3,\"365\":4,\"366\":4,\"367\":1,\"368\":1,\"369\":1,\"370\":2,\"388\":2,\"392\":1,\"424\":2,\"452\":1,\"463\":1,\"478\":1,\"487\":1,\"489\":1,\"505\":2,\"507\":4,\"509\":1,\"515\":1,\"527\":1,\"552\":1,\"562\":1,\"590\":2,\"632\":2}}],[\"alu\",{\"1\":{\"732\":2}}],[\"also\",{\"1\":{\"269\":1}}],[\"already\",{\"1\":{\"181\":1}}],[\"alive是指使用同一个\",{\"1\":{\"728\":1}}],[\"alive\",{\"1\":{\"645\":1,\"655\":1,\"728\":1}}],[\"aliyun\",{\"1\":{\"159\":1}}],[\"alibaba\",{\"1\":{\"121\":1}}],[\"alibaba<\",{\"1\":{\"40\":1,\"117\":1}}],[\"alias\",{\"0\":{\"81\":1},\"1\":{\"53\":3,\"82\":1}}],[\"all表示显示所有cpus\",{\"1\":{\"446\":1,\"540\":1}}],[\"allocatedirect\",{\"1\":{\"239\":1}}],[\"all\",{\"1\":{\"41\":4,\"55\":3,\"135\":1,\"244\":1,\"267\":1,\"276\":2,\"279\":1,\"296\":1,\"300\":1,\"353\":2,\"392\":1,\"454\":2,\"507\":4}}],[\"ascii是一种有限的\",{\"1\":{\"751\":1}}],[\"ascii是一种基于拉丁字母表的字符编码\",{\"1\":{\"751\":1}}],[\"ascii已无法满足现代多语言环境的需求\",{\"1\":{\"751\":1}}],[\"ascii只能表示英语中的字符\",{\"1\":{\"751\":1}}],[\"ascii\",{\"0\":{\"751\":1},\"1\":{\"672\":1,\"677\":1,\"751\":2}}],[\"asctime\",{\"1\":{\"357\":1}}],[\"assert\",{\"1\":{\"278\":1}}],[\"assign\",{\"1\":{\"206\":1}}],[\"assignable\",{\"1\":{\"41\":1}}],[\"async\",{\"1\":{\"263\":2,\"265\":5,\"267\":4,\"268\":2,\"269\":2,\"270\":1,\"272\":1,\"273\":2,\"275\":2,\"277\":1,\"281\":1,\"285\":4,\"287\":3,\"288\":2,\"292\":1,\"296\":2,\"299\":1,\"303\":2,\"306\":4,\"334\":7,\"335\":6,\"336\":1}}],[\"asyncio\",{\"0\":{\"263\":1,\"270\":1},\"1\":{\"263\":4,\"265\":12,\"266\":1,\"267\":2,\"268\":4,\"269\":3,\"270\":6,\"271\":2,\"272\":5,\"273\":5,\"274\":1,\"275\":6,\"276\":4,\"277\":6,\"278\":4,\"279\":2,\"280\":5,\"285\":6,\"286\":4,\"287\":5,\"288\":7,\"289\":1,\"292\":4,\"293\":1,\"294\":1,\"295\":1,\"296\":6,\"298\":3,\"299\":1,\"300\":4,\"301\":1,\"305\":4,\"306\":6,\"320\":1,\"334\":6,\"335\":4,\"336\":2}}],[\"as\",{\"1\":{\"135\":1,\"210\":1,\"276\":2,\"277\":1,\"278\":1,\"300\":1,\"325\":5,\"334\":2,\"335\":2,\"347\":1,\"507\":1}}],[\"aspects<\",{\"1\":{\"40\":1,\"117\":1}}],[\"aspects\",{\"1\":{\"40\":1,\"117\":1}}],[\"adoc\",{\"1\":{\"71\":1}}],[\"admin\",{\"1\":{\"41\":5}}],[\"addhandler\",{\"1\":{\"357\":1}}],[\"address\",{\"1\":{\"732\":1}}],[\"addrs\",{\"1\":{\"285\":2}}],[\"addr\",{\"1\":{\"285\":2}}],[\"add2\",{\"1\":{\"218\":1}}],[\"add1\",{\"1\":{\"218\":1}}],[\"addall\",{\"1\":{\"178\":1,\"179\":1}}],[\"add\",{\"1\":{\"14\":1,\"178\":1,\"179\":1,\"181\":3,\"183\":1,\"218\":1,\"271\":3,\"280\":1,\"316\":2,\"353\":2,\"424\":5,\"426\":2}}],[\"appendleft\",{\"1\":{\"345\":1,\"348\":1}}],[\"append\",{\"1\":{\"296\":1,\"316\":1,\"324\":1,\"341\":1,\"344\":2,\"345\":1,\"348\":1,\"352\":1,\"354\":2}}],[\"applecount\",{\"1\":{\"193\":2}}],[\"apple\",{\"1\":{\"193\":4}}],[\"application\",{\"1\":{\"119\":1,\"121\":1,\"124\":1,\"236\":1,\"253\":1}}],[\"apply\",{\"1\":{\"101\":1}}],[\"app\",{\"1\":{\"57\":1,\"64\":2,\"65\":1,\"390\":1}}],[\"apis\",{\"1\":{\"302\":1,\"303\":1}}],[\"api<\",{\"1\":{\"27\":1,\"30\":1,\"40\":3,\"117\":2,\"149\":2}}],[\"api\",{\"0\":{\"253\":1,\"299\":1},\"1\":{\"27\":1,\"40\":3,\"41\":1,\"45\":1,\"117\":2,\"125\":2,\"192\":3,\"253\":5,\"263\":3,\"266\":1,\"269\":1,\"280\":1,\"299\":2,\"303\":1,\"382\":1,\"388\":1,\"406\":1,\"731\":1},\"2\":{\"307\":1,\"313\":1,\"337\":1,\"355\":1,\"358\":1,\"361\":1,\"371\":1}}],[\"apache\",{\"0\":{\"134\":1},\"1\":{\"27\":3,\"30\":3,\"32\":3,\"35\":3,\"41\":4,\"117\":3,\"135\":1,\"137\":4,\"146\":3,\"149\":7,\"156\":1,\"159\":3}}],[\"a工程在开发或运行的过程中需要b工程提供支持\",{\"1\":{\"20\":1}}],[\"​\",{\"1\":{\"20\":3,\"21\":2,\"22\":2,\"743\":4}}],[\"项目仓库的方法\",{\"1\":{\"423\":1}}],[\"项目之一\",{\"1\":{\"399\":1}}],[\"项目有效\",{\"1\":{\"169\":3}}],[\"项目站点文档创建的处理\",{\"1\":{\"161\":1}}],[\"项目部署的处理\",{\"1\":{\"161\":1}}],[\"项目清理的处理\",{\"1\":{\"161\":1}}],[\"项目构建的生命周期就已经存在\",{\"1\":{\"161\":1}}],[\"项目构建完成生成的构件\",{\"1\":{\"157\":1}}],[\"项目构建过程中\",{\"1\":{\"136\":1}}],[\"项目需要某些构件时\",{\"1\":{\"157\":1}}],[\"项目需求和结构分析\",{\"0\":{\"24\":1}}],[\"项目使用同一个\",{\"1\":{\"144\":1}}],[\"项目运行时有效\",{\"1\":{\"142\":1}}],[\"项目的三个工作区域的概念\",{\"1\":{\"421\":1}}],[\"项目的\",{\"1\":{\"169\":1}}],[\"项目的两个依赖同时引入了某个依赖\",{\"1\":{\"144\":1}}],[\"项目的版本\",{\"1\":{\"139\":1}}],[\"项目的唯一的标识符\",{\"1\":{\"139\":1}}],[\"项目的名称\",{\"1\":{\"139\":1}}],[\"项目的表现形式\",{\"1\":{\"137\":1}}],[\"项目隶属的组织或公司\",{\"1\":{\"139\":1}}],[\"项目目录\",{\"0\":{\"113\":1}}],[\"项目创建\",{\"0\":{\"40\":1,\"116\":1}}],[\"项目实现\",{\"0\":{\"38\":1,\"112\":1}}],[\"项目实践\",{\"0\":{\"37\":1,\"111\":1}}],[\"项目搭建和统一构建\",{\"0\":{\"25\":1}}],[\"项目架构\",{\"1\":{\"24\":1,\"37\":1,\"111\":1}}],[\"项目\",{\"1\":{\"19\":2,\"146\":1}}],[\"项目对象模型模式实现\",{\"1\":{\"19\":1}}],[\"对内存地址的访问倾向于集中在某个较小的地址范围内\",{\"1\":{\"737\":1}}],[\"对内存访问的一种现象\",{\"1\":{\"737\":1}}],[\"对用户所提交的数据过滤不足所导致的\",{\"1\":{\"659\":1}}],[\"对比可重复读\",{\"1\":{\"628\":1}}],[\"对系统的整体情况进行统计\",{\"1\":{\"515\":1}}],[\"对文件重命名\",{\"1\":{\"424\":1}}],[\"对待数据更像是一个\",{\"1\":{\"420\":1}}],[\"对待数据的方式\",{\"1\":{\"420\":1}}],[\"对其他事务是不可见的\",{\"1\":{\"627\":1}}],[\"对其他\",{\"1\":{\"406\":1}}],[\"对数据进行位移操作\",{\"1\":{\"735\":1}}],[\"对数据进行html编码处理\",{\"1\":{\"659\":1}}],[\"对数据卷的更新\",{\"1\":{\"397\":1}}],[\"对数据卷的修改会立马生效\",{\"1\":{\"397\":1}}],[\"对数组大小取模\",{\"1\":{\"189\":1}}],[\"对进程进行封装隔离\",{\"1\":{\"382\":1}}],[\"对学生数据进行排序\",{\"1\":{\"369\":1}}],[\"对这个区域定义了两种异常\",{\"1\":{\"239\":1}}],[\"对通过网络下载的类具有一个安全防范机制\",{\"1\":{\"233\":1,\"259\":1}}],[\"对指针的丢弃是\",{\"1\":{\"233\":1,\"259\":1}}],[\"对共享变量添加\",{\"1\":{\"223\":1}}],[\"对多个共享变量进行操作时\",{\"1\":{\"223\":1}}],[\"对列表进行树化的最小阈值\",{\"1\":{\"187\":1}}],[\"对与\",{\"1\":{\"186\":1}}],[\"对集合的元素进行排序\",{\"1\":{\"179\":1}}],[\"对本机所有\",{\"1\":{\"169\":1}}],[\"对该用户所有\",{\"1\":{\"169\":1}}],[\"对应发送的包都要进行应答\",{\"1\":{\"709\":1}}],[\"对应的事务状态设置为\",{\"1\":{\"622\":1}}],[\"对应的符号引用在程序加载或运行时会被转变为被加载到内存区域的代码直接引用\",{\"1\":{\"247\":1}}],[\"对应的插件目标就会自动执行相应的任务\",{\"1\":{\"155\":1}}],[\"对应一个\",{\"1\":{\"170\":1}}],[\"对应项目根目录的名称\",{\"1\":{\"139\":1}}],[\"对除\",{\"1\":{\"143\":1}}],[\"对包含\",{\"1\":{\"143\":1}}],[\"对\",{\"1\":{\"143\":3,\"217\":1}}],[\"对项目的目录结构\",{\"1\":{\"136\":1}}],[\"对maven工程的目录结构来说\",{\"1\":{\"40\":1}}],[\"对于每个数据包\",{\"1\":{\"750\":1}}],[\"对于解释型语言\",{\"1\":{\"744\":1}}],[\"对于编译型语言\",{\"1\":{\"744\":1}}],[\"对于较大的地址空间\",{\"1\":{\"734\":1}}],[\"对于服务器端\",{\"1\":{\"647\":1}}],[\"对于当前读\",{\"1\":{\"632\":1}}],[\"对于快照读\",{\"1\":{\"632\":1}}],[\"对于使用\",{\"1\":{\"631\":1}}],[\"对于一个事务来说\",{\"1\":{\"627\":1}}],[\"对于更新比较频繁的表\",{\"1\":{\"621\":1}}],[\"对于内存的使用\",{\"1\":{\"515\":1}}],[\"对于两者无所谓谁会取代谁\",{\"1\":{\"380\":2}}],[\"对于\",{\"1\":{\"146\":1,\"151\":1,\"186\":2,\"217\":1,\"386\":1,\"651\":1}}],[\"对于任何一个依赖来说\",{\"1\":{\"20\":1}}],[\"对于我这种学渣来说\",{\"1\":{\"2\":1}}],[\"对象中的变量将不会丢失\",{\"1\":{\"676\":1}}],[\"对象存储特定用户会话所需的属性及配置信息\",{\"1\":{\"676\":1}}],[\"对象变成\",{\"1\":{\"336\":1}}],[\"对象不再能成功直到该\",{\"1\":{\"336\":1}}],[\"对象集的\",{\"1\":{\"304\":1}}],[\"对象已完成\",{\"1\":{\"280\":1}}],[\"对象被取消的时候被引发\",{\"1\":{\"305\":1}}],[\"对象被创建\",{\"1\":{\"280\":1}}],[\"对象被用来在事件循环中运行协程\",{\"1\":{\"280\":1}}],[\"对象支持\",{\"1\":{\"280\":1}}],[\"对象是否被取消\",{\"1\":{\"280\":1}}],[\"对象也将被取消\",{\"1\":{\"280\":1}}],[\"对象抛出一个\",{\"1\":{\"280\":1}}],[\"对象可使用\",{\"1\":{\"280\":1}}],[\"对象会管理一个内部旗标\",{\"1\":{\"288\":1}}],[\"对象会等待一个\",{\"1\":{\"280\":1}}],[\"对象会挂起该协程的执行并等待该\",{\"1\":{\"280\":1}}],[\"对象完成\",{\"1\":{\"280\":2}}],[\"对象完成前发生超时则将引发\",{\"1\":{\"276\":1}}],[\"对象的释放\",{\"1\":{\"336\":1}}],[\"对象的等待\",{\"1\":{\"336\":1}}],[\"对象的运行调度\",{\"1\":{\"301\":1}}],[\"对象的集合\",{\"1\":{\"279\":1}}],[\"对象的容量\",{\"1\":{\"181\":1}}],[\"对象有时会由库和某些\",{\"1\":{\"269\":1}}],[\"对象有三种主要类型\",{\"1\":{\"266\":1}}],[\"对象以便允许\",{\"1\":{\"269\":1}}],[\"对象在其他地方操作完毕\",{\"1\":{\"269\":1}}],[\"对象监视器\",{\"1\":{\"219\":1}}],[\"对象最终继承自\",{\"1\":{\"147\":1}}],[\"对象\",{\"0\":{\"280\":1},\"1\":{\"19\":1,\"178\":1,\"219\":2,\"236\":1,\"266\":2,\"269\":2,\"271\":1,\"273\":1,\"278\":1,\"280\":6,\"300\":5,\"303\":2}}],[\"完整\",{\"1\":{\"105\":1,\"106\":1,\"107\":1,\"108\":2}}],[\"完整配置参数\",{\"1\":{\"93\":1}}],[\"完整配置\",{\"1\":{\"93\":1}}],[\"完成请求后\",{\"1\":{\"738\":1}}],[\"完成后再将它们合并到主分支上\",{\"1\":{\"430\":1}}],[\"完成后数组的容量变为\",{\"1\":{\"189\":1}}],[\"完成这个任务最简单而又有效的工具是\",{\"1\":{\"428\":1}}],[\"完成情况的监控器\",{\"1\":{\"300\":1}}],[\"完成时调用\",{\"1\":{\"280\":1}}],[\"完成模块的注入\",{\"1\":{\"254\":1}}],[\"完成mybatis基本使用\",{\"1\":{\"37\":1}}],[\"完成\",{\"1\":{\"17\":1,\"275\":1,\"280\":1}}],[\"完美遵循了\",{\"1\":{\"2\":1}}],[\"2msl就是一个发送和一个回复所需的最大时间\",{\"1\":{\"722\":1}}],[\"2msl\",{\"1\":{\"708\":2,\"722\":2}}],[\"2状态时\",{\"1\":{\"707\":1}}],[\"2状态下\",{\"0\":{\"707\":1}}],[\"2状态\",{\"1\":{\"705\":1}}],[\"2616\",{\"1\":{\"645\":1}}],[\"2nf\",{\"1\":{\"617\":1}}],[\"2时输出\",{\"1\":{\"597\":1}}],[\"2+3\",{\"1\":{\"587\":2}}],[\"2表示刷新间隔\",{\"1\":{\"446\":1,\"540\":1}}],[\"2f\",{\"1\":{\"296\":3}}],[\"2^5\",{\"1\":{\"189\":1}}],[\"2147483647\",{\"1\":{\"188\":1}}],[\"2147483648\",{\"1\":{\"188\":1}}],[\"23\",{\"1\":{\"166\":1}}],[\"24\",{\"1\":{\"40\":2,\"273\":2}}],[\"24<\",{\"1\":{\"40\":1,\"117\":1}}],[\"2<\",{\"1\":{\"27\":1,\"156\":1}}],[\"2\",{\"0\":{\"21\":1,\"25\":1,\"118\":1,\"124\":1,\"188\":1,\"348\":1,\"436\":1,\"437\":1,\"438\":1,\"439\":2,\"440\":1,\"441\":1,\"442\":1,\"443\":2,\"444\":2,\"445\":3,\"446\":2,\"449\":1,\"450\":1,\"451\":1,\"452\":2,\"453\":1,\"454\":1,\"455\":2,\"456\":2,\"457\":3,\"458\":2,\"459\":2,\"460\":1,\"461\":1,\"462\":2,\"463\":1,\"466\":1,\"467\":1,\"468\":1,\"469\":2,\"470\":1,\"471\":1,\"472\":2,\"473\":1,\"474\":1,\"475\":1,\"476\":2,\"477\":2,\"478\":3,\"479\":2,\"480\":2,\"483\":1,\"484\":1,\"485\":1,\"486\":2,\"487\":1,\"488\":1,\"489\":1,\"490\":2,\"491\":1,\"492\":1,\"493\":1,\"494\":1,\"495\":2,\"496\":2,\"497\":3,\"498\":2,\"502\":1,\"503\":1,\"504\":1,\"505\":2,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"512\":1,\"513\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":2,\"520\":1,\"521\":1,\"522\":2,\"523\":1,\"524\":1,\"525\":2,\"526\":2,\"527\":3,\"528\":2,\"529\":2,\"533\":1,\"537\":1,\"538\":1,\"539\":2,\"540\":2,\"544\":1,\"545\":1,\"546\":1,\"547\":2,\"548\":1,\"552\":1,\"554\":1,\"555\":1,\"556\":2,\"557\":1,\"558\":1,\"561\":1,\"567\":1,\"571\":1,\"574\":1,\"578\":1,\"583\":1,\"587\":1,\"590\":1,\"594\":1,\"595\":1,\"596\":1,\"597\":2,\"600\":1,\"603\":1,\"606\":1,\"610\":1,\"611\":1,\"612\":1,\"613\":2},\"1\":{\"24\":2,\"37\":1,\"39\":1,\"40\":2,\"41\":6,\"59\":1,\"84\":1,\"93\":1,\"111\":2,\"115\":1,\"117\":1,\"126\":1,\"143\":6,\"150\":1,\"181\":4,\"182\":1,\"187\":2,\"188\":3,\"189\":7,\"193\":1,\"205\":2,\"223\":3,\"226\":1,\"232\":3,\"239\":2,\"258\":3,\"265\":4,\"273\":6,\"310\":4,\"324\":1,\"325\":1,\"342\":6,\"343\":2,\"351\":2,\"353\":8,\"360\":4,\"364\":4,\"365\":1,\"366\":2,\"367\":1,\"368\":1,\"370\":9,\"475\":2,\"515\":3,\"587\":1,\"597\":1,\"600\":2,\"651\":2,\"695\":1,\"697\":2,\"741\":1,\"743\":1}}],[\"25\",{\"1\":{\"17\":1,\"124\":1}}],[\"206\",{\"1\":{\"642\":1}}],[\"204\",{\"1\":{\"642\":1}}],[\"20是否大于10\",{\"1\":{\"590\":1}}],[\"200\",{\"1\":{\"642\":1}}],[\"200类状态码表示服务器成功处理了客户端的请求\",{\"1\":{\"642\":1}}],[\"2005\",{\"1\":{\"232\":1,\"258\":1}}],[\"2000\",{\"1\":{\"205\":1}}],[\"2001\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"20\",{\"1\":{\"187\":1,\"296\":1,\"580\":4,\"590\":1,\"606\":1,\"724\":1}}],[\"20220330153653301\",{\"1\":{\"577\":1}}],[\"20220330153029197\",{\"1\":{\"570\":1}}],[\"20220408113035249\",{\"1\":{\"511\":1}}],[\"20220408112951231\",{\"1\":{\"510\":1}}],[\"20220408112800947\",{\"1\":{\"509\":1}}],[\"20220408150717292\",{\"1\":{\"494\":1}}],[\"20220408150517112\",{\"1\":{\"493\":1}}],[\"20220408150002077\",{\"1\":{\"492\":1}}],[\"20220408145728045\",{\"1\":{\"491\":1}}],[\"20220408145637391\",{\"1\":{\"490\":1}}],[\"20220408145537683\",{\"1\":{\"489\":1}}],[\"20220401101834998\",{\"1\":{\"468\":1,\"518\":1}}],[\"20220401150415728\",{\"1\":{\"463\":1,\"562\":1}}],[\"20220401141913473\",{\"1\":{\"478\":1,\"480\":1,\"527\":1,\"529\":1}}],[\"20220401141645744\",{\"1\":{\"474\":1,\"524\":1}}],[\"20220401141403556\",{\"1\":{\"473\":1,\"523\":1}}],[\"20220401141510962\",{\"1\":{\"472\":1,\"522\":1}}],[\"20220401141256030\",{\"1\":{\"471\":1,\"521\":1}}],[\"20220401145225177\",{\"1\":{\"498\":1,\"548\":1}}],[\"20220401145950590\",{\"1\":{\"459\":1,\"558\":1}}],[\"20220401145602336\",{\"1\":{\"453\":1,\"553\":1}}],[\"20220401143304219\",{\"1\":{\"446\":1,\"540\":1}}],[\"20220401142646239\",{\"1\":{\"439\":1,\"442\":1,\"533\":1,\"536\":1}}],[\"2021\",{\"1\":{\"332\":1}}],[\"2021年复员\",{\"1\":{\"1\":1}}],[\"2024\",{\"1\":{\"40\":2,\"41\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2}}],[\"2013768748\",{\"1\":{\"41\":1}}],[\"201\",{\"1\":{\"12\":1,\"14\":2,\"17\":3}}],[\"2014\",{\"1\":{\"8\":1}}],[\"2019年高考后守护祖国两年\",{\"1\":{\"1\":1}}],[\"vpn用于标识虚拟内存中的一个页\",{\"1\":{\"734\":1}}],[\"vpn\",{\"1\":{\"665\":1,\"734\":1}}],[\"v形式保存在内存中的\",{\"1\":{\"621\":1}}],[\"vsz\",{\"1\":{\"506\":1}}],[\"vs\",{\"0\":{\"380\":1},\"1\":{\"320\":1,\"408\":1}}],[\"view\",{\"1\":{\"631\":10,\"633\":1}}],[\"viryual\",{\"1\":{\"477\":1,\"526\":1}}],[\"virtualization\",{\"1\":{\"406\":1}}],[\"virtual\",{\"1\":{\"235\":1,\"734\":1}}],[\"visual\",{\"0\":{\"174\":1}}],[\"von\",{\"1\":{\"732\":1}}],[\"vol\",{\"1\":{\"397\":2}}],[\"volumes\",{\"1\":{\"397\":1,\"400\":4}}],[\"volume\",{\"1\":{\"387\":1,\"397\":3,\"400\":1}}],[\"volatile\",{\"0\":{\"208\":1},\"1\":{\"205\":1,\"210\":1,\"211\":4,\"218\":1,\"226\":7}}],[\"void\",{\"1\":{\"41\":5,\"118\":1,\"124\":1,\"125\":2,\"178\":3,\"179\":3,\"181\":4,\"187\":1,\"193\":1,\"205\":2,\"218\":3,\"219\":2}}],[\"v>\",{\"1\":{\"187\":27,\"189\":9}}],[\"v~\",{\"1\":{\"186\":9}}],[\"vector\",{\"1\":{\"178\":2,\"181\":1}}],[\"vector~e~\",{\"1\":{\"178\":1}}],[\"verify\",{\"1\":{\"166\":1}}],[\"version>1\",{\"1\":{\"137\":1,\"149\":1}}],[\"version>5\",{\"1\":{\"27\":1}}],[\"version>2\",{\"1\":{\"27\":2}}],[\"version>6\",{\"1\":{\"27\":1}}],[\"version>\",{\"1\":{\"27\":9,\"30\":1,\"32\":2,\"35\":2,\"40\":12,\"117\":11,\"123\":1,\"137\":4,\"142\":1,\"144\":2,\"145\":2,\"146\":1,\"149\":5,\"156\":2,\"171\":1}}],[\"version=\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"40\":2,\"117\":1,\"124\":1,\"137\":1,\"149\":2}}],[\"version\",{\"1\":{\"17\":2,\"20\":1,\"27\":5,\"40\":2,\"41\":1,\"108\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2,\"139\":3,\"140\":1,\"142\":2,\"144\":1,\"146\":1,\"223\":1,\"392\":1,\"400\":2,\"405\":1,\"416\":1,\"417\":1}}],[\"v\",{\"1\":{\"108\":1,\"186\":6,\"187\":6,\"219\":1,\"221\":4,\"400\":1,\"457\":1,\"468\":1,\"518\":1,\"556\":1}}],[\"v3\",{\"1\":{\"93\":1}}],[\"v1\",{\"1\":{\"93\":1}}],[\"v1|v2\",{\"1\":{\"93\":1}}],[\"vuepress\",{\"1\":{\"128\":2}}],[\"vue\",{\"1\":{\"90\":3,\"103\":1,\"105\":4}}],[\"variables\",{\"1\":{\"244\":1}}],[\"var\",{\"1\":{\"101\":1,\"749\":2}}],[\"varchar类型的查找效率较低\",{\"1\":{\"618\":1}}],[\"varchar类型如果存到数据量小于最大长度\",{\"1\":{\"618\":1}}],[\"varchar字段的最大长度为65535个字符\",{\"1\":{\"618\":1}}],[\"varchar\",{\"1\":{\"39\":2,\"111\":2,\"115\":2}}],[\"val\",{\"1\":{\"354\":2}}],[\"valid\",{\"1\":{\"269\":1}}],[\"validate\",{\"1\":{\"166\":1}}],[\"value是sql查询结果\",{\"1\":{\"621\":1}}],[\"valueerror\",{\"1\":{\"312\":5}}],[\"value`\",{\"1\":{\"181\":1}}],[\"value>\",{\"1\":{\"171\":1}}],[\"value\",{\"1\":{\"121\":5,\"124\":2,\"125\":1,\"177\":1,\"181\":2,\"186\":1,\"187\":11,\"189\":2,\"193\":2,\"239\":1,\"312\":4,\"327\":2,\"353\":1}}],[\"value=\",{\"1\":{\"40\":5}}],[\"values\",{\"1\":{\"39\":10,\"40\":1,\"41\":1,\"115\":10,\"353\":1}}],[\"valerie\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"vmstat命令提供有关虚拟内存\",{\"1\":{\"748\":1}}],[\"vmstat\",{\"0\":{\"476\":1,\"525\":1},\"1\":{\"465\":1,\"478\":1,\"515\":2,\"527\":1,\"748\":1}}],[\"vm\",{\"1\":{\"17\":1,\"239\":1,\"249\":2,\"380\":4,\"383\":1}}],[\"b页面的协议\",{\"1\":{\"680\":1}}],[\"b+\",{\"1\":{\"620\":1}}],[\"b|k|m|g\",{\"1\":{\"475\":1}}],[\"bkmotv\",{\"1\":{\"468\":1,\"518\":1}}],[\"by\",{\"1\":{\"365\":1,\"507\":1}}],[\"bytes\",{\"1\":{\"468\":1,\"475\":1,\"518\":1}}],[\"bytebuffer\",{\"1\":{\"239\":7}}],[\"byte\",{\"1\":{\"239\":1,\"245\":1}}],[\"b=\",{\"1\":{\"353\":1}}],[\"b=1\",{\"1\":{\"353\":1}}],[\"b=2\",{\"1\":{\"353\":4}}],[\"b\",{\"1\":{\"205\":4,\"211\":1,\"223\":5,\"237\":6,\"239\":1,\"252\":2,\"253\":2,\"273\":4,\"349\":1,\"352\":1,\"353\":8,\"365\":4,\"366\":8,\"367\":2,\"368\":2,\"369\":2,\"430\":1,\"439\":1,\"462\":1,\"468\":2,\"479\":1,\"518\":2,\"528\":1,\"533\":1,\"561\":1,\"632\":1}}],[\"bst\",{\"1\":{\"187\":1}}],[\"back\",{\"1\":{\"735\":1}}],[\"backlog\",{\"1\":{\"717\":1}}],[\"background\",{\"1\":{\"271\":3}}],[\"bazaar\",{\"1\":{\"420\":1}}],[\"barrier\",{\"1\":{\"211\":2}}],[\"banana\",{\"1\":{\"193\":4}}],[\"balancing\",{\"1\":{\"187\":1}}],[\"basename\",{\"0\":{\"609\":1},\"1\":{\"609\":6}}],[\"basedir\",{\"1\":{\"156\":1}}],[\"base\",{\"1\":{\"124\":1,\"360\":2,\"475\":1,\"507\":1}}],[\"basepackages\",{\"1\":{\"121\":1}}],[\"bash\",{\"1\":{\"102\":1,\"571\":1,\"580\":1,\"584\":1,\"590\":1,\"594\":1,\"600\":2,\"603\":1,\"606\":1,\"613\":1}}],[\"blue\",{\"1\":{\"353\":1,\"368\":3}}],[\"black\",{\"1\":{\"187\":2}}],[\"blocking\",{\"1\":{\"277\":8}}],[\"blockingqueue~e~\",{\"1\":{\"178\":1}}],[\"block\",{\"1\":{\"205\":4}}],[\"blocked\",{\"1\":{\"201\":1}}],[\"blog\",{\"1\":{\"61\":1}}],[\"better\",{\"1\":{\"408\":1}}],[\"beta\",{\"1\":{\"205\":1}}],[\"been\",{\"1\":{\"296\":1}}],[\"before\",{\"1\":{\"187\":1,\"210\":1}}],[\"be\",{\"1\":{\"181\":1,\"268\":2,\"277\":1}}],[\"began\",{\"1\":{\"135\":1}}],[\"bean\",{\"1\":{\"121\":2}}],[\"bean注解==<bean\",{\"1\":{\"121\":1}}],[\"bean注解用于指示方法实例化\",{\"1\":{\"121\":1}}],[\"bean注解\",{\"1\":{\"121\":1}}],[\"beanpropertyrowmapper<>\",{\"1\":{\"118\":1}}],[\"beanpropertyrowmapper\",{\"1\":{\"118\":1}}],[\"beans>\",{\"1\":{\"124\":1}}],[\"beans\",{\"1\":{\"24\":2,\"27\":1,\"30\":1,\"118\":3,\"121\":2,\"124\":5,\"125\":2}}],[\"bus\",{\"1\":{\"732\":4,\"741\":2}}],[\"buff\",{\"1\":{\"440\":1,\"479\":1,\"528\":1,\"534\":1}}],[\"buffers\",{\"1\":{\"469\":1,\"519\":1}}],[\"buffer\",{\"1\":{\"239\":3,\"622\":4,\"734\":1,\"736\":1,\"737\":2}}],[\"bug\",{\"1\":{\"430\":1}}],[\"but\",{\"1\":{\"267\":1,\"454\":1}}],[\"buckets\",{\"1\":{\"721\":1}}],[\"bucket\",{\"1\":{\"193\":1}}],[\"buble\",{\"1\":{\"90\":3,\"105\":1}}],[\"build命令并指定一个\",{\"1\":{\"389\":1,\"394\":1}}],[\"build>\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"build\",{\"0\":{\"390\":1},\"1\":{\"17\":2,\"27\":2,\"30\":2,\"32\":2,\"35\":2,\"41\":2,\"117\":2,\"135\":3,\"146\":1,\"150\":1,\"156\":1,\"161\":1,\"170\":1,\"390\":4,\"394\":1,\"400\":2,\"402\":1}}],[\"bo\",{\"1\":{\"479\":1,\"528\":1}}],[\"boundedsemaphore\",{\"0\":{\"291\":1},\"1\":{\"304\":1}}],[\"bound\",{\"1\":{\"277\":1,\"310\":2,\"319\":2}}],[\"both\",{\"1\":{\"265\":1}}],[\"book\",{\"1\":{\"431\":1}}],[\"bool\",{\"1\":{\"327\":1}}],[\"boolean|string|object\",{\"1\":{\"87\":1}}],[\"boolean|string|string\",{\"1\":{\"74\":1}}],[\"boolean|string\",{\"1\":{\"77\":1,\"79\":1}}],[\"boolean\",{\"1\":{\"72\":1,\"105\":2,\"106\":1,\"178\":9,\"179\":1,\"181\":1,\"187\":3,\"193\":1,\"202\":1,\"205\":1,\"245\":2}}],[\"bootstrap\",{\"1\":{\"236\":1}}],[\"boot\",{\"1\":{\"145\":2}}],[\"boot<\",{\"1\":{\"145\":2,\"149\":1}}],[\"body\",{\"1\":{\"64\":1,\"654\":3}}],[\"body>\",{\"1\":{\"57\":1}}],[\"bridge\",{\"1\":{\"400\":1}}],[\"break\",{\"1\":{\"187\":2,\"221\":1,\"272\":1}}],[\"branch\",{\"1\":{\"50\":3,\"430\":2}}],[\"bruce\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"btree\",{\"1\":{\"39\":1,\"115\":1}}],[\"b工程\",{\"1\":{\"21\":1}}],[\"b工程既可以是自己的项目打的jar包\",{\"1\":{\"20\":1}}],[\"bi\",{\"1\":{\"479\":1,\"528\":1}}],[\"bilibili\",{\"1\":{\"332\":1}}],[\"bisect\",{\"0\":{\"309\":1,\"310\":1},\"1\":{\"310\":12,\"311\":1,\"312\":6}}],[\"bitkeeper\",{\"1\":{\"419\":4}}],[\"bit\",{\"1\":{\"17\":1}}],[\"binlog\",{\"1\":{\"622\":5}}],[\"bind\",{\"1\":{\"397\":1}}],[\"bincount\",{\"1\":{\"187\":2}}],[\"bin或者d\",{\"1\":{\"14\":1}}],[\"bin\",{\"1\":{\"11\":1,\"14\":4,\"16\":1,\"360\":1,\"571\":1,\"580\":1,\"584\":1,\"590\":1,\"594\":1,\"600\":2,\"603\":1,\"606\":1,\"609\":1,\"610\":1,\"613\":1}}],[\"b09\",{\"1\":{\"17\":2}}],[\"验证通过\",{\"1\":{\"648\":1}}],[\"验证\",{\"0\":{\"17\":1},\"1\":{\"161\":1,\"166\":1}}],[\"下次处理时直接发送数据包就可以\",{\"1\":{\"713\":1}}],[\"下次恢复会话的时候\",{\"1\":{\"648\":1}}],[\"下划线组成\",{\"1\":{\"573\":1}}],[\"下一个任务获得\",{\"1\":{\"334\":1}}],[\"下面详细介绍l1\",{\"1\":{\"740\":1}}],[\"下面我们以分页系统为例来说明\",{\"1\":{\"734\":1}}],[\"下面我们分别来详细介绍外部中断和异常\",{\"1\":{\"733\":1}}],[\"下面我们主要说一个关于\",{\"1\":{\"420\":1}}],[\"下面我通过四点向你说明\",{\"1\":{\"382\":1}}],[\"下面的代码定义并运行了一个协程\",{\"1\":{\"265\":1}}],[\"下面是一个简化的程序执行过程\",{\"1\":{\"744\":1}}],[\"下面是一个hashtable的简单使用示例\",{\"1\":{\"193\":1}}],[\"下面是\",{\"1\":{\"237\":2}}],[\"下面看下源码的实现\",{\"1\":{\"189\":1}}],[\"下面这段\",{\"1\":{\"142\":1}}],[\"下的面的一个基类\",{\"1\":{\"226\":1}}],[\"下的\",{\"1\":{\"159\":1}}],[\"下各个\",{\"1\":{\"16\":1}}],[\"下载一个镜像到本地\",{\"1\":{\"389\":1}}],[\"下载公开的镜像\",{\"1\":{\"388\":1}}],[\"下载包到本地仓库\",{\"1\":{\"160\":1}}],[\"下载并链接编译的依赖关系\",{\"1\":{\"142\":1}}],[\"下载需要准备一个\",{\"1\":{\"8\":1}}],[\"下载的软件开发人员吗\",{\"1\":{\"8\":1}}],[\"下载\",{\"0\":{\"6\":1},\"1\":{\"7\":1}}],[\"顾名思义是工具类库\",{\"1\":{\"16\":1}}],[\"第四次丢失\",{\"1\":{\"708\":1}}],[\"第四次挥手\",{\"1\":{\"705\":1}}],[\"第四步\",{\"1\":{\"357\":1}}],[\"第2种方式\",{\"1\":{\"587\":1}}],[\"第1种方式\",{\"1\":{\"587\":1}}],[\"第10个元素\",{\"1\":{\"181\":1}}],[\"第一个msl是保证最后一次挥手客户端响应服务端的ack到达了服务端\",{\"1\":{\"722\":1}}],[\"第一种\",{\"1\":{\"621\":1}}],[\"第一范式\",{\"1\":{\"617\":1}}],[\"第一行可以去掉\",{\"1\":{\"571\":1}}],[\"第一步\",{\"1\":{\"357\":1}}],[\"第一次挥手\",{\"1\":{\"705\":1}}],[\"第一次丢失\",{\"1\":{\"701\":1,\"708\":1}}],[\"第一次握手\",{\"1\":{\"699\":1,\"700\":1}}],[\"第一次调用\",{\"1\":{\"189\":1}}],[\"第一次扩容就是这里初始化容量的\",{\"1\":{\"189\":2}}],[\"第一部分是指当前目录\",{\"1\":{\"16\":1}}],[\"第4\",{\"1\":{\"181\":1}}],[\"第二个msl是保证服务端没有重发新的报文给客户端\",{\"1\":{\"722\":1}}],[\"第二个可以配置<classifier>jdk8<\",{\"1\":{\"142\":1}}],[\"第二和第三次挥手就会合并传输\",{\"1\":{\"710\":1}}],[\"第二次挥手\",{\"1\":{\"705\":1}}],[\"第二次丢失\",{\"1\":{\"701\":1,\"708\":1}}],[\"第二次握手\",{\"1\":{\"699\":1,\"700\":1}}],[\"第二种\",{\"1\":{\"621\":1}}],[\"第二范式\",{\"1\":{\"617\":1}}],[\"第二步\",{\"1\":{\"357\":1}}],[\"第二部分是\",{\"1\":{\"16\":1}}],[\"第三次挥手\",{\"1\":{\"705\":1}}],[\"第三次丢失\",{\"1\":{\"701\":1,\"708\":1}}],[\"第三次握手\",{\"1\":{\"699\":1,\"700\":1}}],[\"第三范式是确保每列都和主键列直接相关\",{\"1\":{\"617\":1}}],[\"第三范式\",{\"1\":{\"617\":1}}],[\"第三步\",{\"1\":{\"357\":1}}],[\"第三方类进行ioc管理\",{\"1\":{\"121\":1}}],[\"第三部分是\",{\"1\":{\"16\":1}}],[\"3nf\",{\"1\":{\"617\":1}}],[\"3`\",{\"1\":{\"587\":1}}],[\"39\",{\"1\":{\"348\":1}}],[\"3600\",{\"1\":{\"275\":1}}],[\"34\",{\"1\":{\"265\":1}}],[\"344561e0\",{\"1\":{\"41\":1}}],[\"32768～61000\",{\"1\":{\"720\":1}}],[\"32位\",{\"1\":{\"687\":2}}],[\"32位和64位系统各不相同\",{\"1\":{\"244\":1}}],[\"32\",{\"1\":{\"189\":1,\"207\":1,\"208\":1,\"239\":1,\"265\":1,\"678\":1,\"751\":1}}],[\"373mb\",{\"1\":{\"395\":1}}],[\"37\",{\"1\":{\"121\":1}}],[\"304\",{\"1\":{\"642\":1}}],[\"302\",{\"1\":{\"642\":2}}],[\"301\",{\"1\":{\"642\":2}}],[\"300类状态码表示客户端请求的资源发生了变动\",{\"1\":{\"642\":1}}],[\"3000\",{\"1\":{\"49\":1,\"51\":4,\"106\":4,\"515\":1}}],[\"3073\",{\"1\":{\"388\":1}}],[\"30\",{\"1\":{\"121\":1,\"348\":1}}],[\"33060\",{\"1\":{\"395\":1}}],[\"3306\",{\"1\":{\"40\":1,\"120\":1,\"395\":1}}],[\"33<\",{\"1\":{\"40\":1,\"117\":1}}],[\"3\",{\"0\":{\"22\":1,\"119\":1,\"125\":1,\"349\":1,\"440\":1,\"446\":1,\"453\":1,\"458\":1,\"460\":1,\"461\":1,\"462\":1,\"463\":2,\"470\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"479\":1,\"487\":1,\"491\":1,\"498\":1,\"506\":1,\"511\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":2,\"524\":1,\"528\":1,\"530\":1,\"531\":1,\"532\":1,\"533\":1,\"534\":2,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"548\":1,\"553\":1,\"557\":1,\"559\":1,\"560\":1,\"561\":1,\"562\":2,\"572\":1,\"573\":1,\"574\":1,\"575\":2,\"579\":1,\"584\":1,\"598\":1,\"599\":1,\"600\":1},\"1\":{\"16\":1,\"39\":1,\"40\":5,\"41\":2,\"48\":1,\"59\":1,\"111\":1,\"115\":1,\"143\":2,\"165\":2,\"169\":1,\"178\":1,\"189\":2,\"193\":1,\"223\":4,\"226\":1,\"239\":1,\"267\":1,\"273\":4,\"278\":1,\"280\":1,\"287\":1,\"289\":1,\"296\":2,\"310\":12,\"324\":1,\"342\":8,\"351\":2,\"353\":5,\"363\":1,\"364\":4,\"370\":8,\"395\":1,\"400\":1,\"512\":1,\"515\":3,\"600\":2,\"648\":1,\"650\":1,\"651\":5,\"698\":3,\"741\":1,\"743\":1,\"750\":1}}],[\"ttl值减1\",{\"1\":{\"750\":1}}],[\"ttl\",{\"1\":{\"750\":2}}],[\"tty\",{\"1\":{\"506\":2}}],[\"tw\",{\"1\":{\"721\":4}}],[\"two~~~three\",{\"1\":{\"237\":1}}],[\"two\",{\"1\":{\"237\":3,\"353\":1}}],[\"tuln\",{\"1\":{\"747\":1}}],[\"tunlp\",{\"1\":{\"492\":1,\"493\":1,\"494\":1}}],[\"tuples\",{\"1\":{\"365\":2,\"366\":2,\"367\":1}}],[\"tuple\",{\"1\":{\"353\":1,\"360\":1}}],[\"turbine\",{\"1\":{\"135\":1}}],[\"tch30z\",{\"1\":{\"317\":1}}],[\"tcp用于ftp文件传输\",{\"1\":{\"724\":1}}],[\"tcp适合需要可靠连接\",{\"1\":{\"724\":1}}],[\"tcp和udp的区别\",{\"0\":{\"724\":1}}],[\"tcp常用的三个状态是\",{\"1\":{\"718\":1}}],[\"tcp存在保活计时器\",{\"1\":{\"712\":1}}],[\"tcp会有三次挥手出现吗\",{\"0\":{\"710\":1}}],[\"tcp在接收到对端的报文后并不会立即发送ack\",{\"1\":{\"709\":1}}],[\"tcp协议的通信双方\",{\"1\":{\"704\":1}}],[\"tcp协议头没有经过任何加密和认证\",{\"1\":{\"648\":1}}],[\"tcp为什么要四次挥手\",{\"0\":{\"706\":1}}],[\"tcp为什么要三次握手\",{\"0\":{\"700\":1}}],[\"tcp为什么不是两次握手\",{\"0\":{\"702\":1}}],[\"tcp的keepalive和http的\",{\"0\":{\"728\":1}}],[\"tcp的特点之一就是面向字节流的\",{\"1\":{\"726\":1}}],[\"tcp的半连接队列和全连接队列\",{\"0\":{\"714\":1}}],[\"tcp的msl\",{\"0\":{\"711\":1}}],[\"tcp的延迟应答和累计应答\",{\"0\":{\"709\":1}}],[\"tcp的四次挥手丢了\",{\"0\":{\"708\":1}}],[\"tcp的四次挥手\",{\"0\":{\"705\":1}}],[\"tcp的三次握手丢了\",{\"0\":{\"701\":1}}],[\"tcp的三次握手\",{\"0\":{\"699\":1}}],[\"tcp的报文信息中有一个16位字段来标识滑动窗口\",{\"1\":{\"693\":1}}],[\"tcp的头部结构\",{\"0\":{\"687\":1}}],[\"tcp传输时发送方对每一个发送的消息都会编号\",{\"1\":{\"690\":1}}],[\"tcp是可靠传输服务\",{\"1\":{\"724\":1}}],[\"tcp是面向连接的\",{\"1\":{\"724\":1}}],[\"tcp是端到端的传输\",{\"1\":{\"689\":1}}],[\"tcp是传输层的协议\",{\"1\":{\"655\":1}}],[\"tcp如何保证可靠传输\",{\"0\":{\"688\":1}}],[\"tcp头部的最后一个选项字段是可变长的可选信息\",{\"1\":{\"687\":1}}],[\"tcp首部可能含有可选项内容\",{\"1\":{\"687\":1}}],[\"tcp与udp面试常见题\",{\"0\":{\"686\":1}}],[\"tcp与udp传送字节的长度限制不同\",{\"1\":{\"668\":1}}],[\"tcp四层模型是我们实践过程中发现比较合理的分层\",{\"1\":{\"684\":1}}],[\"tcp连接至此结束\",{\"1\":{\"705\":1}}],[\"tcp连接成功\",{\"1\":{\"699\":1}}],[\"tcp连接中\",{\"1\":{\"672\":1}}],[\"tcp连接\",{\"1\":{\"672\":1}}],[\"tcpdump\",{\"1\":{\"515\":2}}],[\"tcp\",{\"0\":{\"684\":1},\"1\":{\"285\":2,\"303\":3,\"395\":2,\"485\":1,\"486\":1,\"487\":1,\"515\":1,\"543\":1,\"544\":1,\"635\":2,\"646\":1,\"650\":1,\"651\":2,\"652\":2,\"683\":1,\"687\":2,\"697\":1,\"717\":1,\"721\":3,\"724\":4,\"728\":8,\"729\":6}}],[\"tqdm\",{\"1\":{\"316\":3}}],[\"tb\",{\"1\":{\"237\":5}}],[\"timsort\",{\"1\":{\"368\":1}}],[\"timings\",{\"1\":{\"296\":1}}],[\"timestamps选项\",{\"1\":{\"721\":2}}],[\"timeout=none\",{\"1\":{\"276\":1}}],[\"timeout=1\",{\"1\":{\"275\":1}}],[\"timeouterror\",{\"1\":{\"275\":2,\"276\":2,\"278\":1,\"305\":3}}],[\"timeout\",{\"1\":{\"275\":7,\"276\":1,\"278\":3,\"286\":1,\"292\":1,\"625\":1,\"728\":1}}],[\"time\",{\"0\":{\"718\":1,\"722\":1},\"1\":{\"233\":1,\"259\":1,\"265\":5,\"272\":4,\"277\":6,\"296\":7,\"311\":3,\"327\":2,\"357\":5,\"479\":2,\"506\":1,\"528\":2,\"708\":1,\"718\":1,\"721\":3,\"722\":1,\"750\":2}}],[\"timed\",{\"1\":{\"201\":1,\"204\":1}}],[\"title\",{\"1\":{\"54\":1}}],[\"tps\",{\"1\":{\"198\":1}}],[\"tlb可以缓存最近使用过的虚拟地址到物理地址的映射关系\",{\"1\":{\"737\":1}}],[\"tlb可以是全相联\",{\"1\":{\"736\":1}}],[\"tlb是一种用于加速虚拟地址到物理地址转换的硬件缓存\",{\"1\":{\"737\":1}}],[\"tlb的存在可以有效地减少地址翻译过程中的内存访问次数\",{\"1\":{\"736\":1}}],[\"tlb的容量通常在数十到数百条映射之间\",{\"1\":{\"736\":1}}],[\"tlb命中\",{\"1\":{\"736\":1}}],[\"tlb查找\",{\"1\":{\"736\":1}}],[\"tlb通常具有较小的容量\",{\"1\":{\"736\":1}}],[\"tlb位于cpu内部\",{\"1\":{\"736\":1}}],[\"tlb未命中\",{\"1\":{\"734\":1,\"736\":2}}],[\"tlb缓存了最近使用过的vpn到pfn的映射关系\",{\"1\":{\"734\":1}}],[\"tlb\",{\"1\":{\"734\":1,\"736\":1,\"737\":3}}],[\"tls连接剥落\",{\"1\":{\"664\":1}}],[\"tls证书通过加密保护着的通讯安全\",{\"1\":{\"664\":1}}],[\"tls协议版本\",{\"1\":{\"637\":1}}],[\"tls\",{\"1\":{\"635\":1,\"638\":1,\"641\":1,\"651\":7}}],[\"tldr\",{\"0\":{\"454\":1,\"475\":1,\"487\":1,\"507\":1},\"1\":{\"475\":1,\"507\":2}}],[\"tl\",{\"1\":{\"187\":5}}],[\"td\",{\"1\":{\"158\":1,\"237\":2}}],[\"t\",{\"1\":{\"105\":2,\"178\":2,\"267\":1,\"327\":4,\"394\":1,\"400\":1,\"452\":1,\"457\":1,\"468\":2,\"473\":1,\"487\":1,\"506\":1,\"518\":2,\"523\":1,\"552\":1,\"556\":1,\"605\":1,\"606\":1}}],[\"three\",{\"1\":{\"237\":3,\"273\":1,\"296\":1}}],[\"threadpoolexecutor\",{\"1\":{\"325\":4}}],[\"threadpoolexecuter\",{\"1\":{\"226\":1}}],[\"threads\",{\"1\":{\"324\":4}}],[\"threadsafe\",{\"1\":{\"278\":2,\"300\":1}}],[\"threading\",{\"1\":{\"286\":2,\"320\":1,\"324\":2,\"326\":1}}],[\"thread^1\",{\"1\":{\"239\":1}}],[\"thread\",{\"0\":{\"202\":1,\"318\":1},\"1\":{\"200\":3,\"201\":1,\"202\":4,\"203\":1,\"204\":3,\"205\":2,\"226\":3,\"233\":4,\"237\":4,\"239\":1,\"259\":4,\"277\":3,\"300\":1,\"320\":1,\"324\":6}}],[\"threshold=0\",{\"1\":{\"189\":1}}],[\"threshold\",{\"1\":{\"187\":6,\"189\":12}}],[\"throws\",{\"1\":{\"205\":1}}],[\"throw\",{\"1\":{\"178\":1,\"189\":2}}],[\"than\",{\"1\":{\"181\":1,\"312\":4}}],[\"that\",{\"1\":{\"135\":1,\"269\":2,\"277\":1,\"296\":2,\"507\":1}}],[\"third\",{\"1\":{\"156\":2}}],[\"this\",{\"1\":{\"101\":2,\"124\":1,\"178\":2,\"179\":2,\"181\":1,\"182\":3,\"187\":1,\"189\":3,\"218\":1,\"219\":1,\"269\":1,\"271\":1,\"357\":5,\"365\":2}}],[\"then\",{\"1\":{\"590\":4,\"593\":3,\"594\":2}}],[\"them\",{\"1\":{\"296\":1}}],[\"theme\",{\"1\":{\"105\":2,\"128\":1}}],[\"themeable\",{\"1\":{\"91\":1}}],[\"themes\",{\"1\":{\"90\":11}}],[\"their\",{\"1\":{\"135\":1,\"454\":2}}],[\"there\",{\"1\":{\"135\":1}}],[\"the\",{\"1\":{\"135\":4,\"239\":1,\"244\":10,\"271\":2,\"278\":6,\"285\":2,\"288\":2,\"296\":7,\"312\":1,\"347\":1,\"454\":5,\"475\":2,\"507\":4,\"600\":6}}],[\"trx\",{\"1\":{\"631\":15}}],[\"truncate\",{\"1\":{\"624\":4}}],[\"truncate只删除表数据\",{\"1\":{\"624\":1}}],[\"truncate和delete的区别\",{\"0\":{\"624\":1}}],[\"true|false\",{\"1\":{\"245\":1}}],[\"true\",{\"1\":{\"40\":1,\"53\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"88\":1,\"95\":1,\"100\":1,\"178\":1,\"181\":1,\"187\":1,\"193\":1,\"202\":1,\"205\":1,\"215\":1,\"221\":1,\"270\":1,\"272\":1,\"273\":1,\"280\":2,\"287\":2,\"288\":4,\"296\":1,\"311\":1,\"327\":1,\"333\":1,\"342\":1,\"349\":1,\"363\":1,\"589\":1}}],[\"traceroute命令会显示从源主机到目标主机的完整路径\",{\"1\":{\"750\":1}}],[\"traceroute命令的原理\",{\"0\":{\"750\":1}}],[\"traceroute继续逐步增加ttl值\",{\"1\":{\"750\":1}}],[\"traceroute增加ttl值\",{\"1\":{\"750\":1}}],[\"traceroute接收到icmp\",{\"1\":{\"750\":1}}],[\"traceroute首先发送一个ttl为1的数据包\",{\"1\":{\"750\":1}}],[\"traceroute通过收集这些消息来确定数据包经过的路径\",{\"1\":{\"750\":1}}],[\"traceroute通过发送一系列数据包来工作\",{\"1\":{\"750\":1}}],[\"traceroute的原理基于ip协议中的\",{\"1\":{\"750\":1}}],[\"traceroute是一个网络诊断工具\",{\"1\":{\"750\":1}}],[\"train\",{\"1\":{\"316\":6}}],[\"training\",{\"1\":{\"316\":1}}],[\"translation\",{\"1\":{\"736\":1,\"737\":2}}],[\"transfer\",{\"1\":{\"683\":1,\"735\":1}}],[\"transform\",{\"1\":{\"369\":1}}],[\"transports\",{\"1\":{\"263\":1}}],[\"transient\",{\"1\":{\"181\":1,\"226\":4}}],[\"tread\",{\"1\":{\"205\":1}}],[\"treenode\",{\"1\":{\"187\":5,\"189\":1}}],[\"treenode<k\",{\"1\":{\"187\":9,\"189\":1}}],[\"treeifybin\",{\"1\":{\"187\":2}}],[\"treeify\",{\"1\":{\"187\":5}}],[\"tree\",{\"1\":{\"187\":2,\"507\":1}}],[\"treemap\",{\"1\":{\"186\":4,\"187\":1}}],[\"treeset~e~\",{\"1\":{\"178\":1}}],[\"treeset\",{\"1\":{\"178\":2,\"187\":1}}],[\"tryaquireshared\",{\"1\":{\"230\":1}}],[\"tryaquire\",{\"1\":{\"230\":1}}],[\"tryacquireshared\",{\"1\":{\"229\":1}}],[\"tryacquire\",{\"1\":{\"229\":1}}],[\"tryreleaseshared\",{\"1\":{\"229\":1,\"230\":1}}],[\"tryrelease\",{\"1\":{\"229\":1,\"230\":1}}],[\"try\",{\"1\":{\"41\":2,\"275\":1,\"278\":1,\"287\":1,\"336\":1,\"349\":1}}],[\"txkb\",{\"1\":{\"497\":1,\"547\":1}}],[\"txpck\",{\"1\":{\"497\":1,\"547\":1}}],[\"txt\",{\"1\":{\"424\":2,\"590\":2}}],[\"tx\",{\"1\":{\"40\":1}}],[\"tx<\",{\"1\":{\"40\":1,\"117\":1}}],[\"types\",{\"1\":{\"454\":1}}],[\"typeís\",{\"1\":{\"244\":2}}],[\"type>\",{\"1\":{\"142\":1}}],[\"type\",{\"1\":{\"93\":2,\"142\":1,\"244\":4}}],[\"type=str\",{\"1\":{\"316\":2}}],[\"type=\",{\"1\":{\"40\":2}}],[\"typealiases>\",{\"1\":{\"40\":1}}],[\"token\",{\"1\":{\"662\":1}}],[\"token验证\",{\"1\":{\"662\":1}}],[\"torvalds\",{\"1\":{\"419\":1}}],[\"together\",{\"1\":{\"353\":1}}],[\"too\",{\"1\":{\"278\":1}}],[\"took\",{\"1\":{\"278\":1}}],[\"tool\",{\"1\":{\"16\":1}}],[\"tools\",{\"1\":{\"15\":1,\"16\":1}}],[\"toarray\",{\"1\":{\"178\":2,\"179\":1}}],[\"toc\",{\"1\":{\"83\":1}}],[\"top命令\",{\"1\":{\"438\":1,\"532\":1}}],[\"top\",{\"0\":{\"437\":1,\"531\":1},\"1\":{\"61\":1,\"405\":1,\"439\":1,\"440\":1,\"515\":2,\"533\":1,\"534\":1,\"748\":1}}],[\"total\",{\"1\":{\"41\":5,\"296\":6,\"353\":1,\"440\":3,\"469\":2,\"519\":2,\"534\":3}}],[\"to\",{\"1\":{\"41\":7,\"93\":2,\"135\":4,\"179\":2,\"181\":2,\"187\":1,\"239\":2,\"243\":1,\"244\":2,\"268\":3,\"271\":3,\"277\":3,\"278\":1,\"288\":1,\"296\":2,\"300\":1,\"312\":3,\"353\":3,\"363\":2,\"370\":3,\"454\":1,\"750\":1}}],[\"todo\",{\"1\":{\"40\":2,\"41\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2}}],[\"temporal\",{\"1\":{\"737\":1}}],[\"temp=`expr\",{\"1\":{\"587\":1}}],[\"teras\",{\"1\":{\"468\":1,\"518\":1}}],[\"termination\",{\"1\":{\"327\":2}}],[\"terminate\",{\"1\":{\"327\":2}}],[\"terminated\",{\"1\":{\"201\":1}}],[\"term\",{\"1\":{\"8\":1}}],[\"text\",{\"1\":{\"324\":1,\"334\":1,\"335\":1}}],[\"test02\",{\"1\":{\"590\":2}}],[\"test01\",{\"1\":{\"590\":1}}],[\"testcompile\",{\"1\":{\"155\":1}}],[\"testresources\",{\"1\":{\"155\":1,\"170\":1}}],[\"test2\",{\"1\":{\"125\":1,\"171\":2,\"218\":1,\"219\":1}}],[\"test1\",{\"1\":{\"125\":1,\"171\":1,\"218\":1,\"219\":1,\"427\":4}}],[\"test测试\",{\"0\":{\"122\":1}}],[\"testdeleteuser\",{\"1\":{\"41\":1}}],[\"testinsertuser\",{\"1\":{\"41\":1}}],[\"testalluser\",{\"1\":{\"41\":1}}],[\"testselectbyid\",{\"1\":{\"41\":1}}],[\"testupdateuser\",{\"1\":{\"41\":2}}],[\"testuser\",{\"1\":{\"41\":2}}],[\"test<\",{\"1\":{\"40\":1,\"117\":1,\"123\":1,\"170\":1}}],[\"test\",{\"1\":{\"40\":1,\"41\":6,\"82\":1,\"117\":1,\"123\":1,\"125\":6,\"142\":1,\"155\":4,\"166\":10,\"171\":3,\"219\":1,\"306\":7,\"365\":2,\"426\":1,\"427\":2,\"430\":5,\"590\":1}}],[\"tag\",{\"1\":{\"388\":1,\"395\":1}}],[\"taobao\",{\"1\":{\"343\":2}}],[\"target=c\",{\"1\":{\"327\":1}}],[\"target=craw\",{\"1\":{\"324\":1}}],[\"target=worker\",{\"1\":{\"316\":1}}],[\"target>19<\",{\"1\":{\"117\":1}}],[\"target>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"149\":1}}],[\"target>8<\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1}}],[\"take\",{\"1\":{\"265\":1}}],[\"takahashi\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"tasks\",{\"1\":{\"265\":1,\"271\":4,\"273\":1,\"279\":1,\"296\":7,\"300\":1,\"334\":4,\"335\":2,\"440\":1,\"534\":1}}],[\"task2\",{\"1\":{\"265\":2}}],[\"task1\",{\"1\":{\"265\":2}}],[\"task\",{\"0\":{\"280\":1},\"1\":{\"265\":5,\"266\":1,\"268\":8,\"271\":11,\"273\":13,\"276\":2,\"278\":1,\"279\":3,\"280\":19,\"288\":5,\"293\":2,\"296\":6,\"300\":8,\"301\":1,\"304\":1,\"305\":2,\"306\":5,\"334\":2,\"335\":1}}],[\"tail命令可以显示文件的最后部分\",{\"1\":{\"749\":1}}],[\"tail\",{\"0\":{\"347\":1},\"1\":{\"226\":1,\"347\":1,\"749\":1}}],[\"tab\",{\"1\":{\"187\":14}}],[\"tablesizefor\",{\"1\":{\"189\":5}}],[\"table\",{\"1\":{\"39\":3,\"111\":1,\"115\":3,\"181\":2,\"187\":1,\"189\":3,\"193\":7,\"246\":1,\"249\":1,\"734\":1}}],[\"tmpfs\",{\"1\":{\"454\":1}}],[\"tm\",{\"1\":{\"17\":2}}],[\"和utf\",{\"1\":{\"751\":1}}],[\"和每个跳的往返时间\",{\"1\":{\"750\":1}}],[\"和invalid\",{\"1\":{\"741\":2}}],[\"和l1指令缓存\",{\"1\":{\"740\":1}}],[\"和页内偏移\",{\"1\":{\"734\":1}}],[\"和控制单元\",{\"1\":{\"732\":1}}],[\"和顺序号字段中的值相加表示紧急数据最后一个字节的序号\",{\"1\":{\"687\":1}}],[\"和short\",{\"1\":{\"652\":1}}],[\"和sar\",{\"1\":{\"482\":1}}],[\"和事务无关\",{\"1\":{\"624\":1}}],[\"和count\",{\"1\":{\"623\":1}}],[\"和其它编程语言一样\",{\"1\":{\"607\":1}}],[\"和其他语言之间的耦合\",{\"1\":{\"242\":1}}],[\"和程序名\",{\"1\":{\"487\":1}}],[\"和应用程序实际使用的内存\",{\"1\":{\"469\":1,\"519\":1}}],[\"和mpstat\",{\"1\":{\"435\":1}}],[\"和点赞差不多的意思\",{\"1\":{\"388\":1}}],[\"和容器\",{\"1\":{\"387\":1}}],[\"和仓库\",{\"1\":{\"385\":1}}],[\"和符号引用\",{\"1\":{\"246\":1}}],[\"和同事们共同研发\",{\"1\":{\"232\":1,\"258\":1}}],[\"和数组下标\",{\"1\":{\"189\":1}}],[\"和变色来保证树平衡\",{\"1\":{\"187\":1}}],[\"和传递依赖项的值\",{\"1\":{\"148\":1}}],[\"和传递依赖关系\",{\"1\":{\"140\":1}}],[\"和对象\",{\"1\":{\"19\":1}}],[\"和\",{\"0\":{\"203\":1,\"204\":1,\"222\":1,\"389\":1},\"1\":{\"15\":1,\"55\":1,\"56\":1,\"90\":1,\"105\":1,\"139\":1,\"140\":1,\"143\":2,\"144\":1,\"145\":1,\"146\":1,\"165\":1,\"181\":1,\"183\":1,\"186\":1,\"187\":3,\"207\":1,\"208\":1,\"211\":1,\"219\":1,\"221\":1,\"227\":1,\"239\":1,\"240\":1,\"243\":1,\"263\":1,\"277\":1,\"280\":1,\"322\":1,\"366\":1,\"378\":1,\"387\":1,\"406\":2,\"408\":1,\"465\":1,\"515\":1,\"566\":1,\"600\":1,\"624\":1,\"642\":1,\"651\":2,\"697\":2,\"729\":1}}],[\"包传给接收端主机\",{\"1\":{\"687\":1}}],[\"包meta\",{\"1\":{\"254\":1}}],[\"包的\",{\"1\":{\"254\":1}}],[\"包里的类基本都是使用\",{\"1\":{\"224\":1}}],[\"包中的类等\",{\"1\":{\"236\":2}}],[\"包中\",{\"1\":{\"177\":1}}],[\"包不能通过\",{\"1\":{\"156\":1}}],[\"包括拉丁字母\",{\"1\":{\"751\":1}}],[\"包括大小写英文字母\",{\"1\":{\"751\":1}}],[\"包括每个经过的路由器的ip地址\",{\"1\":{\"750\":1}}],[\"包括cpu和内存占用\",{\"1\":{\"748\":1}}],[\"包括cpu负载\",{\"1\":{\"747\":1}}],[\"包括其他用户的线程\",{\"1\":{\"747\":1}}],[\"包括跳转\",{\"1\":{\"735\":1}}],[\"包括设备驱动程序\",{\"1\":{\"731\":1}}],[\"包括处理器\",{\"1\":{\"731\":1}}],[\"包括从该对方ip所接收到的最近的一次数据包时间\",{\"1\":{\"721\":1}}],[\"包括对应的ip地址和端口号\",{\"1\":{\"719\":1}}],[\"包括读取\",{\"1\":{\"658\":1}}],[\"包括确认数据包丢失\",{\"1\":{\"648\":1}}],[\"包括内核进程\",{\"1\":{\"515\":1}}],[\"包括物理内存和虚拟内存\",{\"1\":{\"515\":1}}],[\"包括完整的命令字符串\",{\"1\":{\"507\":1}}],[\"包括下面的状态\",{\"1\":{\"506\":1}}],[\"包括时钟中断\",{\"1\":{\"479\":1,\"528\":1}}],[\"包括实体内存\",{\"1\":{\"467\":1,\"517\":1}}],[\"包括网络和网站服务\",{\"1\":{\"263\":1}}],[\"包括根结点\",{\"1\":{\"187\":1}}],[\"包括\",{\"1\":{\"143\":1,\"181\":1,\"216\":1,\"233\":1,\"259\":1,\"469\":1,\"519\":1,\"609\":1,\"610\":1}}],[\"包版本继承父工程的\",{\"1\":{\"30\":1}}],[\"包\",{\"1\":{\"15\":1,\"27\":1,\"30\":1,\"155\":1,\"224\":1,\"683\":1}}],[\"包含了程序的逻辑和控制结构\",{\"1\":{\"744\":1}}],[\"包含了一系列的指令和参数\",{\"1\":{\"389\":1}}],[\"包含子进程\",{\"1\":{\"506\":1}}],[\"包含软件运行所需的所有内容\",{\"1\":{\"378\":1}}],[\"包含按元素数量排序的最常见的元素列表\",{\"1\":{\"353\":1}}],[\"包含相应\",{\"1\":{\"8\":1}}],[\"包含安全漏洞修复和重要漏洞修复\",{\"1\":{\"8\":1}}],[\"中断\",{\"1\":{\"738\":1}}],[\"中断处理程序完成后\",{\"1\":{\"733\":1}}],[\"中断处理程序或异常处理程序\",{\"1\":{\"733\":1}}],[\"中断此次连接\",{\"1\":{\"712\":1}}],[\"中断当前线程\",{\"1\":{\"202\":1}}],[\"中继器\",{\"1\":{\"683\":1}}],[\"中加入了关于身份验证\",{\"1\":{\"678\":1}}],[\"中间dns攻击的人\",{\"1\":{\"670\":1}}],[\"中间人攻击以及如何防范\",{\"0\":{\"663\":1}}],[\"中间人服务器与客户端在\",{\"1\":{\"641\":1}}],[\"中也可以有参数的\",{\"1\":{\"654\":1}}],[\"中所有变量\",{\"1\":{\"573\":1}}],[\"中保存项目状态时\",{\"1\":{\"420\":1}}],[\"中央处理器\",{\"1\":{\"732\":1}}],[\"中央服务器\",{\"1\":{\"417\":1}}],[\"中央服务器宕机\",{\"1\":{\"416\":1}}],[\"中央仓库\",{\"1\":{\"158\":2}}],[\"中有非常重要的三个基本概念\",{\"1\":{\"385\":1}}],[\"中给出的许多结构都假定为\",{\"1\":{\"370\":1}}],[\"中依赖的库必须支持异步\",{\"1\":{\"334\":1}}],[\"中依然是有用的\",{\"1\":{\"322\":1}}],[\"中对象的管理\",{\"1\":{\"322\":1}}],[\"中对应的数组下标\",{\"1\":{\"189\":1}}],[\"中大于\",{\"1\":{\"310\":1}}],[\"中大于等于\",{\"1\":{\"310\":1}}],[\"中小于等于\",{\"1\":{\"310\":1}}],[\"中小于\",{\"1\":{\"310\":1}}],[\"中被阻塞则会等待解锁\",{\"1\":{\"287\":1}}],[\"中运行的任务不会被取消\",{\"1\":{\"274\":1}}],[\"中可等待对象的顺序一致\",{\"1\":{\"273\":1}}],[\"中可以包含多个仓库\",{\"1\":{\"388\":1}}],[\"中可以通过\",{\"1\":{\"221\":1}}],[\"中可以有多个\",{\"1\":{\"186\":1}}],[\"中只会保存一个弱引用\",{\"1\":{\"271\":1}}],[\"中需要\",{\"1\":{\"269\":1}}],[\"中基本类型的包装类的大部分类型\",{\"1\":{\"245\":1}}],[\"中很少使用的\",{\"1\":{\"233\":1,\"259\":1}}],[\"中没有哪个\",{\"1\":{\"214\":1}}],[\"中变成了红黑树根结点的元素移动到链表的最前面\",{\"1\":{\"187\":1}}],[\"中存放数据\",{\"1\":{\"187\":1}}],[\"中是唯一的\",{\"1\":{\"186\":1}}],[\"中添加大量元素之前最好使用\",{\"1\":{\"181\":1}}],[\"中配置或者添加一些额外的配置元素\",{\"1\":{\"171\":1}}],[\"中使用的\",{\"1\":{\"368\":1}}],[\"中使用\",{\"1\":{\"170\":1}}],[\"中声明的\",{\"1\":{\"170\":1}}],[\"中常用的\",{\"1\":{\"170\":1}}],[\"中通过\",{\"1\":{\"142\":1}}],[\"中定义了项目的基本信息\",{\"1\":{\"137\":1}}],[\"中文排版规范\",{\"1\":{\"128\":1}}],[\"中的查询参数也不是\",{\"1\":{\"654\":1}}],[\"中的介绍\",{\"0\":{\"454\":1,\"475\":1,\"487\":1}}],[\"中的一些常见概念和命令做了详细的阐述\",{\"1\":{\"407\":1}}],[\"中的进程没有影响\",{\"1\":{\"406\":1}}],[\"中的系统资源只会影响当前\",{\"1\":{\"406\":1}}],[\"中的指令\",{\"1\":{\"389\":1,\"394\":1}}],[\"中的镜像\",{\"1\":{\"388\":1}}],[\"中的项返回一个新的已排序列表\",{\"1\":{\"363\":1}}],[\"中的三种并发编程方式\",{\"0\":{\"317\":1}}],[\"中的最常用命令\",{\"1\":{\"431\":1}}],[\"中的最右侧索引\",{\"1\":{\"310\":1}}],[\"中的最左侧索引\",{\"1\":{\"310\":1}}],[\"中的某个可等待对象为协程\",{\"1\":{\"273\":1}}],[\"中的类\",{\"1\":{\"256\":1}}],[\"中的类有一个运行时刻的表示\",{\"1\":{\"233\":1,\"259\":1}}],[\"中的常量池不是一个概念\",{\"1\":{\"245\":1}}],[\"中的很多类都是基于\",{\"1\":{\"226\":1}}],[\"中的应用\",{\"1\":{\"224\":1}}],[\"中的优先级是\",{\"1\":{\"202\":1}}],[\"中的线程无法同时运行\",{\"1\":{\"322\":1}}],[\"中的线程\",{\"0\":{\"199\":1}}],[\"中的红黑树同时也是一个双向链表\",{\"1\":{\"187\":1}}],[\"中的值可以是重复\",{\"1\":{\"186\":1}}],[\"中的键必须是唯一的\",{\"1\":{\"186\":1}}],[\"中的元素\",{\"1\":{\"186\":1}}],[\"中的元素是其内部类定义的\",{\"1\":{\"182\":1}}],[\"中的\",{\"1\":{\"150\":2,\"202\":1,\"221\":1,\"249\":1,\"622\":1,\"631\":2,\"652\":1}}],[\"中的插件列表\",{\"1\":{\"105\":1}}],[\"中的配置\",{\"1\":{\"65\":1,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1}}],[\"中的所有修复以及其他非重要修复\",{\"1\":{\"8\":1}}],[\"中各\",{\"1\":{\"30\":1}}],[\"中\",{\"1\":{\"15\":1,\"140\":1,\"169\":3,\"181\":1,\"187\":1,\"193\":1,\"249\":3,\"351\":2,\"370\":3,\"406\":1,\"622\":1,\"625\":1}}],[\"因而窗口大小最大为65535\",{\"1\":{\"687\":1}}],[\"因为缓存的访问速度比主内存快得多\",{\"1\":{\"739\":1}}],[\"因为只需要分配实际使用的页表空间\",{\"1\":{\"734\":1}}],[\"因为发送方迟迟收不到\",{\"1\":{\"729\":1}}],[\"因为问题出在服务器程序\",{\"1\":{\"723\":1}}],[\"因为客户端的\",{\"1\":{\"722\":1}}],[\"因为客户端最后一个发送的ack有可能丢失\",{\"1\":{\"722\":1}}],[\"因为网络或者其他原因\",{\"1\":{\"722\":1}}],[\"因为网络通畅了\",{\"1\":{\"703\":1}}],[\"因为长连接对于服务端来说会耗费一定的资源\",{\"1\":{\"713\":1}}],[\"因为大部分没丢\",{\"1\":{\"697\":1}}],[\"因为tcp连接是由四元组唯一标识的\",{\"1\":{\"719\":1}}],[\"因为tcp是以ip数据报的形式在网络中传输\",{\"1\":{\"711\":1}}],[\"因为tcp是基于ip识别连接\",{\"1\":{\"648\":1}}],[\"因为tcp头部最长是60字节\",{\"1\":{\"687\":1}}],[\"因为首部长度实际上指示了数据区在报文段中的起始偏移值\",{\"1\":{\"687\":1}}],[\"因为get请求提交的数据将明文出现在url上\",{\"1\":{\"653\":1}}],[\"因为数据重传将会消耗更多的时间\",{\"1\":{\"648\":1}}],[\"因为可以从缓存中获取这个资源\",{\"1\":{\"642\":1}}],[\"因为可能这期间另外一个事务修改了该记录\",{\"1\":{\"633\":1}}],[\"因为当执行\",{\"1\":{\"632\":1}}],[\"因为这样会导致数据库在并发事务时性能很差\",{\"1\":{\"630\":1}}],[\"因为这样在使用\",{\"1\":{\"425\":1}}],[\"因为这个原因可重入锁也叫做递归锁\",{\"1\":{\"216\":1}}],[\"因为每次请求对资源的改变并不是相同的\",{\"1\":{\"653\":1}}],[\"因为每次只有一个线程能够执行hashtable的方法\",{\"1\":{\"193\":1}}],[\"因为每扇区大小为512字节\",{\"1\":{\"458\":1,\"557\":1}}],[\"因为每个人的电脑上都是完整的版本库\",{\"1\":{\"417\":1}}],[\"因为每一次的克隆操作\",{\"1\":{\"417\":1}}],[\"因为两者有不同的使用场景\",{\"1\":{\"380\":1}}],[\"因为两个task是同时运行的\",{\"1\":{\"265\":1}}],[\"因为容器虚拟化的是操作系统\",{\"1\":{\"380\":1}}],[\"因为装饰元组的排序最多由前两项决定\",{\"1\":{\"369\":1}}],[\"因为它们是合法通讯流的一部分\",{\"1\":{\"664\":1}}],[\"因为它会对记录加\",{\"1\":{\"632\":1}}],[\"因为它可以利用数据集中已存在的任何排序\",{\"1\":{\"368\":1}}],[\"因为它的大多数方法\",{\"1\":{\"193\":1}}],[\"因为有await\",{\"1\":{\"267\":1}}],[\"因为通过反射实例化对象调用的是无参构造函数\",{\"1\":{\"255\":1}}],[\"因为线程没有被阻塞\",{\"1\":{\"222\":1}}],[\"因为整个方法都是同步的\",{\"1\":{\"219\":1}}],[\"因为不管基于那种方式\",{\"1\":{\"200\":1}}],[\"因为不管指定容量为\",{\"1\":{\"189\":1}}],[\"因为操作系统要防止一个线程或者进程长时间占用\",{\"1\":{\"198\":1}}],[\"因为时间片非常短\",{\"1\":{\"198\":1}}],[\"因为更多的线程意味着线程创建的开销更大\",{\"1\":{\"198\":1}}],[\"因为头结点不断变化\",{\"1\":{\"190\":1}}],[\"因为头结点每次都会变化\",{\"1\":{\"190\":1}}],[\"因为二叉查找树在某些情况下会退化成一个线性结构\",{\"1\":{\"187\":1}}],[\"因为最后一条规则的限制\",{\"1\":{\"187\":1}}],[\"因为需要先移动到指定位置再执行插入和删除\",{\"1\":{\"183\":1}}],[\"因为第i个元素和第i\",{\"1\":{\"183\":1}}],[\"因为第一次调用\",{\"1\":{\"181\":1}}],[\"因为\",{\"1\":{\"143\":1,\"181\":1,\"186\":1,\"189\":1,\"271\":1,\"322\":1,\"729\":1}}],[\"因为没有处理非\",{\"1\":{\"97\":1}}],[\"因为在\",{\"1\":{\"15\":1}}],[\"因此它需要具有较低的访问延迟\",{\"1\":{\"736\":1}}],[\"因此它们不应被用于\",{\"1\":{\"286\":1}}],[\"因此它们也没有任何实际的行为\",{\"1\":{\"155\":1}}],[\"因此拆包这个功能本身就不在tcp来完成\",{\"1\":{\"726\":1}}],[\"因此使用tcp协议\",{\"1\":{\"668\":1}}],[\"因此性能也会更好一些\",{\"1\":{\"655\":1}}],[\"因此即使移动设备的网络变化后\",{\"1\":{\"651\":1}}],[\"因此少量的丢包可以通过其他包的冗余数据直接组装而无需重传\",{\"1\":{\"648\":1}}],[\"因此可能会浪费空间\",{\"1\":{\"618\":1}}],[\"因此可以在其他协程中被等待\",{\"1\":{\"267\":1}}],[\"因此可以省略\",{\"1\":{\"30\":1}}],[\"因此应用出现问题\",{\"1\":{\"383\":1}}],[\"因此也称其为容器\",{\"1\":{\"382\":1}}],[\"因此也被称为\",{\"1\":{\"243\":1}}],[\"因此容器要比传统虚拟机更为轻便\",{\"1\":{\"380\":1}}],[\"因此容器更容易移植\",{\"1\":{\"380\":1}}],[\"因此多线程用于\",{\"1\":{\"322\":1}}],[\"因此为了线程切换后能恢复到正确的执行位置\",{\"1\":{\"238\":1}}],[\"因此没有对应的\",{\"1\":{\"236\":1}}],[\"因此纤程的创建和开销很小\",{\"1\":{\"196\":1}}],[\"因此需要移动平均\",{\"1\":{\"182\":1}}],[\"因此集合存储不定量的数据更合适\",{\"1\":{\"177\":1}}],[\"因此\",{\"1\":{\"8\":1,\"170\":1,\"233\":1,\"259\":1,\"273\":1,\"274\":1,\"366\":1,\"369\":1,\"380\":1,\"386\":1,\"387\":2,\"722\":1}}],[\"是ip包头中的一个字段\",{\"1\":{\"750\":1}}],[\"是多核处理器系统中一种关键的技术\",{\"1\":{\"741\":1}}],[\"是系统在执行内核代码或响应系统调用时的特权状态\",{\"1\":{\"738\":1}}],[\"是程序运行时的正常状态\",{\"1\":{\"738\":1}}],[\"是指在计算机程序的执行过程中\",{\"1\":{\"737\":1}}],[\"是指一个时间段中有几个程序都处于已启动运行到运行完毕之间\",{\"1\":{\"197\":1}}],[\"是计算机中用于表示和处理文本的不同字符编码方案\",{\"1\":{\"751\":1}}],[\"是计算机系统的核心部件\",{\"1\":{\"732\":1}}],[\"是计算机程序设计语言解释器用于同步线程的一种机制\",{\"1\":{\"322\":1}}],[\"是管理计算机硬件和软件资源\",{\"1\":{\"731\":1}}],[\"是没有边界的\",{\"1\":{\"726\":1}}],[\"是有边界的\",{\"1\":{\"724\":1}}],[\"是流式传输\",{\"1\":{\"724\":1}}],[\"是如何处理收到的乱序到\",{\"0\":{\"707\":1}}],[\"是tcp流量控制的一个手段\",{\"1\":{\"687\":1}}],[\"是单向认证\",{\"1\":{\"665\":1}}],[\"是分层的\",{\"1\":{\"651\":1}}],[\"是最常见的请求错误码\",{\"1\":{\"642\":1}}],[\"是协议处理中的一种中间状态\",{\"1\":{\"642\":1}}],[\"是通过\",{\"1\":{\"632\":2}}],[\"是逐行执行的\",{\"1\":{\"624\":1}}],[\"是返回右表中所有的行及左表中符合条件的行\",{\"1\":{\"619\":1}}],[\"是返回左表中所有的行及右表中符合条件的行\",{\"1\":{\"619\":1}}],[\"是返回两个表中都有的符合条件的行\",{\"1\":{\"619\":1}}],[\"是linux下系统运行状态统计工具\",{\"1\":{\"496\":1,\"546\":1}}],[\"是不是都已暂存起来了\",{\"1\":{\"424\":1}}],[\"是不是一个\",{\"1\":{\"244\":1}}],[\"是为了对一组进程进行统一的资源监控和限制\",{\"1\":{\"406\":1}}],[\"是为了隔离进程组之间的资源\",{\"1\":{\"406\":1}}],[\"是对全局系统资源的一种封装隔离\",{\"1\":{\"406\":1}}],[\"是将计算机的各种实体资源\",{\"1\":{\"406\":1}}],[\"是将每条请求共享资源的线程封装成一个\",{\"1\":{\"226\":1}}],[\"是开源项目\",{\"1\":{\"399\":1}}],[\"是开放给用户使用\",{\"1\":{\"388\":1}}],[\"是镜像的版本号或标签\",{\"1\":{\"394\":1}}],[\"是镜像名称\",{\"1\":{\"394\":1}}],[\"是世界领先的软件容器平台\",{\"1\":{\"376\":1,\"382\":1}}],[\"是服务提供者对\",{\"1\":{\"254\":1}}],[\"是加载到方法区中\",{\"1\":{\"246\":1}}],[\"是高性能的\",{\"1\":{\"233\":1,\"259\":1}}],[\"是高于手动配置的\",{\"1\":{\"17\":1}}],[\"是由tcp层\",{\"1\":{\"728\":1}}],[\"是由\",{\"1\":{\"232\":1,\"258\":1,\"728\":1}}],[\"是用来设置超时时间的\",{\"1\":{\"625\":1}}],[\"是用来编写\",{\"1\":{\"263\":1}}],[\"是用于在各种硬件和操作系统平台上执行\",{\"1\":{\"235\":1}}],[\"是用\",{\"1\":{\"226\":1}}],[\"是随机或者按照其他优先级排序的\",{\"1\":{\"217\":1}}],[\"是基于轻量级虚拟化技术的软件\",{\"1\":{\"406\":1}}],[\"是基于\",{\"1\":{\"205\":1,\"219\":1}}],[\"是要暂停当前线程\",{\"1\":{\"204\":1}}],[\"是处理并发哈希表操作的推荐选择\",{\"1\":{\"193\":1}}],[\"是线程共享的\",{\"1\":{\"237\":1}}],[\"是线程安全的\",{\"1\":{\"193\":1}}],[\"是线程不安全的\",{\"1\":{\"181\":1}}],[\"是非线程安全的\",{\"1\":{\"187\":1}}],[\"是常用的\",{\"1\":{\"187\":1}}],[\"是无序的\",{\"1\":{\"186\":1}}],[\"是无法保证能够随着\",{\"1\":{\"170\":1}}],[\"是否在\",{\"1\":{\"631\":1}}],[\"是否存在文件\",{\"1\":{\"590\":1}}],[\"是否可以拆分为多个块\",{\"1\":{\"239\":1}}],[\"是否跟原本一致就体现在\",{\"1\":{\"189\":1}}],[\"是否相同\",{\"1\":{\"187\":1}}],[\"是否支持快速随机访问\",{\"1\":{\"183\":1}}],[\"是否隐藏其他侧边栏内容\",{\"1\":{\"93\":1}}],[\"是古早的实现类\",{\"1\":{\"181\":1}}],[\"是一块较小的内存空间\",{\"1\":{\"238\":1}}],[\"是一种缓存一致性协议\",{\"1\":{\"742\":1}}],[\"是一种层级化的存储器架构\",{\"1\":{\"740\":1}}],[\"是一种位于cpu与主内存\",{\"1\":{\"739\":1}}],[\"是一种硬件高速缓存\",{\"1\":{\"736\":1}}],[\"是一种计算机组织结构\",{\"1\":{\"732\":1}}],[\"是一种用于捕获流进和流出系统\",{\"1\":{\"664\":1}}],[\"是一种用于遍历集合的接口\",{\"1\":{\"178\":1}}],[\"是一种特殊的\",{\"1\":{\"269\":1}}],[\"是一种机制\",{\"1\":{\"255\":1}}],[\"是一种全能型的屏障\",{\"1\":{\"211\":1}}],[\"是一种\",{\"1\":{\"211\":2}}],[\"是一颗自平衡\",{\"1\":{\"187\":1}}],[\"是一个多处理器系统中的性能问题\",{\"1\":{\"743\":1}}],[\"是一个包一个包的发送\",{\"1\":{\"724\":1}}],[\"是一个命令解释器\",{\"1\":{\"570\":1}}],[\"是一个用来替换vmstat\",{\"1\":{\"567\":1}}],[\"是一个用来监视\",{\"1\":{\"566\":1}}],[\"是一个用来监视磁盘i\",{\"1\":{\"461\":1,\"560\":1}}],[\"是一个文本文件\",{\"1\":{\"389\":1}}],[\"是一个物理硬件层抽象\",{\"1\":{\"380\":1}}],[\"是一个\",{\"1\":{\"353\":1}}],[\"是一个协程\",{\"1\":{\"274\":1,\"275\":1}}],[\"是一个非常强大的虚拟机\",{\"1\":{\"235\":1}}],[\"是一个比较好的临界值\",{\"1\":{\"187\":1}}],[\"是一个接口\",{\"1\":{\"186\":1}}],[\"是一个基于双向链表实现的集合类\",{\"1\":{\"182\":1}}],[\"是一个软件项目管理和理解工具\",{\"1\":{\"135\":1}}],[\"是支持自定义的\",{\"1\":{\"170\":1}}],[\"是其中之一\",{\"1\":{\"166\":1}}],[\"是从父级继承的\",{\"1\":{\"139\":1}}],[\"是什么并不太好说\",{\"1\":{\"382\":1}}],[\"是什么\",{\"0\":{\"135\":1,\"137\":1,\"226\":1,\"232\":1,\"235\":1,\"252\":1,\"258\":1},\"1\":{\"101\":1}}],[\"是运行环境类库\",{\"1\":{\"16\":1}}],[\"是\",{\"1\":{\"15\":1,\"50\":1,\"188\":1,\"189\":1,\"196\":1,\"204\":2,\"235\":2,\"236\":1,\"245\":1,\"388\":1,\"393\":1,\"399\":1,\"406\":3,\"430\":1,\"458\":2,\"557\":2}}],[\"是面向对象的编程语言\",{\"1\":{\"7\":1}}],[\"o性能\",{\"1\":{\"737\":1}}],[\"o设备之间传输数据\",{\"1\":{\"735\":1}}],[\"o或者内存交换等\",{\"1\":{\"479\":1,\"528\":1}}],[\"o等系统整体运行状态\",{\"1\":{\"477\":1,\"526\":1}}],[\"o使用状况的top类工具\",{\"1\":{\"461\":1,\"560\":1}}],[\"o操作的服务时间\",{\"1\":{\"458\":1,\"557\":1}}],[\"o操作的等待时间\",{\"1\":{\"458\":1,\"557\":1}}],[\"o操作的数据大小\",{\"1\":{\"458\":1,\"557\":1}}],[\"o队列长度\",{\"1\":{\"458\":1,\"557\":1}}],[\"ok\",{\"1\":{\"388\":3,\"566\":1}}],[\"other\",{\"1\":{\"370\":12}}],[\"obj\",{\"1\":{\"341\":5,\"370\":15}}],[\"objects\",{\"0\":{\"266\":1},\"1\":{\"366\":2,\"368\":1,\"369\":1}}],[\"objectmonitor\",{\"1\":{\"219\":2}}],[\"object\",{\"1\":{\"19\":1,\"41\":1,\"81\":1,\"137\":1,\"147\":1,\"178\":10,\"179\":4,\"181\":6,\"183\":1,\"187\":1,\"204\":3,\"244\":1,\"265\":1,\"267\":1,\"269\":2,\"288\":1}}],[\"omerii\",{\"1\":{\"326\":1}}],[\"our\",{\"1\":{\"296\":2}}],[\"outofmemoryerror\",{\"1\":{\"238\":1,\"239\":3,\"240\":1,\"243\":1,\"244\":1}}],[\"out\",{\"1\":{\"41\":5,\"118\":1,\"125\":1,\"193\":3,\"205\":4,\"239\":2,\"296\":1,\"507\":1}}],[\"output\",{\"1\":{\"14\":1,\"273\":1,\"275\":1,\"277\":1,\"475\":1,\"732\":1}}],[\"o与协程\",{\"0\":{\"262\":1}}],[\"oom\",{\"1\":{\"239\":5}}],[\"oldthr\",{\"1\":{\"189\":4}}],[\"oldtab\",{\"1\":{\"189\":7}}],[\"oldcap\",{\"1\":{\"189\":21}}],[\"oldcapacity\",{\"1\":{\"181\":8}}],[\"oldvalue\",{\"1\":{\"187\":3,\"221\":3}}],[\"osi的7层网络模型\",{\"0\":{\"683\":1}}],[\"osiges\",{\"1\":{\"333\":1}}],[\"osx\",{\"1\":{\"487\":1}}],[\"os\",{\"1\":{\"263\":1,\"278\":2,\"286\":1,\"300\":2,\"357\":3,\"731\":1}}],[\"os>\",{\"1\":{\"171\":1}}],[\"oskkzsv4wm\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"optimize优化和execute执行阶段\",{\"1\":{\"621\":1}}],[\"optimized\",{\"1\":{\"388\":1}}],[\"optimistic\",{\"1\":{\"214\":1}}],[\"optimisticlock\",{\"1\":{\"214\":1}}],[\"optional\",{\"1\":{\"142\":1,\"278\":1}}],[\"optional>\",{\"1\":{\"142\":1}}],[\"operating\",{\"1\":{\"406\":1,\"731\":1}}],[\"operations\",{\"1\":{\"277\":1}}],[\"operation\",{\"0\":{\"762\":1},\"1\":{\"277\":1}}],[\"operator\",{\"0\":{\"366\":1},\"1\":{\"179\":1,\"366\":2}}],[\"openssl\",{\"1\":{\"651\":1}}],[\"opensession\",{\"1\":{\"41\":2}}],[\"open\",{\"1\":{\"106\":3,\"282\":1,\"283\":1,\"285\":1,\"303\":2,\"316\":2,\"347\":1,\"388\":1}}],[\"opening\",{\"1\":{\"41\":5}}],[\"own\",{\"1\":{\"135\":1,\"271\":1}}],[\"overhead\",{\"1\":{\"239\":1}}],[\"over\",{\"1\":{\"136\":1}}],[\"override\",{\"1\":{\"118\":2,\"178\":1}}],[\"overview\",{\"1\":{\"85\":2,\"454\":1}}],[\"o\",{\"0\":{\"263\":1},\"1\":{\"106\":2,\"178\":2,\"179\":2,\"182\":2,\"183\":4,\"253\":3,\"319\":1,\"354\":4,\"406\":1,\"458\":4,\"461\":1,\"462\":1,\"463\":1,\"468\":1,\"505\":1,\"507\":1,\"513\":3,\"515\":3,\"518\":1,\"557\":4,\"560\":1,\"561\":1,\"562\":1,\"564\":3,\"622\":1}}],[\"onfocus=\",{\"1\":{\"659\":1}}],[\"onclick=\",{\"1\":{\"659\":1}}],[\"only\",{\"1\":{\"353\":1,\"659\":1}}],[\"onlyifabsent\",{\"1\":{\"187\":2}}],[\"one~~~six\",{\"1\":{\"237\":2}}],[\"one~~~three\",{\"1\":{\"237\":1}}],[\"one\",{\"1\":{\"237\":2,\"275\":1,\"353\":1}}],[\"on\",{\"1\":{\"41\":5,\"285\":1,\"368\":2,\"400\":2,\"454\":1,\"625\":1}}],[\"office\",{\"1\":{\"683\":1}}],[\"official\",{\"1\":{\"388\":2}}],[\"offset表示在这个页中的位置\",{\"1\":{\"734\":1}}],[\"offset\",{\"1\":{\"652\":2,\"734\":1}}],[\"offset字段类似于\",{\"1\":{\"652\":1}}],[\"offset和length字段\",{\"1\":{\"652\":1}}],[\"of\",{\"1\":{\"39\":1,\"115\":1,\"135\":3,\"226\":2,\"239\":2,\"244\":4,\"296\":1,\"347\":1,\"353\":4,\"388\":1,\"454\":2,\"475\":1,\"507\":4,\"737\":1}}],[\"orchestration\",{\"1\":{\"399\":1}}],[\"ord\",{\"1\":{\"360\":1}}],[\"ordered\",{\"1\":{\"244\":1}}],[\"order\",{\"1\":{\"189\":1}}],[\"orange\",{\"1\":{\"193\":1}}],[\"oracle\",{\"1\":{\"8\":14,\"17\":1,\"232\":2,\"258\":2}}],[\"origin\",{\"1\":{\"101\":1,\"426\":3,\"429\":2,\"430\":1}}],[\"or\",{\"1\":{\"93\":1,\"239\":2,\"244\":1,\"268\":1,\"312\":2,\"353\":3,\"454\":2}}],[\"organization\",{\"1\":{\"146\":1}}],[\"org\",{\"1\":{\"27\":4,\"30\":4,\"32\":4,\"35\":4,\"40\":7,\"41\":5,\"117\":7,\"118\":8,\"121\":7,\"124\":9,\"125\":6,\"137\":4,\"146\":4,\"149\":8,\"159\":4,\"267\":1,\"280\":1,\"287\":1,\"289\":1,\"348\":1,\"454\":1}}],[\"mtu\",{\"1\":{\"724\":1,\"729\":1}}],[\"mpstat命令\",{\"1\":{\"444\":1,\"538\":1}}],[\"mpstat\",{\"0\":{\"443\":1,\"537\":1},\"1\":{\"445\":1,\"515\":4,\"539\":1}}],[\"mvvc实现原理\",{\"0\":{\"631\":1}}],[\"mvcc\",{\"1\":{\"627\":1,\"632\":2}}],[\"mv\",{\"1\":{\"424\":1}}],[\"mvn\",{\"1\":{\"147\":1,\"153\":2,\"171\":3}}],[\"mvnrepository\",{\"1\":{\"40\":4,\"117\":4}}],[\"mm\",{\"1\":{\"316\":1}}],[\"multi\",{\"1\":{\"324\":1}}],[\"multiprocessing\",{\"1\":{\"316\":1,\"320\":1,\"322\":1,\"326\":1,\"327\":1}}],[\"multithreading\",{\"1\":{\"278\":1}}],[\"msi协议是一种简化版的缓存一致性协议\",{\"1\":{\"741\":1}}],[\"msi协议\",{\"1\":{\"741\":1}}],[\"mss\",{\"1\":{\"724\":1,\"729\":1}}],[\"msl指一个片段在网络中最大的存活时间\",{\"1\":{\"722\":1}}],[\"msl是任何报文在网络中被丢弃前的最长存活时间\",{\"1\":{\"711\":1}}],[\"mstat命令\",{\"1\":{\"477\":1,\"526\":1}}],[\"msg=none\",{\"1\":{\"280\":1}}],[\"msou1bj0vv\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"mb\",{\"1\":{\"239\":1,\"475\":2}}],[\"mfence\",{\"1\":{\"211\":1}}],[\"m+1\",{\"1\":{\"189\":1}}],[\"m\",{\"1\":{\"178\":1,\"223\":7,\"357\":2,\"424\":2,\"452\":1,\"457\":1,\"468\":2,\"478\":1,\"515\":1,\"518\":2,\"527\":1,\"552\":1,\"556\":1,\"586\":2,\"631\":5}}],[\"m2\",{\"1\":{\"158\":1,\"169\":1}}],[\"megas\",{\"1\":{\"468\":1,\"518\":1}}],[\"memor\",{\"1\":{\"477\":1,\"526\":1}}],[\"memory\",{\"1\":{\"205\":1,\"237\":2,\"239\":4,\"406\":1,\"475\":4,\"479\":1,\"507\":1,\"515\":1,\"528\":1,\"732\":1,\"735\":1}}],[\"mem\",{\"1\":{\"440\":1,\"506\":1,\"534\":1,\"748\":1}}],[\"merge\",{\"1\":{\"351\":1,\"430\":1}}],[\"mermaid\",{\"0\":{\"101\":1},\"1\":{\"101\":12}}],[\"message\",{\"1\":{\"285\":6,\"357\":6}}],[\"mesi协议通过监控处理器核心的读写操作以及跟踪其他核心的操作来实现缓存一致性\",{\"1\":{\"742\":1}}],[\"mesi协议通过四种状态来跟踪缓存行\",{\"1\":{\"742\":1}}],[\"mesi协议通过对缓存行设置这四种状态来维护一致性\",{\"1\":{\"741\":1}}],[\"mesi协议\",{\"1\":{\"741\":1,\"742\":1}}],[\"mesi\",{\"1\":{\"207\":2,\"208\":1}}],[\"meta\",{\"1\":{\"244\":1,\"254\":1,\"256\":1}}],[\"metaspace\",{\"1\":{\"237\":1,\"239\":3}}],[\"methodcaller\",{\"1\":{\"366\":1}}],[\"method\",{\"1\":{\"237\":5,\"244\":1}}],[\"me\",{\"1\":{\"232\":1,\"258\":1}}],[\"meaning\",{\"1\":{\"135\":1}}],[\"medium\",{\"1\":{\"94\":2}}],[\"media\",{\"1\":{\"75\":1}}],[\"moesi协议\",{\"1\":{\"741\":1}}],[\"mount\",{\"1\":{\"397\":2}}],[\"mounts\",{\"1\":{\"397\":1}}],[\"moving\",{\"1\":{\"348\":3}}],[\"months\",{\"1\":{\"395\":1}}],[\"monotonic\",{\"1\":{\"296\":2}}],[\"monitorexit\",{\"1\":{\"219\":2}}],[\"monitorenter\",{\"1\":{\"219\":2}}],[\"monitor\",{\"1\":{\"219\":6}}],[\"most\",{\"1\":{\"275\":1,\"353\":3}}],[\"more\",{\"1\":{\"53\":1,\"353\":1,\"454\":1}}],[\"modified来确定\",{\"1\":{\"645\":1}}],[\"modified的响应\",{\"1\":{\"645\":1}}],[\"modified\",{\"1\":{\"421\":1,\"645\":6,\"741\":2,\"742\":2}}],[\"modifiers\",{\"1\":{\"244\":1}}],[\"modcount\",{\"1\":{\"181\":1}}],[\"modcount++\",{\"1\":{\"181\":1}}],[\"mode=\",{\"1\":{\"357\":1}}],[\"modelversion包含4\",{\"1\":{\"137\":1}}],[\"modelversion>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"146\":1,\"149\":2}}],[\"model\",{\"1\":{\"19\":1,\"137\":1,\"205\":1}}],[\"mode\",{\"1\":{\"17\":1,\"738\":2}}],[\"module>\",{\"1\":{\"27\":1,\"35\":3,\"117\":1,\"149\":6}}],[\"modules>\",{\"1\":{\"27\":1,\"35\":1,\"117\":1,\"149\":1}}],[\"modules\",{\"1\":{\"14\":1,\"170\":1}}],[\"module\",{\"1\":{\"14\":1,\"22\":1}}],[\"md\",{\"1\":{\"48\":2,\"51\":8,\"52\":1,\"53\":6,\"54\":2,\"58\":1,\"59\":9,\"61\":2,\"62\":6,\"70\":2,\"71\":1,\"75\":2,\"76\":3,\"78\":7,\"80\":2,\"82\":2,\"84\":1,\"88\":1,\"89\":3,\"93\":4,\"107\":5,\"424\":3}}],[\"mylogfile\",{\"1\":{\"749\":2}}],[\"mytop\",{\"1\":{\"515\":2}}],[\"mys\",{\"1\":{\"388\":1}}],[\"mysql的事务隔离级别\",{\"0\":{\"629\":1}}],[\"mysql之事务的四大特性\",{\"0\":{\"627\":1}}],[\"mysql会出现死锁吗\",{\"0\":{\"625\":1}}],[\"mysql服务收到语句之后会进行解析判断sql语句的类型\",{\"1\":{\"621\":1}}],[\"mysql服务如果没有启动就会报错\",{\"1\":{\"621\":1}}],[\"mysql正常运行的话就去校验用户名和密码\",{\"1\":{\"621\":1}}],[\"mysql是基于tcp进行传输的\",{\"1\":{\"621\":1}}],[\"mysql中varchar和char的区别是什么\",{\"0\":{\"618\":1}}],[\"mysql暂停这个容器\",{\"1\":{\"395\":1}}],[\"mysql\",{\"0\":{\"760\":1},\"1\":{\"40\":2,\"41\":5,\"120\":2,\"388\":6,\"393\":2,\"395\":7,\"515\":1,\"621\":2,\"623\":1,\"629\":1}}],[\"mycmp\",{\"1\":{\"370\":7}}],[\"myfunc\",{\"1\":{\"334\":2}}],[\"my404\",{\"1\":{\"89\":1}}],[\"my\",{\"1\":{\"76\":2,\"78\":1,\"397\":2}}],[\"mybatis的内置的事务管理器\",{\"1\":{\"40\":1}}],[\"mybatis配置文件\",{\"1\":{\"40\":1}}],[\"mybatis<\",{\"1\":{\"40\":1}}],[\"mybatis\",{\"1\":{\"37\":1,\"40\":8,\"41\":2}}],[\"mybatis基本使用\",{\"0\":{\"36\":1}}],[\"man\",{\"1\":{\"487\":1,\"745\":1}}],[\"manager<\",{\"1\":{\"149\":1}}],[\"make\",{\"1\":{\"271\":1}}],[\"machine\",{\"1\":{\"235\":1}}],[\"maxlen=n\",{\"1\":{\"347\":1}}],[\"maxlen\",{\"1\":{\"344\":1,\"345\":1}}],[\"maxsize\",{\"1\":{\"293\":3}}],[\"maxsize=0\",{\"1\":{\"293\":1}}],[\"maxdirectmemorysize\",{\"1\":{\"239\":1}}],[\"maxmetaspacesize\",{\"1\":{\"239\":1}}],[\"maxpermsize\",{\"1\":{\"239\":1}}],[\"maximum\",{\"1\":{\"189\":9}}],[\"max\",{\"1\":{\"181\":9,\"189\":2,\"239\":2,\"311\":3,\"352\":2,\"353\":1,\"631\":2,\"717\":1,\"721\":1}}],[\"maxage\",{\"1\":{\"93\":1}}],[\"map的结果和入参的顺序对应的\",{\"1\":{\"325\":1}}],[\"mapped\",{\"1\":{\"239\":1}}],[\"mapper>\",{\"1\":{\"40\":1}}],[\"mapperxml编写\",{\"1\":{\"40\":1}}],[\"mappers>\",{\"1\":{\"40\":1}}],[\"mappers\",{\"1\":{\"40\":1}}],[\"mapper标签\",{\"1\":{\"40\":1}}],[\"mapper注册\",{\"1\":{\"40\":1}}],[\"mapper\",{\"1\":{\"40\":6,\"41\":1}}],[\"mapping\",{\"1\":{\"187\":1,\"353\":4}}],[\"map\",{\"0\":{\"186\":1},\"1\":{\"177\":3,\"178\":2,\"186\":17,\"187\":2,\"193\":1,\"325\":2,\"349\":1}}],[\"mathcal\",{\"1\":{\"182\":2,\"183\":4}}],[\"math\",{\"1\":{\"181\":1,\"311\":1}}],[\"mathml\",{\"1\":{\"102\":1}}],[\"matching\",{\"1\":{\"146\":1}}],[\"matches\",{\"1\":{\"41\":1,\"507\":1}}],[\"mariadb\",{\"1\":{\"388\":2}}],[\"markup\",{\"1\":{\"102\":2,\"400\":1}}],[\"marked\",{\"1\":{\"100\":3}}],[\"markdown增强\",{\"1\":{\"128\":1}}],[\"markdown扩展\",{\"1\":{\"128\":1}}],[\"markdown语法\",{\"1\":{\"128\":1}}],[\"markdown\",{\"0\":{\"58\":1,\"100\":1},\"1\":{\"52\":1,\"56\":1,\"58\":1,\"61\":1,\"95\":1,\"100\":4,\"101\":1}}],[\"margaret\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"mail\",{\"1\":{\"683\":1}}],[\"mailinglists\",{\"1\":{\"146\":1}}],[\"maintain\",{\"1\":{\"624\":1}}],[\"main\",{\"1\":{\"50\":1,\"71\":1,\"171\":2,\"193\":1,\"202\":1,\"205\":1,\"265\":8,\"267\":2,\"268\":3,\"269\":1,\"270\":2,\"273\":2,\"275\":2,\"277\":6,\"285\":2,\"288\":2,\"296\":2,\"306\":4}}],[\"maiuohaghq\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"master\",{\"1\":{\"50\":2,\"82\":1,\"426\":2,\"429\":1,\"430\":2,\"640\":1}}],[\"maven仓库\",{\"1\":{\"158\":1}}],[\"maven\",{\"0\":{\"134\":1,\"135\":1,\"139\":1,\"140\":1,\"150\":1,\"157\":1,\"161\":1,\"168\":1},\"1\":{\"22\":2,\"27\":6,\"30\":6,\"32\":6,\"35\":6,\"117\":6,\"135\":8,\"136\":4,\"137\":6,\"139\":5,\"140\":6,\"142\":4,\"143\":1,\"144\":2,\"146\":6,\"149\":9,\"150\":9,\"151\":3,\"152\":2,\"153\":2,\"154\":2,\"155\":14,\"156\":5,\"157\":3,\"158\":9,\"159\":8,\"160\":2,\"161\":3,\"163\":1,\"168\":1,\"169\":6,\"170\":2,\"171\":2}}],[\"maven会隐式的把这些库间接依赖的库也加入到你的项目中\",{\"1\":{\"20\":1}}],[\"maven根据坐标才能找到需要的依赖\",{\"1\":{\"20\":1}}],[\"maven工具基于pom\",{\"1\":{\"19\":1}}],[\"maven中的依赖\",{\"0\":{\"19\":1}}],[\"maven综合案例\",{\"0\":{\"18\":1,\"23\":1}}],[\"missing\",{\"1\":{\"353\":1}}],[\"missing>\",{\"1\":{\"171\":1}}],[\"misc\",{\"1\":{\"239\":1}}],[\"mirror>\",{\"1\":{\"159\":2}}],[\"mirrorof>\",{\"1\":{\"159\":2}}],[\"mirror\",{\"1\":{\"159\":1}}],[\"mirrors>\",{\"1\":{\"159\":1}}],[\"mirrors\",{\"1\":{\"159\":1}}],[\"minus\",{\"1\":{\"327\":1}}],[\"mineatingspeed\",{\"1\":{\"311\":1}}],[\"minexpand\",{\"1\":{\"181\":2}}],[\"mincapacity\",{\"1\":{\"181\":22}}],[\"min\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"93\":7,\"94\":1,\"96\":1,\"97\":1,\"101\":2,\"102\":2,\"187\":2,\"311\":2,\"353\":1,\"631\":2}}],[\"mixed\",{\"1\":{\"17\":1}}],[\"microsoft\",{\"1\":{\"383\":1}}],[\"microsystems\",{\"1\":{\"232\":1,\"258\":1}}],[\"micro\",{\"1\":{\"7\":1,\"232\":1,\"258\":1}}],[\"以确定要执行的操作和操作数\",{\"1\":{\"744\":1}}],[\"以确保在多核处理器访问同一数据时的一致性\",{\"1\":{\"742\":1}}],[\"以确保每个键都能被唯一地定位\",{\"1\":{\"193\":1}}],[\"以降低伪共享的可能性\",{\"1\":{\"743\":1}}],[\"以维护缓存一致性\",{\"1\":{\"743\":1}}],[\"以太网中一般为\",{\"1\":{\"729\":1}}],[\"以太网负载信息\",{\"1\":{\"515\":1}}],[\"以加快处于\",{\"1\":{\"717\":1}}],[\"以标识发送出去的数据包中\",{\"1\":{\"704\":1}}],[\"以为服务器没有收到\",{\"1\":{\"703\":1}}],[\"以备日后回滚使用\",{\"1\":{\"624\":1}}],[\"以相同的方式来监测网络流量但比\",{\"1\":{\"515\":1}}],[\"以树的形式列出当前用户的所有进程\",{\"1\":{\"507\":1}}],[\"以额外完整格式列出当前用户的所有进程\",{\"1\":{\"507\":1}}],[\"以k为单位\",{\"1\":{\"506\":1}}],[\"以kb为单位显示内存使用情况\",{\"1\":{\"468\":1,\"518\":1}}],[\"以kb为单位\",{\"1\":{\"452\":1,\"479\":1,\"528\":1,\"552\":1}}],[\"以用户自定义形式显示进程信息\",{\"1\":{\"505\":1}}],[\"以用于开发\",{\"1\":{\"378\":1}}],[\"以百分比表示\",{\"1\":{\"479\":1,\"528\":1}}],[\"以表格方式显示事件计数器和内存状态\",{\"1\":{\"478\":1,\"527\":1}}],[\"以人类可读单位显示内存\",{\"1\":{\"475\":1}}],[\"以人类可读的形式显示所有文件系统及其磁盘使用情况\",{\"1\":{\"454\":1}}],[\"以字节\",{\"1\":{\"475\":1}}],[\"以总和的形式显示内存的使用信息\",{\"0\":{\"473\":1,\"523\":1}}],[\"以合适的单位显示内存使用情况\",{\"0\":{\"472\":1,\"522\":1},\"1\":{\"468\":1,\"518\":1}}],[\"以gb为单位显示内存使用情况\",{\"1\":{\"468\":1,\"518\":1}}],[\"以byte为单位显示内存使用情况\",{\"1\":{\"468\":1,\"518\":1}}],[\"以mb为单位显示内存使用情况\",{\"1\":{\"468\":1,\"518\":1}}],[\"以mb为单位\",{\"1\":{\"452\":1,\"552\":1}}],[\"以方便阅读的方式显示\",{\"1\":{\"452\":1,\"552\":1}}],[\"以批处理模式操作\",{\"1\":{\"439\":1,\"533\":1}}],[\"以定制自己所需的内容\",{\"1\":{\"386\":1}}],[\"以外的所有\",{\"1\":{\"280\":1}}],[\"以等待来自其他\",{\"1\":{\"278\":1}}],[\"以允许其他任务运行\",{\"1\":{\"272\":1}}],[\"以下命令以ubuntu\",{\"1\":{\"515\":1}}],[\"以下包装器使这很容易\",{\"1\":{\"370\":1}}],[\"以下语句\",{\"1\":{\"274\":1}}],[\"以下协程示例运行\",{\"1\":{\"272\":1}}],[\"以下代码会在等待\",{\"1\":{\"265\":1}}],[\"以下是几种局部性原理在计算机系统中的应用\",{\"1\":{\"737\":1}}],[\"以下是示例代码\",{\"1\":{\"352\":1}}],[\"以下是\",{\"1\":{\"178\":1,\"186\":1}}],[\"以提高cpu的缓存命中率\",{\"1\":{\"739\":1}}],[\"以提高程序的执行效率\",{\"1\":{\"250\":1}}],[\"以提供异步\",{\"1\":{\"263\":1}}],[\"以支持\",{\"1\":{\"263\":1}}],[\"以此类推\",{\"1\":{\"249\":1}}],[\"以前\",{\"1\":{\"244\":1}}],[\"以上关于\",{\"1\":{\"406\":2}}],[\"以上的时间执行\",{\"1\":{\"239\":1}}],[\"以上配置中的各个标签的含义\",{\"1\":{\"142\":1}}],[\"以后台的方式运行程序\",{\"1\":{\"584\":1}}],[\"以后\",{\"1\":{\"237\":1}}],[\"以后的版本\",{\"1\":{\"14\":1,\"15\":1}}],[\"以取消其中的数字\",{\"1\":{\"232\":1,\"258\":1}}],[\"以便根据其他核心的缓存状态来更新自己的缓存行状态\",{\"1\":{\"742\":1}}],[\"以便操作系统能够处理这些异常\",{\"1\":{\"738\":1}}],[\"以便在访问一个数据块时能够快速地访问相邻的数据块\",{\"1\":{\"737\":1}}],[\"以便后续访问\",{\"1\":{\"736\":1}}],[\"以便将ack和要发送的数据一块发送\",{\"1\":{\"709\":1}}],[\"以便将来查阅特定版本修订情况的系统\",{\"1\":{\"413\":1}}],[\"以便\",{\"1\":{\"368\":1}}],[\"以便更好的进行内存管理\",{\"1\":{\"249\":1}}],[\"以便等到下次得到\",{\"1\":{\"198\":1}}],[\"以便区分使用哪个\",{\"1\":{\"142\":1}}],[\"以减少搜索时间\",{\"1\":{\"187\":1}}],[\"以简化嵌套类访问\",{\"1\":{\"181\":1}}],[\"以知道在添加第一个元素时容量需要增加多少\",{\"1\":{\"181\":1}}],[\"以实现不同环境使用不同的配置\",{\"1\":{\"171\":1}}],[\"以\",{\"1\":{\"165\":1,\"653\":1}}],[\"以及在计算机系统中的实际执行\",{\"1\":{\"744\":1}}],[\"以及一个或多个总线控制器\",{\"1\":{\"741\":1}}],[\"以及对方无法知道而己方比较固定的一些信息\",{\"1\":{\"717\":1}}],[\"以及表的索引\",{\"1\":{\"624\":1}}],[\"以及整个主机的cpu情况\",{\"1\":{\"515\":1}}],[\"以及系统核心使用的缓冲区等\",{\"1\":{\"467\":1,\"517\":1}}],[\"以及所需要的操作系统核心和库\",{\"1\":{\"406\":1}}],[\"以及会将其置于镜像构建上下文目录中\",{\"1\":{\"394\":1}}],[\"以及镜像维护\",{\"1\":{\"388\":1}}],[\"以及包括\",{\"1\":{\"383\":1}}],[\"以及运行子进程\",{\"1\":{\"298\":1}}],[\"以及创建和销毁的时间\",{\"1\":{\"237\":1}}],[\"以及依赖的版本等\",{\"1\":{\"168\":1}}],[\"以及\",{\"1\":{\"165\":1,\"177\":1,\"187\":1,\"237\":1,\"382\":1,\"421\":1}}],[\"以及如何限制依赖项的可传递性\",{\"1\":{\"142\":1}}],[\"以及其他需要它们的目标\",{\"1\":{\"142\":1}}],[\"以声明多个依赖\",{\"1\":{\"20\":1}}],[\"以管理员权限打开\",{\"1\":{\"14\":1}}],[\"时长后\",{\"1\":{\"708\":1}}],[\"时紧急指针才有效\",{\"1\":{\"687\":1}}],[\"时当前数据库中应该给下一个事务的\",{\"1\":{\"631\":1}}],[\"时的数据都已收到\",{\"1\":{\"698\":1}}],[\"时的经验教训\",{\"1\":{\"419\":1}}],[\"时的时间复杂度是\",{\"1\":{\"183\":1}}],[\"时速云镜像库\",{\"1\":{\"388\":1}}],[\"时不能阻塞\",{\"1\":{\"334\":1}}],[\"时间局部性的一个典型例子是程序中的循环结构\",{\"1\":{\"737\":1}}],[\"时间局部性是指在一段时间内\",{\"1\":{\"737\":1}}],[\"时间局部性\",{\"1\":{\"737\":1}}],[\"时间将重新计时\",{\"1\":{\"722\":1}}],[\"时间内\",{\"1\":{\"722\":1}}],[\"时间是一个rto\",{\"1\":{\"721\":1}}],[\"时间等\",{\"1\":{\"717\":1}}],[\"时间片用完\",{\"1\":{\"198\":1}}],[\"时间片是\",{\"1\":{\"198\":1}}],[\"时间片\",{\"1\":{\"198\":1}}],[\"时间片轮转\",{\"1\":{\"198\":1}}],[\"时间复杂度都为\",{\"1\":{\"183\":1}}],[\"时间复杂度为\",{\"1\":{\"182\":2}}],[\"时指定的大小不等于它创建后的大小\",{\"1\":{\"189\":1}}],[\"时指定的大小等于它创建后的大小吗\",{\"0\":{\"189\":1}}],[\"时才使用\",{\"1\":{\"142\":1}}],[\"时\",{\"1\":{\"14\":1,\"55\":1,\"144\":1,\"171\":1,\"181\":1,\"187\":2,\"189\":3,\"197\":1,\"271\":1,\"287\":1,\"293\":1,\"333\":2,\"336\":3,\"370\":1,\"389\":1,\"394\":1,\"631\":2,\"696\":1,\"738\":1}}],[\"时选择了继续安装\",{\"1\":{\"14\":1}}],[\"环境设置和依赖关系\",{\"1\":{\"400\":1}}],[\"环境的安装以及\",{\"1\":{\"375\":1}}],[\"环境的配置方式\",{\"1\":{\"14\":1}}],[\"环境中\",{\"1\":{\"246\":1}}],[\"环境配置中要设置的一个环境变量\",{\"1\":{\"15\":1}}],[\"环境变量\",{\"1\":{\"14\":2,\"386\":1,\"400\":1}}],[\"dhcp\",{\"1\":{\"683\":1}}],[\"duplicated\",{\"1\":{\"698\":1}}],[\"durability\",{\"1\":{\"627\":1}}],[\"du\",{\"1\":{\"515\":2}}],[\"duser=prod\",{\"1\":{\"171\":1}}],[\"dstat命令\",{\"1\":{\"567\":1}}],[\"dstat\",{\"0\":{\"567\":1},\"1\":{\"515\":2}}],[\"dsu\",{\"1\":{\"369\":1}}],[\"df命令\",{\"1\":{\"451\":1,\"551\":1}}],[\"df\",{\"0\":{\"450\":1,\"550\":1},\"1\":{\"448\":1,\"452\":1,\"454\":7,\"552\":1}}],[\"dfuemj\",{\"1\":{\"333\":1}}],[\"dvcs\",{\"1\":{\"417\":1}}],[\"db\",{\"1\":{\"400\":1}}],[\"dns域名解析器会首先访问顶级域名服务器\",{\"1\":{\"672\":1}}],[\"dns重定向\",{\"1\":{\"670\":1}}],[\"dns劫持是什么\",{\"0\":{\"669\":1}}],[\"dns在进行区域传输的时候使用tcp协议\",{\"1\":{\"668\":1}}],[\"dns采用tcp还是udp\",{\"0\":{\"668\":1}}],[\"dns查询服务器的基本流程\",{\"0\":{\"667\":1}}],[\"dns\",{\"1\":{\"400\":1,\"683\":1,\"724\":1}}],[\"d=4\",{\"1\":{\"353\":1}}],[\"d=\",{\"1\":{\"353\":2}}],[\"dmesg\",{\"1\":{\"515\":2}}],[\"dm\",{\"1\":{\"144\":2}}],[\"dir2\",{\"1\":{\"610\":2}}],[\"dir1\",{\"1\":{\"610\":2}}],[\"dirname\",{\"0\":{\"610\":1},\"1\":{\"357\":1,\"610\":5}}],[\"direct\",{\"1\":{\"239\":9,\"244\":2}}],[\"direction\",{\"1\":{\"237\":8}}],[\"directoryname\",{\"1\":{\"423\":1}}],[\"directory\",{\"1\":{\"170\":1,\"421\":2,\"454\":2}}],[\"dictionary\",{\"1\":{\"353\":1}}],[\"dict\",{\"1\":{\"325\":1,\"353\":7}}],[\"disk\",{\"1\":{\"454\":4,\"567\":1,\"737\":1}}],[\"display\",{\"1\":{\"272\":2,\"454\":5,\"475\":4}}],[\"discard\",{\"1\":{\"271\":1}}],[\"disableexplicitgc\",{\"1\":{\"239\":1}}],[\"distributed\",{\"1\":{\"417\":1}}],[\"distributionmanagement\",{\"1\":{\"170\":1}}],[\"dist\",{\"1\":{\"95\":1,\"96\":1,\"101\":2}}],[\"differently\",{\"1\":{\"267\":1}}],[\"different\",{\"1\":{\"135\":1}}],[\"di案例\",{\"1\":{\"111\":2}}],[\"div>\",{\"1\":{\"57\":1,\"101\":1}}],[\"down用于停止并移除通过\",{\"1\":{\"403\":1}}],[\"down\",{\"1\":{\"399\":1,\"403\":4}}],[\"downloads\",{\"1\":{\"388\":1}}],[\"dogs=8\",{\"1\":{\"353\":1}}],[\"done\",{\"1\":{\"271\":1,\"276\":2,\"280\":2,\"293\":2,\"296\":1,\"599\":2,\"600\":3,\"602\":1,\"603\":1}}],[\"doreleaseshared\",{\"1\":{\"227\":1}}],[\"double\",{\"1\":{\"189\":1}}],[\"do\",{\"1\":{\"187\":1,\"189\":1,\"267\":1,\"599\":2,\"600\":3,\"602\":1,\"603\":1}}],[\"dolphin\",{\"1\":{\"90\":2}}],[\"dockerfile\",{\"1\":{\"389\":3,\"394\":6,\"400\":1}}],[\"docker\",{\"0\":{\"381\":1,\"382\":1,\"383\":1,\"384\":1,\"385\":1,\"391\":1,\"397\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"406\":1,\"756\":1},\"1\":{\"375\":3,\"376\":2,\"380\":3,\"382\":8,\"383\":4,\"384\":2,\"385\":2,\"386\":3,\"387\":1,\"388\":26,\"389\":10,\"390\":6,\"392\":6,\"393\":8,\"394\":3,\"395\":8,\"396\":4,\"397\":7,\"399\":8,\"400\":13,\"402\":11,\"403\":9,\"404\":5,\"405\":12,\"406\":2,\"407\":2,\"408\":3},\"2\":{\"410\":1}}],[\"docker核心概念总结\",{\"0\":{\"375\":1}}],[\"documentation\",{\"1\":{\"363\":1}}],[\"docs\",{\"1\":{\"48\":2,\"49\":1,\"50\":3,\"51\":5,\"54\":1,\"62\":1,\"105\":2,\"267\":1,\"280\":1,\"287\":1,\"289\":1}}],[\"docsifyjs\",{\"1\":{\"82\":1}}],[\"docsify\",{\"0\":{\"43\":1,\"104\":1},\"1\":{\"44\":1,\"47\":2,\"48\":1,\"49\":2,\"50\":1,\"51\":1,\"55\":6,\"56\":1,\"59\":1,\"61\":1,\"64\":1,\"67\":2,\"69\":2,\"71\":2,\"73\":2,\"75\":3,\"78\":2,\"80\":2,\"82\":1,\"90\":10,\"91\":2,\"93\":9,\"94\":1,\"95\":2,\"96\":3,\"97\":1,\"98\":1,\"100\":1,\"101\":1,\"102\":1,\"105\":3,\"106\":2,\"107\":2,\"108\":4,\"109\":2}}],[\"doctype\",{\"1\":{\"40\":2}}],[\"days\",{\"1\":{\"395\":1,\"440\":1,\"534\":1}}],[\"dave\",{\"1\":{\"365\":2,\"366\":4,\"367\":1,\"368\":1,\"369\":1}}],[\"david\",{\"1\":{\"61\":1}}],[\"datetime\",{\"1\":{\"272\":3}}],[\"date\",{\"1\":{\"237\":2,\"272\":2,\"507\":1}}],[\"datasource\",{\"1\":{\"121\":12,\"126\":1}}],[\"datasource>\",{\"1\":{\"40\":1}}],[\"data\",{\"1\":{\"40\":2,\"118\":2,\"205\":3,\"285\":5,\"294\":1,\"351\":3,\"400\":1,\"624\":2,\"732\":1,\"735\":1}}],[\"databind\",{\"1\":{\"30\":1}}],[\"databind<\",{\"1\":{\"27\":1,\"30\":1}}],[\"databind会依赖传递core\",{\"1\":{\"27\":1}}],[\"daocloud\",{\"1\":{\"388\":1}}],[\"dao<\",{\"1\":{\"149\":1}}],[\"dao\",{\"1\":{\"118\":12}}],[\"dark\",{\"1\":{\"90\":2,\"105\":1}}],[\"drain\",{\"1\":{\"285\":1}}],[\"druiddatasource\",{\"1\":{\"121\":3}}],[\"druid\",{\"1\":{\"121\":1}}],[\"driverclassname\",{\"1\":{\"121\":2}}],[\"driver=com\",{\"1\":{\"120\":1}}],[\"driver\",{\"1\":{\"40\":2,\"120\":1,\"121\":1}}],[\"drop是dll\",{\"1\":{\"624\":1}}],[\"drop删除整张表和表结构\",{\"1\":{\"624\":1}}],[\"drop\",{\"0\":{\"624\":1},\"1\":{\"39\":1,\"115\":1,\"624\":2}}],[\"dynamic\",{\"1\":{\"39\":1,\"115\":1}}],[\"dtd\",{\"1\":{\"40\":6}}],[\"dt\",{\"1\":{\"15\":1,\"16\":2}}],[\"detect\",{\"1\":{\"625\":1}}],[\"deadlock\",{\"1\":{\"625\":1}}],[\"devices\",{\"1\":{\"732\":2}}],[\"dev\",{\"1\":{\"515\":1}}],[\"developerworks\",{\"1\":{\"406\":1}}],[\"developers\",{\"1\":{\"146\":1}}],[\"developed\",{\"1\":{\"388\":1}}],[\"develop<\",{\"1\":{\"170\":1}}],[\"development\",{\"1\":{\"7\":1,\"40\":2}}],[\"decorated\",{\"1\":{\"369\":3}}],[\"decorate\",{\"1\":{\"369\":1}}],[\"decode\",{\"1\":{\"285\":2,\"735\":1}}],[\"declared\",{\"1\":{\"244\":1}}],[\"debug\",{\"1\":{\"270\":1,\"357\":3}}],[\"debug=false\",{\"1\":{\"270\":1}}],[\"delay\",{\"1\":{\"265\":2,\"272\":3}}],[\"deletion\",{\"1\":{\"187\":1}}],[\"delete可以是table和view\",{\"1\":{\"624\":1}}],[\"delete语句为dml\",{\"1\":{\"624\":1}}],[\"delete只删除表的全部或部分数据\",{\"1\":{\"624\":1}}],[\"delete>\",{\"1\":{\"40\":1}}],[\"delete\",{\"1\":{\"40\":1,\"41\":1,\"350\":1,\"624\":3}}],[\"deleteuser\",{\"1\":{\"40\":2,\"41\":1}}],[\"deduplication\",{\"1\":{\"249\":1}}],[\"deque<e>\",{\"1\":{\"182\":1}}],[\"deque\",{\"0\":{\"344\":1},\"1\":{\"178\":2,\"182\":1,\"344\":1,\"347\":1,\"348\":1,\"349\":1}}],[\"deque~e~\",{\"1\":{\"178\":1}}],[\"define\",{\"1\":{\"624\":1}}],[\"definition\",{\"1\":{\"135\":1}}],[\"def\",{\"1\":{\"265\":4,\"267\":4,\"268\":2,\"269\":1,\"270\":1,\"272\":1,\"273\":2,\"275\":2,\"277\":2,\"285\":3,\"288\":2,\"296\":2,\"306\":4,\"311\":2,\"312\":5,\"316\":1,\"324\":2,\"327\":3,\"334\":2,\"335\":1,\"347\":1,\"348\":1,\"349\":1,\"350\":1,\"354\":6,\"370\":10}}],[\"defaults\",{\"1\":{\"189\":1}}],[\"defaultcapacity\",{\"1\":{\"181\":3}}],[\"defaultgoal\",{\"1\":{\"170\":1}}],[\"default\",{\"0\":{\"166\":1},\"1\":{\"111\":1,\"155\":2,\"161\":1,\"164\":1,\"166\":2,\"178\":6,\"179\":1,\"181\":7,\"189\":4}}],[\"default=none\",{\"1\":{\"316\":1}}],[\"default=6379\",{\"1\":{\"316\":1}}],[\"default=\",{\"1\":{\"40\":1}}],[\"default属性的取值是environment标签的id属性的值\",{\"1\":{\"40\":1}}],[\"de\",{\"1\":{\"85\":1}}],[\"depends\",{\"1\":{\"400\":2}}],[\"dependencymanagement\",{\"1\":{\"146\":1,\"148\":1,\"170\":1}}],[\"dependencymanagement>\",{\"1\":{\"27\":1}}],[\"dependency>\",{\"1\":{\"27\":4,\"30\":4,\"32\":1,\"35\":1,\"40\":12,\"117\":10,\"123\":1,\"137\":1,\"142\":1,\"144\":2,\"145\":1}}],[\"dependencies\",{\"1\":{\"30\":1,\"146\":1,\"170\":1}}],[\"dependencies>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"142\":1,\"144\":1,\"145\":1}}],[\"dependencies标签中\",{\"1\":{\"20\":1}}],[\"dependence元素\",{\"1\":{\"20\":1}}],[\"depth\",{\"1\":{\"93\":1}}],[\"deploy\",{\"1\":{\"50\":1,\"155\":5,\"166\":1,\"167\":1}}],[\"demo\",{\"1\":{\"48\":1,\"121\":1,\"124\":3,\"125\":4,\"205\":1}}],[\"descending\",{\"1\":{\"368\":1}}],[\"description=\",{\"1\":{\"316\":1}}],[\"description>\",{\"1\":{\"137\":1,\"149\":1}}],[\"description\",{\"1\":{\"40\":2,\"41\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2,\"146\":1,\"388\":1}}],[\"desktop\",{\"1\":{\"14\":1}}],[\"d\",{\"1\":{\"14\":1,\"205\":1,\"237\":4,\"239\":1,\"252\":2,\"348\":5,\"349\":2,\"350\":4,\"352\":1,\"353\":11,\"357\":2,\"402\":1,\"430\":1,\"439\":1,\"457\":1,\"462\":1,\"478\":1,\"494\":1,\"506\":1,\"527\":1,\"533\":1,\"556\":1,\"561\":1}}],[\"^6\",{\"0\":{\"299\":1},\"1\":{\"299\":1}}],[\"^hashtable\",{\"1\":{\"249\":2}}],[\"^4\",{\"1\":{\"239\":2}}],[\"^3\",{\"1\":{\"239\":2}}],[\"^2\",{\"0\":{\"281\":1},\"1\":{\"239\":2,\"281\":1}}],[\"^=\",{\"1\":{\"187\":1}}],[\"^\",{\"1\":{\"93\":1,\"187\":5}}],[\"^second\",{\"1\":{\"14\":3,\"187\":2}}],[\"^first\",{\"1\":{\"9\":2,\"183\":2}}],[\"注入和窃听\",{\"1\":{\"648\":1}}],[\"注意condition前后要有空格\",{\"1\":{\"589\":1}}],[\"注意这里说的是\",{\"1\":{\"255\":1}}],[\"注意这个导入要在声明\",{\"1\":{\"101\":1}}],[\"注意两个属性\",{\"1\":{\"187\":1}}],[\"注意到红黑树继承了\",{\"1\":{\"187\":1}}],[\"注意高亮部分\",{\"1\":{\"149\":1}}],[\"注意\",{\"1\":{\"15\":1,\"21\":1,\"57\":1,\"89\":1,\"93\":1,\"262\":1,\"265\":1,\"292\":1,\"311\":1,\"334\":2,\"344\":1,\"368\":1,\"373\":1,\"479\":3,\"528\":3,\"586\":1}}],[\"注\",{\"1\":{\"12\":1,\"325\":1}}],[\"000个字符\",{\"1\":{\"751\":1}}],[\"0000\",{\"1\":{\"189\":14}}],[\"0在http1\",{\"1\":{\"655\":1}}],[\"0直接放弃使用tcp\",{\"1\":{\"648\":1}}],[\"0引入了server\",{\"1\":{\"647\":1}}],[\"0把请求在应用层切分成二进制帧并标上序号\",{\"1\":{\"647\":1}}],[\"0使用encoder来减少需要传输的header大小\",{\"1\":{\"647\":1}}],[\"0中主要使用header里的协商缓存\",{\"1\":{\"645\":1}}],[\"0规定下一个请求必须在前一个请求响应到达之前才能发送\",{\"1\":{\"645\":1}}],[\"0的最大优势\",{\"1\":{\"648\":1}}],[\"0的区别\",{\"0\":{\"644\":1}}],[\"0的新特性\",{\"1\":{\"20\":1}}],[\"0和http3\",{\"0\":{\"644\":1}}],[\"0为\",{\"1\":{\"589\":1}}],[\"0为执行正确\",{\"1\":{\"583\":1}}],[\"04\",{\"1\":{\"396\":1,\"515\":1}}],[\"04是镜像的版本标签\",{\"1\":{\"396\":1}}],[\"05\",{\"1\":{\"296\":1}}],[\"0x1053bb7c8>\",{\"1\":{\"265\":1}}],[\"0abc\",{\"1\":{\"189\":4}}],[\"0111\",{\"1\":{\"189\":1}}],[\"01\",{\"1\":{\"124\":1,\"125\":1}}],[\"01<\",{\"1\":{\"117\":1}}],[\"0<=x<2\",{\"1\":{\"143\":1}}],[\"0<\",{\"1\":{\"27\":3,\"30\":1,\"32\":1,\"35\":1,\"40\":1,\"117\":2,\"137\":1,\"146\":2,\"149\":2,\"156\":1,\"171\":1}}],[\"0\",{\"0\":{\"644\":1,\"645\":1,\"647\":1,\"648\":1},\"1\":{\"12\":1,\"14\":2,\"17\":2,\"24\":8,\"27\":10,\"30\":9,\"32\":10,\"35\":10,\"39\":1,\"40\":12,\"41\":3,\"83\":1,\"95\":1,\"101\":1,\"115\":1,\"117\":15,\"118\":6,\"121\":2,\"123\":1,\"124\":2,\"125\":2,\"126\":2,\"137\":11,\"143\":16,\"144\":2,\"146\":8,\"149\":19,\"156\":3,\"159\":6,\"177\":1,\"178\":2,\"181\":7,\"187\":8,\"189\":19,\"202\":2,\"218\":2,\"219\":1,\"245\":1,\"256\":1,\"272\":3,\"275\":1,\"285\":4,\"293\":1,\"296\":3,\"310\":2,\"311\":2,\"316\":4,\"327\":1,\"336\":4,\"348\":5,\"349\":1,\"351\":4,\"353\":4,\"354\":2,\"370\":7,\"394\":4,\"395\":4,\"621\":1,\"623\":1,\"645\":1,\"648\":1}}],[\"如utf\",{\"1\":{\"751\":1}}],[\"如内存\",{\"1\":{\"744\":1}}],[\"如文件读写\",{\"1\":{\"744\":1}}],[\"如python\",{\"1\":{\"744\":1}}],[\"如put\",{\"1\":{\"193\":1}}],[\"如c\",{\"1\":{\"744\":2}}],[\"如mesi协议\",{\"1\":{\"743\":1}}],[\"如mss\",{\"1\":{\"717\":1}}],[\"如l1\",{\"1\":{\"741\":1}}],[\"如硬件设备\",{\"1\":{\"738\":1}}],[\"如中断处理程序\",{\"1\":{\"738\":1}}],[\"如乱序执行\",{\"1\":{\"735\":1}}],[\"如系统调用\",{\"1\":{\"735\":1}}],[\"如左移\",{\"1\":{\"735\":1}}],[\"如与\",{\"1\":{\"735\":1}}],[\"如加法\",{\"1\":{\"735\":1}}],[\"如加载\",{\"1\":{\"735\":2}}],[\"如程序试图访问受保护的资源或执行非法操作时触发的异常\",{\"1\":{\"733\":1}}],[\"如非法内存访问\",{\"1\":{\"733\":1}}],[\"如除以零\",{\"1\":{\"733\":1,\"738\":1}}],[\"如显示器\",{\"1\":{\"732\":1}}],[\"如键盘\",{\"1\":{\"732\":1,\"733\":1,\"738\":1}}],[\"如数据转换\",{\"1\":{\"683\":1}}],[\"如跟踪分析用户行为等\",{\"1\":{\"675\":1}}],[\"如用户身份验证\",{\"1\":{\"731\":1}}],[\"如用户自定义设置\",{\"1\":{\"675\":1}}],[\"如用户登录状态\",{\"1\":{\"675\":1}}],[\"如保持用户的登录状态\",{\"1\":{\"675\":1}}],[\"如符合\",{\"1\":{\"673\":1}}],[\"如机器登录帐号\",{\"1\":{\"658\":1}}],[\"如打开的连接\",{\"1\":{\"487\":1}}],[\"如超出1024k\",{\"1\":{\"479\":1,\"528\":1}}],[\"如此你就能够将你的改动推送到所添加的服务器上去了\",{\"1\":{\"426\":1}}],[\"如匿名卷\",{\"1\":{\"386\":1}}],[\"如指定\",{\"1\":{\"276\":1}}],[\"如前所述\",{\"1\":{\"233\":1,\"259\":1}}],[\"如分配不同的名字空间以防替代本地的同名类\",{\"1\":{\"233\":1,\"259\":1}}],[\"如操作符重载\",{\"1\":{\"233\":1,\"259\":1}}],[\"如\",{\"1\":{\"196\":1,\"239\":1,\"406\":1,\"579\":1,\"724\":1}}],[\"如下图所示\",{\"1\":{\"738\":1}}],[\"如下\",{\"1\":{\"149\":2}}],[\"如何避免\",{\"0\":{\"715\":1}}],[\"如何让在不同系统上的开发者协同工作\",{\"1\":{\"416\":1}}],[\"如何让用户感觉这些任务正在同时运行呢\",{\"1\":{\"198\":1}}],[\"如何将\",{\"1\":{\"312\":1}}],[\"如何解决\",{\"1\":{\"223\":1}}],[\"如何查看字节码指令\",{\"1\":{\"219\":1}}],[\"如何创建线程\",{\"0\":{\"200\":1}}],[\"如何理解阶段的依赖关系理论\",{\"1\":{\"165\":1}}],[\"如何影响项目对象模型\",{\"1\":{\"147\":1}}],[\"如何在项目中注入依赖\",{\"1\":{\"20\":1}}],[\"如docker\",{\"1\":{\"399\":1}}],[\"如d\",{\"1\":{\"12\":1}}],[\"如果可用\",{\"1\":{\"750\":1}}],[\"如果数据已经在缓存中\",{\"1\":{\"739\":1}}],[\"如果数据不存在就像执行器返回错误\",{\"1\":{\"621\":1}}],[\"如果对应的物理地址已经在tlb中\",{\"1\":{\"737\":1}}],[\"如果对端主机崩溃没有响应或者网络原因报文不可达\",{\"1\":{\"728\":1}}],[\"如果对端程序正常工作\",{\"1\":{\"728\":1}}],[\"如果cpu再次访问这些数据和指令\",{\"1\":{\"737\":1}}],[\"如果cache的值大的时候\",{\"1\":{\"479\":1,\"528\":1}}],[\"如果某个数据或指令被访问了一次\",{\"1\":{\"737\":1}}],[\"如果tlb未找到相应的映射\",{\"1\":{\"734\":1,\"736\":1}}],[\"如果找到了相应的映射\",{\"1\":{\"734\":1,\"736\":1}}],[\"如果交给ip来进行分片\",{\"1\":{\"729\":1}}],[\"如果中途丢失了一个分片\",{\"1\":{\"724\":1}}],[\"如果中心数据库磁盘损坏又没有进行备份\",{\"1\":{\"416\":1}}],[\"如果新连接和老连接的端口是一样的\",{\"1\":{\"722\":1}}],[\"如果新容量大于\",{\"1\":{\"181\":1}}],[\"如果客户端在完成一个\",{\"1\":{\"728\":1}}],[\"如果客户端直接关闭\",{\"1\":{\"722\":1}}],[\"如果客户端故障\",{\"1\":{\"712\":1}}],[\"如果向某个服务器端口发送大量的syn报文\",{\"1\":{\"716\":1}}],[\"如果每个用户都占用一个连接的话\",{\"1\":{\"713\":1}}],[\"如果每个操作都是先连接\",{\"1\":{\"713\":1}}],[\"如果连续10个探测报文都没有收到回复\",{\"1\":{\"712\":1}}],[\"如果途中再次收到第三次挥手\",{\"1\":{\"708\":1}}],[\"如果发送方不维护time\",{\"1\":{\"719\":1}}],[\"如果发现有fin标志\",{\"1\":{\"707\":1}}],[\"如果发生丢包了进行重传\",{\"1\":{\"652\":1}}],[\"如果发生超时\",{\"1\":{\"275\":1}}],[\"如果发生了丢包\",{\"1\":{\"701\":1}}],[\"如果发生了读写冲突的时候\",{\"1\":{\"629\":1}}],[\"如果发生了\",{\"1\":{\"249\":1}}],[\"如果能在乱序队列中找到与当前报文的序列号保持的顺序的报文\",{\"1\":{\"707\":1}}],[\"如果收到乱序的fin报文会加入到乱序队列\",{\"1\":{\"707\":1}}],[\"如果收到新数据的\",{\"1\":{\"698\":1}}],[\"如果只是两次握手\",{\"1\":{\"704\":1}}],[\"如果采用的是三次握手\",{\"1\":{\"703\":1}}],[\"如果使用了\",{\"1\":{\"724\":1}}],[\"如果使用的是两次握手建立连接\",{\"1\":{\"703\":1}}],[\"如果使用联合索引的话\",{\"1\":{\"621\":1}}],[\"如果第二次握手丢失了客户端会认为自己丢包了\",{\"1\":{\"701\":1}}],[\"如果超过最大次数客户端仍没有收到回复就会断开连接\",{\"1\":{\"701\":1}}],[\"如果再收到重复的\",{\"1\":{\"698\":1}}],[\"如果指令涉及到内存操作\",{\"1\":{\"735\":1}}],[\"如果指数增长到避免拥塞算法的门限ssthresh\",{\"1\":{\"695\":1}}],[\"如果指定\",{\"1\":{\"609\":1}}],[\"如果指定了\",{\"1\":{\"272\":1}}],[\"如果缓冲区大小为0\",{\"1\":{\"693\":1}}],[\"如果缓存中有结果就直接返回给客户端\",{\"1\":{\"621\":1}}],[\"如果a\",{\"1\":{\"680\":1}}],[\"如果接收到了icmp回送响应消息\",{\"1\":{\"673\":1}}],[\"如果用长连接\",{\"1\":{\"713\":1}}],[\"如果用了双向认证方式\",{\"1\":{\"665\":1}}],[\"如果用户没有登录网站a\",{\"1\":{\"661\":1}}],[\"如果用户点击\",{\"1\":{\"641\":1}}],[\"如果用户提供比较功能并且需要将其转换为键函数\",{\"1\":{\"370\":1}}],[\"如果都是一致\",{\"1\":{\"652\":1}}],[\"如果请求的资源都没有过更新\",{\"1\":{\"645\":1}}],[\"如果证书没有问题\",{\"1\":{\"639\":1}}],[\"如果浏览器不支持\",{\"1\":{\"638\":1}}],[\"如果事务开启后\",{\"1\":{\"632\":1}}],[\"如果事件已被设置则返回\",{\"1\":{\"288\":1}}],[\"如果事件已被设置\",{\"1\":{\"288\":1}}],[\"如果和事务有关\",{\"1\":{\"624\":1}}],[\"如果想保留表而将所有数据删除\",{\"1\":{\"624\":1}}],[\"如果想删除表\",{\"1\":{\"624\":1}}],[\"如果一直保持在close\",{\"1\":{\"723\":1}}],[\"如果一方没有数据要发送\",{\"1\":{\"687\":1}}],[\"如果一样的话就不进行后续更新流程\",{\"1\":{\"622\":1}}],[\"如果一个关系满足第二范式\",{\"1\":{\"617\":1}}],[\"如果一个表满足第一范式\",{\"1\":{\"617\":1}}],[\"如果一个排序确保不会改变比较结果相等的元素的相对顺序就称其为稳定的\",{\"1\":{\"363\":1}}],[\"如果一个协程在等待一个\",{\"1\":{\"280\":1}}],[\"如果一个对象可以在\",{\"1\":{\"266\":1}}],[\"如果记录的\",{\"1\":{\"631\":5}}],[\"如果记录不在\",{\"1\":{\"622\":1}}],[\"如果记录所在的数据页本来就在\",{\"1\":{\"622\":1}}],[\"如果满足要求就将数据返回给客户端\",{\"1\":{\"621\":1}}],[\"如果走索引了就将相应索引条件交给存储引擎\",{\"1\":{\"621\":1}}],[\"如果sql语句不对就会报错\",{\"1\":{\"621\":1}}],[\"如果swpd的值不为0\",{\"1\":{\"479\":1,\"528\":1}}],[\"如果刚缓存了一个查询结果很大的数据\",{\"1\":{\"621\":1}}],[\"如果认证信息错误也会报错\",{\"1\":{\"621\":1}}],[\"如果变量值不等于以上列出的值\",{\"1\":{\"596\":1}}],[\"如果变量值等于值2\",{\"1\":{\"596\":1}}],[\"如果变量值等于值1\",{\"1\":{\"596\":1}}],[\"如果输入的参数大于60\",{\"1\":{\"594\":1}}],[\"如果free很少\",{\"1\":{\"479\":1,\"528\":1}}],[\"如果这个\",{\"1\":{\"662\":1}}],[\"如果这个锁此时已经被别人获取\",{\"1\":{\"215\":1}}],[\"如果这2个值长期大于0时\",{\"1\":{\"479\":1,\"528\":1}}],[\"如果此时io中的bi比较小\",{\"1\":{\"479\":1,\"528\":1}}],[\"如果文件没有修改\",{\"1\":{\"420\":1}}],[\"如果文档目录结构是这样\",{\"1\":{\"51\":1}}],[\"如果我们要得到最终的文件是不是会耗费时间和性能\",{\"1\":{\"420\":1}}],[\"如果设置\",{\"1\":{\"400\":1}}],[\"如果设为\",{\"1\":{\"363\":1}}],[\"如果本地没有镜像\",{\"1\":{\"389\":1}}],[\"如果要学习\",{\"1\":{\"373\":1}}],[\"如果两个项具有相同的键\",{\"1\":{\"369\":1}}],[\"如果两个线程同时进行\",{\"1\":{\"191\":1}}],[\"如果锁为\",{\"1\":{\"287\":2}}],[\"如果打包的协程没有抑制\",{\"1\":{\"280\":1}}],[\"如果打包是\",{\"1\":{\"146\":1}}],[\"如果取消期间一个协程正在等待一个\",{\"1\":{\"280\":1}}],[\"如果等待被取消\",{\"1\":{\"275\":1}}],[\"如果所有可等待对象都成功完成\",{\"1\":{\"273\":1}}],[\"如果操作系统的虚拟内存已耗尽\",{\"1\":{\"239\":1}}],[\"如果有其他事务在\",{\"1\":{\"632\":1}}],[\"如果有\",{\"1\":{\"621\":1}}],[\"如果有就去掉\",{\"1\":{\"239\":1}}],[\"如果有多个封面\",{\"1\":{\"76\":1}}],[\"如果有多个目录需要各自设置封面\",{\"1\":{\"76\":1}}],[\"如果执行了几次后内存明显下降\",{\"1\":{\"239\":1}}],[\"如果执行的是一个\",{\"1\":{\"238\":1}}],[\"如果仍不能解决\",{\"1\":{\"239\":1}}],[\"如果线程请求的栈深度大于虚拟机所允许的深度\",{\"1\":{\"239\":1}}],[\"如果线程执行的是一个\",{\"1\":{\"238\":1}}],[\"如果它们相等则返回零\",{\"1\":{\"370\":1}}],[\"如果它们相同则比较第二个项目\",{\"1\":{\"369\":1}}],[\"如果它的后继节点是\",{\"1\":{\"227\":1}}],[\"如果它与列表中的前缀匹配\",{\"1\":{\"93\":1}}],[\"如果被请求的共享资源被占用\",{\"1\":{\"226\":1}}],[\"如果被请求的共享资源空闲\",{\"1\":{\"226\":1}}],[\"如果相等则将\",{\"1\":{\"221\":1}}],[\"如果相同就直接覆盖\",{\"1\":{\"187\":1}}],[\"如果多个处理器同时对同一个地址进行写操作\",{\"1\":{\"741\":1}}],[\"如果多个线程申请一把公平锁\",{\"1\":{\"217\":1}}],[\"如果多个目标绑定到同一个生命周期阶段\",{\"1\":{\"156\":1}}],[\"如果经常产生冲突\",{\"1\":{\"214\":1}}],[\"如果修改过就重新读取\",{\"1\":{\"214\":1}}],[\"如果直接调用\",{\"1\":{\"203\":1}}],[\"如果构造线程时传递了\",{\"1\":{\"202\":1}}],[\"如果尝试插入null键或值\",{\"1\":{\"193\":1}}],[\"如果尝试插入具有相同键的新值\",{\"1\":{\"186\":1}}],[\"如果原本的数组不为空\",{\"1\":{\"189\":1}}],[\"如果除数是\",{\"1\":{\"188\":1}}],[\"如果长度小于\",{\"1\":{\"187\":1}}],[\"如果计算出的数组位置上有元素\",{\"1\":{\"187\":1}}],[\"如果计算出的数组位置上没有元素\",{\"1\":{\"187\":1}}],[\"如果当前线程没有在运行的循环则会引发\",{\"1\":{\"271\":1}}],[\"如果当前位置存在元素的话\",{\"1\":{\"187\":1}}],[\"如果当前数组的长度小于\",{\"1\":{\"187\":1}}],[\"如果当前数组元素为空数组\",{\"1\":{\"181\":1}}],[\"如果当前目录不存在该文件则回退到上一级目录\",{\"1\":{\"53\":1}}],[\"如果路径中不含\",{\"1\":{\"610\":1}}],[\"如果路径长度一样\",{\"1\":{\"144\":1}}],[\"如果路由可以由多个别名匹配\",{\"1\":{\"81\":1}}],[\"如果依赖树的前面没有其他版本出现\",{\"1\":{\"143\":1}}],[\"如果希望\",{\"1\":{\"142\":1}}],[\"如果希望避免不必要的回退过程\",{\"1\":{\"53\":1}}],[\"如果未指定则使用\",{\"1\":{\"142\":1}}],[\"如果需要在其它服务器上使用这个镜像\",{\"1\":{\"388\":1}}],[\"如果需要通俗地描述容器的话\",{\"1\":{\"379\":1}}],[\"如果需要替换一种实现\",{\"1\":{\"252\":1}}],[\"如果需要正确解析\",{\"1\":{\"97\":1}}],[\"如果需要忽略某张图片\",{\"1\":{\"94\":1}}],[\"如果需要忽略整个页面上所有的标题\",{\"1\":{\"55\":1}}],[\"如果需要忽略特定的标题\",{\"1\":{\"55\":1}}],[\"如果也不存在\",{\"1\":{\"85\":1}}],[\"如果存在就直接取出对应的ip地址\",{\"1\":{\"672\":1}}],[\"如果存在则直接返回该字符串的引用\",{\"1\":{\"249\":1}}],[\"如果存在则显示\",{\"1\":{\"85\":1}}],[\"如果存在\",{\"1\":{\"142\":1}}],[\"如果存在即显示\",{\"1\":{\"85\":1}}],[\"如果在\",{\"1\":{\"722\":1}}],[\"如果在网络传输过程中开始就发送大量数据的话\",{\"1\":{\"695\":1}}],[\"如果在这个时间内没有接收到ack\",{\"1\":{\"691\":1}}],[\"如果在本地arp映射表中查找出服务端ip所对应的mac地址\",{\"1\":{\"673\":1}}],[\"如果在cookie中设置了httponly属性\",{\"1\":{\"659\":1}}],[\"如果在协程内产生了异常\",{\"1\":{\"278\":1}}],[\"如果在所有\",{\"1\":{\"276\":1}}],[\"如果在取消期间发生了异常\",{\"1\":{\"275\":1}}],[\"如果在堆中没有内存完成实例分配\",{\"1\":{\"243\":1}}],[\"如果在扩展时无法申请到足够的内存\",{\"1\":{\"239\":1}}],[\"如果在侧边栏中有指向主页的链接\",{\"1\":{\"84\":1}}],[\"如果在最开始加的\",{\"1\":{\"14\":2}}],[\"如果导航内容比较多\",{\"1\":{\"59\":1}}],[\"如果不指定路由器不会打开处理扩展头部\",{\"1\":{\"678\":1}}],[\"如果不一样的话就把更新前的记录和更新后的记录都当作参数传给\",{\"1\":{\"622\":1}}],[\"如果不是\",{\"1\":{\"662\":1}}],[\"如果不是集群模式相当于\",{\"1\":{\"400\":1}}],[\"如果不是上面的名字\",{\"1\":{\"50\":1}}],[\"如果不给出标签\",{\"1\":{\"388\":1}}],[\"如果不保存引用\",{\"1\":{\"271\":1}}],[\"如果不相等说明其他线程对该变量做了更新\",{\"1\":{\"221\":1}}],[\"如果不会\",{\"1\":{\"216\":1}}],[\"如果不想封面叫这个名字\",{\"1\":{\"76\":1}}],[\"如果不存在time\",{\"1\":{\"719\":1}}],[\"如果不存在则尝试\",{\"1\":{\"85\":1}}],[\"如果不存在则从\",{\"1\":{\"53\":1}}],[\"如果不存在就直接绑定在\",{\"1\":{\"64\":1}}],[\"如果子项目不希望使用父项目的版本\",{\"1\":{\"21\":1}}],[\"如果projectb继承projecta\",{\"1\":{\"21\":1}}],[\"如果出了意外的话\",{\"1\":{\"17\":1}}],[\"如果没有\",{\"1\":{\"673\":1}}],[\"如果没有就开启一个dns域名解析器\",{\"1\":{\"672\":1}}],[\"如果没有命中就继续向下执行\",{\"1\":{\"621\":1}}],[\"如果没有在指定时间内输入\",{\"1\":{\"605\":1}}],[\"如果没有文件名被指定\",{\"1\":{\"451\":1,\"551\":1}}],[\"如果没有正在运行的任务则返回\",{\"1\":{\"279\":1}}],[\"如果没有特殊要求\",{\"1\":{\"217\":1}}],[\"如果没有特殊说明\",{\"1\":{\"177\":1}}],[\"如果没有版本满足所有硬要求\",{\"1\":{\"143\":1}}],[\"如果没有配置\",{\"1\":{\"14\":1}}],[\"如果没出意外的话应该能看到如下回显\",{\"1\":{\"17\":1}}],[\"如果过开发没有\",{\"1\":{\"16\":1}}],[\"如果你想知道每个进程是如何使用io的就比较麻烦\",{\"1\":{\"461\":1,\"560\":1}}],[\"如果你想要开始使用它\",{\"1\":{\"44\":1}}],[\"如果你稍微理解\",{\"1\":{\"431\":1}}],[\"如果你还没有克隆现有仓库\",{\"1\":{\"426\":1}}],[\"如果你搜索\",{\"1\":{\"390\":1}}],[\"如果你需要在标题中使用\",{\"1\":{\"97\":1}}],[\"如果你不想解析成表情符号\",{\"1\":{\"97\":1}}],[\"如果你的目录结构是这样\",{\"1\":{\"62\":1}}],[\"如果你在\",{\"1\":{\"50\":1}}],[\"如果你在安装\",{\"1\":{\"14\":1}}],[\"如果你没有安装\",{\"1\":{\"14\":1}}],[\"如果是接收方回复的ack丢失了导致的重传\",{\"1\":{\"691\":1}}],[\"如果是发送方发生了丢包\",{\"1\":{\"691\":1}}],[\"如果是转发模式\",{\"1\":{\"667\":1}}],[\"如果是整理表内部的碎片\",{\"1\":{\"624\":1}}],[\"如果是全表扫描优化器和存储引擎交互之后存储引擎会访问第一条表中数据\",{\"1\":{\"621\":1}}],[\"如果是select语句的话就去缓存中查询\",{\"1\":{\"621\":1}}],[\"如果是大于\",{\"1\":{\"293\":1}}],[\"如果是业务峰值压力\",{\"1\":{\"239\":1}}],[\"如果是则唤醒头节点的下一个节点\",{\"1\":{\"227\":1}}],[\"如果是同步方法\",{\"1\":{\"219\":1}}],[\"如果是同步代码块\",{\"1\":{\"219\":1}}],[\"如果是非公平锁\",{\"1\":{\"217\":1}}],[\"如果是c\",{\"1\":{\"14\":1}}],[\"如果是\",{\"1\":{\"14\":1,\"15\":1}}],[\"如果之前配置了\",{\"1\":{\"14\":1}}],[\"如果手动升级版本\",{\"1\":{\"12\":1}}],[\"如果\",{\"1\":{\"9\":2,\"181\":1,\"189\":2,\"270\":1,\"273\":6,\"274\":1,\"275\":2,\"279\":2,\"280\":1,\"293\":1,\"402\":1,\"403\":1,\"625\":1}}],[\"只丢了一小部分\",{\"1\":{\"697\":1}}],[\"只接受本站的请求\",{\"1\":{\"662\":1}}],[\"只会影响该流\",{\"1\":{\"651\":1}}],[\"只会引入后一个声明的依赖\",{\"1\":{\"144\":1}}],[\"只列出所有监听\",{\"1\":{\"486\":3,\"544\":3}}],[\"只显示监听端口\",{\"1\":{\"486\":1,\"544\":1}}],[\"只显示有io输出的进程\",{\"1\":{\"463\":1,\"562\":1}}],[\"只显示有io操作的进程\",{\"1\":{\"462\":1,\"561\":1}}],[\"只显示本地文件系统\",{\"1\":{\"452\":1,\"552\":1}}],[\"只显示服务名称\",{\"1\":{\"404\":1}}],[\"只看某个人的提交记录\",{\"1\":{\"428\":1}}],[\"只需\",{\"1\":{\"651\":1}}],[\"只需占用很少的计算和内存资源\",{\"1\":{\"383\":1}}],[\"只需包装旧的比较函数\",{\"1\":{\"370\":1}}],[\"只需要传输丢失的这个分片\",{\"1\":{\"724\":1}}],[\"只需要重发丢失的包即可\",{\"1\":{\"648\":1}}],[\"只需要将之前的缓存传递给服务器\",{\"1\":{\"648\":1}}],[\"只需要修改头\",{\"1\":{\"182\":1}}],[\"只需要做一些简单的配置\",{\"1\":{\"135\":1}}],[\"只需要创建一个\",{\"1\":{\"44\":1}}],[\"只需要在其中添加\",{\"1\":{\"13\":1}}],[\"只需要卸载旧版本\",{\"1\":{\"12\":1}}],[\"只需要一次安装即可\",{\"1\":{\"9\":1}}],[\"只支持通过\",{\"1\":{\"255\":1}}],[\"只支持类之间的单继承\",{\"1\":{\"233\":1,\"259\":1}}],[\"只有三次握手才能证明服务端和客户端的收发能力都是正常的\",{\"1\":{\"700\":1}}],[\"只有当\",{\"1\":{\"687\":1}}],[\"只有运行时被加载到内存后\",{\"1\":{\"247\":1}}],[\"只有在\",{\"1\":{\"150\":1}}],[\"只等资源释放\",{\"1\":{\"226\":1}}],[\"只是因为在网络中滞留的时间太长了\",{\"1\":{\"703\":1}}],[\"只是很大程度上避免了幻读现象的发生\",{\"1\":{\"632\":1}}],[\"只是交换修改不方便而已\",{\"1\":{\"417\":1}}],[\"只是我零碎的笔记\",{\"1\":{\"373\":1}}],[\"只是单纯返回了一个coroutine对象\",{\"1\":{\"267\":1}}],[\"只是它的其中一种实现\",{\"1\":{\"255\":1}}],[\"只是相当于在主线程中调用普通方法\",{\"1\":{\"203\":1}}],[\"只是在并发情况下的两种不同策略\",{\"1\":{\"214\":1}}],[\"只是在\",{\"1\":{\"7\":1}}],[\"只对当前\",{\"1\":{\"169\":1}}],[\"只要任意一端没有明确提出断开连接\",{\"1\":{\"728\":1}}],[\"只要时间晚于内核记录的这个时间\",{\"1\":{\"721\":1}}],[\"只要发送方没有接收到确认应答号ack\",{\"1\":{\"690\":1}}],[\"只要有新的已接收数据包确认\",{\"1\":{\"652\":1}}],[\"只要仍保有上下文信息\",{\"1\":{\"651\":1}}],[\"只要仍然按照约定提供实现类到对应位置\",{\"1\":{\"254\":1}}],[\"只要对\",{\"1\":{\"648\":1}}],[\"只要id不便\",{\"1\":{\"648\":1}}],[\"只要第一个请求发出去了\",{\"1\":{\"646\":1}}],[\"只要系统发生死锁\",{\"1\":{\"625\":1}}],[\"只要一个表有更新操作\",{\"1\":{\"621\":1}}],[\"只要整个项目的历史记录被保存在单一位置\",{\"1\":{\"416\":1}}],[\"只要没有超过当前进程可用的内存上限\",{\"1\":{\"244\":1}}],[\"只要逻辑上是连续的即可\",{\"1\":{\"243\":1}}],[\"只要哈希函数映射得比较均匀松散\",{\"1\":{\"188\":1}}],[\"只要其\",{\"1\":{\"157\":1}}],[\"只要用户提供了正确的坐标元素\",{\"1\":{\"139\":1}}],[\"只能表示英语字符的编码方案\",{\"1\":{\"751\":1}}],[\"只能保存\",{\"1\":{\"677\":1}}],[\"只能保证一个共享变量的原子操作\",{\"1\":{\"223\":1}}],[\"只能保证可见性和有序性\",{\"1\":{\"218\":1}}],[\"只能对table\",{\"1\":{\"624\":1}}],[\"只能根据前缀进行比较\",{\"1\":{\"620\":1}}],[\"只能通过\",{\"1\":{\"239\":1}}],[\"只能通过指针来定位\",{\"1\":{\"182\":1}}],[\"只能重启\",{\"1\":{\"239\":1}}],[\"只能一桌一桌点菜\",{\"1\":{\"197\":1}}],[\"只能从前往后遍历集合中的元素\",{\"1\":{\"178\":1}}],[\"只能使用一个\",{\"1\":{\"144\":1}}],[\"只能是pom工程\",{\"1\":{\"21\":1}}],[\"之上的\",{\"1\":{\"635\":1}}],[\"之后会使任务出于就绪状态随时准备运行\",{\"1\":{\"265\":1}}],[\"之后存储在元空间\",{\"1\":{\"247\":1}}],[\"之后的请求和响应都会复用这条连接\",{\"1\":{\"655\":1}}],[\"之后的版本新增参数\",{\"0\":{\"311\":1}}],[\"之后的版本都没有弹框了\",{\"1\":{\"9\":1}}],[\"之后的直接内存\",{\"1\":{\"237\":1}}],[\"之后的\",{\"1\":{\"187\":1}}],[\"之后每次扩充\",{\"1\":{\"187\":1}}],[\"之后\",{\"1\":{\"187\":1,\"220\":1,\"227\":1,\"244\":1,\"640\":1}}],[\"之后立刻完成的工作\",{\"1\":{\"165\":1}}],[\"之外的任何版本的硬要求\",{\"1\":{\"143\":1}}],[\"之间并没有依赖\",{\"1\":{\"651\":1}}],[\"之间使用逗号隔开\",{\"1\":{\"171\":1}}],[\"之间的高速存储器\",{\"1\":{\"739\":1}}],[\"之间的任何版本的硬要求\",{\"1\":{\"143\":2}}],[\"之间的版本冲突\",{\"1\":{\"140\":1}}],[\"之间是有关系的\",{\"1\":{\"19\":1}}],[\"之前滞留的那一次请求连接\",{\"1\":{\"703\":1}}],[\"之前所有内容的发生的数据做个摘要\",{\"1\":{\"639\":1,\"640\":1}}],[\"之前都是用\",{\"1\":{\"256\":1}}],[\"之前存储在永久代\",{\"1\":{\"247\":1}}],[\"之前执行完成了\",{\"1\":{\"223\":1}}],[\"之前为循环链表\",{\"1\":{\"183\":1}}],[\"之前完成的工作\",{\"1\":{\"165\":1}}],[\"之前\",{\"1\":{\"101\":1,\"187\":1,\"368\":1}}],[\"之前有没有类似xxx\",{\"1\":{\"17\":1}}],[\"之前先简单了解下\",{\"1\":{\"7\":1}}],[\"一部分用于存储数据\",{\"1\":{\"739\":1}}],[\"一对多\",{\"1\":{\"724\":1}}],[\"一直滞留没有发送成功\",{\"1\":{\"722\":1}}],[\"一直跟这个事务启动时看到的数据是一致的\",{\"1\":{\"629\":1,\"632\":1}}],[\"一但发现丢包和超时重传\",{\"1\":{\"696\":1}}],[\"一开始不发送大量数据\",{\"1\":{\"695\":1}}],[\"一些黑客会潜伏在这个会话中\",{\"1\":{\"664\":1}}],[\"一起发送\",{\"1\":{\"651\":1}}],[\"一起被分发的\",{\"1\":{\"170\":1}}],[\"一致性\",{\"1\":{\"627\":2}}],[\"一致的运行环境\",{\"1\":{\"384\":1}}],[\"一篇就够了\",{\"1\":{\"614\":1}}],[\"一切正常\",{\"1\":{\"566\":1}}],[\"一秒中有百分之多少的时间用于\",{\"1\":{\"458\":1,\"557\":1}}],[\"一不小心会写错文件或者覆盖意想外的文件\",{\"1\":{\"415\":1}}],[\"一种操作系统层虚拟化\",{\"1\":{\"406\":1}}],[\"一键部署\",{\"1\":{\"399\":1}}],[\"一句话概括容器\",{\"1\":{\"378\":1}}],[\"一旦发现校验和有差错\",{\"1\":{\"689\":1}}],[\"一旦执行dns劫持的个人控制了dns\",{\"1\":{\"670\":1}}],[\"一旦超过了这个时间\",{\"1\":{\"645\":1}}],[\"一旦事务提交\",{\"1\":{\"627\":1}}],[\"一旦代码里涉及具体的实现类\",{\"1\":{\"252\":1}}],[\"一旦使用了\",{\"1\":{\"242\":1}}],[\"一旦使用超出限制\",{\"1\":{\"239\":1}}],[\"一段用\",{\"1\":{\"221\":1}}],[\"一定程度上可以减少上下文切换频率的\",{\"1\":{\"198\":1}}],[\"一定是\",{\"1\":{\"189\":1}}],[\"一级缓存\",{\"1\":{\"740\":1}}],[\"一级\",{\"1\":{\"170\":1}}],[\"一级标题\",{\"1\":{\"55\":2}}],[\"一样处理\",{\"1\":{\"273\":1}}],[\"一样在本地内存中实现的元空间\",{\"1\":{\"244\":1}}],[\"一样\",{\"1\":{\"147\":1,\"353\":1,\"387\":1}}],[\"一样的安装流程即可\",{\"1\":{\"9\":1}}],[\"一个变量b\",{\"1\":{\"743\":1}}],[\"一个变量a\",{\"1\":{\"743\":1}}],[\"一个内存地址被多次访问的现象\",{\"1\":{\"737\":1}}],[\"一个网络包所能容纳的\",{\"1\":{\"729\":1}}],[\"一个网络包的最大长度\",{\"1\":{\"729\":1}}],[\"一个msl指的是报文段最长寿命\",{\"1\":{\"705\":1}}],[\"一个连接上的多个stream之间没有依赖\",{\"1\":{\"648\":1}}],[\"一个随机数\",{\"1\":{\"639\":1}}],[\"一个事务去访问记录的时候\",{\"1\":{\"631\":1}}],[\"一个事务所做的修改在最终提交以前\",{\"1\":{\"627\":1}}],[\"一个事务必须视为一个不可分割的最小工作单元\",{\"1\":{\"627\":1}}],[\"一个事件循环每次运行一个\",{\"1\":{\"280\":1}}],[\"一个好的\",{\"0\":{\"425\":1},\"1\":{\"425\":1}}],[\"一个仓库会包含同一个软件不同版本的镜像\",{\"1\":{\"388\":1}}],[\"一个特殊的文件系统\",{\"0\":{\"386\":1}}],[\"一个或多个应用\",{\"1\":{\"380\":1}}],[\"一个或多个操作要么全部执行成功\",{\"1\":{\"210\":1}}],[\"一个任务一个任务提交\",{\"1\":{\"325\":1}}],[\"一个与\",{\"1\":{\"280\":1}}],[\"一个很好的返回对象的低层级函数的示例是\",{\"1\":{\"269\":1}}],[\"一个协程会让其开始运行\",{\"1\":{\"265\":1}}],[\"一个协程\",{\"1\":{\"265\":1}}],[\"一个指向\",{\"1\":{\"244\":1}}],[\"一个指向类加载器的引用\",{\"1\":{\"244\":1}}],[\"一个通用规则是\",{\"1\":{\"242\":1}}],[\"一个处理器\",{\"1\":{\"238\":1}}],[\"一个处理器的缓存回写到内存会导致其他处理器的缓存无效\",{\"1\":{\"207\":1}}],[\"一个节点表示一个线程\",{\"1\":{\"226\":1}}],[\"一个进程可以包含多个线程\",{\"1\":{\"196\":1}}],[\"一个\",{\"1\":{\"189\":1,\"388\":1,\"652\":1,\"729\":1}}],[\"一个low\",{\"1\":{\"189\":1}}],[\"一个项目通常都会有多个不同的运行环境\",{\"1\":{\"168\":1}}],[\"一个多模块的父类\",{\"1\":{\"149\":1}}],[\"一个构件提供了一个针对\",{\"1\":{\"142\":1}}],[\"一个用于\",{\"1\":{\"91\":1}}],[\"一个神奇的文档网站生成器\",{\"1\":{\"75\":1}}],[\"一个神奇的文档生成器\",{\"1\":{\"43\":1}}],[\"一个页面的\",{\"1\":{\"54\":1}}],[\"一\",{\"0\":{\"19\":1,\"39\":1,\"114\":1}}],[\"一般可以开启的端口为\",{\"1\":{\"720\":1}}],[\"一般失效时间较短\",{\"1\":{\"677\":1}}],[\"一般\",{\"1\":{\"665\":1}}],[\"一般阀值被默认设置为\",{\"1\":{\"566\":1}}],[\"一般不关注\",{\"1\":{\"479\":1,\"528\":1}}],[\"一般所指的虚拟化资源包括计算能力和数据存储\",{\"1\":{\"406\":1}}],[\"一般大家习惯性的会使用默认的文件名\",{\"1\":{\"394\":1}}],[\"一般这类公开服务允许用户免费上传\",{\"1\":{\"388\":1}}],[\"一般推荐模块之间基于接口编程\",{\"1\":{\"252\":1}}],[\"一般该方法表示同步器是否被当前线程独占\",{\"1\":{\"229\":1}}],[\"一般情况下一个dns的udp包的最大长度是512字节\",{\"1\":{\"668\":1}}],[\"一般情况下\",{\"1\":{\"217\":1}}],[\"一般情况下我们只要下载奇数编号的最新版本更新就行了\",{\"1\":{\"8\":1}}],[\"一般都会对数组的长度取模运算\",{\"1\":{\"188\":1}}],[\"一般应用是很难出现碰撞的\",{\"1\":{\"188\":1}}],[\"一般用来创建新的报告文档\",{\"1\":{\"167\":1}}],[\"一般是5\",{\"1\":{\"701\":1}}],[\"一般是名为\",{\"1\":{\"245\":1}}],[\"一般是\",{\"1\":{\"50\":1}}],[\"一般的\",{\"1\":{\"20\":1}}],[\"一般来说这个环境变量在不与其他环境变量名称冲突的前提下随便叫什么都行\",{\"1\":{\"12\":1}}],[\"一般来说\",{\"1\":{\"7\":1}}],[\"跟对象是没有关系\",{\"1\":{\"204\":1}}],[\"跟原来的\",{\"1\":{\"189\":1}}],[\"跟\",{\"1\":{\"9\":1}}],[\"也同样在传输层组装\",{\"1\":{\"724\":1}}],[\"也称\",{\"1\":{\"714\":2}}],[\"也称为最小的原子单元\",{\"1\":{\"617\":1}}],[\"也称为\",{\"1\":{\"239\":1}}],[\"也要消耗一个序列号\",{\"1\":{\"705\":1}}],[\"也即再次进入拥塞避免状态\",{\"1\":{\"698\":1}}],[\"也包括数据部分\",{\"1\":{\"687\":1}}],[\"也不关心是否丢包\",{\"1\":{\"651\":1}}],[\"也不一定要放在构建上下文的根目录中\",{\"1\":{\"394\":1}}],[\"也有可能磁盘出现瓶颈\",{\"1\":{\"479\":1,\"528\":1}}],[\"也没问题\",{\"1\":{\"402\":1,\"403\":1}}],[\"也没有关键字参数\",{\"1\":{\"370\":1}}],[\"也只是单个容器的问题\",{\"1\":{\"383\":1}}],[\"也被取消\",{\"1\":{\"273\":1}}],[\"也会导致伪共享问题\",{\"1\":{\"743\":1}}],[\"也会发送不带任何数据的报文段\",{\"1\":{\"687\":1}}],[\"也会使用没有任何数据的首部来确认收到的数据\",{\"1\":{\"687\":1}}],[\"也会删掉pathname或string的后缀部分\",{\"1\":{\"609\":1}}],[\"也会抛出\",{\"1\":{\"240\":1}}],[\"也会匹配\",{\"1\":{\"93\":1}}],[\"也叫系统类加载器\",{\"1\":{\"236\":1}}],[\"也是其跨平台特性的关键支持\",{\"1\":{\"235\":1}}],[\"也是支持\",{\"1\":{\"101\":1}}],[\"也随之成为\",{\"1\":{\"232\":1,\"258\":1}}],[\"也就无法将数据报文送到\",{\"1\":{\"729\":1}}],[\"也就跳过了time\",{\"1\":{\"721\":1}}],[\"也就没有其他开销\",{\"1\":{\"222\":1}}],[\"也就两种情况\",{\"1\":{\"189\":1}}],[\"也就是close\",{\"1\":{\"705\":1}}],[\"也就是设置为原来的一半\",{\"1\":{\"697\":1}}],[\"也就是会发生数据包重传\",{\"1\":{\"697\":1}}],[\"也就是会让链表的长度增加\",{\"1\":{\"187\":1}}],[\"也就是序列号seq\",{\"1\":{\"690\":1}}],[\"也就是不允许跨域请求资源\",{\"1\":{\"680\":1}}],[\"也就是不存在的数据\",{\"1\":{\"628\":1}}],[\"也就是没有权限去访问服务器的资源\",{\"1\":{\"642\":1}}],[\"也就是重定向\",{\"1\":{\"642\":1}}],[\"也就是服务器找到了客户端请求的内容\",{\"1\":{\"642\":1}}],[\"也就是全局事务中最大的事务\",{\"1\":{\"631\":1}}],[\"也就是可能最终不会存到数据库中\",{\"1\":{\"628\":1}}],[\"也就是要生成一条\",{\"1\":{\"622\":1}}],[\"也就是要尽量把数据分配均匀\",{\"1\":{\"188\":1}}],[\"也就是常说的动态链接\",{\"1\":{\"247\":1}}],[\"也就是只能升级不能降级\",{\"1\":{\"220\":1}}],[\"也就是对象锁\",{\"1\":{\"219\":1}}],[\"也就是最新的\",{\"1\":{\"190\":1}}],[\"也就是一个\",{\"1\":{\"189\":1}}],[\"也就是说传输时候数据像\",{\"1\":{\"726\":1}}],[\"也就是说请求的网页程序本身报错了\",{\"1\":{\"642\":1}}],[\"也就是说第一次执行\",{\"1\":{\"189\":1}}],[\"也就是说不管这个数是多少\",{\"1\":{\"189\":1}}],[\"也就是说创建一个链表数组\",{\"1\":{\"187\":1}}],[\"也就是说\",{\"1\":{\"186\":1,\"188\":1}}],[\"也就是说它是可以存储任意对象的\",{\"1\":{\"181\":1}}],[\"也就是说如果a依赖了b\",{\"1\":{\"20\":1}}],[\"也就是告诉\",{\"1\":{\"16\":1}}],[\"也就是长期支持版本\",{\"1\":{\"8\":1}}],[\"也就是\",{\"1\":{\"7\":1,\"200\":1,\"631\":1}}],[\"也可用低层级的\",{\"1\":{\"280\":1}}],[\"也可认为在提供方中\",{\"1\":{\"253\":1}}],[\"也可能为\",{\"1\":{\"177\":1}}],[\"也可以指定某个cpu\",{\"1\":{\"446\":1,\"540\":1}}],[\"也可以为\",{\"1\":{\"275\":1}}],[\"也可以动态地分配和回收\",{\"1\":{\"244\":1}}],[\"也可以是可扩展的\",{\"1\":{\"243\":1}}],[\"也可以是中央仓库的jar包\",{\"1\":{\"20\":1}}],[\"也可以说一定程度上优化了存取性能\",{\"1\":{\"187\":1}}],[\"也可以只调用\",{\"1\":{\"164\":1}}],[\"也可以安装或者部署到仓库中\",{\"1\":{\"157\":1}}],[\"也可以直接配置\",{\"1\":{\"100\":1}}],[\"也可以提供一个正则表达式来匹配前缀\",{\"1\":{\"93\":1}}],[\"也可以通过\",{\"1\":{\"720\":1}}],[\"也可以通过网络来载入所需要的类\",{\"1\":{\"233\":1,\"259\":1}}],[\"也可以通过指定文件名来自定义文件名\",{\"1\":{\"78\":1}}],[\"也可以通过此项自定义\",{\"1\":{\"70\":1}}],[\"也可以选择安装\",{\"1\":{\"9\":1}}],[\"也支持多级排序\",{\"1\":{\"366\":1}}],[\"也支持本地化\",{\"1\":{\"93\":2}}],[\"也支持自定义导航栏\",{\"1\":{\"56\":1}}],[\"盘容量不那么富裕\",{\"1\":{\"9\":1}}],[\"盘容量超大\",{\"1\":{\"9\":1}}],[\"那样必须有序确认\",{\"1\":{\"652\":1}}],[\"那样一直等待\",{\"1\":{\"201\":1}}],[\"那什么是虚拟化技术呢\",{\"1\":{\"406\":1}}],[\"那\",{\"1\":{\"322\":1}}],[\"那这个锁就是可重入锁\",{\"1\":{\"216\":1}}],[\"那它是自旋锁吗\",{\"1\":{\"215\":1}}],[\"那就把开头的\",{\"1\":{\"14\":2}}],[\"那么cpu可以更快地获取它\",{\"1\":{\"739\":1}}],[\"那么c依赖a时会自动把a和b都导入进来\",{\"1\":{\"20\":1}}],[\"那么在不久的将来它很可能会被再次访问\",{\"1\":{\"737\":1}}],[\"那么在下面这一步的时候选择更改\",{\"1\":{\"9\":1}}],[\"那么调用close后\",{\"1\":{\"721\":1}}],[\"那么当fin到达主动关闭方的时候\",{\"1\":{\"719\":1}}],[\"那么发送方会停止发送数据\",{\"1\":{\"693\":1}}],[\"那么根据校验和和序列号知道该数据已经接收\",{\"1\":{\"691\":1}}],[\"那么接收方在接收到数据后会回复ack\",{\"1\":{\"691\":1}}],[\"那么也中止通信\",{\"1\":{\"665\":1}}],[\"那么服务器拒绝这个请求\",{\"1\":{\"662\":1}}],[\"那么网站b在诱导的时候\",{\"1\":{\"661\":1}}],[\"那么通过js脚本将无法读取到cookie信息\",{\"1\":{\"659\":1}}],[\"那么通常不需要这种技术\",{\"1\":{\"369\":1}}],[\"那么下一个请求就不发送\",{\"1\":{\"645\":1}}],[\"那么后续整个\",{\"1\":{\"641\":1}}],[\"那么事务后续使用当前读进行查询的时候\",{\"1\":{\"632\":1}}],[\"那么事务\",{\"1\":{\"632\":1}}],[\"那么这个插入语句就会被阻塞\",{\"1\":{\"632\":1}}],[\"那么这个表的查询缓存就会被清空\",{\"1\":{\"621\":1}}],[\"那么该表满足第二范式\",{\"1\":{\"617\":1}}],[\"那么我们就该考虑优化程序算法或者进行加速\",{\"1\":{\"479\":1,\"528\":1}}],[\"那么不用担心\",{\"1\":{\"479\":1,\"528\":1}}],[\"那么它就是\",{\"1\":{\"266\":1}}],[\"那么计数器中记录则是空\",{\"1\":{\"238\":1}}],[\"那么计数器中记录的是执行的虚拟机字节码指令的地址\",{\"1\":{\"238\":1}}],[\"那么方法的\",{\"1\":{\"219\":1}}],[\"那么此线程就无法获取到这把锁\",{\"1\":{\"215\":1}}],[\"那么线程启动后会执行\",{\"1\":{\"202\":1}}],[\"那么只是对数组进行扩容\",{\"1\":{\"187\":1}}],[\"那么会尝试使用\",{\"1\":{\"227\":1}}],[\"那么会有下面几种情况\",{\"1\":{\"187\":1}}],[\"那么会选择先进行数组扩容\",{\"1\":{\"187\":1}}],[\"那么数组中的数据机会越多\",{\"1\":{\"187\":1}}],[\"那么旧的值将被新值覆盖\",{\"1\":{\"186\":1}}],[\"那么就知道哪段报文发生了丢包\",{\"1\":{\"694\":1}}],[\"那么就会全表扫描\",{\"1\":{\"625\":1}}],[\"那么就把元素插入到节点链表的尾部\",{\"1\":{\"249\":1}}],[\"那么就把最小需要容量当作数组的新容量\",{\"1\":{\"181\":1}}],[\"那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制\",{\"1\":{\"226\":1}}],[\"那么就需要配置\",{\"1\":{\"53\":1}}],[\"那么就覆盖\",{\"1\":{\"187\":1}}],[\"那么可以通过本地安装的方式导入本地库\",{\"1\":{\"156\":1}}],[\"那么可以加上\",{\"1\":{\"14\":1}}],[\"那么\",{\"1\":{\"146\":1,\"189\":2,\"390\":1,\"698\":1,\"722\":1}}],[\"那么先声明的优先\",{\"1\":{\"144\":1}}],[\"那么第一个就可以配置\",{\"1\":{\"142\":1}}],[\"那么首先声明的别名优先级更高\",{\"1\":{\"81\":1}}],[\"那么对应配置是\",{\"1\":{\"62\":1}}],[\"那么对应的访问路径将是\",{\"1\":{\"51\":1}}],[\"那么是从\",{\"1\":{\"59\":1}}],[\"那么访问的地址就是\",{\"1\":{\"50\":1}}],[\"那么直接访问\",{\"1\":{\"50\":1}}],[\"那么去\",{\"1\":{\"17\":1}}],[\"那么编辑\",{\"1\":{\"14\":2}}],[\"那么一直点击下一步就好了\",{\"1\":{\"9\":1}}],[\"那股劲上来可能连续肝好几个小时\",{\"1\":{\"1\":1}}],[\"用短链接可以快速释放资源\",{\"1\":{\"713\":1}}],[\"用mac地址访问媒介\",{\"1\":{\"683\":1}}],[\"用完放回去便于下次再复用\",{\"1\":{\"655\":1}}],[\"用的端口也不一样\",{\"1\":{\"635\":1}}],[\"用delete\",{\"1\":{\"624\":1}}],[\"用drop\",{\"1\":{\"624\":1}}],[\"用truncate即可\",{\"1\":{\"624\":1}}],[\"用树的风格显示进程的层次关系\",{\"1\":{\"513\":1,\"564\":1}}],[\"用作缓存的内存大小\",{\"1\":{\"479\":1,\"528\":1}}],[\"用作缓冲的内存大小\",{\"1\":{\"479\":1,\"528\":1}}],[\"用作内核缓存内存总量\",{\"1\":{\"440\":1,\"534\":1}}],[\"用作可等待对象\",{\"1\":{\"269\":1}}],[\"用这一行来描述和解释你的这次提交\",{\"1\":{\"425\":1}}],[\"用空格分隔\",{\"1\":{\"402\":1,\"403\":1}}],[\"用一个超级循环\",{\"1\":{\"333\":1}}],[\"用多线程\",{\"1\":{\"332\":1}}],[\"用法\",{\"1\":{\"276\":1,\"325\":2}}],[\"用\",{\"1\":{\"205\":1,\"241\":1,\"300\":1}}],[\"用来解决丢包的问题\",{\"1\":{\"687\":1}}],[\"用来解决网络包乱序问题\",{\"1\":{\"687\":1}}],[\"用来控制缓存的失效日期\",{\"1\":{\"645\":1}}],[\"用来供客户端校验\",{\"1\":{\"640\":1}}],[\"用来供服务端校验\",{\"1\":{\"639\":1}}],[\"用来确保每列的原子性\",{\"1\":{\"617\":1}}],[\"用来监控网卡的实时流量\",{\"1\":{\"515\":1}}],[\"用来生成包括tcp信息\",{\"1\":{\"515\":1}}],[\"用来集中存放镜像文件的地方类似于我们之前常用的代码仓库\",{\"1\":{\"388\":1}}],[\"用来计算在字符串中的有效\",{\"1\":{\"360\":1}}],[\"用来指定依赖的绝对路径\",{\"1\":{\"142\":1}}],[\"用来记录学过的知识\",{\"1\":{\"2\":1}}],[\"用于跟踪数据包在ip网络中从源主机到目标主机的路径\",{\"1\":{\"750\":1}}],[\"用于多处理器系统中的缓存\",{\"1\":{\"742\":1}}],[\"用于控制数据在处理器之间的传输\",{\"1\":{\"741\":1}}],[\"用于控制版本\",{\"1\":{\"27\":1}}],[\"用于优化共享数据的写回操作\",{\"1\":{\"741\":1}}],[\"用于在不同核心之间共享数据\",{\"1\":{\"740\":1}}],[\"用于在不同核之间共享数据和降低访问内存的延迟\",{\"1\":{\"739\":1}}],[\"用于加速虚拟地址到物理地址的翻译过程\",{\"1\":{\"736\":1}}],[\"用于加载应用程序的类\",{\"1\":{\"236\":1}}],[\"用于加载\",{\"1\":{\"236\":1}}],[\"用于处理特定的操作\",{\"1\":{\"735\":1}}],[\"用于改变程序执行流程\",{\"1\":{\"735\":1}}],[\"用于记录虚拟页到物理页框的映射关系\",{\"1\":{\"734\":1}}],[\"用于同步和协调各个部件的工作\",{\"1\":{\"732\":1}}],[\"用于组织\",{\"1\":{\"731\":1}}],[\"用于释放连接\",{\"1\":{\"687\":1}}],[\"用于重置由于主机崩溃或其他原因而出现错误的连接\",{\"1\":{\"687\":1}}],[\"用于传输的stream\",{\"1\":{\"652\":1}}],[\"用于监控处理器之间的通信\",{\"1\":{\"741\":1}}],[\"用于监控\",{\"1\":{\"515\":1}}],[\"用于报告多路cpu主机的每颗cpu活动情况\",{\"1\":{\"515\":1}}],[\"用于报告当前系统的进程状态\",{\"1\":{\"504\":1,\"564\":1}}],[\"用于查看服务器运行了多长时间以及有多少个用户登录\",{\"1\":{\"515\":1}}],[\"用于捕捉或者过滤网络上指定接口上接收或者传输的tcp\",{\"1\":{\"515\":1}}],[\"用于显示与ip\",{\"1\":{\"485\":1,\"515\":1,\"543\":1}}],[\"用于显示磁盘分区上的可使用的磁盘空间\",{\"1\":{\"451\":1,\"551\":1}}],[\"用于数据持久化和共享的数据卷定义\",{\"1\":{\"400\":1}}],[\"用于数据持久化或在容器之间共享数据\",{\"1\":{\"400\":1}}],[\"用于定义和配置多容器\",{\"1\":{\"400\":1}}],[\"用于定义如何构建一个\",{\"1\":{\"389\":1}}],[\"用于与您的团队查找和共享容器镜像\",{\"1\":{\"388\":1}}],[\"用于将一台服务器变成多台服务器\",{\"1\":{\"380\":1}}],[\"用于将代码和依赖资源打包在一起\",{\"1\":{\"380\":1}}],[\"用于从\",{\"1\":{\"363\":1}}],[\"用于写入日志文件\",{\"1\":{\"357\":1}}],[\"用于根据\",{\"1\":{\"353\":1}}],[\"用于维持一个定长的近期添加元素序列\",{\"0\":{\"348\":1}}],[\"用于实现时间片轮转等调度策略\",{\"1\":{\"733\":1}}],[\"用于实现\",{\"0\":{\"347\":1}}],[\"用于保持在\",{\"1\":{\"336\":1}}],[\"用于保存方法执行完毕后的返回地址\",{\"1\":{\"239\":1}}],[\"用于网络\",{\"1\":{\"303\":1}}],[\"用于生成子进程和运行\",{\"1\":{\"302\":1}}],[\"用于\",{\"1\":{\"263\":2}}],[\"用于指向运行时常量池中该方法所对应的常量\",{\"1\":{\"239\":1}}],[\"用于指定单个插件目标\",{\"1\":{\"156\":1}}],[\"用于指定一组插件目标\",{\"1\":{\"156\":1}}],[\"用于指定\",{\"1\":{\"142\":1}}],[\"用于存储临时数据\",{\"1\":{\"741\":1}}],[\"用于存储指令\",{\"1\":{\"740\":1}}],[\"用于存储数据\",{\"1\":{\"740\":1}}],[\"用于存储近期访问过的数据和指令\",{\"1\":{\"739\":1,\"740\":1}}],[\"用于存储字符串常量的引用\",{\"1\":{\"248\":1}}],[\"用于存储已被虚拟机加载的类信息\",{\"1\":{\"244\":1}}],[\"用于存储方法执行过程中的操作数\",{\"1\":{\"239\":1}}],[\"用于存储方法执行时的方法参数和局部变量\",{\"1\":{\"239\":1}}],[\"用于存储方法调用时的局部变量\",{\"1\":{\"239\":1}}],[\"用于存储局部变量表\",{\"1\":{\"239\":1}}],[\"用于区分不同的进程\",{\"1\":{\"196\":1}}],[\"用于默认大小空实例的共享空数组实例\",{\"1\":{\"181\":1}}],[\"用于空实例\",{\"1\":{\"181\":1}}],[\"用于计算依赖项的有效版本\",{\"1\":{\"142\":1}}],[\"用于描述项目如何构建\",{\"1\":{\"137\":1}}],[\"用于阻止\",{\"1\":{\"48\":1}}],[\"用户接口\",{\"1\":{\"731\":1}}],[\"用户态则主要执行应用程序的代码\",{\"1\":{\"738\":1}}],[\"用户态与内核态的区别\",{\"1\":{\"738\":1}}],[\"用户态和内核态是操作系统为了保护系统资源和实现权限控制而设计的两种不同的cpu运行级别\",{\"1\":{\"738\":1}}],[\"用户态\",{\"1\":{\"728\":1,\"738\":1}}],[\"用户态切换到内核态\",{\"1\":{\"222\":1}}],[\"用户就只需要在80端口上进行交互就可以了\",{\"1\":{\"681\":1}}],[\"用户网银帐号\",{\"1\":{\"658\":1}}],[\"用户点击继续访问或者被恶意导入伪造的根证书\",{\"1\":{\"641\":1}}],[\"用户进程执行时间百分比\",{\"1\":{\"479\":1,\"528\":1}}],[\"用户进程消耗的cpu百分比\",{\"1\":{\"440\":1,\"534\":1}}],[\"用户\",{\"1\":{\"461\":1,\"560\":1}}],[\"用户也可以通过增加\",{\"1\":{\"397\":1}}],[\"用户也可以自己选择将某个插件目标绑定到\",{\"1\":{\"156\":1}}],[\"用户管理\",{\"1\":{\"388\":1}}],[\"用户还可以在\",{\"1\":{\"388\":1}}],[\"用户等\",{\"1\":{\"386\":1}}],[\"用户线程\",{\"1\":{\"202\":1}}],[\"用户可以用\",{\"1\":{\"570\":1}}],[\"用户可以容易的创建和管理系统或应用容器\",{\"1\":{\"406\":1}}],[\"用户可以方便地创建和使用容器\",{\"1\":{\"382\":1}}],[\"用户可以配置当某个系统属性存在时\",{\"1\":{\"171\":1}}],[\"用户可以通过多种方式激活\",{\"1\":{\"171\":1}}],[\"用户可以只调用\",{\"1\":{\"164\":1}}],[\"用户目录下\",{\"1\":{\"169\":1}}],[\"用户与\",{\"1\":{\"163\":1}}],[\"用户使用\",{\"1\":{\"158\":1}}],[\"用户表\",{\"1\":{\"111\":1}}],[\"用户名\",{\"1\":{\"50\":1}}],[\"用户注册\",{\"1\":{\"24\":1}}],[\"用户服务\",{\"1\":{\"24\":1}}],[\"用户及时升级到最新的\",{\"1\":{\"8\":1}}],[\"其本质是建立起的\",{\"1\":{\"672\":1}}],[\"其它时候则使用udp协议\",{\"1\":{\"668\":1}}],[\"其它\",{\"1\":{\"597\":2}}],[\"其它资源\",{\"0\":{\"129\":1}}],[\"其名称来自\",{\"1\":{\"406\":1}}],[\"其性能和稳定性更高\",{\"1\":{\"387\":1}}],[\"其内容在构建之后也不会被改变\",{\"1\":{\"386\":1}}],[\"其返回值的解读\",{\"1\":{\"310\":2}}],[\"其返回给调用者\",{\"1\":{\"272\":1}}],[\"其大小受到\",{\"1\":{\"249\":1}}],[\"其二\",{\"1\":{\"233\":1,\"259\":1}}],[\"其一\",{\"1\":{\"233\":1,\"259\":1}}],[\"其效果相当于\",{\"1\":{\"181\":1}}],[\"其底层实现使用\",{\"1\":{\"181\":1}}],[\"其执行顺序与插件声明顺序一致\",{\"1\":{\"156\":1}}],[\"其执行顺序由生命周期阶段的先后顺序决定\",{\"1\":{\"156\":1}}],[\"其子元素\",{\"1\":{\"156\":1}}],[\"其子模块的\",{\"1\":{\"149\":1}}],[\"其是\",{\"1\":{\"136\":1}}],[\"其他流不受影响\",{\"1\":{\"651\":1}}],[\"其他情况输出\",{\"1\":{\"597\":1}}],[\"其他处理器\",{\"1\":{\"515\":1}}],[\"其他线程需要等待该线程释放同步状态才能获取同步状态\",{\"1\":{\"229\":1}}],[\"其他线程可以立刻看到\",{\"1\":{\"210\":1}}],[\"其他\",{\"0\":{\"405\":1},\"1\":{\"207\":1}}],[\"其他的一些操作\",{\"1\":{\"353\":1}}],[\"其他的公共仓库\",{\"1\":{\"158\":1}}],[\"其他的选择还有\",{\"1\":{\"105\":1}}],[\"其他公共仓库\",{\"1\":{\"158\":1}}],[\"其他命令\",{\"0\":{\"108\":1}}],[\"其他主题\",{\"0\":{\"91\":1}}],[\"其他用法\",{\"0\":{\"76\":1,\"89\":1}}],[\"其他服务依赖此模块\",{\"1\":{\"24\":1}}],[\"其他版本的\",{\"1\":{\"14\":1}}],[\"其实是利用了网站a的漏洞\",{\"1\":{\"661\":1}}],[\"其实现原理\",{\"1\":{\"254\":1}}],[\"其实就是建构在\",{\"1\":{\"635\":1}}],[\"其实就是取\",{\"1\":{\"189\":3}}],[\"其实就是为了减少碰撞\",{\"1\":{\"187\":1}}],[\"其实就是告诉其他项目\",{\"1\":{\"142\":1}}],[\"其实就是\",{\"1\":{\"15\":1,\"333\":1}}],[\"其实这几个东西说的都是同一个概念\",{\"1\":{\"7\":1}}],[\"其中el0指的是用户态\",{\"1\":{\"738\":1}}],[\"其中包括pid\",{\"1\":{\"461\":1,\"560\":1}}],[\"其中前面\",{\"1\":{\"245\":1}}],[\"其中程序计数器\",{\"1\":{\"237\":1}}],[\"其中一个系统上的依赖项版本不等同于开发的版本\",{\"1\":{\"140\":1}}],[\"其中被\",{\"1\":{\"16\":1}}],[\"其中\",{\"1\":{\"8\":1,\"177\":1}}],[\"pwd\",{\"1\":{\"745\":1}}],[\"pwa\",{\"1\":{\"103\":1}}],[\"pfn\",{\"1\":{\"734\":1}}],[\"pcap\",{\"1\":{\"515\":1}}],[\"pcpu\",{\"1\":{\"513\":1,\"564\":1}}],[\"pmem\",{\"1\":{\"513\":1,\"564\":1}}],[\"ppid=\",{\"1\":{\"507\":1}}],[\"ppid\",{\"1\":{\"506\":1}}],[\"p或\",{\"1\":{\"486\":1}}],[\"p<进程号>\",{\"1\":{\"439\":1,\"533\":1}}],[\"psh\",{\"1\":{\"687\":1}}],[\"ps用于查看通过\",{\"1\":{\"404\":1}}],[\"ps命令即可查看\",{\"1\":{\"395\":1}}],[\"ps\",{\"0\":{\"503\":1,\"564\":1},\"1\":{\"392\":1,\"395\":1,\"404\":3,\"504\":1,\"505\":1,\"507\":9,\"509\":3,\"510\":1,\"511\":1,\"512\":1,\"513\":7,\"515\":2,\"564\":8,\"745\":1,\"748\":3}}],[\"psus\",{\"1\":{\"8\":4}}],[\"ping命令执行的时候\",{\"1\":{\"673\":1}}],[\"ping是怎么工作的\",{\"0\":{\"673\":1}}],[\"pipeline\",{\"1\":{\"646\":1,\"735\":1}}],[\"pigs\",{\"1\":{\"353\":1}}],[\"pile\",{\"1\":{\"311\":2}}],[\"piles\",{\"1\":{\"311\":3}}],[\"pid\",{\"1\":{\"196\":1,\"239\":1,\"462\":1,\"487\":1,\"506\":1,\"507\":2,\"513\":1,\"561\":1,\"564\":1,\"583\":2}}],[\"py3\",{\"1\":{\"370\":1}}],[\"py2\",{\"1\":{\"370\":2}}],[\"pytorch\",{\"1\":{\"316\":1}}],[\"python排序\",{\"0\":{\"363\":1}}],[\"python字符数字之间的转换函数\",{\"0\":{\"360\":1}}],[\"python日志\",{\"0\":{\"357\":1}}],[\"python常用数据结构\",{\"0\":{\"339\":1}}],[\"python并发编程\",{\"0\":{\"315\":1}}],[\"python3\",{\"0\":{\"311\":1},\"1\":{\"374\":2}}],[\"python二分查找\",{\"0\":{\"309\":1}}],[\"python\",{\"0\":{\"317\":1,\"323\":1,\"326\":1,\"373\":1,\"374\":1},\"1\":{\"263\":2,\"267\":2,\"269\":1,\"280\":2,\"287\":1,\"289\":1,\"322\":4,\"326\":1,\"332\":1,\"342\":1,\"343\":1,\"360\":1,\"363\":2,\"366\":1,\"368\":1,\"369\":1,\"370\":3,\"373\":3,\"399\":1},\"2\":{\"308\":1,\"314\":1,\"338\":1,\"356\":1,\"359\":1,\"362\":1,\"372\":1}}],[\"python异步i\",{\"0\":{\"262\":1}}],[\"py\",{\"1\":{\"306\":1}}],[\"ptest1\",{\"1\":{\"171\":1}}],[\"peername\",{\"1\":{\"285\":1}}],[\"pending\",{\"1\":{\"276\":2}}],[\"peng\",{\"1\":{\"39\":1,\"41\":3,\"115\":1}}],[\"pemgen\",{\"1\":{\"249\":2}}],[\"pessimistic\",{\"1\":{\"214\":1}}],[\"perforce\",{\"1\":{\"420\":1}}],[\"perl\",{\"1\":{\"369\":1}}],[\"permgen\",{\"1\":{\"239\":2}}],[\"per\",{\"1\":{\"169\":2}}],[\"physical\",{\"1\":{\"734\":1}}],[\"phase\",{\"1\":{\"156\":1,\"163\":1}}],[\"phase>\",{\"1\":{\"156\":1}}],[\"php\",{\"1\":{\"102\":1,\"515\":1}}],[\"p\",{\"1\":{\"105\":2,\"106\":2,\"171\":1,\"187\":15,\"316\":4,\"400\":1,\"406\":1,\"445\":1,\"457\":1,\"462\":1,\"463\":1,\"478\":1,\"487\":1,\"507\":1,\"513\":1,\"527\":1,\"539\":1,\"556\":1,\"561\":1,\"562\":1,\"564\":1,\"605\":1,\"606\":2,\"613\":2}}],[\"pluginmanagement\",{\"1\":{\"170\":1}}],[\"plugin\",{\"1\":{\"146\":2,\"150\":3,\"152\":2,\"153\":1,\"155\":12,\"156\":1}}],[\"pluginrepositories\",{\"1\":{\"146\":1,\"170\":2}}],[\"plugin>\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"plugin<\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"plugins>\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"plugins<\",{\"1\":{\"137\":1,\"149\":1,\"156\":1}}],[\"plugins\",{\"1\":{\"93\":3,\"94\":1,\"97\":1,\"105\":2,\"150\":2,\"156\":1,\"170\":2}}],[\"placed\",{\"1\":{\"189\":1}}],[\"placeholder\",{\"1\":{\"93\":3,\"124\":1}}],[\"platform\",{\"1\":{\"7\":3,\"232\":3,\"258\":3}}],[\"push标志\",{\"1\":{\"687\":1}}],[\"push\",{\"1\":{\"389\":1,\"396\":2,\"405\":1,\"426\":1,\"430\":1,\"647\":1}}],[\"pull\",{\"1\":{\"389\":1,\"393\":3}}],[\"puttreeval\",{\"1\":{\"187\":1}}],[\"putval\",{\"1\":{\"187\":2,\"189\":1}}],[\"put\",{\"1\":{\"187\":2,\"189\":2,\"191\":1,\"193\":3,\"293\":3,\"296\":2}}],[\"publi\",{\"1\":{\"178\":1}}],[\"publish\",{\"1\":{\"135\":1}}],[\"public<\",{\"1\":{\"159\":1}}],[\"public\",{\"1\":{\"40\":4,\"41\":6,\"118\":9,\"121\":4,\"124\":3,\"125\":4,\"178\":2,\"179\":1,\"181\":3,\"182\":1,\"187\":1,\"189\":1,\"193\":2,\"201\":1,\"205\":3,\"218\":5,\"219\":3,\"226\":2}}],[\"pure\",{\"1\":{\"90\":2,\"105\":1}}],[\"png\",{\"1\":{\"61\":1,\"94\":1}}],[\"pointer\",{\"1\":{\"631\":1}}],[\"positionpara\",{\"1\":{\"580\":4}}],[\"positive\",{\"1\":{\"353\":1}}],[\"post等主要方法\",{\"1\":{\"672\":1}}],[\"post的安全性要比get的安全性高\",{\"1\":{\"653\":1}}],[\"post一般用来更新服务器上的资源\",{\"1\":{\"653\":1}}],[\"post\",{\"1\":{\"155\":2,\"165\":3,\"166\":1,\"167\":1,\"654\":1,\"683\":1}}],[\"pop3\",{\"1\":{\"683\":1}}],[\"poprandom\",{\"1\":{\"354\":1}}],[\"popleft\",{\"1\":{\"344\":1,\"345\":1,\"348\":1,\"349\":1,\"350\":1}}],[\"pop\",{\"1\":{\"341\":1,\"344\":1,\"345\":1,\"354\":1}}],[\"pool\",{\"1\":{\"121\":1,\"237\":4,\"244\":1,\"246\":1,\"316\":1,\"325\":4,\"622\":4}}],[\"pooleddatasource\",{\"1\":{\"41\":4}}],[\"pooled\",{\"1\":{\"40\":1}}],[\"ports\",{\"1\":{\"395\":1,\"400\":3}}],[\"port=port\",{\"1\":{\"316\":2}}],[\"port\",{\"1\":{\"106\":2,\"316\":4,\"720\":1}}],[\"polyfill\",{\"1\":{\"93\":3}}],[\"pojo\",{\"1\":{\"40\":4,\"41\":2,\"118\":7}}],[\"pom\",{\"0\":{\"137\":1,\"138\":1,\"141\":1,\"147\":1},\"1\":{\"27\":4,\"30\":3,\"32\":3,\"35\":3,\"40\":1,\"117\":2,\"135\":1,\"137\":6,\"142\":3,\"144\":1,\"146\":5,\"147\":7,\"148\":1,\"149\":11,\"150\":2,\"157\":1,\"169\":1,\"170\":3,\"171\":2}}],[\"pbcv42yitl\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"prune\",{\"1\":{\"392\":1}}],[\"prefetching\",{\"1\":{\"737\":1}}],[\"preserve\",{\"1\":{\"189\":1}}],[\"prevent\",{\"1\":{\"271\":1}}],[\"prev\",{\"1\":{\"182\":4,\"187\":3,\"226\":2}}],[\"prepara\",{\"1\":{\"584\":1}}],[\"preparedata\",{\"1\":{\"205\":2}}],[\"prepare\",{\"1\":{\"166\":1,\"205\":2,\"622\":2}}],[\"preparing\",{\"1\":{\"41\":8}}],[\"pre\",{\"1\":{\"155\":2,\"165\":5,\"166\":1,\"167\":1,\"640\":1}}],[\"practice\",{\"1\":{\"117\":1}}],[\"practice1\",{\"1\":{\"113\":1}}],[\"pri\",{\"1\":{\"506\":1}}],[\"priority\",{\"1\":{\"294\":1}}],[\"priorityqueue\",{\"1\":{\"294\":1,\"301\":1}}],[\"prismjs\",{\"1\":{\"102\":2}}],[\"prism\",{\"1\":{\"102\":3}}],[\"print\",{\"1\":{\"265\":7,\"267\":2,\"270\":1,\"272\":1,\"273\":3,\"275\":2,\"277\":4,\"278\":3,\"285\":7,\"288\":2,\"296\":4,\"306\":1,\"316\":1,\"324\":1,\"325\":3,\"327\":1,\"334\":1,\"335\":1,\"342\":1,\"352\":2,\"494\":1}}],[\"println\",{\"1\":{\"41\":5,\"118\":1,\"125\":1,\"193\":3,\"205\":4}}],[\"printstacktrace\",{\"1\":{\"41\":2}}],[\"private\",{\"1\":{\"40\":3,\"41\":2,\"118\":6,\"121\":4,\"124\":1,\"125\":2,\"181\":9,\"182\":1,\"218\":2,\"226\":5}}],[\"primary\",{\"1\":{\"39\":1,\"111\":1,\"115\":1,\"368\":1}}],[\"proxy防火墙\",{\"1\":{\"717\":1}}],[\"protocol\",{\"1\":{\"683\":2}}],[\"prototype\",{\"1\":{\"93\":1,\"121\":1}}],[\"procs\",{\"1\":{\"479\":1,\"528\":1}}],[\"processing\",{\"1\":{\"732\":1}}],[\"processed\",{\"1\":{\"296\":2}}],[\"processes\",{\"1\":{\"135\":1,\"507\":6}}],[\"process\",{\"0\":{\"318\":1},\"1\":{\"41\":1,\"126\":2,\"155\":2,\"166\":6,\"239\":2,\"296\":1,\"316\":5,\"320\":1,\"327\":2,\"406\":1,\"504\":1,\"506\":1,\"507\":2,\"564\":1}}],[\"pro\",{\"1\":{\"431\":1}}],[\"provider\",{\"1\":{\"252\":1,\"254\":5}}],[\"provided\",{\"1\":{\"142\":2}}],[\"propagate\",{\"1\":{\"226\":2}}],[\"property>\",{\"1\":{\"171\":1}}],[\"property\",{\"1\":{\"124\":1,\"170\":3}}],[\"propertysource\",{\"1\":{\"121\":3}}],[\"properties<\",{\"1\":{\"171\":2}}],[\"properties>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"149\":1,\"170\":2}}],[\"properties\",{\"1\":{\"27\":1,\"119\":1,\"120\":1,\"121\":2,\"124\":1,\"146\":1,\"170\":2,\"171\":2}}],[\"prod\",{\"1\":{\"171\":2,\"402\":1,\"403\":1}}],[\"profile>\",{\"1\":{\"170\":2}}],[\"profile\",{\"0\":{\"168\":1,\"169\":1,\"170\":1,\"171\":1},\"1\":{\"168\":1,\"169\":2,\"170\":7,\"171\":17}}],[\"profiles>\",{\"1\":{\"170\":1}}],[\"profiles\",{\"1\":{\"146\":1,\"170\":1}}],[\"project<\",{\"1\":{\"137\":1}}],[\"projects\",{\"1\":{\"135\":3}}],[\"projectlombok<\",{\"1\":{\"40\":1,\"117\":1}}],[\"project>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"146\":1,\"149\":2}}],[\"project\",{\"1\":{\"19\":1,\"22\":1,\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"135\":3,\"137\":1,\"149\":1,\"156\":1,\"170\":1}}],[\"programs\",{\"1\":{\"486\":1}}],[\"programming\",{\"1\":{\"253\":1}}],[\"program\",{\"1\":{\"12\":1,\"14\":2,\"238\":1}}],[\"packet\",{\"1\":{\"652\":7}}],[\"packaging\",{\"1\":{\"146\":1}}],[\"packaging>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"146\":1,\"149\":1,\"156\":1}}],[\"package<\",{\"1\":{\"156\":1}}],[\"package=\",{\"1\":{\"124\":1}}],[\"package\",{\"1\":{\"40\":4,\"41\":2,\"118\":12,\"121\":4,\"124\":2,\"125\":4,\"140\":1,\"146\":1,\"155\":1,\"166\":2}}],[\"pause\",{\"1\":{\"405\":1}}],[\"pairs\",{\"1\":{\"186\":1,\"353\":3}}],[\"pagination\",{\"1\":{\"96\":2}}],[\"page6\",{\"1\":{\"59\":1}}],[\"page5\",{\"1\":{\"59\":1}}],[\"page4\",{\"1\":{\"59\":1}}],[\"page3\",{\"1\":{\"59\":1}}],[\"page\",{\"1\":{\"54\":1,\"78\":1,\"84\":2,\"487\":1,\"567\":1,\"734\":2,\"746\":1}}],[\"page2\",{\"1\":{\"51\":3,\"59\":1,\"62\":1}}],[\"page1\",{\"1\":{\"51\":2,\"54\":2,\"59\":1,\"62\":1,\"78\":2}}],[\"pages1\",{\"1\":{\"51\":1}}],[\"pages\",{\"1\":{\"44\":1,\"48\":1,\"50\":6,\"51\":5,\"53\":1,\"59\":3,\"62\":2,\"78\":3,\"82\":2}}],[\"partial\",{\"1\":{\"646\":1}}],[\"party\",{\"1\":{\"156\":4}}],[\"parse\",{\"1\":{\"316\":1}}],[\"parser\",{\"1\":{\"316\":4}}],[\"param=i\",{\"1\":{\"271\":1}}],[\"parameters\",{\"1\":{\"41\":8}}],[\"parallel\",{\"1\":{\"197\":2,\"296\":1}}],[\"parallelstream\",{\"1\":{\"178\":1}}],[\"parent<\",{\"1\":{\"146\":1}}],[\"parent>\",{\"1\":{\"30\":1,\"32\":1,\"35\":1,\"149\":1}}],[\"parent\",{\"1\":{\"30\":1,\"187\":1,\"507\":1}}],[\"password=123456\",{\"1\":{\"120\":1}}],[\"password=123123\",{\"1\":{\"41\":2}}],[\"password=pbcv42yitl\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=maiuohaghq\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=msou1bj0vv\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=kqbmcokwxa\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=8enha9ay1d\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=8wvermonb8\",{\"1\":{\"41\":2,\"126\":1}}],[\"password=6bzpnzerac\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=f0wfooyay2\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=oskkzsv4wm\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=yuesievzjm\",{\"1\":{\"41\":1,\"126\":1}}],[\"password=\",{\"1\":{\"40\":1,\"41\":1}}],[\"password\",{\"1\":{\"39\":1,\"40\":5,\"41\":5,\"111\":1,\"115\":1,\"118\":1,\"121\":3}}],[\"pathname\",{\"1\":{\"609\":1,\"610\":1}}],[\"pathnamespaces\",{\"1\":{\"93\":3}}],[\"paths\",{\"1\":{\"93\":2,\"316\":1}}],[\"path\",{\"0\":{\"13\":1},\"1\":{\"13\":1,\"14\":3,\"17\":2,\"357\":4,\"454\":1}}],[\"patch\",{\"1\":{\"8\":2}}],[\"cd\",{\"1\":{\"745\":1}}],[\"cdngy参数\",{\"1\":{\"567\":1}}],[\"cdn\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"90\":10,\"93\":6,\"94\":1,\"96\":1,\"97\":1,\"101\":2,\"102\":3,\"103\":1,\"105\":2}}],[\"cwnd\",{\"1\":{\"695\":6,\"696\":2,\"697\":7,\"698\":3}}],[\"csrf就是跨站请求伪造\",{\"1\":{\"661\":1}}],[\"cs\",{\"1\":{\"479\":1,\"528\":1}}],[\"css\",{\"1\":{\"64\":1,\"90\":11,\"101\":2,\"102\":2}}],[\"cvcs\",{\"1\":{\"416\":1}}],[\"cvs\",{\"1\":{\"135\":1,\"420\":1}}],[\"c4cd691d9f80\",{\"1\":{\"395\":3}}],[\"cgroup\",{\"1\":{\"382\":1,\"406\":8,\"408\":2}}],[\"c=3\",{\"1\":{\"353\":1}}],[\"c=0\",{\"1\":{\"353\":2}}],[\"ctypes\",{\"1\":{\"327\":2}}],[\"centos没有该命名\",{\"1\":{\"460\":1,\"559\":1}}],[\"centralized\",{\"1\":{\"416\":1}}],[\"central\",{\"1\":{\"140\":1,\"732\":1}}],[\"ceil\",{\"1\":{\"311\":1}}],[\"cyclebarrier\",{\"1\":{\"226\":1}}],[\"cmp=\",{\"1\":{\"370\":1}}],[\"cmp=reverse\",{\"1\":{\"370\":1}}],[\"cmp=numeric\",{\"1\":{\"370\":1}}],[\"cmp=none\",{\"1\":{\"341\":1}}],[\"cmp\",{\"0\":{\"370\":1},\"1\":{\"363\":2,\"370\":5}}],[\"cmpxchgq\",{\"1\":{\"221\":1}}],[\"cmsclassunloadingenabled\",{\"1\":{\"239\":1}}],[\"cmd\",{\"1\":{\"14\":1,\"400\":1}}],[\"c++等\",{\"1\":{\"744\":1}}],[\"c++语言只对虚函数使用动态绑定\",{\"1\":{\"233\":1,\"259\":1}}],[\"c++\",{\"1\":{\"219\":1,\"233\":3,\"249\":1,\"259\":3,\"322\":1}}],[\"cu\",{\"1\":{\"732\":2}}],[\"cut\",{\"1\":{\"494\":1}}],[\"current\",{\"1\":{\"279\":1,\"300\":1,\"507\":2}}],[\"currently\",{\"1\":{\"273\":7}}],[\"currentthread\",{\"1\":{\"202\":1}}],[\"curd\",{\"1\":{\"37\":1}}],[\"custom\",{\"1\":{\"59\":1}}],[\"cnblogs\",{\"1\":{\"406\":1}}],[\"cnt\",{\"1\":{\"353\":2}}],[\"cn|ru\",{\"1\":{\"93\":1}}],[\"cn\",{\"1\":{\"53\":2,\"57\":1,\"59\":2,\"76\":2,\"80\":1,\"93\":5,\"267\":1,\"280\":1,\"287\":1,\"289\":1,\"406\":1}}],[\"clh\",{\"1\":{\"226\":4}}],[\"clone\",{\"1\":{\"423\":2}}],[\"cloneable\",{\"1\":{\"181\":2,\"182\":2}}],[\"close\",{\"0\":{\"723\":1},\"1\":{\"181\":1,\"285\":4,\"708\":3,\"718\":1,\"723\":1}}],[\"closed\",{\"1\":{\"41\":4}}],[\"cleaner\",{\"1\":{\"239\":1}}],[\"clean\",{\"0\":{\"165\":1},\"1\":{\"155\":6,\"156\":1,\"161\":1,\"164\":1,\"165\":16,\"171\":2,\"239\":1}}],[\"clear\",{\"1\":{\"135\":1,\"178\":1,\"288\":2,\"345\":1,\"353\":1}}],[\"clienthello\",{\"0\":{\"637\":1}}],[\"clientsession\",{\"1\":{\"334\":1,\"335\":1}}],[\"client\",{\"1\":{\"285\":2,\"637\":1}}],[\"clike\",{\"1\":{\"102\":1}}],[\"cli\",{\"0\":{\"104\":1},\"1\":{\"47\":2,\"109\":1,\"731\":1}}],[\"classloader\",{\"1\":{\"233\":1,\"236\":3,\"244\":1,\"259\":1}}],[\"classdiagram\",{\"1\":{\"178\":1,\"186\":1}}],[\"classes\",{\"1\":{\"166\":2}}],[\"classifier>\",{\"1\":{\"142\":2}}],[\"classifier\",{\"1\":{\"142\":1}}],[\"class=\",{\"1\":{\"101\":1}}],[\"classname\",{\"1\":{\"40\":2,\"41\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2}}],[\"class\",{\"0\":{\"246\":1},\"1\":{\"15\":2,\"16\":1,\"40\":1,\"41\":7,\"118\":5,\"121\":2,\"124\":1,\"125\":3,\"142\":2,\"166\":1,\"178\":14,\"181\":1,\"182\":2,\"186\":9,\"187\":3,\"193\":1,\"218\":2,\"219\":1,\"226\":3,\"233\":1,\"236\":1,\"239\":7,\"244\":7,\"245\":1,\"246\":1,\"247\":3,\"256\":1,\"259\":1,\"280\":1,\"287\":1,\"288\":1,\"293\":1,\"294\":1,\"295\":1,\"311\":1,\"327\":1,\"344\":1,\"353\":1,\"354\":1,\"370\":1}}],[\"classpath\",{\"1\":{\"15\":1,\"121\":2,\"124\":1,\"125\":1,\"142\":5,\"236\":1}}],[\"ca\",{\"1\":{\"635\":1,\"639\":1}}],[\"careful=50\",{\"1\":{\"566\":1}}],[\"careful\",{\"1\":{\"566\":1}}],[\"cache会根据局部性原理提前加载附近的数据和指令\",{\"1\":{\"737\":1}}],[\"cache是一种介于cpu和主存之间的高速缓存存储器\",{\"1\":{\"737\":1}}],[\"cache\",{\"1\":{\"479\":1,\"507\":1,\"528\":1,\"622\":1,\"717\":1,\"737\":2,\"739\":1,\"741\":1,\"742\":1,\"743\":1}}],[\"cached\",{\"1\":{\"469\":2,\"519\":2}}],[\"cat\",{\"1\":{\"353\":1}}],[\"cats\",{\"1\":{\"353\":2}}],[\"cats=4\",{\"1\":{\"353\":1}}],[\"catch\",{\"1\":{\"41\":2}}],[\"caneatall\",{\"1\":{\"311\":1}}],[\"cancelling\",{\"1\":{\"278\":1}}],[\"cancellederror\",{\"1\":{\"273\":1,\"280\":3,\"305\":2}}],[\"cancelled\",{\"1\":{\"226\":2,\"280\":1,\"296\":1}}],[\"cancel\",{\"1\":{\"268\":1,\"273\":1,\"278\":1,\"280\":2,\"296\":2,\"305\":1}}],[\"can\",{\"1\":{\"268\":2,\"277\":1}}],[\"case\",{\"1\":{\"596\":1,\"597\":1}}],[\"cas\",{\"0\":{\"221\":1,\"222\":1,\"223\":1},\"1\":{\"221\":6,\"222\":1,\"223\":2,\"224\":2}}],[\"castillo\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"calls\",{\"1\":{\"273\":1}}],[\"callback\",{\"1\":{\"271\":1,\"280\":2}}],[\"call\",{\"1\":{\"267\":1,\"738\":1}}],[\"callable\",{\"1\":{\"200\":2}}],[\"calculatecapacity\",{\"1\":{\"181\":4}}],[\"cap\",{\"1\":{\"189\":5}}],[\"capacity\",{\"1\":{\"181\":3,\"187\":3,\"189\":14}}],[\"café\",{\"1\":{\"93\":1}}],[\"cafe\",{\"1\":{\"93\":1}}],[\"cj\",{\"1\":{\"40\":1,\"41\":5,\"120\":1}}],[\"cimanagement\",{\"1\":{\"146\":1}}],[\"ci\",{\"1\":{\"39\":3,\"115\":3}}],[\"chmod\",{\"1\":{\"571\":1,\"580\":1,\"745\":1}}],[\"chr\",{\"1\":{\"360\":2}}],[\"child\",{\"1\":{\"239\":2}}],[\"chinese\",{\"1\":{\"95\":1}}],[\"ching\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"char类型的查找效率高\",{\"1\":{\"618\":1}}],[\"char类型如果存的数据量小于最大长度\",{\"1\":{\"618\":1}}],[\"char字段的最大长度为255字符\",{\"1\":{\"618\":1}}],[\"charset=utf8\",{\"1\":{\"111\":1}}],[\"character\",{\"1\":{\"39\":3,\"115\":3,\"245\":2}}],[\"changelog\",{\"1\":{\"82\":4}}],[\"checkout\",{\"1\":{\"429\":1,\"430\":3}}],[\"checked\",{\"1\":{\"135\":1}}],[\"checking\",{\"1\":{\"41\":1}}],[\"checkstyle\",{\"1\":{\"150\":1}}],[\"checks\",{\"1\":{\"39\":2,\"115\":2}}],[\"creator\",{\"1\":{\"631\":1}}],[\"creates\",{\"1\":{\"271\":1}}],[\"created\",{\"1\":{\"41\":5,\"267\":1,\"395\":2}}],[\"create\",{\"1\":{\"39\":1,\"40\":2,\"41\":1,\"111\":1,\"115\":1,\"118\":6,\"121\":2,\"124\":1,\"125\":2,\"239\":2,\"265\":4,\"268\":2,\"271\":2,\"278\":1,\"280\":2,\"288\":2,\"296\":3,\"300\":1,\"302\":2,\"306\":3,\"334\":2,\"335\":1,\"388\":1,\"397\":1,\"400\":2}}],[\"craw\",{\"1\":{\"324\":1,\"325\":2,\"334\":2,\"335\":2}}],[\"crawford\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"craig\",{\"1\":{\"226\":1}}],[\"criteria\",{\"1\":{\"41\":1}}],[\"critical=90\",{\"1\":{\"566\":1}}],[\"critical\",{\"1\":{\"8\":1,\"357\":2,\"566\":1}}],[\"crud综合练习实践练习\",{\"1\":{\"37\":1}}],[\"crud综合练习\",{\"0\":{\"36\":1}}],[\"coherence\",{\"1\":{\"741\":1}}],[\"cookie是服务器发送到用户浏览器并保存在本地的一小块数据\",{\"1\":{\"675\":1}}],[\"cookie\",{\"0\":{\"675\":1},\"1\":{\"675\":1,\"677\":7,\"717\":1}}],[\"cookie和session的关系和区别是什么\",{\"0\":{\"674\":1}}],[\"cookie语句就不能获取到cookie了\",{\"1\":{\"659\":1}}],[\"cookbook\",{\"1\":{\"374\":1}}],[\"copy\",{\"1\":{\"345\":1}}],[\"copyof\",{\"1\":{\"181\":1}}],[\"cost\",{\"1\":{\"311\":3}}],[\"count性能比较\",{\"0\":{\"623\":1}}],[\"counts\",{\"1\":{\"353\":4}}],[\"countdowntask\",{\"1\":{\"327\":2}}],[\"countdownlatch\",{\"1\":{\"226\":1}}],[\"counters\",{\"1\":{\"353\":1}}],[\"counter\",{\"0\":{\"353\":1},\"1\":{\"237\":4,\"238\":1,\"353\":28}}],[\"countable\",{\"1\":{\"95\":2}}],[\"count\",{\"1\":{\"95\":2,\"193\":2,\"341\":1,\"345\":1,\"623\":3}}],[\"cover\",{\"1\":{\"76\":4}}],[\"coverpage\",{\"0\":{\"74\":1},\"1\":{\"60\":2,\"61\":2,\"62\":3,\"74\":1,\"75\":3,\"76\":3}}],[\"cors\",{\"1\":{\"681\":1}}],[\"coro\",{\"1\":{\"270\":2,\"271\":3,\"276\":2,\"278\":3,\"280\":1,\"306\":2}}],[\"coroutine\",{\"0\":{\"318\":1},\"1\":{\"266\":1,\"267\":1,\"269\":1,\"272\":1,\"275\":1,\"277\":1,\"278\":7,\"287\":1,\"288\":1,\"293\":3,\"300\":1,\"306\":1,\"320\":1}}],[\"corner\",{\"1\":{\"68\":1}}],[\"coreutils\",{\"1\":{\"454\":1}}],[\"core<\",{\"1\":{\"27\":1,\"30\":1}}],[\"core\",{\"1\":{\"24\":2,\"30\":2,\"118\":2,\"121\":1}}],[\"code\",{\"0\":{\"174\":1},\"1\":{\"41\":1,\"101\":4,\"126\":2}}],[\"collected\",{\"1\":{\"243\":1}}],[\"collections\",{\"1\":{\"344\":1,\"353\":1}}],[\"collection~e~\",{\"1\":{\"178\":1}}],[\"collection<\",{\"1\":{\"178\":2,\"179\":1}}],[\"collection<e>\",{\"1\":{\"178\":2,\"179\":1}}],[\"collection\",{\"0\":{\"178\":1},\"1\":{\"177\":2,\"178\":8,\"179\":1}}],[\"collegename\",{\"1\":{\"124\":5}}],[\"collegeconfiguration\",{\"1\":{\"121\":2}}],[\"college\",{\"1\":{\"119\":1,\"124\":4,\"125\":4,\"126\":1}}],[\"collate\",{\"1\":{\"39\":3,\"115\":3}}],[\"colon\",{\"1\":{\"97\":1}}],[\"color\",{\"1\":{\"61\":1,\"95\":1}}],[\"columns\",{\"1\":{\"41\":4,\"205\":3}}],[\"connec\",{\"1\":{\"648\":1}}],[\"connect\",{\"1\":{\"721\":1}}],[\"connectionimpl\",{\"1\":{\"41\":5}}],[\"connection\",{\"1\":{\"41\":15,\"282\":1,\"283\":1,\"285\":3,\"303\":2,\"621\":1}}],[\"connections\",{\"1\":{\"41\":4}}],[\"connector\",{\"1\":{\"40\":1,\"117\":1}}],[\"convert\",{\"1\":{\"353\":4,\"370\":1}}],[\"convention\",{\"1\":{\"136\":1}}],[\"concurrency\",{\"1\":{\"278\":1}}],[\"concurrently\",{\"1\":{\"268\":1,\"273\":1,\"296\":1}}],[\"concurrent\",{\"1\":{\"197\":1,\"224\":1,\"278\":2,\"325\":2}}],[\"concurrenthashmap\",{\"1\":{\"186\":3,\"193\":1}}],[\"concurrentmap\",{\"1\":{\"186\":3}}],[\"conditionobject\",{\"1\":{\"226\":1}}],[\"condition\",{\"0\":{\"289\":1},\"1\":{\"226\":5,\"289\":1,\"304\":1,\"589\":1}}],[\"consistency\",{\"1\":{\"627\":1}}],[\"consisted\",{\"1\":{\"135\":1}}],[\"consumption\",{\"1\":{\"507\":1}}],[\"consumer<\",{\"1\":{\"178\":1}}],[\"constants\",{\"1\":{\"244\":1}}],[\"constant\",{\"1\":{\"237\":4,\"244\":1,\"246\":1}}],[\"conf\",{\"1\":{\"169\":1}}],[\"configurablebeanfactory\",{\"1\":{\"121\":2}}],[\"configuration>\",{\"1\":{\"40\":1,\"137\":1,\"149\":1,\"156\":1}}],[\"configuration\",{\"1\":{\"40\":1,\"121\":4,\"136\":1,\"146\":1,\"156\":1}}],[\"config\",{\"1\":{\"40\":3,\"41\":2,\"121\":5,\"125\":1}}],[\"content\",{\"1\":{\"646\":1}}],[\"contextvars\",{\"1\":{\"277\":1,\"280\":1}}],[\"context=none\",{\"1\":{\"280\":1}}],[\"context=\",{\"1\":{\"124\":1}}],[\"context<\",{\"1\":{\"27\":1,\"30\":1,\"40\":1,\"117\":1}}],[\"context会依赖传递core\",{\"1\":{\"27\":1}}],[\"context\",{\"1\":{\"24\":2,\"30\":1,\"40\":1,\"117\":1,\"121\":4,\"124\":4,\"125\":2,\"277\":1}}],[\"containing\",{\"1\":{\"454\":1}}],[\"containers\",{\"1\":{\"406\":1}}],[\"container\",{\"0\":{\"387\":1,\"389\":1},\"1\":{\"385\":1,\"387\":1,\"392\":1,\"395\":1,\"400\":4,\"406\":2}}],[\"containskey\",{\"1\":{\"193\":1}}],[\"containsall\",{\"1\":{\"178\":1}}],[\"contains\",{\"1\":{\"178\":1}}],[\"control\",{\"1\":{\"406\":1,\"416\":1,\"417\":1,\"732\":2,\"735\":1}}],[\"controller\",{\"1\":{\"118\":4,\"125\":1,\"741\":1}}],[\"contributors\",{\"1\":{\"146\":1}}],[\"com是私有镜像仓库的地址\",{\"1\":{\"396\":1}}],[\"comm\",{\"1\":{\"513\":1,\"564\":1}}],[\"commit\",{\"1\":{\"424\":4,\"429\":1,\"622\":3}}],[\"committed\",{\"1\":{\"421\":1,\"629\":1}}],[\"command\",{\"1\":{\"395\":1,\"400\":3,\"506\":1,\"507\":1}}],[\"community\",{\"1\":{\"388\":1}}],[\"commons\",{\"1\":{\"24\":1,\"27\":3}}],[\"common\",{\"1\":{\"17\":1,\"24\":2,\"353\":4}}],[\"coming\",{\"0\":{\"131\":1,\"133\":1,\"175\":1}}],[\"complex\",{\"1\":{\"360\":1}}],[\"completion\",{\"1\":{\"271\":1}}],[\"complete\",{\"1\":{\"268\":1,\"277\":2,\"334\":2,\"335\":1}}],[\"completed\",{\"1\":{\"265\":1,\"276\":5,\"300\":1,\"325\":3}}],[\"completablefuture\",{\"1\":{\"200\":1}}],[\"compute\",{\"1\":{\"273\":7}}],[\"compose\",{\"0\":{\"398\":1,\"399\":1,\"400\":1,\"401\":1},\"1\":{\"399\":8,\"400\":6,\"402\":12,\"403\":10,\"404\":5,\"405\":12,\"408\":1}}],[\"compound\",{\"1\":{\"267\":1,\"287\":1}}],[\"component\",{\"1\":{\"124\":3}}],[\"component相关注解\",{\"1\":{\"121\":1}}],[\"componentscan\",{\"1\":{\"121\":3}}],[\"components\",{\"1\":{\"102\":2}}],[\"compareandset\",{\"1\":{\"221\":1}}],[\"compare\",{\"1\":{\"221\":1,\"370\":2}}],[\"compareto\",{\"1\":{\"187\":1}}],[\"comparable<\",{\"1\":{\"187\":1}}],[\"comparator\",{\"1\":{\"179\":1}}],[\"comparator<\",{\"1\":{\"179\":1}}],[\"compile\",{\"1\":{\"142\":1,\"152\":1,\"153\":2,\"155\":3,\"166\":2}}],[\"compiler\",{\"1\":{\"27\":4,\"30\":4,\"32\":4,\"35\":4,\"117\":4,\"137\":1,\"149\":1,\"152\":3,\"153\":2,\"155\":2}}],[\"compressed\",{\"1\":{\"90\":1}}],[\"com\",{\"1\":{\"40\":12,\"41\":8,\"61\":1,\"69\":1,\"71\":1,\"75\":1,\"82\":1,\"95\":1,\"117\":4,\"118\":19,\"121\":4,\"124\":1,\"125\":1,\"159\":2,\"388\":1,\"396\":1,\"399\":1,\"406\":2,\"426\":1,\"487\":1,\"667\":6}}],[\"c\",{\"1\":{\"9\":2,\"102\":1,\"158\":3,\"178\":3,\"179\":3,\"205\":6,\"233\":2,\"237\":4,\"239\":1,\"240\":1,\"241\":2,\"252\":2,\"259\":2,\"273\":5,\"327\":3,\"349\":1,\"352\":1,\"353\":30,\"439\":1,\"457\":1,\"513\":1,\"515\":1,\"533\":1,\"556\":1,\"564\":1}}],[\"cpu活动等的报告\",{\"1\":{\"748\":1}}],[\"cpu2去读b\",{\"1\":{\"743\":1}}],[\"cpu1去读a\",{\"1\":{\"743\":1}}],[\"cpu多级缓存\",{\"1\":{\"740\":1}}],[\"cpu会先获取异常向量表\",{\"1\":{\"738\":1}}],[\"cpu会自动切换到内核态\",{\"1\":{\"738\":1}}],[\"cpu可以快速查找映射关系\",{\"1\":{\"736\":1}}],[\"cpu支持多种不同类型的指令\",{\"1\":{\"735\":1}}],[\"cpu地址翻译是计算机系统中将虚拟地址转换为物理地址的过程\",{\"1\":{\"734\":1}}],[\"cpu地址翻译是怎样实现的\",{\"0\":{\"734\":1}}],[\"cpu核数\",{\"1\":{\"440\":1,\"534\":1}}],[\"cpu监控\",{\"0\":{\"434\":1}}],[\"cpu缓存一致性\",{\"1\":{\"741\":1}}],[\"cpu缓存的设计目的是为了减少cpu访问主内存所需的时间\",{\"1\":{\"739\":1}}],[\"cpu缓存\",{\"1\":{\"205\":2,\"739\":1}}],[\"cpu寄存器\",{\"1\":{\"205\":2}}],[\"cpu的多核并发缓存架构\",{\"1\":{\"205\":1}}],[\"cpu\",{\"0\":{\"319\":1,\"530\":1,\"740\":1},\"1\":{\"8\":1,\"196\":2,\"197\":4,\"198\":12,\"202\":4,\"205\":4,\"207\":3,\"208\":1,\"211\":2,\"223\":1,\"319\":2,\"320\":3,\"322\":3,\"333\":3,\"334\":2,\"406\":2,\"440\":1,\"479\":1,\"506\":1,\"515\":3,\"528\":1,\"534\":1,\"672\":3,\"720\":1,\"732\":5,\"748\":1}}],[\"cpus\",{\"1\":{\"8\":5}}],[\"关联性\",{\"1\":{\"736\":1}}],[\"关闭连接时\",{\"1\":{\"706\":1}}],[\"关闭事件循环\",{\"1\":{\"300\":1}}],[\"关键字来标注\",{\"1\":{\"334\":1}}],[\"关键字来定义的协程是一种被推荐的编写异步程序的方式\",{\"1\":{\"265\":1}}],[\"关键字await\",{\"1\":{\"334\":1}}],[\"关键字async\",{\"1\":{\"334\":1}}],[\"关键字为\",{\"1\":{\"233\":2,\"259\":2}}],[\"关键字就是用来保证线程同步的\",{\"1\":{\"218\":1}}],[\"关键字锁都是可重入的\",{\"1\":{\"216\":1}}],[\"关键补丁更新\",{\"1\":{\"8\":4}}],[\"关系的三个范式是什么\",{\"0\":{\"617\":1}}],[\"关系\",{\"0\":{\"141\":1},\"1\":{\"469\":1,\"519\":1}}],[\"关系包含了\",{\"1\":{\"19\":1}}],[\"关于拆分标准\",{\"1\":{\"189\":1}}],[\"关于部署后的访问地址\",{\"1\":{\"50\":1}}],[\"关于博客\",{\"0\":{\"2\":1}}],[\"关于我\",{\"0\":{\"1\":1}}],[\"关于\",{\"0\":{\"0\":1,\"306\":1}}],[\"开启时长为\",{\"1\":{\"708\":1}}],[\"开启主动死锁检测\",{\"1\":{\"625\":1}}],[\"开启事务\",{\"1\":{\"622\":1}}],[\"开源社区\",{\"1\":{\"419\":1}}],[\"开源的\",{\"1\":{\"388\":1}}],[\"开头命名的锁都是可重入锁\",{\"1\":{\"216\":1}}],[\"开头\",{\"1\":{\"57\":1}}],[\"开发出自己的版本系统\",{\"1\":{\"419\":1}}],[\"开发者可以使用\",{\"1\":{\"399\":1}}],[\"开发者可以通过这个地址更快的搜索需要构件的坐标\",{\"1\":{\"158\":1}}],[\"开发和预演环境的差异\",{\"1\":{\"378\":1}}],[\"开发人员每天都在对项目进行清理\",{\"1\":{\"161\":1}}],[\"开发人员仅需要关注项目所需的依赖关系\",{\"1\":{\"142\":1}}],[\"开发人员仅需要在相应目录结构下放置相应的文件即可\",{\"1\":{\"136\":1}}],[\"开发的时候每个平台都可以独立编译\",{\"1\":{\"22\":1}}],[\"开发工具包\",{\"1\":{\"8\":1}}],[\"开发工具\",{\"1\":{\"7\":1}}],[\"开始计时的\",{\"1\":{\"722\":1}}],[\"开始运行\",{\"1\":{\"306\":1}}],[\"开始运行并等待完成\",{\"1\":{\"306\":1}}],[\"开始提供了\",{\"1\":{\"224\":1}}],[\"开始之前需要安装\",{\"1\":{\"46\":1}}],[\"开始\",{\"1\":{\"8\":1}}],[\"75\",{\"1\":{\"187\":2}}],[\"75f\",{\"1\":{\"187\":1}}],[\"70eecdc2\",{\"1\":{\"41\":1}}],[\"7807ac2c\",{\"1\":{\"41\":1}}],[\"7u71\",{\"1\":{\"8\":1}}],[\"71\",{\"1\":{\"8\":1}}],[\"7\",{\"0\":{\"565\":1,\"566\":1,\"567\":1,\"588\":1,\"589\":1,\"590\":1},\"1\":{\"8\":1,\"14\":1,\"39\":1,\"41\":1,\"115\":1,\"183\":1,\"187\":4,\"189\":1,\"190\":2,\"191\":1,\"237\":1,\"239\":1,\"246\":1,\"249\":2,\"306\":1,\"310\":1,\"351\":2,\"393\":1,\"395\":3}}],[\"年提出的一种计算机设计理念\",{\"1\":{\"732\":1}}],[\"年龄应为只能为int\",{\"1\":{\"659\":1}}],[\"年正式推出\",{\"1\":{\"232\":1,\"258\":1}}],[\"年\",{\"1\":{\"8\":1,\"232\":2,\"258\":2}}],[\"从缓存中随机选择一个条目进行替换\",{\"1\":{\"739\":1}}],[\"从内存中获取指令\",{\"1\":{\"735\":1}}],[\"从内核2\",{\"1\":{\"506\":1}}],[\"从虚拟地址中提取vpn和offset\",{\"1\":{\"734\":1}}],[\"从下往上找\",{\"1\":{\"667\":1}}],[\"从请求的大小看\",{\"1\":{\"653\":1}}],[\"从严格意义来讲不是服务器跳转\",{\"1\":{\"642\":1}}],[\"从暂存区域移除\",{\"1\":{\"424\":1}}],[\"从一个服务器克隆一个现有的\",{\"1\":{\"423\":1}}],[\"从零基础到实战应用的全面指南\",{\"1\":{\"408\":1}}],[\"从零到上手实战可以看docker\",{\"1\":{\"407\":1}}],[\"从入门到实践\",{\"1\":{\"407\":1}}],[\"从入门到上手干事这篇文章\",{\"1\":{\"407\":1}}],[\"从指定的镜像中启动容器\",{\"1\":{\"400\":1}}],[\"从堆中弹出最小的元素\",{\"1\":{\"351\":1}}],[\"从左侧出队\",{\"1\":{\"345\":1}}],[\"从右侧出队\",{\"1\":{\"345\":1}}],[\"从第二个元素开始截取列表\",{\"1\":{\"343\":1}}],[\"从其他\",{\"1\":{\"300\":1}}],[\"从上图就看出端倪\",{\"1\":{\"253\":1}}],[\"从使用层面来说\",{\"1\":{\"227\":1}}],[\"从主内存读取一个数据到各自的高速缓存\",{\"1\":{\"207\":1}}],[\"从主内存读取数据\",{\"1\":{\"206\":1}}],[\"从工作内存读取数据来计算\",{\"1\":{\"206\":1}}],[\"从宏观上给用户感觉就是在多线程同时执行的错觉\",{\"1\":{\"198\":1}}],[\"从而导致性能下降\",{\"1\":{\"743\":1}}],[\"从而导致数据错乱\",{\"1\":{\"719\":1}}],[\"从而触发不必要的缓存同步操作\",{\"1\":{\"743\":1}}],[\"从而降低伪共享问题的影响\",{\"1\":{\"743\":1}}],[\"从而降低访问主内存的次数和延迟\",{\"1\":{\"740\":1}}],[\"从而降低程序的执行效率\",{\"1\":{\"193\":1}}],[\"从而减少磁头的寻道和旋转延迟\",{\"1\":{\"737\":1}}],[\"从而减少了访问延迟\",{\"1\":{\"737\":1}}],[\"从而减少了内存访问次数和地址翻译的延迟\",{\"1\":{\"734\":1}}],[\"从而加速地址翻译过程\",{\"1\":{\"737\":1}}],[\"从而避免了对较慢的主存的访问\",{\"1\":{\"737\":1}}],[\"从而避免其他事务插入一条新记录\",{\"1\":{\"632\":1}}],[\"从而提高处理速度\",{\"1\":{\"740\":1}}],[\"从而提高处理器的吞吐量\",{\"1\":{\"735\":1}}],[\"从而提高程序的执行速度\",{\"1\":{\"737\":1}}],[\"从而简化编程和内存管理\",{\"1\":{\"734\":1}}],[\"从而释放系统资源\",{\"1\":{\"717\":1}}],[\"从而决定是否分配tcb资源\",{\"1\":{\"717\":1}}],[\"从而使合法用户无法得到服务的响应\",{\"1\":{\"716\":1}}],[\"从而会触发超时重传\",{\"1\":{\"701\":1}}],[\"从而达到流量控制\",{\"1\":{\"687\":1}}],[\"从而达到并发发送请求的效果\",{\"1\":{\"647\":1}}],[\"从而能够支持更大的地址空间\",{\"1\":{\"678\":1}}],[\"从而影响连接到该路由器的所有用户\",{\"1\":{\"670\":1}}],[\"从而盗取用户资料\",{\"1\":{\"656\":1}}],[\"从而解决了队头阻塞的问题\",{\"1\":{\"652\":1}}],[\"从而解放了开发人员以便他们专注在真正重要的事情上\",{\"1\":{\"382\":1}}],[\"从而实现了更为灵活的计算机系统\",{\"1\":{\"732\":1}}],[\"从而实现连接迁移功能\",{\"1\":{\"652\":1}}],[\"从而实现高效的运行\",{\"1\":{\"235\":1}}],[\"从而不会出现混乱的问题\",{\"1\":{\"647\":1}}],[\"从而不会再出现\",{\"1\":{\"384\":1}}],[\"从而节省传输的开销\",{\"1\":{\"642\":1}}],[\"从而跳过\",{\"1\":{\"424\":1}}],[\"从而找出导致怪异问题出现的原因\",{\"1\":{\"414\":1}}],[\"从而确保数据的持久性\",{\"1\":{\"397\":1}}],[\"从而有助于减少团队间在相同基础设施上运行不同软件时的冲突\",{\"1\":{\"378\":1}}],[\"从而形成一个环形链表\",{\"1\":{\"190\":1}}],[\"从任意一个结点\",{\"1\":{\"187\":1}}],[\"从集合移除给定集合的所有元素\",{\"1\":{\"178\":1}}],[\"从集合移除给定的元素\",{\"1\":{\"178\":1}}],[\"从大量项目和构建工具中学习和反思\",{\"1\":{\"161\":1}}],[\"从该父\",{\"1\":{\"147\":1}}],[\"从中可以正确链接项目\",{\"1\":{\"140\":1}}],[\"从每层目录下获取\",{\"1\":{\"59\":1}}],[\"从哪里去寻找要运行的\",{\"1\":{\"15\":1}}],[\"从\",{\"1\":{\"8\":1,\"224\":1,\"233\":1,\"254\":1,\"259\":1,\"274\":1,\"280\":1}}],[\"为使旧的数据包在网络因过期而消失\",{\"1\":{\"719\":1}}],[\"为1表示是带有push标志的数据\",{\"1\":{\"687\":1}}],[\"为1时表示发送方已经没有数据发送了\",{\"1\":{\"687\":1}}],[\"为1时表示确认号有效\",{\"1\":{\"687\":1}}],[\"为1时表示紧急指针有效\",{\"1\":{\"687\":1}}],[\"为0表示报文中不含确认信息\",{\"1\":{\"687\":1}}],[\"为0则忽略紧急指针\",{\"1\":{\"687\":1}}],[\"为将来定义新的用途保留\",{\"1\":{\"687\":1}}],[\"为源端的运输层送来的分组\",{\"1\":{\"683\":1}}],[\"为应用程序提供服务\",{\"1\":{\"683\":1}}],[\"为单位\",{\"1\":{\"451\":1,\"551\":1}}],[\"为一个布尔值\",{\"1\":{\"363\":1}}],[\"为某个接口寻找服务实现的机制\",{\"1\":{\"252\":1}}],[\"为此\",{\"1\":{\"233\":1,\"259\":1}}],[\"为何支持多线程\",{\"1\":{\"198\":1}}],[\"为什么tcp层还需要mss呢\",{\"0\":{\"729\":1}}],[\"为什么还要有rpc\",{\"0\":{\"655\":1}}],[\"为什么还要使用多线程机制呢\",{\"1\":{\"322\":1}}],[\"为什么要版本控制\",{\"0\":{\"414\":1}}],[\"为什么要用\",{\"0\":{\"384\":1}}],[\"为什么多线程不安全\",{\"0\":{\"191\":1}}],[\"为什么执行5次\",{\"1\":{\"189\":1}}],[\"为什么\",{\"0\":{\"188\":1,\"668\":1},\"1\":{\"204\":2}}],[\"为什么不能实现\",{\"1\":{\"182\":1}}],[\"为什么不下载最新的版本\",{\"1\":{\"8\":1}}],[\"为\",{\"1\":{\"181\":4,\"189\":1,\"190\":1,\"211\":1,\"249\":1,\"270\":1,\"273\":3,\"275\":1,\"279\":2,\"336\":2,\"395\":1,\"406\":1}}],[\"为新容量\",{\"1\":{\"181\":1}}],[\"为旧容量\",{\"1\":{\"181\":1}}],[\"为每个元素都执行给定的操作\",{\"1\":{\"178\":1}}],[\"为测试创建资源文件\",{\"1\":{\"166\":1}}],[\"为打包阶段最好准备\",{\"1\":{\"166\":1}}],[\"为构建管理带来的一个强大补充是项目继承的概念\",{\"1\":{\"146\":1}}],[\"为了在计算机中存储和处理这些字符\",{\"1\":{\"751\":1}}],[\"为了避免伪共享问题\",{\"1\":{\"743\":1}}],[\"为了保持缓存一致性\",{\"1\":{\"741\":1}}],[\"为了保证不丢包\",{\"1\":{\"709\":1}}],[\"为了保证顺序性\",{\"1\":{\"709\":1}}],[\"为了保证引用计数的一致性\",{\"1\":{\"322\":1}}],[\"为了提高性能\",{\"1\":{\"735\":1,\"741\":1}}],[\"为了提高代码的复用性\",{\"1\":{\"151\":1}}],[\"为了加速地址翻译\",{\"1\":{\"734\":1}}],[\"为了确保服务器收到了fin报文\",{\"1\":{\"722\":1}}],[\"为了实现可靠数据传输\",{\"1\":{\"704\":1}}],[\"为了实现在模块装配的时候不用在程序里动态指明\",{\"1\":{\"252\":1}}],[\"为了减少磁盘i\",{\"1\":{\"622\":1}}],[\"为了高效\",{\"1\":{\"420\":1}}],[\"为了解决ascii不能表示多种语言字符的问题\",{\"1\":{\"751\":1}}],[\"为了解决多线程之间数据完整性和状态同步问题\",{\"1\":{\"322\":1}}],[\"为了解决这个问题\",{\"1\":{\"190\":1,\"415\":1,\"734\":1}}],[\"为了解决这一问题\",{\"1\":{\"168\":1}}],[\"为了与硬件\",{\"1\":{\"241\":1}}],[\"为了简单起见\",{\"1\":{\"233\":1,\"259\":1}}],[\"为了能让\",{\"1\":{\"188\":1}}],[\"为了完成某个具体的构建任务\",{\"1\":{\"154\":1}}],[\"为了更好的\",{\"1\":{\"54\":1}}],[\"为了更像博客\",{\"1\":{\"3\":1}}],[\"为了防止出现找不到记录在哪里的情况\",{\"1\":{\"2\":1}}],[\"盈利目的\",{\"1\":{\"8\":1}}],[\"级以上版本修改了开源协议\",{\"1\":{\"8\":1}}],[\"在top界面中\",{\"1\":{\"748\":1}}],[\"在tcp通信连接的过程中\",{\"1\":{\"701\":1}}],[\"在许多系统上\",{\"1\":{\"746\":1}}],[\"在mesi协议的基础上增加了一个owned\",{\"1\":{\"741\":1}}],[\"在map中\",{\"1\":{\"186\":1}}],[\"在maven中每个项目都相当于是一个对象\",{\"1\":{\"19\":1}}],[\"在内核态下\",{\"1\":{\"738\":2}}],[\"在全相联tlb中\",{\"1\":{\"736\":1}}],[\"在处理器中\",{\"1\":{\"735\":1,\"743\":1}}],[\"在处理超时的许多情况中\",{\"1\":{\"687\":1}}],[\"在简单的单级页表系统中\",{\"1\":{\"734\":1}}],[\"在分页系统中\",{\"1\":{\"734\":2}}],[\"在冯\",{\"1\":{\"732\":1}}],[\"在通信之前需要三次握手建立连接\",{\"1\":{\"724\":1}}],[\"在启用该配置\",{\"1\":{\"721\":1}}],[\"在启动服务时运行特定的命令或脚本\",{\"1\":{\"400\":1}}],[\"在收到对方的ack报文后\",{\"1\":{\"717\":1}}],[\"在每次收到客户端发来的报文都会重置计时器\",{\"1\":{\"712\":1}}],[\"在每个\",{\"1\":{\"249\":1}}],[\"在建立连接的时候\",{\"1\":{\"709\":1}}],[\"在建立连接时由计算机生成的随机数作为其初始值\",{\"1\":{\"687\":1}}],[\"在fin在被主动关闭方接收之前\",{\"1\":{\"719\":1}}],[\"在fin\",{\"0\":{\"707\":1},\"1\":{\"707\":1}}],[\"在超时重传之前如果收到三个相同的冗余ack\",{\"1\":{\"694\":1}}],[\"在回复ack时\",{\"1\":{\"693\":1}}],[\"在连接建立或者终止时\",{\"1\":{\"687\":1}}],[\"在ipv6\",{\"1\":{\"678\":1}}],[\"在ip通信中如果某个ip包因为某种原因未能达到目标地址\",{\"1\":{\"673\":1}}],[\"在规定的时候间内\",{\"1\":{\"673\":1}}],[\"在url解析过程中得到真实的ip地址之后\",{\"1\":{\"672\":1}}],[\"在ssl剥离攻击中\",{\"1\":{\"664\":1}}],[\"在中间人攻击和拒绝式攻击中\",{\"1\":{\"664\":1}}],[\"在body这块\",{\"1\":{\"655\":1}}],[\"在请求量大的时候\",{\"1\":{\"655\":1}}],[\"在传输数据前虽然需要\",{\"1\":{\"651\":1}}],[\"在传输过程中很容易被中间网络设备篡改\",{\"1\":{\"648\":1}}],[\"在浏览器明确地请求之前\",{\"1\":{\"647\":1}}],[\"在http1\",{\"1\":{\"645\":1}}],[\"在服务器端的网页程序出错\",{\"1\":{\"642\":1}}],[\"在经过一段时间后\",{\"1\":{\"642\":1}}],[\"在事务a中查询\",{\"1\":{\"628\":1}}],[\"在事务提交时才会统一将该事务运行过程中的所有\",{\"1\":{\"622\":1}}],[\"在一个专用hash表中保存这种半连接信息\",{\"1\":{\"717\":1}}],[\"在一行行扫描的过程中\",{\"1\":{\"625\":1}}],[\"在一条更新语句执行完成后\",{\"1\":{\"622\":1}}],[\"在一台机器上运行的多个\",{\"1\":{\"383\":1}}],[\"在一台机器上运行\",{\"1\":{\"380\":1}}],[\"在代码里调用\",{\"1\":{\"621\":1}}],[\"在第二次连接的时候\",{\"1\":{\"651\":1}}],[\"在第二范式的基础上更进一层\",{\"1\":{\"617\":1}}],[\"在第一范式的基础上更进一层\",{\"1\":{\"617\":1}}],[\"在第一次\",{\"1\":{\"189\":1}}],[\"在第一次调用\",{\"1\":{\"181\":1}}],[\"在赋值定义之前\",{\"1\":{\"582\":1}}],[\"在介绍实例之前\",{\"1\":{\"506\":1}}],[\"在你创建仓库的时候\",{\"1\":{\"430\":1}}],[\"在提交了若干更新\",{\"1\":{\"428\":1}}],[\"在现代计算机系统中\",{\"1\":{\"741\":1}}],[\"在现有目录中初始化仓库\",{\"1\":{\"423\":1}}],[\"在现实的生活中同样存在着很多坐标\",{\"1\":{\"139\":1}}],[\"在工作目录中修改文件\",{\"1\":{\"421\":1}}],[\"在工作中使用\",{\"1\":{\"354\":1}}],[\"在保存和对待各种信息的时候与其它版本控制系统有很大差异\",{\"1\":{\"420\":1}}],[\"在当前目录下寻找\",{\"1\":{\"402\":1,\"403\":1}}],[\"在当前目录寻找\",{\"1\":{\"16\":1}}],[\"在容器中执行命令\",{\"1\":{\"405\":1}}],[\"在容器中管理数据主要有两种方式\",{\"1\":{\"397\":1}}],[\"在容器退出时\",{\"1\":{\"400\":1}}],[\"在用户态下\",{\"1\":{\"738\":1}}],[\"在用\",{\"1\":{\"397\":1}}],[\"在国内访问\",{\"1\":{\"388\":1}}],[\"在构建镜像的时候\",{\"1\":{\"386\":1}}],[\"在构建过程中执行更多更丰富的任务\",{\"1\":{\"156\":1}}],[\"在最终容器运行的时候\",{\"1\":{\"386\":1}}],[\"在该系统上再运行所需应用进程\",{\"1\":{\"380\":1}}],[\"在其他分支上进行开发\",{\"1\":{\"430\":1}}],[\"在其上运行一个完整操作系统\",{\"1\":{\"380\":1}}],[\"在其末尾添加\",{\"1\":{\"14\":2}}],[\"在单线程内实现并发\",{\"1\":{\"333\":1}}],[\"在有序列表中搜索\",{\"0\":{\"312\":1}}],[\"在取消请求发生的运行代码中如何处理\",{\"1\":{\"305\":1}}],[\"在取余\",{\"1\":{\"188\":1}}],[\"在多核处理器中\",{\"1\":{\"740\":1}}],[\"在多级页表系统中\",{\"1\":{\"734\":1}}],[\"在多个事务对这条记录进行读写操作时\",{\"1\":{\"629\":1}}],[\"在多个并发任务间分配工作量\",{\"1\":{\"301\":1}}],[\"在多线程时\",{\"1\":{\"322\":1}}],[\"在多线程的环境下\",{\"1\":{\"218\":1}}],[\"在多线程下扩容可能会造成死循环和数据丢失问题\",{\"1\":{\"191\":1}}],[\"在多线程环境下扩容操作可能存在死循环问题\",{\"1\":{\"190\":1}}],[\"在任何环境中都能够始终如一地运行\",{\"1\":{\"378\":1}}],[\"在任何协程中直接调用\",{\"1\":{\"277\":1}}],[\"在任何一个确定的时刻\",{\"1\":{\"238\":1}}],[\"在于如果包含它的协程被取消\",{\"1\":{\"274\":1}}],[\"在从\",{\"1\":{\"273\":1}}],[\"在将一个异常传播给调用者之后\",{\"1\":{\"273\":1}}],[\"在此状态下\",{\"1\":{\"742\":1}}],[\"在此之前\",{\"1\":{\"370\":1}}],[\"在此之前也在其他地方通过其他方式记录过一些\",{\"1\":{\"2\":1}}],[\"在此情况下\",{\"1\":{\"273\":1}}],[\"在应用层级的代码中创建\",{\"1\":{\"269\":1}}],[\"在本文档中\",{\"1\":{\"267\":1}}],[\"在本地仓库的\",{\"1\":{\"171\":1}}],[\"在本地运行服务\",{\"1\":{\"106\":1}}],[\"在不登出a的情况下\",{\"1\":{\"661\":1}}],[\"在不同事务隔离级别下会发生什么现象\",{\"0\":{\"630\":1}}],[\"在不同的\",{\"1\":{\"300\":1}}],[\"在不同的线程中异步地运行函数\",{\"1\":{\"277\":1}}],[\"在不同的虚拟机实现中\",{\"1\":{\"250\":1}}],[\"在不影响单线程程序执行结果的前提下\",{\"1\":{\"210\":1}}],[\"在运行\",{\"1\":{\"250\":1}}],[\"在运行时可以通过代码生成常量并将其放入运行时常量池中\",{\"1\":{\"247\":1}}],[\"在运行时\",{\"1\":{\"233\":1,\"259\":1}}],[\"在实际使用分布式版本控制系统的时候\",{\"1\":{\"417\":1}}],[\"在实际打包之前\",{\"1\":{\"166\":1}}],[\"在实现时\",{\"1\":{\"243\":1}}],[\"在虚拟机启动时创建\",{\"1\":{\"243\":1}}],[\"在虚拟机栈可以动态扩展的前提下\",{\"1\":{\"239\":1}}],[\"在为数组分配内存前\",{\"1\":{\"239\":1}}],[\"在程序运行期间用于存储数据的区域\",{\"1\":{\"237\":1}}],[\"在基本的\",{\"1\":{\"233\":1,\"259\":1}}],[\"在读写锁中用到\",{\"1\":{\"230\":1}}],[\"在原本的\",{\"1\":{\"223\":1}}],[\"在线程中运行\",{\"0\":{\"277\":1}}],[\"在线程\",{\"1\":{\"223\":1}}],[\"在进入\",{\"1\":{\"219\":1}}],[\"在操作系统中\",{\"1\":{\"196\":1,\"197\":1}}],[\"在插入元素的时候\",{\"1\":{\"191\":1}}],[\"在新旧\",{\"1\":{\"189\":1}}],[\"在默认负载因子下约为8\",{\"1\":{\"187\":1}}],[\"在头尾插入和删除元素的时间复杂度不受元素位置的影响\",{\"1\":{\"183\":1}}],[\"在执行\",{\"1\":{\"183\":1}}],[\"在执行集成测试完成后进行必要的动作比如说\",{\"1\":{\"166\":1}}],[\"在执行集成测试前进行必要的动作比如说\",{\"1\":{\"166\":1}}],[\"在向\",{\"1\":{\"181\":1}}],[\"在奇数的情况下会丢掉小数\",{\"1\":{\"181\":1}}],[\"在函数\",{\"1\":{\"181\":1}}],[\"在添加大量元素前\",{\"1\":{\"181\":1}}],[\"在使用字面量创建字符串对象时\",{\"1\":{\"249\":1}}],[\"在使用带有\",{\"1\":{\"189\":1}}],[\"在使用迭代器遍历集合时\",{\"1\":{\"178\":1}}],[\"在使用该项目时\",{\"1\":{\"142\":1}}],[\"在命令行中使用\",{\"1\":{\"171\":1}}],[\"在上述\",{\"1\":{\"165\":1}}],[\"在某个统一的位置存储所有项目的构件\",{\"1\":{\"157\":1}}],[\"在网站生成过程中执行\",{\"1\":{\"150\":1}}],[\"在网站右上角添加一个\",{\"1\":{\"68\":1}}],[\"在项目构建过程中执行\",{\"1\":{\"150\":1}}],[\"在项目对象模型中显式地执行了项目继承\",{\"1\":{\"146\":1}}],[\"在遇到这种问题的时候\",{\"1\":{\"144\":1}}],[\"在编译\",{\"1\":{\"142\":1}}],[\"在找不到指定页面时加载\",{\"1\":{\"88\":1}}],[\"在自定义边栏中添加目录\",{\"1\":{\"83\":1}}],[\"在初始化的基础上添加一个\",{\"1\":{\"78\":1}}],[\"在路由变化的时候自动跳转至页面顶部\",{\"1\":{\"72\":1}}],[\"在侧边栏中显示的\",{\"1\":{\"66\":1}}],[\"在页面的第一个标题上使用\",{\"1\":{\"55\":1}}],[\"在众多具体环境中\",{\"1\":{\"40\":1}}],[\"在创建聚合工程的过程中\",{\"1\":{\"22\":1}}],[\"在父项目中放在dependencymanagement中的内容时不被子项目继承\",{\"1\":{\"21\":1}}],[\"在pom\",{\"1\":{\"20\":1}}],[\"在这个期间客户端收到重发的fin报文就会重新发送ack并且重设计时器\",{\"1\":{\"722\":1}}],[\"在这些位置的读写会跳过容器存储层\",{\"1\":{\"387\":1}}],[\"在这种情况下\",{\"1\":{\"20\":1,\"93\":1}}],[\"在这一行的最后有java\",{\"1\":{\"8\":1}}],[\"在系统环境变量下新建一个变量\",{\"1\":{\"12\":1,\"16\":1}}],[\"在发布\",{\"1\":{\"8\":1}}],[\"在\",{\"1\":{\"8\":1,\"9\":1,\"13\":1,\"93\":1,\"140\":1,\"150\":2,\"161\":1,\"170\":2,\"171\":5,\"178\":1,\"179\":1,\"187\":1,\"189\":1,\"211\":2,\"219\":1,\"220\":1,\"224\":1,\"226\":1,\"233\":2,\"235\":1,\"237\":1,\"239\":1,\"244\":1,\"246\":1,\"249\":3,\"254\":1,\"259\":2,\"269\":1,\"274\":1,\"280\":1,\"369\":1,\"370\":3,\"388\":1,\"625\":1,\"631\":1,\"724\":1,\"728\":1}}],[\"首要原因是为了防止旧的重复连接初始化造成混乱\",{\"1\":{\"703\":1}}],[\"首部只有\",{\"1\":{\"724\":1}}],[\"首部在没有使用\",{\"1\":{\"724\":1}}],[\"首部\",{\"1\":{\"687\":1}}],[\"首部长度较长\",{\"1\":{\"724\":1}}],[\"首部长度也叫数据偏移\",{\"1\":{\"687\":1}}],[\"首部长度\",{\"1\":{\"687\":1}}],[\"首选的通讯协议是udp\",{\"1\":{\"668\":1}}],[\"首选标准版\",{\"1\":{\"8\":1}}],[\"首先在tlb中查找相应的虚拟地址映射\",{\"1\":{\"736\":1}}],[\"首先在tlb中查找\",{\"1\":{\"734\":1}}],[\"首先解析\",{\"1\":{\"672\":1}}],[\"首先通过浏览器或者操作系统中的\",{\"1\":{\"639\":1}}],[\"首先通过遍历链表\",{\"1\":{\"187\":1}}],[\"首先要记录相应的\",{\"1\":{\"622\":1}}],[\"首先要知道的是\",{\"1\":{\"189\":1}}],[\"首先客户端和mysql通过三次握手建立连接\",{\"1\":{\"621\":1}}],[\"首先\",{\"1\":{\"369\":1,\"406\":1,\"637\":1}}],[\"首先是服务定义者\",{\"1\":{\"254\":1}}],[\"首先需要知道的是\",{\"1\":{\"190\":1}}],[\"首先将项目上传到\",{\"1\":{\"50\":1}}],[\"首先打开\",{\"1\":{\"8\":1}}],[\"l3\",{\"1\":{\"740\":1}}],[\"l3多级缓存的基本作用\",{\"0\":{\"740\":1}}],[\"l3缓存的主要作用是在l1和l2缓存未命中时\",{\"1\":{\"740\":1}}],[\"l3缓存的容量比l2缓存更大\",{\"1\":{\"739\":1}}],[\"l3缓存通常是所有核心共享的\",{\"1\":{\"740\":1}}],[\"l3缓存通常在多核处理器中共享\",{\"1\":{\"739\":1}}],[\"l3缓存位于l2缓存之外\",{\"1\":{\"740\":1}}],[\"l3缓存\",{\"1\":{\"739\":1,\"740\":1,\"741\":1}}],[\"l2和l3缓存的基本作用\",{\"1\":{\"740\":1}}],[\"l2\",{\"0\":{\"740\":1},\"1\":{\"740\":1,\"741\":1}}],[\"l2缓存的主要作用是在l1缓存未命中时提供较大的数据和指令缓存空间\",{\"1\":{\"740\":1}}],[\"l2缓存的容量通常比l1缓存大\",{\"1\":{\"739\":1}}],[\"l2缓存位于l1缓存之外\",{\"1\":{\"740\":1}}],[\"l2缓存通常存储更多的数据和指令\",{\"1\":{\"739\":1}}],[\"l2缓存\",{\"1\":{\"739\":1,\"740\":1}}],[\"lfu\",{\"1\":{\"739\":1}}],[\"lfence\",{\"1\":{\"211\":2}}],[\"l1\",{\"0\":{\"740\":1},\"1\":{\"740\":1}}],[\"l1指令缓存\",{\"1\":{\"739\":1}}],[\"l1数据缓存\",{\"1\":{\"739\":1,\"740\":1}}],[\"l1缓存的主要作用是减少cpu访问数据和指令的延迟\",{\"1\":{\"740\":1}}],[\"l1缓存的容量相对较小\",{\"1\":{\"739\":1}}],[\"l1缓存是距离cpu最近的缓存层级\",{\"1\":{\"740\":1}}],[\"l1缓存通常被分为两部分\",{\"1\":{\"739\":1,\"740\":1}}],[\"l1缓存\",{\"1\":{\"739\":1,\"740\":1}}],[\"lx\",{\"1\":{\"486\":1,\"544\":1}}],[\"lxc\",{\"1\":{\"406\":4,\"408\":1}}],[\"ls`\",{\"1\":{\"575\":1}}],[\"lsof\",{\"1\":{\"515\":2,\"747\":1}}],[\"lstart\",{\"1\":{\"513\":2,\"564\":2}}],[\"ls\",{\"1\":{\"392\":2,\"393\":1,\"397\":1,\"575\":1,\"745\":1}}],[\"ll\",{\"1\":{\"352\":5}}],[\"lru\",{\"1\":{\"736\":1,\"739\":1}}],[\"lr\",{\"1\":{\"237\":3,\"252\":1,\"253\":1}}],[\"level\",{\"1\":{\"406\":1}}],[\"levelname\",{\"1\":{\"357\":1}}],[\"least\",{\"1\":{\"353\":1}}],[\"leak\",{\"1\":{\"239\":1}}],[\"le\",{\"1\":{\"312\":1,\"370\":1,\"603\":1}}],[\"less\",{\"1\":{\"312\":2}}],[\"len\",{\"1\":{\"312\":3,\"324\":1,\"334\":1,\"335\":1,\"342\":1,\"352\":1,\"354\":7}}],[\"lenght\",{\"1\":{\"188\":1}}],[\"length标识了\",{\"1\":{\"652\":1}}],[\"length\",{\"1\":{\"181\":7,\"187\":3,\"188\":2,\"189\":1}}],[\"leetcode\",{\"1\":{\"311\":1}}],[\"let\",{\"1\":{\"267\":1}}],[\"leftmost\",{\"1\":{\"312\":3}}],[\"left\",{\"1\":{\"187\":1,\"310\":6,\"311\":1,\"312\":3,\"619\":1}}],[\"lt\",{\"1\":{\"178\":3,\"186\":6,\"312\":1,\"370\":1,\"486\":1,\"544\":1,\"594\":1}}],[\"lts\",{\"1\":{\"8\":3,\"515\":1}}],[\"l\",{\"1\":{\"105\":2,\"273\":2,\"343\":3,\"369\":1,\"452\":1,\"486\":1,\"487\":1,\"506\":2,\"513\":1,\"515\":1,\"544\":1,\"552\":1,\"564\":1}}],[\"latest\",{\"1\":{\"388\":1}}],[\"later\",{\"1\":{\"287\":2,\"336\":2}}],[\"lastwaiter\",{\"1\":{\"226\":1}}],[\"last\",{\"1\":{\"226\":1,\"347\":1,\"645\":1,\"708\":2}}],[\"lastindexof\",{\"1\":{\"179\":1}}],[\"landin\",{\"1\":{\"226\":1}}],[\"lang\",{\"1\":{\"101\":2,\"147\":1,\"201\":1,\"236\":1,\"239\":1,\"244\":1}}],[\"language\",{\"0\":{\"755\":1},\"1\":{\"95\":1,\"400\":1,\"624\":2}}],[\"lambda\",{\"1\":{\"192\":1}}],[\"larger\",{\"1\":{\"181\":1}}],[\"lau\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"lu\",{\"1\":{\"486\":1,\"544\":1}}],[\"lucy\",{\"1\":{\"61\":1}}],[\"lui\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"lifoqueue\",{\"1\":{\"295\":1,\"301\":1}}],[\"literal\",{\"1\":{\"246\":1}}],[\"linger\",{\"1\":{\"721\":1}}],[\"linus\",{\"1\":{\"419\":1}}],[\"linux如何查看实时的滚动日志\",{\"0\":{\"749\":1}}],[\"linux下如何排查cpu以及内存占用过多\",{\"0\":{\"748\":1}}],[\"linux下如何查看cpu荷载\",{\"0\":{\"747\":1}}],[\"linux下的io统计工具如iostat\",{\"1\":{\"461\":1,\"560\":1}}],[\"linux操作系统中的页大小可能因系统和硬件架构而异\",{\"1\":{\"746\":1}}],[\"linux页大小是多少\",{\"0\":{\"746\":1}}],[\"linux采用动态调节算法来确定等待的时间\",{\"1\":{\"709\":1}}],[\"linux系统监控命令汇总\",{\"0\":{\"514\":1}}],[\"linux进程监控\",{\"0\":{\"500\":1}}],[\"linux之netstat命令\",{\"1\":{\"499\":1}}],[\"linux中网络监控命令主要是netstat\",{\"1\":{\"482\":1}}],[\"linux网络监控\",{\"0\":{\"481\":1}}],[\"linux内存监控\",{\"0\":{\"464\":1}}],[\"linux磁盘监控命令主要有\",{\"1\":{\"448\":1}}],[\"linux磁盘监控\",{\"0\":{\"447\":1}}],[\"linux\",{\"0\":{\"434\":1,\"758\":1},\"1\":{\"239\":2,\"378\":1,\"382\":1,\"383\":1,\"386\":1,\"406\":11,\"408\":1,\"419\":5,\"467\":1,\"517\":1,\"566\":1,\"568\":1,\"570\":1,\"571\":1},\"2\":{\"615\":1}}],[\"lineno\",{\"1\":{\"357\":1}}],[\"line\",{\"1\":{\"357\":1,\"742\":1,\"743\":1}}],[\"lines\",{\"1\":{\"347\":1}}],[\"links\",{\"1\":{\"187\":1}}],[\"linkedhashset\",{\"1\":{\"178\":1}}],[\"linkedhashset~e~\",{\"1\":{\"178\":1}}],[\"linkedhashmap\",{\"1\":{\"178\":1,\"186\":5,\"187\":3}}],[\"linkedlist<e>\",{\"1\":{\"182\":1}}],[\"linkedlist~e~\",{\"1\":{\"178\":1}}],[\"linkedlist\",{\"0\":{\"182\":1,\"183\":1},\"1\":{\"178\":5,\"182\":6,\"183\":5}}],[\"link\",{\"1\":{\"100\":1}}],[\"live\",{\"1\":{\"239\":1,\"750\":1}}],[\"limit\",{\"1\":{\"239\":2}}],[\"li\",{\"1\":{\"179\":1}}],[\"licenses\",{\"1\":{\"146\":1}}],[\"like\",{\"1\":{\"102\":1}}],[\"listiterator\",{\"1\":{\"179\":3}}],[\"listiterator<e>\",{\"1\":{\"179\":3}}],[\"list<e>\",{\"1\":{\"179\":2,\"181\":1,\"182\":1}}],[\"list<user>\",{\"1\":{\"40\":1,\"41\":1,\"118\":7}}],[\"list~e~\",{\"1\":{\"178\":1}}],[\"list\",{\"0\":{\"179\":1,\"180\":1,\"340\":1},\"1\":{\"40\":1,\"41\":1,\"118\":5,\"178\":5,\"179\":2,\"181\":1,\"182\":1,\"186\":1,\"244\":1,\"311\":1,\"316\":3,\"341\":9,\"351\":1,\"352\":2,\"353\":5,\"360\":1,\"363\":1,\"370\":1,\"507\":4}}],[\"library\",{\"1\":{\"280\":1,\"289\":1}}],[\"lib\",{\"1\":{\"11\":1,\"16\":2,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"90\":6,\"93\":6,\"94\":1,\"97\":1,\"156\":1}}],[\"lookaside\",{\"1\":{\"734\":1,\"736\":1,\"737\":2}}],[\"loop=none\",{\"1\":{\"279\":2,\"280\":1}}],[\"loop\",{\"1\":{\"190\":1,\"269\":1,\"271\":2,\"272\":4,\"278\":4,\"279\":4,\"280\":1,\"334\":8,\"335\":4}}],[\"lo\",{\"1\":{\"310\":2}}],[\"lo=0\",{\"1\":{\"310\":6}}],[\"locked\",{\"1\":{\"287\":4}}],[\"lock\",{\"0\":{\"287\":1,\"322\":1},\"1\":{\"206\":1,\"208\":3,\"211\":2,\"214\":3,\"216\":1,\"221\":1,\"287\":9,\"304\":1,\"625\":1,\"632\":4}}],[\"locate\",{\"1\":{\"312\":1}}],[\"location\",{\"1\":{\"642\":1}}],[\"locations\",{\"1\":{\"125\":1}}],[\"location=\",{\"1\":{\"124\":1}}],[\"locality\",{\"1\":{\"737\":3}}],[\"localtime\",{\"1\":{\"357\":1}}],[\"localrepository>\",{\"1\":{\"159\":1}}],[\"localrepository\",{\"1\":{\"159\":1}}],[\"local\",{\"1\":{\"105\":3,\"720\":1}}],[\"localstorage\",{\"1\":{\"93\":1}}],[\"localhost\",{\"1\":{\"40\":1,\"49\":1,\"51\":4,\"120\":1,\"515\":1}}],[\"lower\",{\"1\":{\"363\":1,\"365\":1}}],[\"low\",{\"1\":{\"189\":1}}],[\"lotail\",{\"1\":{\"189\":6}}],[\"lohead\",{\"1\":{\"189\":3}}],[\"loadstore\",{\"1\":{\"211\":3}}],[\"loadsidebar\",{\"0\":{\"77\":1},\"1\":{\"52\":2,\"53\":1,\"77\":1,\"78\":2}}],[\"load2\",{\"1\":{\"211\":4}}],[\"load1\",{\"1\":{\"211\":4}}],[\"loadload\",{\"1\":{\"211\":4}}],[\"load\",{\"1\":{\"189\":2,\"206\":1,\"211\":1,\"440\":1,\"534\":1}}],[\"loadfactoryname\",{\"1\":{\"256\":1}}],[\"loadfactor\",{\"1\":{\"187\":5,\"189\":7}}],[\"loadnavbar\",{\"0\":{\"79\":1},\"1\":{\"58\":2,\"80\":1}}],[\"log的日志文件\",{\"1\":{\"749\":1}}],[\"logical\",{\"1\":{\"735\":1}}],[\"logic\",{\"1\":{\"732\":1}}],[\"logimpl\",{\"1\":{\"40\":1}}],[\"log来保证的\",{\"1\":{\"627\":2}}],[\"logfile\",{\"1\":{\"357\":2}}],[\"logs\",{\"1\":{\"357\":1,\"405\":1}}],[\"log\",{\"1\":{\"357\":5,\"425\":1,\"428\":3,\"622\":9,\"749\":3}}],[\"log等级总开关\",{\"1\":{\"357\":1}}],[\"logger\",{\"1\":{\"357\":13}}],[\"logging<\",{\"1\":{\"145\":1}}],[\"logging\",{\"0\":{\"357\":1},\"1\":{\"40\":1,\"357\":6}}],[\"logo\",{\"1\":{\"75\":1}}],[\"lombok\",{\"1\":{\"40\":1,\"118\":1}}],[\"long\",{\"1\":{\"8\":1,\"202\":1,\"204\":1,\"245\":1,\"278\":1,\"360\":1}}],[\"非法指令\",{\"1\":{\"738\":1}}],[\"非法转账\",{\"1\":{\"658\":1}}],[\"非持久性xss攻击\",{\"1\":{\"657\":1}}],[\"非空返回0\",{\"1\":{\"589\":1}}],[\"非0执行失败\",{\"1\":{\"583\":1}}],[\"非线程安全\",{\"1\":{\"280\":1,\"287\":1}}],[\"非变量\",{\"1\":{\"244\":1}}],[\"非常清晰\",{\"1\":{\"431\":1}}],[\"非常不完整\",{\"1\":{\"262\":1}}],[\"非常消耗资源\",{\"1\":{\"222\":1}}],[\"非常公平\",{\"1\":{\"217\":1}}],[\"非公平锁的吞吐量比公平锁大\",{\"1\":{\"217\":1}}],[\"非私有\",{\"1\":{\"181\":1}}],[\"非\",{\"1\":{\"8\":1,\"735\":1}}],[\"再写入b\",{\"1\":{\"743\":1}}],[\"再取出cache\",{\"1\":{\"743\":1}}],[\"再去建立新的连接\",{\"1\":{\"722\":1}}],[\"再操作的话那么处理速度会降低很多\",{\"1\":{\"713\":1}}],[\"再断开连接\",{\"1\":{\"708\":1}}],[\"再加上一些其他控制信息\",{\"1\":{\"673\":1}}],[\"再根据扫描码找到用户在键盘输入的字符的ascii\",{\"1\":{\"672\":1}}],[\"再\",{\"1\":{\"651\":1}}],[\"再重新导入\",{\"1\":{\"624\":1}}],[\"再把原先的表整体删除\",{\"1\":{\"624\":1}}],[\"再给大家推荐一本质量非常高的开源书籍\",{\"1\":{\"407\":1}}],[\"再来看看容器较为通俗的解释\",{\"0\":{\"379\":1}}],[\"再来想象一下\",{\"1\":{\"197\":1}}],[\"再按薪级排序\",{\"1\":{\"363\":1}}],[\"再细致一点又可以分为\",{\"1\":{\"243\":1}}],[\"再次尝试更新\",{\"1\":{\"214\":1}}],[\"再次向列表中添加一个元素\",{\"1\":{\"181\":1}}],[\"再通过中断返回指令将cpu切换回用户态\",{\"1\":{\"738\":1}}],[\"再通过\",{\"1\":{\"189\":1}}],[\"再修改指定结点的指针完成插入\",{\"1\":{\"182\":1}}],[\"再一个需要注意的就是lts\",{\"1\":{\"8\":1}}],[\"再然后偶尔也想把自己的兴趣爱好记录一下\",{\"1\":{\"2\":1}}],[\"版本不受支持\",{\"1\":{\"642\":1}}],[\"版本直接将查询缓存删掉了\",{\"1\":{\"621\":1}}],[\"版本控制是一种记录一个或若干文件内容变化\",{\"1\":{\"413\":1}}],[\"版本控制\",{\"0\":{\"412\":1},\"2\":{\"432\":1}}],[\"版本决定了可用的配置选项\",{\"1\":{\"400\":1}}],[\"版本都支持\",{\"1\":{\"370\":1}}],[\"版本都将被视为被取代\",{\"1\":{\"8\":1}}],[\"版本实现的字符串常量池\",{\"0\":{\"249\":1}}],[\"版本和所有内容\",{\"1\":{\"140\":1}}],[\"版本号采用偶数编号\",{\"1\":{\"8\":1}}],[\"版本号采用奇数编号\",{\"1\":{\"8\":1}}],[\"版本之外的其他漏洞的影响时才应当使用相应的补丁集更新\",{\"1\":{\"8\":1}}],[\"版本的一组累积实施增强功能\",{\"1\":{\"8\":1}}],[\"版本被视为最新\",{\"1\":{\"8\":1}}],[\"版本\",{\"1\":{\"8\":2,\"17\":2,\"177\":1,\"383\":1,\"400\":1}}],[\"版本选择\",{\"0\":{\"8\":1}}],[\"版本说明\",{\"0\":{\"7\":1}}],[\"的状态\",{\"1\":{\"742\":1}}],[\"的数据大小如果大于\",{\"1\":{\"724\":2}}],[\"的连接一旦超过这个值时\",{\"1\":{\"721\":1}}],[\"的连接管理\",{\"1\":{\"650\":1}}],[\"的重传次数\",{\"1\":{\"717\":1}}],[\"的定时器\",{\"1\":{\"708\":1}}],[\"的意思是确认有\",{\"1\":{\"698\":1}}],[\"的可选项总长最多为\",{\"1\":{\"678\":1}}],[\"的可选项不放入报头\",{\"1\":{\"678\":1}}],[\"的可等待对象也会\",{\"1\":{\"273\":1}}],[\"的动作是服务器是通过回传状态码301来下达给客户端的\",{\"1\":{\"642\":1}}],[\"的三个包\",{\"1\":{\"635\":1}}],[\"的三种状态\",{\"0\":{\"421\":1}}],[\"的min\",{\"1\":{\"631\":1}}],[\"的事务的事务\",{\"1\":{\"631\":1}}],[\"的执行速度最快\",{\"1\":{\"624\":1}}],[\"的执行速度是比较慢的\",{\"1\":{\"624\":1}}],[\"的操作是先复制一个新的表结构\",{\"1\":{\"624\":1}}],[\"的操作是一样的\",{\"1\":{\"215\":1}}],[\"的线程和性能\",{\"1\":{\"515\":1}}],[\"的线程上下文\",{\"1\":{\"198\":1}}],[\"的综合\",{\"1\":{\"515\":1}}],[\"的所有线程\",{\"1\":{\"513\":1,\"564\":1}}],[\"的含义为显示虚拟内存状态\",{\"1\":{\"477\":1,\"526\":1}}],[\"的工作原理\",{\"1\":{\"431\":1}}],[\"的分支\",{\"1\":{\"430\":2}}],[\"的分页导航插件\",{\"1\":{\"96\":1}}],[\"的缔造者\",{\"1\":{\"419\":1}}],[\"的权力\",{\"1\":{\"419\":1}}],[\"的商业公司同\",{\"1\":{\"419\":1}}],[\"的东西\",{\"1\":{\"417\":1}}],[\"的机制\",{\"1\":{\"406\":1}}],[\"的机制来处理哈希冲突\",{\"1\":{\"193\":1}}],[\"的进程拥有独立的全局系统资源\",{\"1\":{\"406\":1}}],[\"的上下文路径\",{\"1\":{\"400\":1}}],[\"的上限值4\",{\"1\":{\"239\":1}}],[\"的容器引用\",{\"1\":{\"395\":1}}],[\"的地址时\",{\"1\":{\"393\":1}}],[\"的地方是它不会生成静态的\",{\"1\":{\"44\":1}}],[\"的中文翻译搬运工人如出一辙\",{\"1\":{\"390\":1}}],[\"的服务端实现\",{\"1\":{\"388\":1}}],[\"的公开服务\",{\"1\":{\"388\":1}}],[\"的搜索结果中\",{\"1\":{\"388\":1}}],[\"的关系\",{\"0\":{\"389\":1},\"1\":{\"387\":1}}],[\"的技术\",{\"1\":{\"386\":1}}],[\"的镜像提供了除内核外完整的运行时环境\",{\"1\":{\"384\":1}}],[\"的优势\",{\"1\":{\"380\":1}}],[\"的优先级\",{\"1\":{\"17\":1}}],[\"的影响\",{\"1\":{\"378\":1}}],[\"的应用\",{\"1\":{\"378\":1}}],[\"的应用或工具的开发要收费\",{\"1\":{\"8\":1}}],[\"的一半\",{\"1\":{\"458\":2,\"557\":2}}],[\"的一些常见操作和命令\",{\"1\":{\"375\":1}}],[\"的一个重要组成部分\",{\"1\":{\"236\":1}}],[\"的一个强大方面是它对项目关系的处理\",{\"1\":{\"140\":1}}],[\"的话建议查阅官方文档\",{\"1\":{\"373\":1}}],[\"的两个记录如何保留它们的原始顺序\",{\"1\":{\"368\":1}}],[\"的两种功能\",{\"0\":{\"227\":1}}],[\"的每个元素中提取用于比较的键\",{\"1\":{\"363\":1}}],[\"的每条路径都具有相同数量的黑色结点\",{\"1\":{\"187\":1}}],[\"的代码对比\",{\"1\":{\"326\":1}}],[\"的多进程机制实现并行计算\",{\"1\":{\"322\":1}}],[\"的并行\",{\"1\":{\"322\":1}}],[\"的解释器也只能允许同一时间执行一个线程\",{\"1\":{\"322\":1}}],[\"的解析规则\",{\"1\":{\"100\":1}}],[\"的形式\",{\"1\":{\"311\":1}}],[\"的用法非常多\",{\"1\":{\"513\":1,\"564\":1}}],[\"的用法\",{\"1\":{\"300\":1}}],[\"的高层级\",{\"1\":{\"299\":1}}],[\"的高层级原语\",{\"1\":{\"281\":1}}],[\"的变体\",{\"1\":{\"294\":1}}],[\"的队列没有\",{\"1\":{\"292\":1}}],[\"的推荐方式是通过\",{\"1\":{\"287\":1}}],[\"的结果\",{\"1\":{\"280\":1}}],[\"的结构与之前版本有一些区别\",{\"1\":{\"237\":1}}],[\"的对象\",{\"1\":{\"280\":1}}],[\"的最小值\",{\"1\":{\"631\":1}}],[\"的最小元素索引\",{\"1\":{\"310\":2}}],[\"的最小的\",{\"1\":{\"189\":2}}],[\"的最终结果的协程\",{\"1\":{\"277\":1}}],[\"的角度看来\",{\"1\":{\"274\":1}}],[\"的任务\",{\"1\":{\"273\":1}}],[\"的引用\",{\"1\":{\"271\":1}}],[\"的函数\",{\"1\":{\"267\":1}}],[\"的缺点\",{\"0\":{\"255\":1},\"1\":{\"255\":1}}],[\"的配置文件来装载指定的\",{\"1\":{\"254\":1}}],[\"的本质是通过事先定义的接口来找其所有的接口实现类\",{\"1\":{\"254\":1}}],[\"的本地仓库路径配置\",{\"1\":{\"158\":1}}],[\"的整个生命周期\",{\"1\":{\"385\":1}}],[\"的整体机制如下\",{\"1\":{\"252\":1}}],[\"的整数\",{\"1\":{\"202\":1,\"293\":1}}],[\"的整数次幂\",{\"1\":{\"189\":1}}],[\"的全称是\",{\"1\":{\"252\":1}}],[\"的全局表\",{\"1\":{\"249\":1}}],[\"的思想\",{\"1\":{\"252\":1}}],[\"的预热过程\",{\"1\":{\"250\":1}}],[\"的核心功能\",{\"1\":{\"399\":1}}],[\"的核心组成部分之一\",{\"1\":{\"250\":1}}],[\"的核心发布包中并不包含任何\",{\"1\":{\"150\":1}}],[\"的实例里只有一份\",{\"1\":{\"249\":1}}],[\"的实现\",{\"1\":{\"254\":1}}],[\"的实现原理\",{\"0\":{\"219\":1}}],[\"的实现类\",{\"0\":{\"180\":1}}],[\"的特性\",{\"1\":{\"249\":1}}],[\"的特点\",{\"1\":{\"186\":1}}],[\"的常量\",{\"1\":{\"246\":1}}],[\"的表格结构\",{\"1\":{\"246\":1}}],[\"的范围是\",{\"1\":{\"245\":1}}],[\"的内容可以查看这篇文章\",{\"1\":{\"406\":2}}],[\"的内部类或者单个的静态常量\",{\"1\":{\"245\":1}}],[\"的内存管理技术\",{\"1\":{\"734\":1}}],[\"的内存空间的大小限制\",{\"1\":{\"249\":1}}],[\"的内存\",{\"1\":{\"238\":1,\"239\":1}}],[\"的内存屏障规范实现指令不一样\",{\"1\":{\"211\":1}}],[\"的副作用\",{\"0\":{\"242\":1}}],[\"的适用场景\",{\"0\":{\"241\":1}}],[\"的默认大小为\",{\"1\":{\"239\":1}}],[\"的默认配置\",{\"1\":{\"158\":1}}],[\"的图示\",{\"1\":{\"237\":2}}],[\"的扩展库\",{\"1\":{\"236\":1}}],[\"的扩容机制\",{\"1\":{\"181\":1}}],[\"的构造子类将一个实现了\",{\"1\":{\"233\":1,\"259\":1}}],[\"的运行速度随着\",{\"1\":{\"233\":1,\"259\":1}}],[\"的运行环境是用\",{\"1\":{\"233\":1,\"259\":1}}],[\"的确是高性能的\",{\"1\":{\"233\":1,\"259\":1}}],[\"的文件名不必须为\",{\"1\":{\"394\":1}}],[\"的文件\",{\"1\":{\"233\":2,\"259\":2}}],[\"的安全检查机制使得\",{\"1\":{\"233\":1,\"259\":1}}],[\"的安装路径\",{\"1\":{\"11\":1}}],[\"的明智选择\",{\"1\":{\"233\":1,\"259\":1}}],[\"的强类型机制\",{\"1\":{\"233\":1,\"259\":1}}],[\"的各种版本已经更名\",{\"1\":{\"232\":1,\"258\":1}}],[\"的相关方法\",{\"0\":{\"228\":1}}],[\"的缩写\",{\"1\":{\"226\":1,\"406\":2}}],[\"的比较\",{\"0\":{\"222\":1}}],[\"的值会发生变化\",{\"1\":{\"697\":1}}],[\"的值的数量\",{\"1\":{\"310\":2}}],[\"的值做修改\",{\"1\":{\"223\":1}}],[\"的值为\",{\"1\":{\"223\":2}}],[\"的值从\",{\"1\":{\"223\":2}}],[\"的值赋值给\",{\"1\":{\"221\":1}}],[\"的值\",{\"1\":{\"221\":1,\"223\":1,\"698\":1}}],[\"的值指向新的安装路径即可\",{\"1\":{\"12\":1}}],[\"的原理\",{\"1\":{\"221\":1}}],[\"的原子操作\",{\"0\":{\"206\":1}}],[\"的锁升级\",{\"0\":{\"220\":1}}],[\"的能力\",{\"1\":{\"211\":1}}],[\"的读取操作已经结束\",{\"1\":{\"211\":1}}],[\"的读取操作在\",{\"1\":{\"211\":1}}],[\"的写操作已经刷新到主内存之后\",{\"1\":{\"211\":1}}],[\"的写操作已经刷新到主内存\",{\"1\":{\"211\":1}}],[\"的目的是要让获得对象锁的线程实现等待\",{\"1\":{\"204\":1}}],[\"的占用\",{\"1\":{\"202\":1}}],[\"的时间是从客户端接收到\",{\"1\":{\"722\":1}}],[\"的时间片还没分到该线程\",{\"1\":{\"202\":1}}],[\"的时间\",{\"1\":{\"198\":1}}],[\"的时候会有缩进比较好看\",{\"1\":{\"425\":1}}],[\"的时候指定的一个名称\",{\"1\":{\"400\":1}}],[\"的时候能恢复现场\",{\"1\":{\"198\":1}}],[\"的时候\",{\"1\":{\"187\":1}}],[\"的遍历方式\",{\"0\":{\"192\":1}}],[\"的第\",{\"1\":{\"189\":1}}],[\"的第一个元素\",{\"1\":{\"187\":1}}],[\"的低\",{\"1\":{\"189\":2}}],[\"的位置上存在元素\",{\"1\":{\"249\":1}}],[\"的位置\",{\"1\":{\"189\":1}}],[\"的链表在原位置+\",{\"1\":{\"189\":1}}],[\"的链表直接在原位置\",{\"1\":{\"189\":1}}],[\"的二进制为\",{\"1\":{\"189\":1}}],[\"的二进制值经转换后全变为\",{\"1\":{\"189\":1}}],[\"的二叉排序树\",{\"1\":{\"187\":1}}],[\"的长度可以通过参数指定\",{\"1\":{\"249\":1}}],[\"的长度\",{\"1\":{\"189\":1}}],[\"的长度是固定的\",{\"1\":{\"249\":1}}],[\"的长度是\",{\"1\":{\"188\":1}}],[\"的长的是\",{\"0\":{\"188\":1}}],[\"的幂次则等价于与其除数减一的与\",{\"1\":{\"188\":1}}],[\"的幂次方的值不被扩大\",{\"1\":{\"189\":1}}],[\"的幂次方的数\",{\"1\":{\"189\":1}}],[\"的幂次方\",{\"0\":{\"188\":1},\"1\":{\"188\":1,\"189\":1}}],[\"的幂作为哈希表的大小\",{\"1\":{\"187\":1}}],[\"的红黑树怎么声明的呢\",{\"1\":{\"187\":1}}],[\"的方式可以更有效的利用系统资源然而\",{\"1\":{\"239\":1}}],[\"的方式来解决这个问题\",{\"1\":{\"198\":1}}],[\"的方式需要配置\",{\"1\":{\"58\":1}}],[\"的方法\",{\"1\":{\"189\":1}}],[\"的方法更加简化\",{\"1\":{\"187\":1}}],[\"的主体\",{\"1\":{\"187\":1}}],[\"的底层存储是数据加链表实现的\",{\"1\":{\"187\":1}}],[\"的底层是通过汇编语言的\",{\"1\":{\"221\":1}}],[\"的底层是\",{\"1\":{\"181\":1}}],[\"的底层是数组队列\",{\"1\":{\"181\":1}}],[\"的键生成一个新的\",{\"1\":{\"353\":1}}],[\"的键必须是唯一的\",{\"1\":{\"186\":1}}],[\"的键值对对象\",{\"1\":{\"177\":1}}],[\"的集合\",{\"1\":{\"186\":1}}],[\"的空间大小的参数为\",{\"1\":{\"239\":1}}],[\"的空间花费主要体现在它每一个元素都要存放前驱和后继对象\",{\"1\":{\"183\":1}}],[\"的空间浪费主要体现在列表的结尾会预留一定的容量空间\",{\"1\":{\"183\":1}}],[\"的区别\",{\"0\":{\"183\":1,\"204\":1,\"253\":1,\"728\":1},\"1\":{\"600\":1}}],[\"的右移计算相当于数值原本的\",{\"1\":{\"181\":1}}],[\"的族谱\",{\"1\":{\"181\":1,\"182\":1}}],[\"的子目录\",{\"1\":{\"423\":1}}],[\"的子类\",{\"1\":{\"353\":1}}],[\"的子类来覆盖默认行为\",{\"1\":{\"202\":1}}],[\"的子列表\",{\"1\":{\"179\":1}}],[\"的子标签\",{\"1\":{\"142\":1}}],[\"的类方法\",{\"1\":{\"353\":1}}],[\"的类加载器机制使得程序的架构更加灵活\",{\"1\":{\"236\":1}}],[\"的类图关系\",{\"1\":{\"178\":1,\"186\":1}}],[\"的类型\",{\"0\":{\"169\":1}}],[\"的基本命令\",{\"1\":{\"389\":1}}],[\"的基本组成结构包括\",{\"1\":{\"235\":1}}],[\"的基础上拓展了一些方法\",{\"1\":{\"179\":1}}],[\"的基础上又定义了\",{\"1\":{\"178\":1}}],[\"的基石是其依赖关系列表\",{\"1\":{\"142\":1}}],[\"的组合\",{\"1\":{\"177\":1}}],[\"的激活\",{\"0\":{\"171\":1}}],[\"的声明\",{\"0\":{\"170\":1}}],[\"的概念基本上已经讲完\",{\"1\":{\"390\":1}}],[\"的概念我们必须先从容器开始说起\",{\"1\":{\"376\":1}}],[\"的概念做了较为详细的介绍\",{\"1\":{\"375\":1}}],[\"的概念\",{\"1\":{\"168\":1,\"200\":1,\"388\":1}}],[\"的计算机上的一个目录\",{\"1\":{\"158\":1}}],[\"的说明\",{\"1\":{\"156\":1}}],[\"的输出目录\",{\"1\":{\"155\":1}}],[\"的大多数元素都由其子级继承\",{\"1\":{\"146\":1}}],[\"的硬件缓存\",{\"1\":{\"734\":1}}],[\"的硬编码方式\",{\"1\":{\"256\":1}}],[\"的硬要求\",{\"1\":{\"143\":2}}],[\"的硬性要求\",{\"1\":{\"143\":1}}],[\"的软需求\",{\"1\":{\"143\":1}}],[\"的作用域类似\",{\"1\":{\"142\":1}}],[\"的依赖配置\",{\"1\":{\"142\":1}}],[\"的依赖关系\",{\"1\":{\"142\":1}}],[\"的反写\",{\"1\":{\"139\":1}}],[\"的点\",{\"1\":{\"139\":1}}],[\"的字符串\",{\"1\":{\"97\":1}}],[\"的\",{\"1\":{\"91\":1,\"94\":1,\"101\":1,\"143\":1,\"147\":1,\"169\":2,\"171\":1,\"181\":1,\"187\":5,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"233\":1,\"254\":1,\"259\":1,\"300\":1,\"311\":1,\"353\":1,\"368\":1,\"388\":2,\"642\":1,\"651\":1,\"654\":2,\"728\":2}}],[\"的压缩文件位于\",{\"1\":{\"90\":1}}],[\"的加载逻辑是从每层目录下获取文件\",{\"1\":{\"53\":1}}],[\"的使用\",{\"1\":{\"47\":1,\"479\":1,\"528\":1}}],[\"的包\",{\"1\":{\"16\":2}}],[\"的前提下\",{\"1\":{\"14\":1}}],[\"的环境变量里面本来就有\",{\"1\":{\"13\":1}}],[\"的路径\",{\"1\":{\"12\":1}}],[\"的同时一般会发布相应的补丁集更新\",{\"1\":{\"8\":1}}],[\"的账号\",{\"1\":{\"8\":1}}],[\"的历史版本\",{\"1\":{\"8\":1}}],[\"的官网\",{\"1\":{\"8\":1}}],[\"的发展历程中不同阶段的不同叫法而已\",{\"1\":{\"7\":1}}],[\"的版本的硬要求\",{\"1\":{\"143\":1}}],[\"的版本\",{\"1\":{\"7\":1,\"142\":2}}],[\"snooper\",{\"1\":{\"741\":1}}],[\"snmp\",{\"1\":{\"724\":1}}],[\"snailclimb\",{\"1\":{\"426\":1}}],[\"snapshot<\",{\"1\":{\"27\":1,\"30\":1,\"32\":2,\"35\":2,\"117\":1,\"137\":1,\"149\":3}}],[\"smtp\",{\"1\":{\"683\":1}}],[\"smartypants\",{\"1\":{\"100\":1}}],[\"small>\",{\"1\":{\"75\":1}}],[\"s架构\",{\"1\":{\"655\":2}}],[\"svctm\",{\"1\":{\"458\":1,\"557\":1}}],[\"svg\",{\"1\":{\"75\":1,\"101\":1,\"102\":1}}],[\"sz\",{\"1\":{\"458\":2,\"557\":2}}],[\"sze\",{\"1\":{\"39\":1,\"41\":2,\"115\":1,\"126\":1}}],[\"squashfs\",{\"1\":{\"454\":1}}],[\"sql解析\",{\"1\":{\"621\":1}}],[\"sql怎么实现模糊查询\",{\"0\":{\"620\":1}}],[\"sql\",{\"1\":{\"118\":2,\"121\":1,\"621\":1}}],[\"sqlsession\",{\"1\":{\"41\":3}}],[\"sqlsessionfactorybuilder\",{\"1\":{\"41\":3}}],[\"sqlsessionfactory\",{\"1\":{\"41\":9}}],[\"sar命令\",{\"1\":{\"496\":1,\"546\":1}}],[\"sar\",{\"0\":{\"495\":1,\"545\":1},\"1\":{\"515\":2}}],[\"say\",{\"1\":{\"265\":5}}],[\"sacrifice\",{\"1\":{\"239\":2}}],[\"swpd\",{\"1\":{\"479\":1,\"528\":1}}],[\"swarm\",{\"1\":{\"400\":1}}],[\"swap\",{\"1\":{\"221\":1,\"239\":1,\"440\":1,\"479\":1,\"528\":1,\"534\":1}}],[\"swing\",{\"1\":{\"16\":2}}],[\"sfence\",{\"1\":{\"211\":2}}],[\"syn攻击是指利用合理的服务请求来占用过多的服务资源\",{\"1\":{\"716\":1}}],[\"syn\",{\"1\":{\"687\":2,\"701\":2,\"714\":2,\"717\":2}}],[\"sync\",{\"1\":{\"289\":1}}],[\"syncronized\",{\"0\":{\"222\":1},\"1\":{\"222\":1}}],[\"synchronized\",{\"0\":{\"218\":1,\"219\":1,\"220\":1},\"1\":{\"204\":1,\"210\":1,\"216\":1,\"217\":1,\"218\":6,\"219\":4,\"220\":2,\"233\":1,\"259\":1}}],[\"sy的值高时\",{\"1\":{\"479\":1,\"528\":1}}],[\"sy\",{\"1\":{\"440\":1,\"479\":1,\"528\":1,\"534\":1}}],[\"symbolic\",{\"1\":{\"246\":1}}],[\"system信息\",{\"1\":{\"567\":1}}],[\"systems\",{\"1\":{\"416\":1}}],[\"systempath\",{\"1\":{\"142\":1}}],[\"system\",{\"0\":{\"762\":1},\"1\":{\"41\":5,\"118\":1,\"125\":1,\"142\":2,\"187\":1,\"193\":3,\"205\":4,\"239\":1,\"406\":1,\"417\":1,\"475\":2,\"479\":2,\"528\":2,\"731\":1,\"738\":1}}],[\"slept\",{\"1\":{\"296\":4}}],[\"sleeping\",{\"1\":{\"440\":1,\"534\":1}}],[\"sleep\",{\"0\":{\"204\":1},\"1\":{\"198\":1,\"202\":2,\"204\":6,\"205\":1,\"265\":2,\"270\":1,\"272\":3,\"273\":1,\"275\":2,\"277\":3,\"278\":1,\"288\":2,\"296\":13,\"300\":2,\"327\":1,\"506\":1}}],[\"slf4j\",{\"1\":{\"256\":1}}],[\"slightly\",{\"1\":{\"135\":1}}],[\"src\",{\"1\":{\"171\":2}}],[\"src=\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"93\":7,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"101\":1,\"102\":2}}],[\"sharing\",{\"1\":{\"743\":1}}],[\"shared\",{\"1\":{\"226\":1,\"227\":1,\"287\":2,\"336\":2,\"469\":1,\"519\":1,\"741\":2,\"742\":2}}],[\"share\",{\"1\":{\"135\":1}}],[\"sh\",{\"1\":{\"515\":1,\"571\":8,\"580\":4,\"584\":2}}],[\"shift\",{\"1\":{\"735\":1}}],[\"ship\",{\"0\":{\"390\":1},\"1\":{\"390\":4}}],[\"shield\",{\"1\":{\"274\":2,\"275\":1,\"300\":1}}],[\"shuffle\",{\"1\":{\"351\":2}}],[\"shell入门\",{\"0\":{\"569\":1}}],[\"shell\",{\"1\":{\"302\":4,\"570\":2,\"571\":4,\"573\":2,\"578\":1,\"580\":1,\"582\":1,\"584\":1,\"590\":2,\"594\":1,\"607\":1}}],[\"should\",{\"1\":{\"265\":1,\"507\":1}}],[\"short\",{\"1\":{\"245\":1,\"652\":1}}],[\"shop的pom\",{\"1\":{\"35\":1}}],[\"shop<\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1}}],[\"since用于确认代理或客户端拥有的本地资源的有效性\",{\"1\":{\"645\":1}}],[\"since字段值的日期时间之后\",{\"1\":{\"645\":1}}],[\"since字段值早于资源的更新时间\",{\"1\":{\"645\":1}}],[\"since\",{\"1\":{\"645\":2}}],[\"si\",{\"1\":{\"479\":1,\"528\":1}}],[\"simple\",{\"1\":{\"683\":1}}],[\"simply\",{\"1\":{\"268\":1}}],[\"simplify\",{\"1\":{\"135\":1}}],[\"six\",{\"1\":{\"237\":2}}],[\"signaled\",{\"1\":{\"336\":2}}],[\"signal\",{\"1\":{\"226\":2,\"227\":1,\"327\":1}}],[\"signifies\",{\"1\":{\"189\":1}}],[\"size=1\",{\"1\":{\"189\":1}}],[\"size++\",{\"1\":{\"181\":1}}],[\"size\",{\"1\":{\"178\":1,\"181\":10,\"187\":1,\"239\":1,\"395\":1,\"507\":1,\"746\":1}}],[\"site\",{\"0\":{\"167\":1},\"1\":{\"155\":8,\"161\":1,\"167\":6}}],[\"sidebar\",{\"1\":{\"52\":1,\"53\":6,\"54\":1,\"59\":1,\"78\":2,\"82\":3,\"84\":1,\"107\":8}}],[\"so的值长期为0\",{\"1\":{\"479\":1,\"528\":1}}],[\"software\",{\"1\":{\"454\":1}}],[\"solution\",{\"1\":{\"311\":1}}],[\"sock\",{\"1\":{\"285\":2}}],[\"sockets\",{\"1\":{\"285\":1}}],[\"socket\",{\"0\":{\"283\":1},\"1\":{\"233\":1,\"259\":1,\"303\":1}}],[\"something\",{\"1\":{\"274\":4}}],[\"some\",{\"1\":{\"269\":1,\"271\":1}}],[\"so\",{\"1\":{\"181\":1,\"239\":1,\"267\":1,\"479\":1,\"528\":1,\"721\":1}}],[\"sort=\",{\"1\":{\"748\":2}}],[\"sort命令来排序\",{\"1\":{\"512\":1}}],[\"sorting\",{\"1\":{\"363\":1}}],[\"sorted\",{\"1\":{\"353\":1,\"363\":3,\"364\":1,\"365\":2,\"366\":4,\"367\":1,\"368\":2,\"370\":4}}],[\"sortedmap\",{\"1\":{\"186\":3}}],[\"sortedset\",{\"1\":{\"178\":1}}],[\"sortedset~e~\",{\"1\":{\"178\":2}}],[\"sort\",{\"0\":{\"363\":1},\"1\":{\"179\":2,\"311\":1,\"341\":1,\"363\":1,\"364\":1,\"365\":1,\"368\":2,\"369\":2,\"370\":2,\"507\":2,\"512\":1,\"609\":2}}],[\"sonar\",{\"1\":{\"150\":1}}],[\"soon\",{\"0\":{\"131\":1,\"133\":1,\"175\":1},\"1\":{\"268\":1}}],[\"sources\",{\"1\":{\"166\":4}}],[\"source\",{\"1\":{\"50\":1,\"388\":1,\"578\":1}}],[\"sourceencoding>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1}}],[\"sourceencoding>utf\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1}}],[\"source>19<\",{\"1\":{\"117\":1}}],[\"source>\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"137\":1,\"149\":1}}],[\"source>8<\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1}}],[\"ssthresh\",{\"1\":{\"695\":1,\"697\":4,\"698\":2}}],[\"ssl剥离\",{\"1\":{\"664\":1}}],[\"ssl\",{\"1\":{\"635\":1,\"637\":1,\"638\":1,\"664\":1}}],[\"ssl+http\",{\"1\":{\"635\":1}}],[\"sss\",{\"1\":{\"352\":2}}],[\"ssml\",{\"1\":{\"102\":1}}],[\"ssr\",{\"1\":{\"45\":1,\"103\":1}}],[\"specialized\",{\"0\":{\"759\":1}}],[\"special\",{\"1\":{\"735\":1}}],[\"specified\",{\"1\":{\"454\":1}}],[\"spi\",{\"0\":{\"251\":1,\"252\":1,\"255\":1},\"1\":{\"252\":3,\"253\":2,\"254\":6,\"255\":3,\"256\":1}}],[\"spinlock\",{\"1\":{\"215\":1}}],[\"spatial\",{\"1\":{\"737\":1}}],[\"sparkdev\",{\"1\":{\"406\":1}}],[\"spawn\",{\"1\":{\"288\":1}}],[\"space\",{\"1\":{\"205\":4,\"239\":6,\"244\":1,\"454\":1}}],[\"span>\",{\"1\":{\"67\":1}}],[\"split\",{\"1\":{\"189\":1,\"365\":1}}],[\"spliteratorunknowsize\",{\"1\":{\"178\":1}}],[\"spliterators\",{\"1\":{\"178\":2}}],[\"spliterator\",{\"1\":{\"178\":5}}],[\"spliterator<e>\",{\"1\":{\"178\":2}}],[\"springfactoriesloader\",{\"1\":{\"256\":1}}],[\"springframework\",{\"1\":{\"40\":2,\"117\":2,\"118\":8,\"121\":7,\"124\":8,\"125\":4,\"145\":2}}],[\"springframework<\",{\"1\":{\"27\":1,\"30\":1,\"40\":5,\"117\":5,\"123\":1}}],[\"springjunitconfig\",{\"1\":{\"125\":4}}],[\"spring项目实践\",{\"1\":{\"111\":2}}],[\"spring\",{\"0\":{\"122\":1},\"1\":{\"24\":7,\"27\":3,\"40\":4,\"113\":1,\"117\":4,\"123\":1,\"124\":3,\"125\":1,\"149\":1,\"256\":2}}],[\"s\",{\"1\":{\"49\":1,\"94\":1,\"106\":1,\"107\":2,\"181\":1,\"267\":1,\"348\":3,\"352\":2,\"357\":4,\"360\":4,\"368\":2,\"395\":1,\"439\":2,\"440\":1,\"458\":6,\"468\":2,\"474\":1,\"475\":1,\"478\":2,\"486\":1,\"497\":4,\"506\":2,\"518\":2,\"524\":1,\"527\":2,\"533\":2,\"534\":1,\"544\":1,\"547\":4,\"557\":6}}],[\"stdio\",{\"1\":{\"609\":4,\"610\":1}}],[\"stdout\",{\"1\":{\"40\":1}}],[\"st\",{\"1\":{\"479\":1,\"528\":1}}],[\"student\",{\"1\":{\"365\":4,\"366\":4,\"367\":1,\"368\":1,\"369\":6}}],[\"studio\",{\"0\":{\"174\":1}}],[\"stopped\",{\"1\":{\"440\":1,\"534\":1}}],[\"stopiteration\",{\"1\":{\"349\":1}}],[\"stop\",{\"1\":{\"345\":1,\"395\":2,\"403\":1,\"405\":1}}],[\"storeload\",{\"1\":{\"211\":3}}],[\"store2\",{\"1\":{\"211\":4}}],[\"store1\",{\"1\":{\"211\":4}}],[\"storestore\",{\"1\":{\"211\":4}}],[\"store\",{\"1\":{\"206\":2,\"211\":1,\"296\":1}}],[\"stmts\",{\"1\":{\"267\":1,\"287\":1}}],[\"stereotype\",{\"1\":{\"118\":3,\"124\":1}}],[\"stylesheet\",{\"1\":{\"90\":10,\"101\":1}}],[\"staging\",{\"1\":{\"421\":1}}],[\"staged\",{\"1\":{\"421\":1}}],[\"star\",{\"1\":{\"388\":1}}],[\"stars\",{\"1\":{\"388\":2}}],[\"start\",{\"0\":{\"203\":1},\"1\":{\"200\":2,\"202\":2,\"203\":1,\"205\":1,\"277\":2,\"282\":1,\"283\":1,\"285\":1,\"303\":2,\"316\":1,\"324\":1,\"327\":1,\"345\":1,\"405\":1,\"506\":1}}],[\"starter\",{\"1\":{\"145\":1}}],[\"starter<\",{\"1\":{\"145\":1}}],[\"started\",{\"1\":{\"61\":1,\"75\":1,\"93\":2,\"265\":4,\"277\":2,\"296\":2}}],[\"startonload\",{\"1\":{\"101\":1}}],[\"stackoverflowerror\",{\"1\":{\"239\":1,\"240\":1}}],[\"stack\",{\"1\":{\"237\":8,\"239\":1}}],[\"stack~e~\",{\"1\":{\"178\":1}}],[\"stat\",{\"1\":{\"506\":1}}],[\"statistics\",{\"1\":{\"454\":1}}],[\"statics\",{\"1\":{\"477\":1,\"526\":1}}],[\"static\",{\"1\":{\"41\":4,\"181\":5,\"182\":1,\"187\":7,\"189\":1,\"193\":1,\"205\":2,\"218\":2,\"226\":7,\"244\":1}}],[\"status\",{\"1\":{\"395\":1,\"424\":2,\"504\":1,\"564\":1}}],[\"state\",{\"1\":{\"201\":2,\"226\":2,\"287\":2}}],[\"standard\",{\"1\":{\"7\":1,\"135\":1,\"232\":1,\"258\":1}}],[\"stroage\",{\"1\":{\"624\":1}}],[\"strong\",{\"1\":{\"271\":1}}],[\"strip\",{\"1\":{\"316\":1}}],[\"stringtablesize\",{\"1\":{\"249\":1}}],[\"stringtable\",{\"1\":{\"249\":3}}],[\"string\",{\"1\":{\"40\":2,\"41\":6,\"64\":1,\"66\":1,\"68\":1,\"70\":1,\"93\":1,\"105\":1,\"107\":1,\"118\":3,\"121\":4,\"124\":3,\"193\":1,\"202\":1,\"205\":1,\"249\":3,\"365\":2,\"507\":3,\"609\":1}}],[\"str\",{\"1\":{\"285\":1,\"360\":3,\"610\":2}}],[\"strftime\",{\"1\":{\"265\":4,\"277\":4,\"357\":1}}],[\"streams\",{\"1\":{\"303\":1}}],[\"streamsupport\",{\"1\":{\"178\":2}}],[\"streamwriter\",{\"0\":{\"284\":1},\"1\":{\"303\":1}}],[\"streamreader\",{\"0\":{\"284\":1},\"1\":{\"303\":1}}],[\"stream\",{\"0\":{\"281\":1,\"282\":1},\"1\":{\"178\":4,\"192\":3,\"281\":1,\"651\":3,\"652\":4}}],[\"stream<e>\",{\"1\":{\"178\":2}}],[\"structure\",{\"1\":{\"39\":1,\"115\":1}}],[\"schwartzian\",{\"1\":{\"369\":1}}],[\"schwartz\",{\"1\":{\"369\":1}}],[\"scheduling\",{\"1\":{\"737\":1}}],[\"scheduler\",{\"0\":{\"349\":1}}],[\"scheduled\",{\"1\":{\"306\":1}}],[\"schedule\",{\"1\":{\"268\":1,\"273\":1}}],[\"schema\",{\"1\":{\"124\":6}}],[\"schemalocation=\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"117\":1,\"124\":1,\"137\":1,\"146\":1,\"149\":2,\"159\":1}}],[\"scm\",{\"1\":{\"146\":1}}],[\"scan\",{\"1\":{\"124\":1}}],[\"scope\",{\"1\":{\"121\":2,\"142\":1}}],[\"scope>\",{\"1\":{\"27\":1,\"30\":1,\"40\":1,\"117\":1,\"137\":1,\"142\":1}}],[\"script>\",{\"1\":{\"53\":1,\"67\":2,\"69\":2,\"71\":2,\"73\":2,\"75\":2,\"78\":2,\"80\":2,\"93\":10,\"94\":1,\"95\":2,\"96\":1,\"97\":1,\"101\":2,\"102\":2}}],[\"sudo\",{\"1\":{\"747\":2}}],[\"suffix\",{\"1\":{\"609\":3}}],[\"sum=$sum\",{\"1\":{\"613\":1}}],[\"sum=$\",{\"1\":{\"600\":1,\"603\":1,\"613\":1}}],[\"sum=0\",{\"1\":{\"600\":1,\"603\":1}}],[\"sum\",{\"1\":{\"348\":1,\"353\":1}}],[\"such\",{\"1\":{\"277\":1}}],[\"success\",{\"1\":{\"205\":1}}],[\"survivor\",{\"1\":{\"243\":2}}],[\"surviving\",{\"1\":{\"239\":1}}],[\"surefire\",{\"1\":{\"155\":1}}],[\"subversion\",{\"1\":{\"420\":1}}],[\"subtract\",{\"1\":{\"353\":3}}],[\"subprocess\",{\"1\":{\"302\":2}}],[\"submit\",{\"1\":{\"278\":1,\"325\":1}}],[\"submaxlevel\",{\"0\":{\"83\":1},\"1\":{\"55\":1,\"84\":1}}],[\"subgraph\",{\"1\":{\"237\":16,\"252\":2,\"253\":2}}],[\"sublist\",{\"1\":{\"179\":1}}],[\"suppresswarnings\",{\"1\":{\"189\":1}}],[\"supposed\",{\"1\":{\"181\":1}}],[\"support<\",{\"1\":{\"144\":2}}],[\"support\",{\"1\":{\"8\":1}}],[\"superinterfaces\",{\"1\":{\"244\":1}}],[\"superclass\",{\"1\":{\"244\":1}}],[\"super\",{\"0\":{\"147\":1},\"1\":{\"147\":2,\"178\":1,\"179\":1}}],[\"sun\",{\"1\":{\"15\":1,\"232\":3,\"239\":1,\"258\":3}}],[\"sent状态\",{\"1\":{\"699\":1}}],[\"send\",{\"1\":{\"285\":2}}],[\"segment中\",{\"1\":{\"624\":1}}],[\"sequence\",{\"1\":{\"717\":1}}],[\"seq\",{\"1\":{\"341\":1,\"652\":1}}],[\"sem\",{\"1\":{\"336\":5}}],[\"semaphore\",{\"0\":{\"290\":1,\"336\":1},\"1\":{\"226\":1,\"304\":1,\"335\":4,\"336\":6}}],[\"sess\",{\"1\":{\"334\":2,\"335\":2}}],[\"session代表着服务器和客户端一次会话的过程\",{\"1\":{\"676\":1}}],[\"session\",{\"0\":{\"676\":1},\"1\":{\"41\":10,\"676\":3,\"677\":6}}],[\"sec\",{\"1\":{\"462\":1,\"561\":1}}],[\"secondary\",{\"1\":{\"368\":1}}],[\"second\",{\"1\":{\"275\":1,\"288\":1}}],[\"seconds\",{\"1\":{\"265\":1,\"296\":4,\"475\":1}}],[\"securitymanager\",{\"1\":{\"233\":1,\"259\":1}}],[\"security\",{\"1\":{\"24\":1}}],[\"severhello\",{\"0\":{\"638\":1}}],[\"several\",{\"1\":{\"135\":2}}],[\"seven\",{\"1\":{\"237\":2}}],[\"self\",{\"1\":{\"187\":1,\"311\":1,\"327\":6,\"354\":20,\"370\":14}}],[\"select的执行过程\",{\"0\":{\"621\":1}}],[\"select>\",{\"1\":{\"40\":2}}],[\"select\",{\"1\":{\"40\":2,\"41\":5,\"50\":2,\"118\":1,\"632\":4}}],[\"selectalluser\",{\"1\":{\"40\":2,\"41\":1}}],[\"selectuserbyid\",{\"1\":{\"40\":2,\"41\":4}}],[\"serial\",{\"1\":{\"197\":1,\"210\":1}}],[\"serializable\",{\"1\":{\"181\":2,\"182\":2,\"226\":2,\"629\":1}}],[\"serving\",{\"1\":{\"285\":1}}],[\"servicename3\",{\"1\":{\"400\":1}}],[\"servicename2\",{\"1\":{\"400\":1}}],[\"servicename1\",{\"1\":{\"400\":1}}],[\"serviceloader\",{\"1\":{\"254\":3,\"255\":2}}],[\"services\",{\"1\":{\"252\":1,\"254\":2,\"400\":2,\"404\":1}}],[\"service<\",{\"1\":{\"27\":1,\"30\":1,\"32\":2,\"35\":5,\"149\":1}}],[\"service\",{\"1\":{\"24\":2,\"32\":1,\"118\":7,\"254\":5,\"402\":1,\"403\":1,\"404\":1}}],[\"serve\",{\"0\":{\"106\":1},\"1\":{\"49\":1,\"106\":1,\"285\":1}}],[\"serversocket\",{\"1\":{\"233\":1,\"259\":1}}],[\"server\",{\"1\":{\"17\":1,\"282\":1,\"283\":1,\"285\":5,\"303\":2,\"388\":2,\"638\":1}}],[\"servlet<\",{\"1\":{\"40\":1}}],[\"servlet\",{\"1\":{\"40\":1}}],[\"search\",{\"0\":{\"93\":1},\"1\":{\"93\":8,\"140\":1,\"388\":2,\"393\":1,\"507\":1}}],[\"seo\",{\"1\":{\"54\":1}}],[\"see\",{\"1\":{\"41\":1}}],[\"setformatter\",{\"1\":{\"357\":1}}],[\"setlevel\",{\"1\":{\"357\":2}}],[\"setpriority\",{\"1\":{\"202\":1}}],[\"setpassword\",{\"1\":{\"41\":2,\"121\":1}}],[\"setname\",{\"1\":{\"202\":1}}],[\"set~e~\",{\"1\":{\"178\":1}}],[\"setcollegename\",{\"1\":{\"124\":1}}],[\"setdaemon\",{\"1\":{\"202\":1}}],[\"setdatasource\",{\"1\":{\"121\":1}}],[\"setdriverclassname\",{\"1\":{\"121\":1}}],[\"seturl\",{\"1\":{\"121\":1}}],[\"setusername\",{\"1\":{\"41\":2,\"121\":1}}],[\"settings\",{\"1\":{\"158\":1,\"159\":3,\"171\":2}}],[\"settings>\",{\"1\":{\"40\":1,\"159\":1}}],[\"setting\",{\"1\":{\"41\":5,\"50\":1,\"159\":1,\"169\":2,\"170\":1}}],[\"set\",{\"0\":{\"184\":1},\"1\":{\"8\":1,\"39\":6,\"40\":1,\"41\":1,\"115\":6,\"177\":1,\"178\":4,\"179\":2,\"184\":1,\"186\":1,\"271\":4,\"280\":2,\"288\":8,\"316\":1,\"353\":2,\"573\":1}}],[\"se\",{\"1\":{\"7\":2,\"8\":4,\"17\":1,\"232\":2,\"258\":2}}],[\"1状态\",{\"1\":{\"705\":1}}],[\"1的基础上做了优化\",{\"1\":{\"655\":1}}],[\"1性能要更好\",{\"1\":{\"655\":1}}],[\"1大了好几个数量级\",{\"1\":{\"647\":1}}],[\"1则在请求头引入了range头域\",{\"1\":{\"646\":1}}],[\"1则引入了更多的缓存控制策略\",{\"1\":{\"646\":1}}],[\"1nf\",{\"1\":{\"617\":1}}],[\"14\",{\"1\":{\"265\":2}}],[\"17\",{\"1\":{\"265\":4}}],[\"1945\",{\"1\":{\"732\":1}}],[\"1995\",{\"1\":{\"232\":2,\"258\":2}}],[\"19\",{\"1\":{\"205\":1,\"277\":4}}],[\"1abc\",{\"1\":{\"189\":2}}],[\"1st\",{\"1\":{\"187\":1}}],[\"1个元素都要执行移位的操作\",{\"1\":{\"183\":1}}],[\"127\",{\"1\":{\"245\":2,\"285\":2,\"316\":1}}],[\"128\",{\"1\":{\"245\":1,\"678\":1}}],[\"12<\",{\"1\":{\"142\":1}}],[\"12\",{\"1\":{\"118\":1,\"187\":2,\"365\":2,\"366\":4,\"367\":1,\"368\":1,\"369\":1,\"395\":1}}],[\"123123\",{\"1\":{\"41\":5}}],[\"123456\",{\"1\":{\"40\":1}}],[\"13\",{\"1\":{\"118\":2,\"265\":2}}],[\"1389432760\",{\"1\":{\"41\":1}}],[\"1388849499\",{\"1\":{\"41\":1}}],[\"16和utf\",{\"1\":{\"751\":1}}],[\"16位\",{\"1\":{\"687\":5}}],[\"16\",{\"1\":{\"118\":3,\"121\":2,\"124\":1,\"125\":2,\"181\":1,\"187\":4,\"189\":4}}],[\"1894698434\",{\"1\":{\"41\":1}}],[\"18\",{\"1\":{\"40\":1,\"117\":1,\"396\":2,\"515\":1}}],[\"1<\",{\"1\":{\"40\":1,\"117\":1,\"137\":1,\"149\":1}}],[\"1500\",{\"1\":{\"729\":1}}],[\"1506\",{\"1\":{\"406\":1}}],[\"15\",{\"1\":{\"27\":1,\"118\":3,\"365\":2,\"366\":4,\"367\":1,\"368\":1,\"369\":1}}],[\"11<\",{\"1\":{\"137\":1}}],[\"11\",{\"0\":{\"607\":1,\"608\":1,\"609\":1,\"610\":1,\"611\":1,\"612\":1,\"613\":1},\"1\":{\"9\":1,\"24\":1,\"27\":1,\"39\":1,\"40\":2,\"41\":1,\"111\":1,\"115\":1,\"181\":3}}],[\"101\",{\"1\":{\"642\":1}}],[\"10以上参数用花括号\",{\"1\":{\"579\":1}}],[\"100类状态码属于提示信息\",{\"1\":{\"642\":1}}],[\"1009\",{\"1\":{\"249\":1}}],[\"1000\",{\"1\":{\"189\":2}}],[\"100\",{\"1\":{\"97\":2,\"285\":2,\"515\":3,\"642\":1}}],[\"10<\",{\"1\":{\"40\":1,\"171\":1}}],[\"10\",{\"0\":{\"311\":1,\"604\":1,\"605\":1,\"606\":1},\"1\":{\"8\":1,\"9\":1,\"39\":1,\"40\":1,\"41\":2,\"115\":1,\"117\":1,\"181\":5,\"202\":2,\"271\":1,\"287\":1,\"289\":1,\"327\":1,\"335\":1,\"336\":2,\"351\":1,\"363\":1,\"365\":2,\"366\":4,\"367\":1,\"368\":1,\"369\":1,\"474\":1,\"524\":1,\"579\":1,\"580\":4,\"590\":1,\"606\":2}}],[\"1\",{\"0\":{\"20\":1,\"24\":1,\"115\":1,\"117\":1,\"123\":1,\"347\":1,\"435\":1,\"437\":1,\"438\":2,\"439\":1,\"440\":1,\"441\":1,\"442\":2,\"444\":1,\"448\":1,\"450\":1,\"451\":2,\"452\":1,\"453\":1,\"454\":1,\"456\":1,\"461\":1,\"465\":1,\"467\":1,\"468\":2,\"469\":1,\"470\":1,\"471\":2,\"472\":1,\"473\":1,\"474\":1,\"475\":1,\"477\":1,\"482\":1,\"484\":1,\"485\":2,\"486\":1,\"487\":1,\"488\":1,\"489\":2,\"490\":1,\"491\":1,\"492\":1,\"493\":1,\"494\":1,\"496\":1,\"501\":1,\"503\":1,\"504\":2,\"505\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":2,\"510\":1,\"511\":1,\"512\":1,\"513\":1,\"515\":1,\"517\":1,\"518\":2,\"519\":1,\"520\":1,\"521\":2,\"522\":1,\"523\":1,\"524\":1,\"526\":1,\"531\":1,\"532\":2,\"533\":1,\"534\":1,\"535\":1,\"536\":2,\"538\":1,\"542\":1,\"543\":2,\"544\":1,\"546\":1,\"550\":1,\"551\":2,\"552\":1,\"553\":1,\"555\":1,\"560\":1,\"564\":1,\"566\":1,\"570\":1,\"573\":1,\"577\":1,\"582\":1,\"586\":1,\"589\":1,\"592\":1,\"593\":2,\"594\":1,\"596\":1,\"599\":1,\"602\":1,\"605\":1,\"608\":1,\"609\":2,\"610\":1,\"612\":1,\"644\":1,\"646\":1},\"1\":{\"7\":2,\"17\":2,\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"37\":1,\"39\":2,\"40\":6,\"41\":19,\"54\":1,\"59\":1,\"78\":1,\"93\":2,\"102\":2,\"111\":2,\"115\":2,\"117\":2,\"118\":6,\"121\":2,\"124\":2,\"125\":2,\"126\":2,\"137\":2,\"143\":31,\"144\":1,\"149\":5,\"156\":1,\"159\":3,\"177\":1,\"181\":5,\"182\":1,\"183\":2,\"187\":13,\"188\":2,\"189\":19,\"190\":3,\"191\":2,\"193\":2,\"202\":1,\"205\":6,\"211\":1,\"221\":1,\"223\":14,\"224\":1,\"226\":2,\"237\":3,\"239\":9,\"246\":2,\"247\":2,\"249\":5,\"265\":4,\"270\":1,\"272\":2,\"273\":3,\"275\":1,\"277\":3,\"278\":1,\"285\":2,\"288\":2,\"296\":1,\"310\":4,\"311\":1,\"312\":2,\"316\":2,\"324\":1,\"325\":1,\"327\":1,\"341\":1,\"342\":6,\"343\":1,\"348\":1,\"349\":1,\"351\":2,\"353\":5,\"354\":5,\"364\":4,\"366\":1,\"368\":1,\"370\":6,\"394\":2,\"431\":1,\"440\":1,\"487\":1,\"534\":1,\"597\":1,\"600\":2,\"623\":2,\"631\":1,\"651\":3,\"687\":1,\"695\":2,\"696\":1,\"697\":1,\"698\":1,\"717\":1,\"721\":1,\"741\":1,\"743\":1}}],[\"8是unicode字符集的一种编码方案\",{\"1\":{\"751\":1}}],[\"8是unicode的一种变长字节编码方案\",{\"1\":{\"751\":1}}],[\"8已成为web和许多操作系统中最常用的字符编码方案\",{\"1\":{\"751\":1}}],[\"8编码的文本\",{\"1\":{\"751\":1}}],[\"8中的表示与原始ascii编码相同\",{\"1\":{\"751\":1}}],[\"8的优点是向后兼容ascii\",{\"1\":{\"751\":1}}],[\"8的区别\",{\"0\":{\"751\":1}}],[\"8位unicode转换格式\",{\"1\":{\"751\":1}}],[\"80\",{\"1\":{\"635\":1}}],[\"8763\",{\"1\":{\"388\":1}}],[\"876962272\",{\"1\":{\"41\":1}}],[\"875\",{\"1\":{\"311\":1}}],[\"8888\",{\"1\":{\"285\":2}}],[\"8`\",{\"1\":{\"181\":1}}],[\"86400000\",{\"1\":{\"93\":1}}],[\"8enha9ay1d\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"8wvermonb8\",{\"1\":{\"39\":1,\"41\":3,\"115\":1}}],[\"8<\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"40\":1,\"117\":2,\"137\":4,\"149\":4}}],[\"8u202\",{\"1\":{\"8\":1}}],[\"8u201\",{\"1\":{\"8\":1}}],[\"8u211\",{\"1\":{\"8\":2}}],[\"8\",{\"1\":{\"7\":5,\"8\":1,\"12\":1,\"14\":2,\"17\":2,\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"39\":1,\"40\":2,\"41\":1,\"115\":1,\"117\":1,\"118\":6,\"121\":2,\"124\":2,\"125\":2,\"137\":2,\"149\":3,\"177\":1,\"181\":1,\"187\":9,\"189\":7,\"190\":1,\"191\":1,\"237\":3,\"239\":1,\"244\":2,\"246\":1,\"247\":2,\"249\":1,\"310\":5,\"316\":1,\"351\":2,\"400\":1,\"621\":1,\"724\":1,\"751\":3}}],[\"jnettop\",{\"1\":{\"515\":2}}],[\"jni\",{\"0\":{\"241\":1,\"242\":1},\"1\":{\"240\":2,\"241\":2,\"242\":1}}],[\"j9\",{\"1\":{\"244\":1}}],[\"jrockit\",{\"1\":{\"244\":1}}],[\"jre\",{\"1\":{\"8\":1,\"9\":1,\"14\":6,\"15\":1}}],[\"john\",{\"1\":{\"365\":2,\"366\":4,\"367\":1,\"368\":1,\"369\":1}}],[\"job\",{\"1\":{\"239\":1}}],[\"join右连接\",{\"1\":{\"619\":1}}],[\"join左连接\",{\"1\":{\"619\":1}}],[\"join内连接\",{\"1\":{\"619\":1}}],[\"join等价于inner\",{\"1\":{\"619\":1}}],[\"join的区别\",{\"0\":{\"619\":1}}],[\"join和left\",{\"0\":{\"619\":1}}],[\"join\",{\"1\":{\"202\":3,\"285\":1,\"293\":3,\"296\":1,\"316\":1,\"324\":1,\"327\":1}}],[\"jetty\",{\"1\":{\"239\":1}}],[\"jit\",{\"1\":{\"233\":1,\"235\":1,\"250\":1,\"259\":1}}],[\"j2me\",{\"1\":{\"232\":2,\"258\":2}}],[\"j2ee\",{\"1\":{\"232\":2,\"258\":2}}],[\"j2se\",{\"1\":{\"7\":2,\"232\":2,\"258\":2}}],[\"jmm\",{\"0\":{\"205\":1,\"206\":1,\"207\":1},\"1\":{\"205\":1}}],[\"jmods\",{\"1\":{\"14\":1}}],[\"j+oldcap\",{\"1\":{\"189\":1}}],[\"j\",{\"1\":{\"189\":10,\"352\":1,\"600\":1}}],[\"json\",{\"1\":{\"681\":1}}],[\"jsonp\",{\"1\":{\"681\":1}}],[\"js\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"93\":7,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"101\":2,\"102\":3}}],[\"jsdelivr\",{\"1\":{\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"75\":1,\"78\":1,\"80\":1,\"90\":10,\"93\":6,\"94\":1,\"96\":1,\"97\":1,\"101\":2,\"102\":2,\"105\":1}}],[\"jdbc配置\",{\"0\":{\"120\":1}}],[\"jdbctemplate\",{\"1\":{\"118\":4,\"121\":8}}],[\"jdbc<\",{\"1\":{\"40\":1,\"117\":1}}],[\"jdbc\",{\"1\":{\"40\":4,\"41\":15,\"117\":1,\"118\":2,\"120\":2,\"121\":2,\"256\":2}}],[\"jdk6\",{\"1\":{\"254\":1}}],[\"jdk11\",{\"1\":{\"142\":1}}],[\"jdk1\",{\"1\":{\"7\":1,\"12\":1,\"14\":2,\"183\":2,\"187\":3}}],[\"jdk8\",{\"1\":{\"7\":1,\"142\":1}}],[\"jdk\",{\"1\":{\"7\":1,\"8\":13,\"9\":4,\"14\":1,\"15\":1,\"142\":1,\"177\":1,\"187\":7,\"190\":3,\"191\":2,\"216\":1,\"224\":1,\"237\":3,\"239\":2,\"244\":2,\"246\":2,\"247\":2,\"249\":5,\"254\":1}}],[\"just\",{\"1\":{\"233\":1,\"259\":1,\"267\":1}}],[\"juc\",{\"1\":{\"226\":2}}],[\"juc包中的4种原子类\",{\"1\":{\"224\":1}}],[\"juint\",{\"1\":{\"166\":1}}],[\"juan\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"jupiter<\",{\"1\":{\"27\":1,\"30\":1,\"40\":1,\"117\":1}}],[\"jupiter\",{\"1\":{\"27\":2,\"30\":1,\"40\":3,\"41\":1,\"117\":3,\"125\":4}}],[\"junit\",{\"1\":{\"24\":1,\"27\":4,\"30\":1,\"40\":3,\"41\":1,\"117\":3,\"125\":4,\"142\":1}}],[\"jane\",{\"1\":{\"365\":2,\"366\":4,\"367\":1,\"368\":1,\"369\":1}}],[\"jamp\",{\"1\":{\"239\":1}}],[\"james\",{\"1\":{\"232\":1,\"258\":1}}],[\"jacoco\",{\"1\":{\"150\":1}}],[\"jackson\",{\"1\":{\"27\":4,\"30\":1}}],[\"jakarta\",{\"1\":{\"40\":2,\"117\":2,\"135\":1}}],[\"jar<\",{\"1\":{\"156\":1}}],[\"jars\",{\"1\":{\"135\":2}}],[\"jar项目war项目是没有办法做聚合工程的\",{\"1\":{\"22\":1}}],[\"jar包的版本可用可不用父工程中管理的\",{\"1\":{\"21\":1}}],[\"jar\",{\"1\":{\"15\":3,\"16\":4,\"30\":2,\"140\":1,\"142\":2,\"146\":3,\"155\":4,\"156\":1,\"166\":1,\"254\":2}}],[\"java或python等\",{\"1\":{\"744\":1}}],[\"javaone\",{\"1\":{\"232\":1,\"258\":1}}],[\"java2\",{\"1\":{\"232\":1,\"258\":1}}],[\"javap\",{\"1\":{\"219\":1}}],[\"javapath这样的配置\",{\"1\":{\"17\":1}}],[\"java代码实例化\",{\"1\":{\"121\":1}}],[\"javax\",{\"1\":{\"121\":1,\"236\":1}}],[\"javaconfiguration\",{\"1\":{\"121\":3,\"125\":2}}],[\"javascript等\",{\"1\":{\"744\":1}}],[\"javascript中的document\",{\"1\":{\"659\":1}}],[\"javascript\",{\"0\":{\"261\":1},\"1\":{\"102\":2,\"261\":1}}],[\"javase\",{\"1\":{\"7\":1,\"232\":1,\"258\":1}}],[\"java完整代码\",{\"1\":{\"41\":1}}],[\"java<\",{\"1\":{\"40\":1,\"117\":1}}],[\"java5\",{\"1\":{\"15\":2}}],[\"java11\",{\"1\":{\"14\":1}}],[\"java8\",{\"1\":{\"7\":1}}],[\"javaee\",{\"1\":{\"7\":1,\"232\":1,\"258\":1}}],[\"javame\",{\"1\":{\"7\":1,\"232\":1,\"258\":1}}],[\"java\",{\"0\":{\"11\":1,\"176\":1,\"194\":1,\"199\":1,\"231\":1,\"232\":1,\"234\":1,\"239\":1,\"243\":1,\"249\":1,\"251\":1,\"255\":1,\"257\":1,\"258\":1,\"260\":1},\"1\":{\"7\":15,\"8\":5,\"9\":1,\"11\":2,\"12\":4,\"13\":1,\"14\":10,\"15\":1,\"16\":2,\"17\":8,\"40\":3,\"41\":3,\"118\":11,\"121\":2,\"124\":1,\"125\":2,\"137\":1,\"147\":2,\"149\":1,\"166\":1,\"177\":6,\"178\":8,\"181\":1,\"182\":1,\"187\":1,\"193\":2,\"200\":1,\"201\":2,\"202\":1,\"205\":3,\"211\":2,\"214\":1,\"216\":1,\"219\":1,\"220\":1,\"221\":1,\"224\":2,\"226\":2,\"232\":15,\"233\":52,\"235\":6,\"236\":10,\"237\":7,\"238\":3,\"239\":13,\"240\":3,\"241\":3,\"242\":3,\"243\":5,\"244\":1,\"245\":2,\"248\":1,\"249\":1,\"250\":4,\"252\":1,\"254\":2,\"255\":2,\"258\":15,\"259\":52,\"260\":1,\"322\":1}}],[\"java的安装与配置\",{\"0\":{\"5\":1}}],[\"jvm\",{\"0\":{\"235\":1},\"1\":{\"15\":1,\"16\":1,\"202\":1,\"211\":2,\"235\":4,\"236\":6,\"237\":2,\"239\":14,\"240\":4,\"245\":1,\"249\":1,\"250\":8}}],[\"jlink\",{\"1\":{\"14\":1}}],[\"这次\",{\"1\":{\"750\":1}}],[\"这时\",{\"1\":{\"744\":1}}],[\"这时服务器tcp通知高级应用进程\",{\"1\":{\"705\":1}}],[\"这取决于它们所需的流水线阶段和操作的复杂性\",{\"1\":{\"735\":1}}],[\"这会导致性能开销\",{\"1\":{\"734\":1}}],[\"这会导致线程之间的竞争和阻塞\",{\"1\":{\"193\":1}}],[\"这需要时间\",{\"1\":{\"713\":1}}],[\"这将导致不必要的错误和资源的浪费\",{\"1\":{\"703\":1}}],[\"这将抛出\",{\"1\":{\"280\":1}}],[\"这部分最多包含40字节\",{\"1\":{\"687\":1}}],[\"这既是会话劫持\",{\"1\":{\"664\":1}}],[\"这可以确保在多个处理器之间的数据传输不会产生错误或不一致的状态\",{\"1\":{\"741\":1}}],[\"这可以通过使用恶意软件或修改服务器的设置来实现\",{\"1\":{\"670\":1}}],[\"这可能由于磁盘大量作随机访问造成\",{\"1\":{\"479\":1,\"528\":1}}],[\"这可供长期间运行的函数使用以避免在函数调用的全过程中阻塞事件循环\",{\"1\":{\"272\":1}}],[\"这并不是良性表现\",{\"1\":{\"479\":1,\"528\":1}}],[\"这2个值较大\",{\"1\":{\"479\":1,\"528\":1}}],[\"这2个值都是0\",{\"1\":{\"479\":1,\"528\":1}}],[\"这篇文章能够让你理解的更透彻\",{\"1\":{\"431\":1}}],[\"这三条命令的集合\",{\"1\":{\"424\":1}}],[\"这么一来\",{\"1\":{\"417\":1}}],[\"这么做虽然解决了本地版本控制系统无法让在不同系统上的开发者协同工作的诟病\",{\"1\":{\"416\":1}}],[\"这么做唯一的好处就是简单\",{\"1\":{\"415\":1}}],[\"这本书的内容非常新\",{\"1\":{\"407\":1}}],[\"这两拨进程根本就感觉不到对方的存在\",{\"1\":{\"406\":1}}],[\"这两个参数允许\",{\"1\":{\"239\":1}}],[\"这两个字\",{\"1\":{\"215\":1}}],[\"这使得容器可以直接访问宿主机的文件系统\",{\"1\":{\"397\":1}}],[\"这和\",{\"1\":{\"390\":1}}],[\"这也是在公司内部微服务中抛弃http\",{\"1\":{\"655\":1}}],[\"这也是默认的\",{\"1\":{\"388\":1}}],[\"这也有利于软件的升级\",{\"1\":{\"233\":1,\"259\":1}}],[\"这类当前读的语句\",{\"1\":{\"632\":1}}],[\"这类系统将它们保存的信息看作是一组基本文件和每个文件随时间逐步累积的差异\",{\"1\":{\"420\":1}}],[\"这类系统\",{\"1\":{\"417\":1}}],[\"这类问题\",{\"1\":{\"384\":1}}],[\"这类内存区域被称为\",{\"1\":{\"238\":1}}],[\"这段代码在我机器上没问题啊\",{\"1\":{\"384\":1}}],[\"这方法语有效是因为元组按字典顺序进行比较\",{\"1\":{\"369\":1}}],[\"这有助于识别和排除网络问题\",{\"1\":{\"750\":1}}],[\"这有利于进行多重排序\",{\"1\":{\"363\":1}}],[\"这有点类似\",{\"1\":{\"252\":1}}],[\"这要求库在\",{\"1\":{\"334\":1}}],[\"这等价于\",{\"1\":{\"287\":1}}],[\"这意味着许多现有的ascii文本和软件无需修改即可处理utf\",{\"1\":{\"751\":1}}],[\"这意味着其他处理器核心的缓存中不存在该数据\",{\"1\":{\"742\":1}}],[\"这意味着当多个记录具有相同的键值时\",{\"1\":{\"368\":1}}],[\"这意味着协程将保持等待直到该\",{\"1\":{\"269\":1}}],[\"这意味着在多线程环境中\",{\"1\":{\"193\":1}}],[\"这意味着在一个map中\",{\"1\":{\"186\":1}}],[\"这种策略试图保留访问次数较多的数据\",{\"1\":{\"739\":1}}],[\"这种策略依赖局部性原理\",{\"1\":{\"739\":1}}],[\"这种策略实现简单\",{\"1\":{\"739\":2}}],[\"这种设计使得计算机能够在运行时动态地加载和修改程序\",{\"1\":{\"732\":1}}],[\"这种方法对于所有的连接一视同仁\",{\"1\":{\"717\":1}}],[\"这种方式在降低缓存冲突和提高查找速度方面都表现得较好\",{\"1\":{\"739\":1}}],[\"这种方式可以降低缓存冲突的可能性\",{\"1\":{\"739\":1}}],[\"这种方式实现简单\",{\"1\":{\"739\":1}}],[\"这种方式有什么问题呢\",{\"1\":{\"420\":1}}],[\"这种方式也会无可避免地带来一定的\",{\"1\":{\"239\":1}}],[\"这种方式我们称之为并行\",{\"1\":{\"197\":1}}],[\"这种重定向跳转\",{\"1\":{\"642\":1}}],[\"这种情况下\",{\"1\":{\"743\":1}}],[\"这种情况下用悲观锁就比较合适\",{\"1\":{\"214\":1}}],[\"这种情况称为tlb命中\",{\"1\":{\"734\":1}}],[\"这种情况不会影响系统性能\",{\"1\":{\"479\":1,\"528\":1}}],[\"这种可移植性来源于体系结构中立性\",{\"1\":{\"233\":1,\"259\":1}}],[\"这种途径适合于异构的网络环境和软件的分发\",{\"1\":{\"233\":1,\"259\":1}}],[\"这种采用循环加锁\",{\"1\":{\"215\":1}}],[\"这种本就是\",{\"1\":{\"189\":1}}],[\"这种绑定方式就是自定义绑定\",{\"1\":{\"156\":1}}],[\"这就叫幻读\",{\"1\":{\"628\":1}}],[\"这就叫a工程依赖b工程\",{\"1\":{\"20\":1}}],[\"这就需要一种服务发现机制\",{\"1\":{\"252\":1}}],[\"这就是脏读\",{\"1\":{\"628\":1}}],[\"这就是事务的原子性\",{\"1\":{\"627\":1}}],[\"这就是\",{\"1\":{\"223\":1}}],[\"这就是为什么只有在同步块或者方法中才能调用\",{\"1\":{\"219\":1}}],[\"这就是上下文切换\",{\"1\":{\"198\":1}}],[\"这就导致线程2插入的数据被线程1覆盖了\",{\"1\":{\"191\":1}}],[\"这就解释了为什么\",{\"1\":{\"188\":1}}],[\"这说明\",{\"1\":{\"187\":1}}],[\"这说明回显上的版本配置的\",{\"1\":{\"17\":1}}],[\"这样对方可以控制发送数据的速度\",{\"1\":{\"687\":1}}],[\"这样\",{\"1\":{\"676\":1,\"737\":1,\"742\":1}}],[\"这样dns服务器负载更低\",{\"1\":{\"668\":1}}],[\"这样用户便不会注意到文件\",{\"1\":{\"664\":1}}],[\"这样能有效的防止xss攻击\",{\"1\":{\"659\":1}}],[\"这样客户端可以直接从本地加载这些资源\",{\"1\":{\"647\":1}}],[\"这样虽然没有char存储效率高\",{\"1\":{\"618\":1}}],[\"这样不会浪费空间\",{\"1\":{\"618\":1}}],[\"这样我们才能更好地理解所展示的信息\",{\"1\":{\"506\":1}}],[\"这样就可以实时查看滚动日志\",{\"1\":{\"749\":1}}],[\"这样就出现了三次挥手\",{\"1\":{\"710\":1}}],[\"这样就避免了跨域问题\",{\"1\":{\"681\":1}}],[\"这样就方便了开发者自由的选择以便于充分利用带宽和连接\",{\"1\":{\"646\":1}}],[\"这样就方便相关的\",{\"1\":{\"425\":1}}],[\"这样就能尽量降低磁盘用量\",{\"1\":{\"383\":1}}],[\"这样就不是多线程工作\",{\"1\":{\"203\":1}}],[\"这样做是为了提高获得锁和释放锁的效率\",{\"1\":{\"220\":1}}],[\"这样反倒是降低了性能\",{\"1\":{\"214\":1}}],[\"这样可以大大提高程序的执行速度\",{\"1\":{\"737\":1}}],[\"这样可以从根本上杜绝通过攻击服务商修改解析记录的方法\",{\"1\":{\"671\":1}}],[\"这样可以省去锁的开销\",{\"1\":{\"214\":1}}],[\"这样可以减少递增式再分配的数量\",{\"1\":{\"181\":1}}],[\"这样别人想拿数据就被挡住\",{\"1\":{\"214\":1}}],[\"这样的锁机制\",{\"1\":{\"210\":1}}],[\"这样的旧版浏览器需要使用以下\",{\"1\":{\"93\":1}}],[\"这样才是多线程工作\",{\"1\":{\"203\":1}}],[\"这样重复的工作\",{\"1\":{\"168\":1}}],[\"这样项目包可以用作其他本地项目的依赖\",{\"1\":{\"166\":1}}],[\"这些数据包具有逐渐增加的ttl值\",{\"1\":{\"750\":1}}],[\"这些数据项可能共享某些特征\",{\"1\":{\"177\":1}}],[\"这些指令可以大致分为以下几类\",{\"1\":{\"735\":1}}],[\"这些阶段构成了指令执行的流水线\",{\"1\":{\"735\":1}}],[\"这些阶段是有顺序的\",{\"1\":{\"163\":1}}],[\"这些服务和支持使得应用程序能够更轻松地访问计算机的硬件资源和系统功能\",{\"1\":{\"731\":1}}],[\"这些都是物理层的传输介质\",{\"1\":{\"683\":1}}],[\"这些文件是很常见的\",{\"1\":{\"664\":1}}],[\"这些条件必然成立\",{\"1\":{\"625\":1}}],[\"这些资源的新虚拟部分是不受现有资源的架设方式\",{\"1\":{\"406\":1}}],[\"这些同步原语的方法不接受\",{\"1\":{\"286\":1}}],[\"这些优化措施将有助于提高程序的执行效率和减少内存占用\",{\"1\":{\"250\":1}}],[\"这些优化让\",{\"1\":{\"220\":1}}],[\"这些被维护的引用所指的字符串实例\",{\"1\":{\"249\":1}}],[\"这些常量池一旦被装入内存就变成运行时常量\",{\"1\":{\"247\":1}}],[\"这些符号才有对应的内存地址信息\",{\"1\":{\"247\":1}}],[\"这些区域有各自的用途\",{\"1\":{\"237\":1}}],[\"这些机制与底层的硬件和操作系统无关\",{\"1\":{\"235\":1}}],[\"这些对象其实就是线程体\",{\"1\":{\"200\":1}}],[\"这些纤程之间共享同一个线程的资源\",{\"1\":{\"196\":1}}],[\"这些类型定义了绑定到一组生命周期阶段的目标\",{\"1\":{\"146\":1}}],[\"这些依赖项会传播到依赖项目\",{\"1\":{\"142\":1}}],[\"这些项目被一个大的父项目包含\",{\"1\":{\"22\":1}}],[\"这些项目的所有依赖都会加入到项目中\",{\"1\":{\"20\":1}}],[\"这包括依赖关系\",{\"1\":{\"140\":1}}],[\"这是直接映射缓存和全相联映射缓存的折衷方案\",{\"1\":{\"739\":1}}],[\"这是tcp实现可靠传输的一个重要保障\",{\"1\":{\"687\":1}}],[\"这是quic协议相比http2\",{\"1\":{\"648\":1}}],[\"这是为了防止一个已提交的\",{\"1\":{\"273\":1}}],[\"这是一种即插即用的机制\",{\"1\":{\"678\":1}}],[\"这是一个索引下推的过程\",{\"1\":{\"621\":1}}],[\"这是一个标记接口\",{\"1\":{\"181\":1}}],[\"这是一款为\",{\"1\":{\"95\":1}}],[\"这是默认范围\",{\"1\":{\"142\":1}}],[\"这是当前唯一受支持的pom版本\",{\"1\":{\"137\":1}}],[\"这是它最开始的样子\",{\"1\":{\"2\":1}}],[\"这里仅列举一些常用的\",{\"1\":{\"513\":1,\"564\":1}}],[\"这里补充一下\",{\"1\":{\"388\":1}}],[\"这里只是单纯地等待其运行完\",{\"1\":{\"268\":1}}],[\"这里\",{\"1\":{\"268\":1}}],[\"这里会运行\",{\"1\":{\"267\":1}}],[\"这里实际上就是官方文档的搬运\",{\"1\":{\"262\":1}}],[\"这里说的常量池跟\",{\"1\":{\"245\":1}}],[\"这里说明的是\",{\"1\":{\"14\":1}}],[\"这里其实涉及到一个\",{\"1\":{\"200\":1}}],[\"这里假设为\",{\"1\":{\"189\":1}}],[\"这里是很牛逼的操作哦\",{\"1\":{\"189\":1}}],[\"这里的仓库就像是超级码头一样\",{\"1\":{\"390\":1}}],[\"这里的逻辑会将\",{\"1\":{\"189\":1}}],[\"这里的\",{\"1\":{\"187\":1}}],[\"这里的属性名标签\",{\"1\":{\"170\":1}}],[\"这里看到arraylist添加元素的实质就相当于为数组赋值\",{\"1\":{\"181\":1}}],[\"这里需要使用一个以类路径根目录为基准的相对路径\",{\"1\":{\"40\":1}}],[\"这里就不需要再配置\",{\"1\":{\"14\":1}}],[\"这里可选择下载\",{\"1\":{\"8\":1}}],[\"这里下的应该是\",{\"1\":{\"8\":1}}],[\"这里不要点中间下载java那个\",{\"1\":{\"8\":1}}],[\"这里选择\",{\"1\":{\"8\":1}}],[\"这个过程涉及分配内存\",{\"1\":{\"744\":1}}],[\"这个过程包括预处理\",{\"1\":{\"744\":1}}],[\"这个过程不需要重连和重新做权限验证\",{\"1\":{\"621\":1}}],[\"这个界面可以是图形用户界面\",{\"1\":{\"731\":1}}],[\"这个开销远小于tcb的开销\",{\"1\":{\"717\":1}}],[\"这个时间是有限的\",{\"1\":{\"711\":1}}],[\"这个时候更新就算完成了\",{\"1\":{\"622\":1}}],[\"这个时候就需要用锁了\",{\"1\":{\"223\":1}}],[\"这个时候我们就需要一个聚合工程\",{\"1\":{\"22\":1}}],[\"这个状态要持续一段时间\",{\"1\":{\"705\":1}}],[\"这个报文本该是失效的\",{\"1\":{\"703\":1}}],[\"这个校验不仅包括tcp头部\",{\"1\":{\"687\":1}}],[\"这个握手过程只需要\",{\"1\":{\"651\":1}}],[\"这个值如果长期大于系统cpu个数\",{\"1\":{\"479\":1,\"528\":1}}],[\"这个值可以近似看成原本值的\",{\"1\":{\"181\":1}}],[\"这个命令相当于mv\",{\"1\":{\"424\":1}}],[\"这个命令搜索\",{\"1\":{\"388\":1}}],[\"这个服务器的作用仅仅是用来方便\",{\"1\":{\"417\":1}}],[\"这个文件通常命名为\",{\"1\":{\"400\":1}}],[\"这个方法的另一个名字是\",{\"1\":{\"369\":1}}],[\"这个方法的计算结果会被赋值给\",{\"1\":{\"189\":1}}],[\"这个三个步骤被称为\",{\"1\":{\"369\":1}}],[\"这个美妙的属性允许你在一系列排序步骤中构建复杂的排序\",{\"1\":{\"368\":1}}],[\"这个页面列举了所有能用于\",{\"1\":{\"299\":1}}],[\"这个协程函数主要是用于执行在其他情况下会阻塞事件循环的\",{\"1\":{\"277\":1}}],[\"这个协会内存的操作会引起在其他\",{\"1\":{\"208\":1}}],[\"这个不会运行\",{\"1\":{\"267\":1}}],[\"这个模型称之为\",{\"1\":{\"250\":1}}],[\"这个\",{\"1\":{\"249\":1,\"642\":1}}],[\"这个特性可以分析常量池中的字符串对象并去重\",{\"1\":{\"249\":1}}],[\"这个特性是靠解析从远程仓库中获取的依赖库的项目文件实现的\",{\"1\":{\"20\":1}}],[\"这个类加载器是由用户自己编写的\",{\"1\":{\"236\":1}}],[\"这个类加载器负责加载\",{\"1\":{\"236\":1}}],[\"这个机制\",{\"1\":{\"226\":1}}],[\"这个包中的原子操作提供了一种用法简单\",{\"1\":{\"224\":1}}],[\"这个生命周期将项目的清理\",{\"1\":{\"161\":1}}],[\"这个仓库是由\",{\"1\":{\"158\":1}}],[\"这个统一的位置\",{\"1\":{\"157\":1}}],[\"这个选项的页面与这个选项\",{\"1\":{\"89\":1}}],[\"这个环境变量可以不用配置了\",{\"1\":{\"15\":1}}],[\"这个其实不用考虑\",{\"1\":{\"8\":1}}],[\"这个单词其实指的是\",{\"1\":{\"7\":1}}],[\"企业版\",{\"1\":{\"7\":1}}],[\"established表示正在通信\",{\"1\":{\"718\":1}}],[\"establish\",{\"1\":{\"701\":1}}],[\"esac\",{\"1\":{\"596\":1,\"597\":1}}],[\"eq\",{\"1\":{\"370\":1}}],[\"equal\",{\"1\":{\"312\":3}}],[\"equals\",{\"1\":{\"187\":2}}],[\"error\",{\"1\":{\"357\":2,\"648\":1}}],[\"ernest\",{\"1\":{\"39\":1,\"41\":1,\"115\":1}}],[\"ef\",{\"1\":{\"349\":1,\"510\":1}}],[\"effective\",{\"1\":{\"147\":1}}],[\"echo请求或udp数据包\",{\"1\":{\"750\":1}}],[\"echo\",{\"0\":{\"285\":1},\"1\":{\"285\":4,\"571\":1,\"578\":1,\"580\":4,\"584\":3,\"587\":3,\"590\":6,\"594\":2,\"597\":3,\"600\":4,\"603\":1,\"606\":2,\"613\":1}}],[\"eth0\",{\"1\":{\"515\":1}}],[\"etime\",{\"1\":{\"513\":1,\"564\":1}}],[\"eternity\",{\"1\":{\"275\":2}}],[\"etc\",{\"1\":{\"146\":1}}],[\"every\",{\"1\":{\"475\":1}}],[\"event\",{\"0\":{\"288\":1},\"1\":{\"271\":1,\"288\":11,\"304\":1,\"334\":2,\"335\":1}}],[\"eval\",{\"1\":{\"360\":1}}],[\"evict\",{\"1\":{\"187\":2}}],[\"eden\",{\"1\":{\"243\":1}}],[\"edition\",{\"1\":{\"7\":3,\"232\":3,\"258\":3}}],[\"ee\",{\"1\":{\"232\":1,\"258\":1}}],[\"empty\",{\"1\":{\"181\":5,\"293\":1,\"353\":1}}],[\"emoji\",{\"0\":{\"97\":1},\"1\":{\"45\":1,\"97\":4}}],[\"e>\",{\"1\":{\"178\":2,\"179\":2}}],[\"earliest\",{\"1\":{\"276\":1}}],[\"ear\",{\"1\":{\"166\":1}}],[\"easy\",{\"1\":{\"135\":1}}],[\"each\",{\"1\":{\"135\":1,\"271\":1}}],[\"ebook\",{\"1\":{\"129\":1}}],[\"elf命令\",{\"1\":{\"747\":1}}],[\"el1指的是内核态\",{\"1\":{\"738\":1}}],[\"elif\",{\"1\":{\"593\":1,\"594\":1}}],[\"elem\",{\"1\":{\"348\":3,\"353\":2}}],[\"elements\",{\"1\":{\"353\":4}}],[\"element\",{\"1\":{\"181\":1,\"182\":2}}],[\"elementdata数组中区分出来\",{\"1\":{\"181\":1}}],[\"elementdata\",{\"1\":{\"178\":1,\"181\":19}}],[\"else\",{\"1\":{\"187\":5,\"189\":8,\"278\":1,\"316\":1}}],[\"el\",{\"0\":{\"64\":1},\"1\":{\"65\":1}}],[\"e\",{\"1\":{\"41\":4,\"178\":9,\"179\":10,\"181\":5,\"182\":2,\"183\":2,\"187\":16,\"189\":19,\"205\":5,\"237\":4,\"239\":1,\"349\":1,\"352\":1,\"505\":1,\"513\":1,\"564\":1,\"590\":1}}],[\"ek0wraith\",{\"1\":{\"40\":9,\"41\":4,\"118\":25,\"120\":4,\"121\":9,\"124\":2,\"125\":3}}],[\"ek0wraith<\",{\"1\":{\"27\":1,\"30\":1,\"32\":2,\"35\":2}}],[\"expires\",{\"1\":{\"645\":1}}],[\"expires是rfc\",{\"1\":{\"645\":1}}],[\"expr\",{\"1\":{\"586\":4,\"587\":1}}],[\"export\",{\"1\":{\"578\":1}}],[\"expected\",{\"1\":{\"273\":1,\"275\":1,\"277\":1,\"296\":1}}],[\"expect\",{\"1\":{\"221\":3}}],[\"exhausted\",{\"1\":{\"349\":1}}],[\"exactly\",{\"1\":{\"312\":1}}],[\"examples\",{\"1\":{\"292\":1}}],[\"example<\",{\"1\":{\"117\":1,\"137\":1,\"149\":2}}],[\"example\",{\"1\":{\"85\":1,\"396\":2}}],[\"external\",{\"1\":{\"738\":1}}],[\"extendleft\",{\"1\":{\"345\":1}}],[\"extend\",{\"1\":{\"341\":1,\"345\":1}}],[\"extends\",{\"1\":{\"178\":2,\"179\":2,\"181\":1,\"182\":1,\"187\":2,\"226\":1}}],[\"extension\",{\"1\":{\"236\":1}}],[\"extra\",{\"1\":{\"285\":1,\"507\":1}}],[\"exclude\",{\"1\":{\"454\":1}}],[\"exclusive\",{\"1\":{\"226\":1,\"741\":1,\"742\":2}}],[\"exclusion>\",{\"1\":{\"145\":1}}],[\"exclusion\",{\"1\":{\"145\":1}}],[\"exclusions>\",{\"1\":{\"145\":1}}],[\"exclusions\",{\"1\":{\"145\":1}}],[\"exc\",{\"1\":{\"278\":2}}],[\"exception\",{\"1\":{\"276\":1,\"278\":2,\"280\":1,\"733\":1,\"738\":1}}],[\"exceptions=true\",{\"1\":{\"296\":1}}],[\"exceptions=false\",{\"1\":{\"273\":1}}],[\"exceptions\",{\"1\":{\"273\":3}}],[\"except\",{\"1\":{\"244\":1,\"275\":1,\"278\":2,\"349\":1}}],[\"exceeds\",{\"1\":{\"239\":1}}],[\"exceeded\",{\"1\":{\"239\":1,\"750\":1}}],[\"existing\",{\"1\":{\"187\":1}}],[\"exists>\",{\"1\":{\"171\":1}}],[\"exists\",{\"1\":{\"39\":1,\"115\":1}}],[\"exit\",{\"1\":{\"41\":1,\"126\":2}}],[\"exec\",{\"1\":{\"302\":1,\"405\":1}}],[\"execute\",{\"1\":{\"735\":1}}],[\"executor\",{\"1\":{\"269\":1}}],[\"execution\",{\"1\":{\"156\":1}}],[\"execution>\",{\"1\":{\"156\":1}}],[\"executions>\",{\"1\":{\"156\":1}}],[\"executions\",{\"1\":{\"146\":1}}],[\"exe\",{\"1\":{\"14\":1,\"16\":1}}],[\"encode\",{\"1\":{\"285\":1}}],[\"encoding>\",{\"1\":{\"137\":1,\"149\":1}}],[\"encoding=\",{\"1\":{\"27\":1,\"30\":1,\"32\":1,\"35\":1,\"40\":2,\"117\":1,\"124\":1,\"137\":1,\"149\":2}}],[\"end\",{\"1\":{\"205\":4,\"237\":16,\"252\":2,\"253\":2,\"272\":2}}],[\"enumerate\",{\"1\":{\"369\":1}}],[\"enum\",{\"1\":{\"201\":1}}],[\"entrypoint\",{\"1\":{\"395\":1}}],[\"entry<string\",{\"1\":{\"193\":1}}],[\"entry<k\",{\"1\":{\"187\":7}}],[\"entryset\",{\"1\":{\"192\":2,\"193\":1}}],[\"entry\",{\"1\":{\"186\":5,\"193\":3}}],[\"enterprise\",{\"1\":{\"7\":1,\"232\":1,\"258\":1}}],[\"ensure\",{\"1\":{\"280\":1}}],[\"ensureexplicitcapacity\",{\"1\":{\"181\":5}}],[\"ensurecapacityinternal\",{\"1\":{\"181\":3}}],[\"ensurecapacity\",{\"1\":{\"181\":4}}],[\"env>test<\",{\"1\":{\"170\":1}}],[\"env>\",{\"1\":{\"170\":2}}],[\"env>dev<\",{\"1\":{\"170\":1}}],[\"env\",{\"1\":{\"170\":1,\"171\":4,\"400\":1}}],[\"environments>\",{\"1\":{\"40\":1}}],[\"environments表示配置mybatis的开发环境\",{\"1\":{\"40\":1}}],[\"environment>\",{\"1\":{\"40\":1}}],[\"environment表示配置mybatis的一个具体的环境\",{\"1\":{\"40\":1}}],[\"environment\",{\"1\":{\"8\":1,\"17\":1,\"400\":2}}],[\"en\",{\"1\":{\"40\":2,\"57\":1,\"76\":3,\"80\":1,\"86\":1,\"89\":2,\"348\":1}}],[\"engine=innodb\",{\"1\":{\"111\":1}}],[\"engine\",{\"1\":{\"39\":1,\"115\":1}}],[\"微型版\",{\"1\":{\"7\":1}}],[\"最初于1963年发布\",{\"1\":{\"751\":1}}],[\"最不经常使用\",{\"1\":{\"739\":1}}],[\"最大报文段大小\",{\"1\":{\"717\":1}}],[\"最大为三位数\",{\"1\":{\"468\":1,\"518\":1}}],[\"最常见的可选字段是最长报文大小mss\",{\"1\":{\"687\":1}}],[\"最常使用的\",{\"1\":{\"388\":1}}],[\"最开始读到的数据和事务结束前的任意时刻读到的同一批数据都是一致的\",{\"1\":{\"628\":1}}],[\"最开始是想做一个学习笔记\",{\"1\":{\"2\":1}}],[\"最基本同时也是非常强大的进程查看命令\",{\"1\":{\"515\":1}}],[\"最近最少使用\",{\"1\":{\"739\":1}}],[\"最近15分钟的平均负载\",{\"1\":{\"440\":1,\"534\":1}}],[\"最近5分钟\",{\"1\":{\"440\":1,\"534\":1}}],[\"最近的更新排在最上面\",{\"1\":{\"428\":1}}],[\"最好是能给出一些相关的背景或者解释这个提交能修复和解决什么问题\",{\"1\":{\"425\":1}}],[\"最佳实践的要求\",{\"1\":{\"387\":1}}],[\"最简单的方案就是\",{\"1\":{\"352\":1}}],[\"最小的事务\",{\"1\":{\"631\":1}}],[\"最小的先取出\",{\"1\":{\"294\":1}}],[\"最小堆\",{\"0\":{\"351\":1}}],[\"最新版\",{\"1\":{\"332\":1}}],[\"最终控制这个会话\",{\"1\":{\"664\":1}}],[\"最终只有一个协程会被执行\",{\"1\":{\"287\":1}}],[\"最终结果\",{\"1\":{\"269\":1}}],[\"最终还是依赖于\",{\"1\":{\"200\":1}}],[\"最终使用的是这个版本的依赖\",{\"1\":{\"144\":1}}],[\"最低位是第0位\",{\"1\":{\"189\":1}}],[\"最重要的部分\",{\"1\":{\"166\":1}}],[\"最直接的交互方式就是调用这些生命周期阶段\",{\"1\":{\"163\":1}}],[\"最熟悉的定义应该是来自平面几何\",{\"1\":{\"139\":1}}],[\"最核心的设计理念之一\",{\"1\":{\"136\":1}}],[\"最后访问本地域名服务器\",{\"1\":{\"672\":1}}],[\"最后将这些数据显示在屏幕里\",{\"1\":{\"672\":1}}],[\"最后把写缓冲区队列的数据一个一个写入到显示器的寄存器中的数据缓冲区\",{\"1\":{\"672\":1}}],[\"最后执行的命令结果=0\",{\"1\":{\"584\":1}}],[\"最后执行的命令结果=$\",{\"1\":{\"584\":1}}],[\"最后一级页表包含实际的pfn\",{\"1\":{\"734\":1}}],[\"最后一次的ack发生了丢失\",{\"1\":{\"708\":1}}],[\"最后一次执行的命令的返回状态\",{\"1\":{\"583\":1}}],[\"最后一个进程的进程号=41753\",{\"1\":{\"584\":1}}],[\"最后一个进程的进程号=$\",{\"1\":{\"584\":1}}],[\"最后保证值不会超过\",{\"1\":{\"189\":1}}],[\"最后验证一下红黑树是不是满足规范\",{\"1\":{\"187\":1}}],[\"最后总结了一套高度完美的\",{\"1\":{\"161\":1}}],[\"最后\",{\"0\":{\"4\":1},\"1\":{\"369\":1,\"750\":1}}],[\"哈哈哈~\",{\"1\":{\"3\":1}}],[\"没有边界\",{\"1\":{\"724\":1}}],[\"没有传输到服务端\",{\"1\":{\"722\":1}}],[\"没有超时重传\",{\"1\":{\"722\":1}}],[\"没有数据要发送并且开启了延迟应答\",{\"1\":{\"710\":1}}],[\"没有它大家也一样干活\",{\"1\":{\"417\":1}}],[\"没有被使用的镜像文件\",{\"1\":{\"392\":1}}],[\"没有内置\",{\"1\":{\"370\":1}}],[\"没有对\",{\"1\":{\"353\":1}}],[\"没有必要\",{\"1\":{\"269\":1}}],[\"没有的话自己注册一下\",{\"1\":{\"8\":1}}],[\"没准以后还有新分类呢~\",{\"1\":{\"3\":1}}],[\"没办法只能寄希望于电子大脑\",{\"1\":{\"2\":1}}],[\"学习资料推荐\",{\"0\":{\"431\":1}}],[\"学习平台\",{\"1\":{\"22\":1}}],[\"学习笔记\",{\"1\":{\"3\":2}}],[\"学过的知识可太容易忘了\",{\"1\":{\"2\":1}}],[\"就保持\",{\"1\":{\"728\":1}}],[\"就直接怼它\",{\"1\":{\"727\":1}}],[\"就直接发送到新连接里面去了\",{\"1\":{\"722\":1}}],[\"就直接返回给执行器更新\",{\"1\":{\"622\":1}}],[\"就知道客户端并没有请求连接\",{\"1\":{\"703\":1}}],[\"就算是那一次失效的报文传送过来了\",{\"1\":{\"703\":1}}],[\"就进入拥塞处理状态\",{\"1\":{\"696\":1}}],[\"就累加一次该数据字节数的大小\",{\"1\":{\"687\":1}}],[\"就拦截\",{\"1\":{\"662\":1}}],[\"就去这些中间服务去获得ip和端口信息\",{\"1\":{\"655\":1}}],[\"就完全是使用普通的\",{\"1\":{\"640\":1}}],[\"就出现下面这个提示\",{\"1\":{\"625\":1}}],[\"就对这个事务进行回滚\",{\"1\":{\"625\":1}}],[\"就对应这一个栈帧在虚拟机中入栈到出栈的过程\",{\"1\":{\"239\":1}}],[\"就将它扩展为sql的所有的列\",{\"1\":{\"621\":1}}],[\"就认为内存不够用了\",{\"1\":{\"479\":1,\"528\":1}}],[\"就说明这两个数据包的内容一致\",{\"1\":{\"652\":1}}],[\"就说明文件系统效率比较好\",{\"1\":{\"479\":1,\"528\":1}}],[\"就说明cpu资源不足\",{\"1\":{\"479\":1,\"528\":1}}],[\"就有丢失所有历史更新记录的风险\",{\"1\":{\"416\":1}}],[\"就充分利用\",{\"1\":{\"386\":1}}],[\"就相当于是一个\",{\"1\":{\"386\":1}}],[\"就理解了\",{\"1\":{\"385\":1}}],[\"就我而言\",{\"1\":{\"380\":2}}],[\"就我实机测试的结果是\",{\"1\":{\"9\":1}}],[\"就像是面向对象程序设计中的\",{\"1\":{\"387\":1}}],[\"就像海运中的集装箱一样\",{\"1\":{\"382\":1}}],[\"就像管理普通的代码一样\",{\"1\":{\"382\":1}}],[\"就像书包可以装各种文具\",{\"1\":{\"379\":1}}],[\"就像磁盘空间一样\",{\"1\":{\"243\":1}}],[\"就开始运行了\",{\"1\":{\"268\":1}}],[\"就能迅速重新连上\",{\"1\":{\"648\":1}}],[\"就能通过该\",{\"1\":{\"254\":1}}],[\"就能找到对应的构件\",{\"1\":{\"139\":1}}],[\"就需要修改代码\",{\"1\":{\"252\":1}}],[\"就需要对当前容量进行扩容\",{\"1\":{\"187\":1}}],[\"就违反了可拔插的原则\",{\"1\":{\"252\":1}}],[\"就不需要再访问页表\",{\"1\":{\"734\":1}}],[\"就不再等待了\",{\"1\":{\"605\":1}}],[\"就不会出现溢出的问题\",{\"1\":{\"244\":1}}],[\"就不是原来的味道了~\",{\"1\":{\"2\":1}}],[\"就判断该元素与要存入的元素的\",{\"1\":{\"187\":1}}],[\"就要考虑对数组的扩容了\",{\"1\":{\"187\":1}}],[\"就会触发回调函数来释放该连接\",{\"1\":{\"728\":1}}],[\"就会重发整个\",{\"1\":{\"729\":1}}],[\"就会重新发送fin报文\",{\"1\":{\"722\":1}}],[\"就会重传数据\",{\"1\":{\"691\":1}}],[\"就会看该报文是否有fin标志\",{\"1\":{\"707\":1}}],[\"就会将\",{\"1\":{\"695\":1}}],[\"就会发送冗余ack\",{\"1\":{\"694\":1}}],[\"就会发现两次查询的记录条目就不一样了\",{\"1\":{\"632\":1}}],[\"就会把该事务的事务\",{\"1\":{\"631\":1}}],[\"就会出现提示\",{\"1\":{\"625\":1}}],[\"就会自动把所有已经跟踪过的文件暂存起来一并提交\",{\"1\":{\"424\":1}}],[\"就会自动激活这个\",{\"1\":{\"171\":1}}],[\"就会抛出\",{\"1\":{\"239\":1}}],[\"就会抛出此异常\",{\"1\":{\"239\":1}}],[\"就会根据这些坐标找自动到仓库中找到并使用它们\",{\"1\":{\"157\":1}}],[\"就是一个典型的分布式版本控制系统\",{\"1\":{\"417\":1}}],[\"就是一对\",{\"1\":{\"344\":1}}],[\"就是这样的服务\",{\"1\":{\"388\":1}}],[\"就是这么实现的\",{\"1\":{\"249\":1}}],[\"就是提供这样的一个机制\",{\"1\":{\"252\":1}}],[\"就是独占锁\",{\"1\":{\"227\":1}}],[\"就是抽象类\",{\"1\":{\"226\":1}}],[\"就是很乐观\",{\"1\":{\"214\":1}}],[\"就是很悲观\",{\"1\":{\"214\":1}}],[\"就是通过\",{\"1\":{\"200\":1}}],[\"就是其中之一\",{\"1\":{\"148\":1}}],[\"就是仓库名字\",{\"1\":{\"50\":1}}],[\"就是上一步下载的文件\",{\"1\":{\"9\":1}}],[\"就可以通过dns服务去解析得到ip地址\",{\"1\":{\"655\":1}}],[\"就可以通过国家\",{\"1\":{\"139\":1}}],[\"就可以复用原连接\",{\"1\":{\"651\":1}}],[\"就可以完成建立连接与密钥协商\",{\"1\":{\"651\":1}}],[\"就可以读取到数据\",{\"1\":{\"651\":1}}],[\"就可以进行传输了\",{\"1\":{\"648\":1}}],[\"就可以发第二个请求出去\",{\"1\":{\"646\":1}}],[\"就可以使用\",{\"1\":{\"177\":1}}],[\"就可以对构件进行版本控制\",{\"1\":{\"140\":1}}],[\"就可以自动完成项目的编译\",{\"1\":{\"135\":1}}],[\"就可以开始编写文档并直接部署在\",{\"1\":{\"44\":1}}],[\"就可以直接将父工程中定义好的jar包的版本拿来使用\",{\"1\":{\"21\":1}}],[\"就\",{\"1\":{\"8\":1}}],[\"就顺便记录下来\",{\"1\":{\"2\":1}}],[\"久而久之\",{\"1\":{\"2\":1}}],[\"站在历史经验的角度来看的话\",{\"1\":{\"2\":1}}],[\"站在科学研究的角度来看的话\",{\"1\":{\"2\":1}}],[\"艾宾浩斯遗忘曲线\",{\"1\":{\"2\":1}}],[\"啥都知道点\",{\"1\":{\"1\":1}}],[\"捣鼓各式各样的电子产品\",{\"1\":{\"1\":1}}],[\"喜欢了解科技前沿的事物\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
